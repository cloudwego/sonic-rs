<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1670" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1653.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1653.00"> </text><svg id="frames" x="10" width="1180" total_samples="4953"><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.02%)</title><rect x="0.0000%" y="1589" width="0.0202%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1599.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.02%)</title><rect x="0.0000%" y="1573" width="0.0202%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.0202%" y="1509" width="0.0202%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2702%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.0202%" y="1493" width="0.0202%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2702%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="0.0202%" y="1477" width="0.0202%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2702%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="0.0202%" y="1461" width="0.0202%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.2702%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="0.0202%" y="1445" width="0.0202%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.2702%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="0.0202%" y="1429" width="0.0202%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.2702%" y="1439.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.0202%" y="1413" width="0.0202%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.2702%" y="1423.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="0.0202%" y="1397" width="0.0202%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.2702%" y="1407.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="0.0202%" y="1589" width="0.0404%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="2"/><text x="0.2702%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="0.0202%" y="1573" width="0.0404%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="2"/><text x="0.2702%" y="1583.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect x="0.0202%" y="1557" width="0.0404%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="2"/><text x="0.2702%" y="1567.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect x="0.0202%" y="1541" width="0.0404%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="2"/><text x="0.2702%" y="1551.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="0.0202%" y="1525" width="0.0404%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="2"/><text x="0.2702%" y="1535.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="0.0404%" y="1509" width="0.0202%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="0.2904%" y="1519.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="0.0404%" y="1493" width="0.0202%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="0.2904%" y="1503.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="0.0404%" y="1477" width="0.0202%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="0.2904%" y="1487.50"></text></g><g><title>BN_is_bit_set (1 samples, 0.02%)</title><rect x="0.0606%" y="1589" width="0.0202%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="0.3106%" y="1599.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.02%)</title><rect x="0.0808%" y="1589" width="0.0202%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="1"/><text x="0.3308%" y="1599.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="0.0808%" y="1573" width="0.0202%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="1"/><text x="0.3308%" y="1583.50"></text></g><g><title>EVP_DecodeUpdate (1 samples, 0.02%)</title><rect x="0.1009%" y="1589" width="0.0202%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="0.3509%" y="1599.50"></text></g><g><title>OBJ_obj2nid (1 samples, 0.02%)</title><rect x="0.1211%" y="1589" width="0.0202%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="0.3711%" y="1599.50"></text></g><g><title>[[heap]] (1 samples, 0.02%)</title><rect x="0.1413%" y="1589" width="0.0202%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="0.3913%" y="1599.50"></text></g><g><title>_RNvXNtNtCsgVEU3eNk0wn_5alloc3vec14spec_from_iterINtB4_3VecNtNtNtCs91RHfw1kJHZ_5cargo4core7summary12FeatureValueEINtB2_12SpecFromIterBU_INtNtNtNtCs5SG5FiVtMak_4core4iter8adapters3map3MapINtNtNtB2i_5slice4iter4IterNtNtNtB10_4util9interning14InternedStringENCNCNvBW_17build_feature_map00EE9from_iterB10_ (1 samples, 0.02%)</title><rect x="0.1413%" y="1573" width="0.0202%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="0.3913%" y="1583.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.1615%" y="1573" width="0.0202%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.1615%" y="1557" width="0.0202%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1567.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="0.1615%" y="1541" width="0.0202%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1551.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="0.1615%" y="1525" width="0.0202%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1535.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="0.1615%" y="1509" width="0.0202%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.1615%" y="1493" width="0.0202%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.1615%" y="1477" width="0.0202%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="0.1615%" y="1461" width="0.0202%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="0.1615%" y="1445" width="0.0202%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="0.1615%" y="1429" width="0.0202%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="0.1615%" y="1413" width="0.0202%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1423.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.1615%" y="1397" width="0.0202%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1407.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="0.1615%" y="1381" width="0.0202%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="1"/><text x="0.4115%" y="1391.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="0.1615%" y="1589" width="0.0404%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="2"/><text x="0.4115%" y="1599.50"></text></g><g><title>_RINvNtCsgVEU3eNk0wn_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECsjoxAk7uGzBK_5cargo.llvm.2525401338274485303 (1 samples, 0.02%)</title><rect x="0.1817%" y="1573" width="0.0202%" height="15" fill="rgb(232,182,51)" fg:x="9" fg:w="1"/><text x="0.4317%" y="1583.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="0.1817%" y="1557" width="0.0202%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="1"/><text x="0.4317%" y="1567.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="0.1817%" y="1541" width="0.0202%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="0.4317%" y="1551.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="0.1817%" y="1525" width="0.0202%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="1"/><text x="0.4317%" y="1535.50"></text></g><g><title>_RINvMNtCsd54lCtrCTyZ_4toml3mapINtB3_3MapNtNtCsgVEU3eNk0wn_5alloc6string6StringNtNtB5_5value5ValueE5entryRBC_EB5_ (1 samples, 0.02%)</title><rect x="0.2019%" y="1589" width="0.0202%" height="15" fill="rgb(213,116,39)" fg:x="10" fg:w="1"/><text x="0.4519%" y="1599.50"></text></g><g><title>_RINvMNtNtNtCsgVEU3eNk0wn_5alloc11collections5btree6appendINtNtB5_4node7NodeRefNtNtBW_6marker5OwnedNtNtNtCs91RHfw1kJHZ_5cargo4util9interning14InternedStringINtNtB9_3vec3VecB1y_ENtB1g_14LeafOrInternalE9bulk_pushINtNtB5_17dedup_sorted_iter15DedupSortedIterB1y_B2t_INtNtB2w_9into_iter8IntoIterTB1y_B2t_EEENtNtB9_5alloc6GlobalEB1E_ (1 samples, 0.02%)</title><rect x="0.2221%" y="1589" width="0.0202%" height="15" fill="rgb(222,207,29)" fg:x="11" fg:w="1"/><text x="0.4721%" y="1599.50"></text></g><g><title>_RINvMs2_NtCs5u79KavszpI_9hashbrown3setINtB6_7HashSetRNtNtNtNtCs91RHfw1kJHZ_5cargo4core6source9source_id13SourceIdInnerNtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3map11RandomStateE3getBP_EBX_ (1 samples, 0.02%)</title><rect x="0.2423%" y="1589" width="0.0202%" height="15" fill="rgb(206,96,30)" fg:x="12" fg:w="1"/><text x="0.4923%" y="1599.50"></text></g><g><title>_RINvMs3_NtNtCs4xTPiOmgDMG_5im_rc5nodes5btreeINtB6_4NodeTNtNtNtCs91RHfw1kJHZ_5cargo4core10package_id9PackageIdINtNtNtBa_4hash3set7HashSetNtNtBW_10dependency10DependencyEEE10path_firstBS_EBY_ (1 samples, 0.02%)</title><rect x="0.2625%" y="1589" width="0.0202%" height="15" fill="rgb(218,138,4)" fg:x="13" fg:w="1"/><text x="0.5125%" y="1599.50"></text></g><g><title>_RINvMs5_NtNtCsaYwJY09qFLB_9hashbrown3raw5innerINtB6_8RawTablejE14reserve_rehashNCINvNtNtCsbXkKDtJpnLc_8indexmap3map4core8get_hashNtNtCsjXfa599Qfro_9toml_edit15internal_string14InternalStringNtNtB27_5table13TableKeyValueE0EB27_ (1 samples, 0.02%)</title><rect x="0.2827%" y="1589" width="0.0202%" height="15" fill="rgb(250,191,14)" fg:x="14" fg:w="1"/><text x="0.5327%" y="1599.50"></text></g><g><title>_RINvNtCs341v5OBXvdv_10serde_json3ser27format_escaped_str_contentsQINtNtCsgVEU3eNk0wn_5alloc3vec3VechENtB2_16CompactFormatterECsjoxAk7uGzBK_5cargo.llvm.17432363443719017836 (1 samples, 0.02%)</title><rect x="0.3028%" y="1589" width="0.0202%" height="15" fill="rgb(239,60,40)" fg:x="15" fg:w="1"/><text x="0.5528%" y="1599.50"></text></g><g><title>_RINvNtCs5SG5FiVtMak_4core3ptr13drop_in_placeNtNtCsd54lCtrCTyZ_4toml5value5ValueECs91RHfw1kJHZ_5cargo.llvm.7281415397597749530 (1 samples, 0.02%)</title><rect x="0.3230%" y="1589" width="0.0202%" height="15" fill="rgb(206,27,48)" fg:x="16" fg:w="1"/><text x="0.5730%" y="1599.50"></text></g><g><title>_RINvNtCs5SG5FiVtMak_4core3ptr13drop_in_placeNtNtNtCs91RHfw1kJHZ_5cargo4core7package12PackageInnerEBM_.llvm.11294386640889789425 (1 samples, 0.02%)</title><rect x="0.3432%" y="1589" width="0.0202%" height="15" fill="rgb(225,35,8)" fg:x="17" fg:w="1"/><text x="0.5932%" y="1599.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="0.3432%" y="1573" width="0.0202%" height="15" fill="rgb(250,213,24)" fg:x="17" fg:w="1"/><text x="0.5932%" y="1583.50"></text></g><g><title>_RINvNtCs5SG5FiVtMak_4core3ptr13drop_in_placeNtNtNtCs91RHfw1kJHZ_5cargo4core7summary5InnerEBM_.llvm.11294386640889789425 (1 samples, 0.02%)</title><rect x="0.3634%" y="1589" width="0.0202%" height="15" fill="rgb(247,123,22)" fg:x="18" fg:w="1"/><text x="0.6134%" y="1599.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="0.3634%" y="1573" width="0.0202%" height="15" fill="rgb(231,138,38)" fg:x="18" fg:w="1"/><text x="0.6134%" y="1583.50"></text></g><g><title>_RINvNtCs5SG5FiVtMak_4core3ptr13drop_in_placeNtNtNtCs91RHfw1kJHZ_5cargo4core8manifest10TargetKindEBM_.llvm.17410322496986008596 (2 samples, 0.04%)</title><rect x="0.3836%" y="1589" width="0.0404%" height="15" fill="rgb(231,145,46)" fg:x="19" fg:w="2"/><text x="0.6336%" y="1599.50"></text></g><g><title>_RINvNtCsgVEU3eNk0wn_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECsd54lCtrCTyZ_4toml.llvm.5451170430713821559 (1 samples, 0.02%)</title><rect x="0.4240%" y="1589" width="0.0202%" height="15" fill="rgb(251,118,11)" fg:x="21" fg:w="1"/><text x="0.6740%" y="1599.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.4240%" y="1573" width="0.0202%" height="15" fill="rgb(217,147,25)" fg:x="21" fg:w="1"/><text x="0.6740%" y="1583.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="0.4240%" y="1557" width="0.0202%" height="15" fill="rgb(247,81,37)" fg:x="21" fg:w="1"/><text x="0.6740%" y="1567.50"></text></g><g><title>_RINvNtCsgVEU3eNk0wn_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECsjXfa599Qfro_9toml_edit.llvm.9746813815476944100 (1 samples, 0.02%)</title><rect x="0.4442%" y="1589" width="0.0202%" height="15" fill="rgb(209,12,38)" fg:x="22" fg:w="1"/><text x="0.6942%" y="1599.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.4442%" y="1573" width="0.0202%" height="15" fill="rgb(227,1,9)" fg:x="22" fg:w="1"/><text x="0.6942%" y="1583.50"></text></g><g><title>_RINvNtCslAJt4rsqvXy_6winnow5token12take_while1_TINtNtNtCs5SG5FiVtMak_4core3ops5range14RangeInclusivehEBK_BK_hhEINtNtB4_6stream7LocatedRNtB1O_4BStrENtNtB4_5error12ContextErrorKb0_ECsjXfa599Qfro_9toml_edit (2 samples, 0.04%)</title><rect x="0.4644%" y="1589" width="0.0404%" height="15" fill="rgb(248,47,43)" fg:x="23" fg:w="2"/><text x="0.7144%" y="1599.50"></text></g><g><title>_RINvNtNtCslAJt4rsqvXy_6winnow10combinator5multi8repeat0_INtNtB6_6stream7LocatedRNtBV_4BStrETuuEuNtNtB6_5error12ContextErrorTNCNvNtNtCsjXfa599Qfro_9toml_edit6parser8document8documents0_0NCNvB22_8parse_ws0EEB26_ (2 samples, 0.04%)</title><rect x="0.5047%" y="1589" width="0.0404%" height="15" fill="rgb(221,10,30)" fg:x="25" fg:w="2"/><text x="0.7547%" y="1599.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="0.5249%" y="1573" width="0.0202%" height="15" fill="rgb(210,229,1)" fg:x="26" fg:w="1"/><text x="0.7749%" y="1583.50"></text></g><g><title>_RINvXNtNtNtCs91RHfw1kJHZ_5cargo4util6config2deNtB3_12DeserializerNtNtCs4tzRlw4u1YC_5serde2de12Deserializer15deserialize_mapNtNvXNvNtB5_6target1__NtB24_15TargetCfgConfigNtB13_11Deserialize11deserialize9___VisitorEB9_ (1 samples, 0.02%)</title><rect x="0.5451%" y="1589" width="0.0202%" height="15" fill="rgb(222,148,37)" fg:x="27" fg:w="1"/><text x="0.7951%" y="1599.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="0.5451%" y="1573" width="0.0202%" height="15" fill="rgb(234,67,33)" fg:x="27" fg:w="1"/><text x="0.7951%" y="1583.50"></text></g><g><title>_RINvXNvXNtNtCs91RHfw1kJHZ_5cargo4util4tomlINtB6_14TomlDependencypENtNtCs4tzRlw4u1YC_5serde2de11Deserialize11deserializeINtB3_21TomlDependencyVisitorNtNtCsgVEU3eNk0wn_5alloc6string6StringENtB14_7Visitor9visit_mapINtNtB14_5value15MapDeserializerINtNtNtNtCs5SG5FiVtMak_4core4iter8adapters3map3MapINtNtNtNtB2q_11collections5btree3map8IntoIterNtCsdh2kuPybrnA_11serde_value5ValueB5q_ENCINvXs9_NtB5s_2deINtB6d_17ValueDeserializerNtNtCsd54lCtrCTyZ_4toml2de5ErrorENtB14_12Deserializer15deserialize_anyB1T_E0EB6M_EEBa_ (1 samples, 0.02%)</title><rect x="0.5653%" y="1589" width="0.0202%" height="15" fill="rgb(247,98,35)" fg:x="28" fg:w="1"/><text x="0.8153%" y="1599.50"></text></g><g><title>_RINvXs0_NtNtNtCs5SG5FiVtMak_4core4iter8adapters3mapINtB6_3MapINtNtB8_6filter6FilterIBY_IBY_INtNtB8_10filter_map9FilterMapIB1s_INtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3map7IterMutNtCs7eLoBKV2qX3_6semver7VersionNtNtNtNtCs91RHfw1kJHZ_5cargo7sources8registry5index17MaybeIndexSummaryENCNvMB3s_NtB3s_13RegistryIndex9summaries0ENCB4B_s_0ENCB4B_s0_0ENCNvB4D_23query_inner_with_online0ENCB5C_s_0ENCB5C_s0_0ENtNtNtBa_6traits8iterator8Iterator8try_folduNCINvNvB6u_4find5checkNtNtNtB3y_4core7summary7SummaryQNCB5C_s1_0E0INtNtNtBc_3ops12control_flow11ControlFlowB7y_EEB3y_ (1 samples, 0.02%)</title><rect x="0.5855%" y="1589" width="0.0202%" height="15" fill="rgb(247,138,52)" fg:x="29" fg:w="1"/><text x="0.8355%" y="1599.50"></text></g><g><title>_RINvXs0_NvXNvNtNtCs91RHfw1kJHZ_5cargo4util4tomlsg_1__NtBb_11TomlPackageNtNtCs4tzRlw4u1YC_5serde2de11Deserialize11deserializeNtB6_9___VisitorNtB19_7Visitor9visit_mapINtCs5VGRQ9yd1Sa_13serde_ignored9MapAccessQNtNtCsd54lCtrCTyZ_4toml5value15MapDeserializerNCNvBb_22read_manifest_from_strs_0EEBf_.llvm.17410322496986008596 (1 samples, 0.02%)</title><rect x="0.6057%" y="1589" width="0.0202%" height="15" fill="rgb(213,79,30)" fg:x="30" fg:w="1"/><text x="0.8557%" y="1599.50"></text></g><g><title>_RINvXs8_Cs5VGRQ9yd1Sa_13serde_ignoredINtB6_10CaptureKeyNtNvXNvNtNtCs91RHfw1kJHZ_5cargo4util4tomlsn_1__NtBY_10TomlTargetNtNtCs4tzRlw4u1YC_5serde2de11Deserialize11deserialize14___FieldVisitorENtB1V_7Visitor12visit_stringNtNtCsd54lCtrCTyZ_4toml2de5ErrorEB12_ (1 samples, 0.02%)</title><rect x="0.6259%" y="1589" width="0.0202%" height="15" fill="rgb(246,177,23)" fg:x="31" fg:w="1"/><text x="0.8759%" y="1599.50"></text></g><g><title>_RINvXs9_NtCsdh2kuPybrnA_11serde_value2deINtB6_17ValueDeserializerNtNtCsd54lCtrCTyZ_4toml2de5ErrorENtNtCs4tzRlw4u1YC_5serde2de12Deserializer15deserialize_anyNtNvXNvNtNtCs91RHfw1kJHZ_5cargo4util4tomls_1__INtB2B_22DetailedTomlDependencypENtB1A_11Deserialize11deserialize14___FieldVisitorEB2F_ (1 samples, 0.02%)</title><rect x="0.6461%" y="1589" width="0.0202%" height="15" fill="rgb(230,62,27)" fg:x="32" fg:w="1"/><text x="0.8961%" y="1599.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="0.6461%" y="1573" width="0.0202%" height="15" fill="rgb(216,154,8)" fg:x="32" fg:w="1"/><text x="0.8961%" y="1583.50"></text></g><g><title>_RINvXs_NtNtCs4xTPiOmgDMG_5im_rc3ord3mapTNtNtNtCs91RHfw1kJHZ_5cargo4core10package_id9PackageIdINtB5_6OrdMapBC_INtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3set7HashSetNtNtBG_10dependency10DependencyEEENtNtNtB9_5nodes5btree10BTreeValue10search_keyBC_EBI_ (1 samples, 0.02%)</title><rect x="0.6663%" y="1589" width="0.0202%" height="15" fill="rgb(244,35,45)" fg:x="33" fg:w="1"/><text x="0.9163%" y="1599.50"></text></g><g><title>_RINvXs_NtNtCs4xTPiOmgDMG_5im_rc3ord3mapTNtNtNtCs91RHfw1kJHZ_5cargo4core10package_id9PackageIdINtNtNtB9_4hash3set7HashSetNtNtBG_10dependency10DependencyEENtNtNtB9_5nodes5btree10BTreeValue10search_keyBC_EBI_ (1 samples, 0.02%)</title><rect x="0.6865%" y="1589" width="0.0202%" height="15" fill="rgb(251,115,12)" fg:x="34" fg:w="1"/><text x="0.9365%" y="1599.50"></text></g><g><title>_RINvXsh_NtCsd54lCtrCTyZ_4toml5valueNtB6_5ValueNtNtCs4tzRlw4u1YC_5serde2de12Deserializer15deserialize_anyNtNvXNvNtNtNtCs91RHfw1kJHZ_5cargo4core8resolver6encodes3_1__NtB1L_19EncodableDependencyNtBK_11Deserialize11deserialize9___VisitorEB1R_ (1 samples, 0.02%)</title><rect x="0.7066%" y="1589" width="0.0202%" height="15" fill="rgb(240,54,50)" fg:x="35" fg:w="1"/><text x="0.9566%" y="1599.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="0.7066%" y="1573" width="0.0202%" height="15" fill="rgb(233,84,52)" fg:x="35" fg:w="1"/><text x="0.9566%" y="1583.50"></text></g><g><title>_RINvXsl_NtCsd54lCtrCTyZ_4toml5valueNtB6_15MapDeserializerNtNtCs4tzRlw4u1YC_5serde2de9MapAccess15next_value_seedINtCs5VGRQ9yd1Sa_13serde_ignored11TrackedSeedINtNtCs5SG5FiVtMak_4core6marker11PhantomDataINtNtCsgVEU3eNk0wn_5alloc3vec3VecNtNtNtCs91RHfw1kJHZ_5cargo4util9interning14InternedStringEENCNvNtB3N_4toml22read_manifest_from_strs_0EEB3P_ (1 samples, 0.02%)</title><rect x="0.7268%" y="1589" width="0.0202%" height="15" fill="rgb(207,117,47)" fg:x="36" fg:w="1"/><text x="0.9768%" y="1599.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="0.7268%" y="1573" width="0.0202%" height="15" fill="rgb(249,43,39)" fg:x="36" fg:w="1"/><text x="0.9768%" y="1583.50"></text></g><g><title>_RINvXsz_NtCsd54lCtrCTyZ_4toml5valueNtB6_17ValueSerializeMapNtNtCs4tzRlw4u1YC_5serde3ser15SerializeStruct15serialize_fieldINtNtCs5SG5FiVtMak_4core6option6OptionINtNtCsgVEU3eNk0wn_5alloc3vec3VecNtNtNtNtCs91RHfw1kJHZ_5cargo4core8resolver6encode18EncodablePackageIdEEEB3c_ (1 samples, 0.02%)</title><rect x="0.7470%" y="1589" width="0.0202%" height="15" fill="rgb(209,38,44)" fg:x="37" fg:w="1"/><text x="0.9970%" y="1599.50"></text></g><g><title>_RINvYINtNtCs341v5OBXvdv_10serde_json3ser8CompoundQINtNtCsgVEU3eNk0wn_5alloc3vec3VechENtB6_16CompactFormatterENtNtCs4tzRlw4u1YC_5serde3ser12SerializeMap15serialize_entryeINtNtCs5SG5FiVtMak_4core6option6OptionIBN_ReEEECsjoxAk7uGzBK_5cargo (1 samples, 0.02%)</title><rect x="0.7672%" y="1589" width="0.0202%" height="15" fill="rgb(236,212,23)" fg:x="38" fg:w="1"/><text x="1.0172%" y="1599.50"></text></g><g><title>_RINvYNtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3map11RandomStateNtNtCs5SG5FiVtMak_4core4hash11BuildHasher8hash_oneRReECs91RHfw1kJHZ_5cargo (1 samples, 0.02%)</title><rect x="0.7874%" y="1589" width="0.0202%" height="15" fill="rgb(242,79,21)" fg:x="39" fg:w="1"/><text x="1.0374%" y="1599.50"></text></g><g><title>_RNCNvNtNtCsjXfa599Qfro_9toml_edit6parser5value5value0B7_ (1 samples, 0.02%)</title><rect x="0.8076%" y="1589" width="0.0202%" height="15" fill="rgb(211,96,35)" fg:x="40" fg:w="1"/><text x="1.0576%" y="1599.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.8076%" y="1573" width="0.0202%" height="15" fill="rgb(253,215,40)" fg:x="40" fg:w="1"/><text x="1.0576%" y="1583.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="0.8076%" y="1557" width="0.0202%" height="15" fill="rgb(211,81,21)" fg:x="40" fg:w="1"/><text x="1.0576%" y="1567.50"></text></g><g><title>_RNvMs5_NtNtCs91RHfw1kJHZ_5cargo4util9interningNtB5_14InternedString3new (1 samples, 0.02%)</title><rect x="0.8278%" y="1589" width="0.0202%" height="15" fill="rgb(208,190,38)" fg:x="41" fg:w="1"/><text x="1.0778%" y="1599.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.8278%" y="1573" width="0.0202%" height="15" fill="rgb(235,213,38)" fg:x="41" fg:w="1"/><text x="1.0778%" y="1583.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="0.8278%" y="1557" width="0.0202%" height="15" fill="rgb(237,122,38)" fg:x="41" fg:w="1"/><text x="1.0778%" y="1567.50"></text></g><g><title>_RNvMs6_NtCsgVEU3eNk0wn_5alloc2rcINtB5_2RcNtNtNtCs91RHfw1kJHZ_5cargo4util4toml12TomlManifestE3newBJ_ (1 samples, 0.02%)</title><rect x="0.8480%" y="1589" width="0.0202%" height="15" fill="rgb(244,218,35)" fg:x="42" fg:w="1"/><text x="1.0980%" y="1599.50"></text></g><g><title>_RNvMs_NtNtNtCs91RHfw1kJHZ_5cargo4util6config2deNtB4_15ConfigMapAccess10new_struct (1 samples, 0.02%)</title><rect x="0.8682%" y="1589" width="0.0202%" height="15" fill="rgb(240,68,47)" fg:x="43" fg:w="1"/><text x="1.1182%" y="1599.50"></text></g><g><title>_RNvMse_NtCsgVEU3eNk0wn_5alloc2rcINtB5_2RcNtNtNtCs91RHfw1kJHZ_5cargo4core10dependency5InnerE8make_mutBJ_.llvm.14666074212130275466 (1 samples, 0.02%)</title><rect x="0.8884%" y="1589" width="0.0202%" height="15" fill="rgb(210,16,53)" fg:x="44" fg:w="1"/><text x="1.1384%" y="1599.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.8884%" y="1573" width="0.0202%" height="15" fill="rgb(235,124,12)" fg:x="44" fg:w="1"/><text x="1.1384%" y="1583.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="0.8884%" y="1557" width="0.0202%" height="15" fill="rgb(224,169,11)" fg:x="44" fg:w="1"/><text x="1.1384%" y="1567.50"></text></g><g><title>_RNvMse_NtCsgVEU3eNk0wn_5alloc2rcINtB5_2RcNtNtNtCs91RHfw1kJHZ_5cargo4core7summary5InnerE8make_mutBJ_.llvm.11294386640889789425 (2 samples, 0.04%)</title><rect x="0.9085%" y="1589" width="0.0404%" height="15" fill="rgb(250,166,2)" fg:x="45" fg:w="2"/><text x="1.1585%" y="1599.50"></text></g><g><title>_RNvMsi_NtNtNtCsgVEU3eNk0wn_5alloc11collections5btree3mapINtB5_8BTreeMapNtNtBb_6string6StringINtNtNtCs91RHfw1kJHZ_5cargo4util4toml14MaybeWorkspaceNtB1v_14TomlDependencyNtB1v_23TomlWorkspaceDependencyEE6insertB1z_ (2 samples, 0.04%)</title><rect x="0.9489%" y="1589" width="0.0404%" height="15" fill="rgb(242,216,29)" fg:x="47" fg:w="2"/><text x="1.1989%" y="1599.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.9691%" y="1573" width="0.0202%" height="15" fill="rgb(230,116,27)" fg:x="48" fg:w="1"/><text x="1.2191%" y="1583.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="0.9691%" y="1557" width="0.0202%" height="15" fill="rgb(228,99,48)" fg:x="48" fg:w="1"/><text x="1.2191%" y="1567.50"></text></g><g><title>_RNvMsi_NtNtNtCsgVEU3eNk0wn_5alloc11collections5btree3mapINtB5_8BTreeMapNtNtNtCs91RHfw1kJHZ_5cargo4util9interning14InternedStringINtNtBb_3vec3VecB17_EE6insertB1d_ (1 samples, 0.02%)</title><rect x="0.9893%" y="1589" width="0.0202%" height="15" fill="rgb(253,11,6)" fg:x="49" fg:w="1"/><text x="1.2393%" y="1599.50"></text></g><g><title>_RNvMsu_NtNtCs91RHfw1kJHZ_5cargo4util4tomlNtB5_12TomlManifest16to_real_manifest (1 samples, 0.02%)</title><rect x="1.0095%" y="1589" width="0.0202%" height="15" fill="rgb(247,143,39)" fg:x="50" fg:w="1"/><text x="1.2595%" y="1599.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="1.0095%" y="1573" width="0.0202%" height="15" fill="rgb(236,97,10)" fg:x="50" fg:w="1"/><text x="1.2595%" y="1583.50"></text></g><g><title>_RNvMsx_NtNtNtCsgVEU3eNk0wn_5alloc11collections5btree3mapINtB5_8IntoIterNtNtBb_6string6StringNtNtNtCs91RHfw1kJHZ_5cargo4util15command_prelude11CommandInfoE10dying_nextCsjoxAk7uGzBK_5cargo.llvm.10816283098724407795 (1 samples, 0.02%)</title><rect x="1.0297%" y="1589" width="0.0202%" height="15" fill="rgb(233,208,19)" fg:x="51" fg:w="1"/><text x="1.2797%" y="1599.50"></text></g><g><title>_RNvMsx_NtNtNtCsgVEU3eNk0wn_5alloc11collections5btree3mapINtB5_8IntoIterNtNtNtCs91RHfw1kJHZ_5cargo4core10package_id9PackageIdNtNtNtB1d_3ops21cargo_output_metadata19MetadataResolveNodeE10dying_nextB1d_.llvm.11294386640889789425 (1 samples, 0.02%)</title><rect x="1.0499%" y="1589" width="0.0202%" height="15" fill="rgb(216,164,2)" fg:x="52" fg:w="1"/><text x="1.2999%" y="1599.50"></text></g><g><title>_RNvNtCs7eLoBKV2qX3_6semver4eval12matches_impl.llvm.5927157812650432968 (1 samples, 0.02%)</title><rect x="1.0701%" y="1589" width="0.0202%" height="15" fill="rgb(220,129,5)" fg:x="53" fg:w="1"/><text x="1.3201%" y="1599.50"></text></g><g><title>_RNvNtNtCs91RHfw1kJHZ_5cargo4core7summary17build_feature_map (1 samples, 0.02%)</title><rect x="1.0902%" y="1589" width="0.0202%" height="15" fill="rgb(242,17,10)" fg:x="54" fg:w="1"/><text x="1.3402%" y="1599.50"></text></g><g><title>_RNvNtNtCs91RHfw1kJHZ_5cargo4core8resolver8activate (1 samples, 0.02%)</title><rect x="1.1104%" y="1589" width="0.0202%" height="15" fill="rgb(242,107,0)" fg:x="55" fg:w="1"/><text x="1.3604%" y="1599.50"></text></g><g><title>_RNvNtNtNtCsbiWzh4JGXYx_6memchr6memchr3x863avx6memchr (1 samples, 0.02%)</title><rect x="1.1306%" y="1589" width="0.0202%" height="15" fill="rgb(251,28,31)" fg:x="56" fg:w="1"/><text x="1.3806%" y="1599.50"></text></g><g><title>_RNvXs0_NtCs7eLoBKV2qX3_6semver10identifierNtB5_10IdentifierNtNtNtCs5SG5FiVtMak_4core3ops4drop4Drop4drop (1 samples, 0.02%)</title><rect x="1.1508%" y="1589" width="0.0202%" height="15" fill="rgb(233,223,10)" fg:x="57" fg:w="1"/><text x="1.4008%" y="1599.50"></text></g><g><title>_RNvXs1_NtNtNtCs91RHfw1kJHZ_5cargo4core6source9source_idNtB5_8SourceIdNtNtCs5SG5FiVtMak_4core3cmp3Ord3cmp (1 samples, 0.02%)</title><rect x="1.1710%" y="1589" width="0.0202%" height="15" fill="rgb(215,21,27)" fg:x="58" fg:w="1"/><text x="1.4210%" y="1599.50"></text></g><g><title>_RNvXs3_NtNtCs5SG5FiVtMak_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs91RHfw1kJHZ_5cargo.llvm.11294386640889789425 (2 samples, 0.04%)</title><rect x="1.1912%" y="1589" width="0.0404%" height="15" fill="rgb(232,23,21)" fg:x="59" fg:w="2"/><text x="1.4412%" y="1599.50"></text></g><g><title>_RNvXs3_NtNtCs5SG5FiVtMak_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs91RHfw1kJHZ_5cargo.llvm.14666074212130275466 (2 samples, 0.04%)</title><rect x="1.2316%" y="1589" width="0.0404%" height="15" fill="rgb(244,5,23)" fg:x="61" fg:w="2"/><text x="1.4816%" y="1599.50"></text></g><g><title>_RNvXs3_NtNtCs5SG5FiVtMak_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs91RHfw1kJHZ_5cargo.llvm.6137529569853853886 (3 samples, 0.06%)</title><rect x="1.2720%" y="1589" width="0.0606%" height="15" fill="rgb(226,81,46)" fg:x="63" fg:w="3"/><text x="1.5220%" y="1599.50"></text></g><g><title>_RNvXs5_NtCs341v5OBXvdv_10serde_json4readNtB5_9SliceReadNtB5_4Read9parse_str (1 samples, 0.02%)</title><rect x="1.3325%" y="1589" width="0.0202%" height="15" fill="rgb(247,70,30)" fg:x="66" fg:w="1"/><text x="1.5825%" y="1599.50"></text></g><g><title>_RNvXs_NtNtCs4xTPiOmgDMG_5im_rc3ord3mapTNtNtNtCs91RHfw1kJHZ_5cargo4core10package_id9PackageIdINtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3set7HashSetNtNtBF_10dependency10DependencyEENtNtNtB8_5nodes5btree10BTreeValue12search_valueBH_ (1 samples, 0.02%)</title><rect x="1.3527%" y="1589" width="0.0202%" height="15" fill="rgb(212,68,19)" fg:x="67" fg:w="1"/><text x="1.6027%" y="1599.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="1.3527%" y="1573" width="0.0202%" height="15" fill="rgb(240,187,13)" fg:x="67" fg:w="1"/><text x="1.6027%" y="1583.50"></text></g><g><title>_RNvXs_NtNtCslAJt4rsqvXy_6winnow10combinator6branchTINtNtB6_6parser3MapNCINvNtB6_5multi6repeatINtNtB8_6stream7LocatedRNtB1w_4BStrERShuNtNtB8_5error12ContextErrorNCINvB4_3altB1t_B23_B27_TNCINvNtB8_5token10take_whileThhEB1t_B27_INtNtNtCs5SG5FiVtMak_4core3ops5range9RangeFromjEE0INtBQ_5ValueNvNtNtCsjXfa599Qfro_9toml_edit6parser6trivia7newlineB1t_hB23_B27_EEE0B3B_E0NCNvB4D_18ws_comment_newline0B1t_uuB27_EIB4q_NvB4D_7commentB1t_B23_uB27_EEINtB4_3AltB1t_uB27_E6choiceB4H_ (1 samples, 0.02%)</title><rect x="1.3729%" y="1589" width="0.0202%" height="15" fill="rgb(223,113,26)" fg:x="68" fg:w="1"/><text x="1.6229%" y="1599.50"></text></g><g><title>_RNvXse_NtCsaBmMM8Aev1H_14cargo_platform3cfgNtB5_7CfgExprNtNtCs5SG5FiVtMak_4core5clone5Clone5clone.llvm.7281415397597749530 (1 samples, 0.02%)</title><rect x="1.3931%" y="1589" width="0.0202%" height="15" fill="rgb(206,192,2)" fg:x="69" fg:w="1"/><text x="1.6431%" y="1599.50"></text></g><g><title>_RNvXsj_NtCsd54lCtrCTyZ_4toml5valueNtB5_15SeqDeserializerNtNtCs4tzRlw4u1YC_5serde2de9SeqAccess9size_hint (1 samples, 0.02%)</title><rect x="1.4133%" y="1589" width="0.0202%" height="15" fill="rgb(241,108,4)" fg:x="70" fg:w="1"/><text x="1.6633%" y="1599.50"></text></g><g><title>_RNvXsm_NtCsgVEU3eNk0wn_5alloc3vecINtB5_3VecINtNtCs5SG5FiVtMak_4core6option6OptionTNtNtNtNtCs4tzRlw4u1YC_5serde9___private2de7content7ContentB1i_EEENtNtNtBK_3ops4drop4Drop4dropCs91RHfw1kJHZ_5cargo (1 samples, 0.02%)</title><rect x="1.4335%" y="1589" width="0.0202%" height="15" fill="rgb(247,173,49)" fg:x="71" fg:w="1"/><text x="1.6835%" y="1599.50"></text></g><g><title>_RNvXso_NtCsgVEU3eNk0wn_5alloc2rcINtB5_2RcINtNtNtCs4xTPiOmgDMG_5im_rc5nodes4hamt4NodeINtNtNtBK_4hash3set5ValueNtNtNtCs91RHfw1kJHZ_5cargo4core10dependency10DependencyEEENtNtNtCs5SG5FiVtMak_4core3ops4drop4Drop4dropB1P_ (1 samples, 0.02%)</title><rect x="1.4537%" y="1589" width="0.0202%" height="15" fill="rgb(224,114,35)" fg:x="72" fg:w="1"/><text x="1.7037%" y="1599.50"></text></g><g><title>_RNvXsq_NtCs2J9mQIaYYSz_7bitmaps6bitmapINtB5_4IterINtNtCs4DRpDyIi0zB_7typenum4uint4UIntIBM_IBM_IBM_IBM_IBM_NtBO_5UTermNtNtBQ_3bit2B1ENtB1T_2B0EB26_EB26_EB26_EB26_EENtNtNtNtCs5SG5FiVtMak_4core4iter6traits8iterator8Iterator4nextCs91RHfw1kJHZ_5cargo (1 samples, 0.02%)</title><rect x="1.4739%" y="1589" width="0.0202%" height="15" fill="rgb(245,159,27)" fg:x="73" fg:w="1"/><text x="1.7239%" y="1599.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="1.4940%" y="1589" width="0.0202%" height="15" fill="rgb(245,172,44)" fg:x="74" fg:w="1"/><text x="1.7440%" y="1599.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="1.4940%" y="1573" width="0.0202%" height="15" fill="rgb(236,23,11)" fg:x="74" fg:w="1"/><text x="1.7440%" y="1583.50"></text></g><g><title>asn1_check_tlen (1 samples, 0.02%)</title><rect x="1.5142%" y="1589" width="0.0202%" height="15" fill="rgb(205,117,38)" fg:x="75" fg:w="1"/><text x="1.7642%" y="1599.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.02%)</title><rect x="1.5344%" y="1589" width="0.0202%" height="15" fill="rgb(237,72,25)" fg:x="76" fg:w="1"/><text x="1.7844%" y="1599.50"></text></g><g><title>asn1_template_ex_d2i (1 samples, 0.02%)</title><rect x="1.5546%" y="1589" width="0.0202%" height="15" fill="rgb(244,70,9)" fg:x="77" fg:w="1"/><text x="1.8046%" y="1599.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.02%)</title><rect x="1.5748%" y="1589" width="0.0202%" height="15" fill="rgb(217,125,39)" fg:x="78" fg:w="1"/><text x="1.8248%" y="1599.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.02%)</title><rect x="1.5748%" y="1573" width="0.0202%" height="15" fill="rgb(235,36,10)" fg:x="78" fg:w="1"/><text x="1.8248%" y="1583.50"></text></g><g><title>entry_fromname (1 samples, 0.02%)</title><rect x="1.5950%" y="1589" width="0.0202%" height="15" fill="rgb(251,123,47)" fg:x="79" fg:w="1"/><text x="1.8450%" y="1599.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="1.5950%" y="1573" width="0.0202%" height="15" fill="rgb(221,13,13)" fg:x="79" fg:w="1"/><text x="1.8450%" y="1583.50"></text></g><g><title>git_fs_path_prettify (1 samples, 0.02%)</title><rect x="1.6152%" y="1589" width="0.0202%" height="15" fill="rgb(238,131,9)" fg:x="80" fg:w="1"/><text x="1.8652%" y="1599.50"></text></g><g><title>__realpath (1 samples, 0.02%)</title><rect x="1.6152%" y="1573" width="0.0202%" height="15" fill="rgb(211,50,8)" fg:x="80" fg:w="1"/><text x="1.8652%" y="1583.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1.6152%" y="1557" width="0.0202%" height="15" fill="rgb(245,182,24)" fg:x="80" fg:w="1"/><text x="1.8652%" y="1567.50"></text></g><g><title>git_odb__hashobj (1 samples, 0.02%)</title><rect x="1.6354%" y="1589" width="0.0202%" height="15" fill="rgb(242,14,37)" fg:x="81" fg:w="1"/><text x="1.8854%" y="1599.50"></text></g><g><title>__GI___snprintf (1 samples, 0.02%)</title><rect x="1.6354%" y="1573" width="0.0202%" height="15" fill="rgb(246,228,12)" fg:x="81" fg:w="1"/><text x="1.8854%" y="1583.50"></text></g><g><title>_IO_vsnprintf (1 samples, 0.02%)</title><rect x="1.6354%" y="1557" width="0.0202%" height="15" fill="rgb(213,55,15)" fg:x="81" fg:w="1"/><text x="1.8854%" y="1567.50"></text></g><g><title>_IO_vfprintf_internal (1 samples, 0.02%)</title><rect x="1.6354%" y="1541" width="0.0202%" height="15" fill="rgb(209,9,3)" fg:x="81" fg:w="1"/><text x="1.8854%" y="1551.50"></text></g><g><title>_itoa_word (1 samples, 0.02%)</title><rect x="1.6354%" y="1525" width="0.0202%" height="15" fill="rgb(230,59,30)" fg:x="81" fg:w="1"/><text x="1.8854%" y="1535.50"></text></g><g><title>git_packfile_free (1 samples, 0.02%)</title><rect x="1.6556%" y="1589" width="0.0202%" height="15" fill="rgb(209,121,21)" fg:x="82" fg:w="1"/><text x="1.9056%" y="1599.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="1.6556%" y="1573" width="0.0202%" height="15" fill="rgb(220,109,13)" fg:x="82" fg:w="1"/><text x="1.9056%" y="1583.50"></text></g><g><title>git_tree_entry_bypath (1 samples, 0.02%)</title><rect x="1.6758%" y="1589" width="0.0202%" height="15" fill="rgb(232,18,1)" fg:x="83" fg:w="1"/><text x="1.9258%" y="1599.50"></text></g><g><title>__strchr_avx2 (1 samples, 0.02%)</title><rect x="1.6758%" y="1573" width="0.0202%" height="15" fill="rgb(215,41,42)" fg:x="83" fg:w="1"/><text x="1.9258%" y="1583.50"></text></g><g><title>inflate (2 samples, 0.04%)</title><rect x="1.6959%" y="1589" width="0.0404%" height="15" fill="rgb(224,123,36)" fg:x="84" fg:w="2"/><text x="1.9459%" y="1599.50"></text></g><g><title>inflate_fast (3 samples, 0.06%)</title><rect x="1.7363%" y="1589" width="0.0606%" height="15" fill="rgb(240,125,3)" fg:x="86" fg:w="3"/><text x="1.9863%" y="1599.50"></text></g><g><title>pack_entry_find_offset (2 samples, 0.04%)</title><rect x="1.7969%" y="1589" width="0.0404%" height="15" fill="rgb(205,98,50)" fg:x="89" fg:w="2"/><text x="2.0469%" y="1599.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="1.7969%" y="1573" width="0.0404%" height="15" fill="rgb(205,185,37)" fg:x="89" fg:w="2"/><text x="2.0469%" y="1583.50"></text></g><g><title>sha1_compression_states (3 samples, 0.06%)</title><rect x="1.8373%" y="1589" width="0.0606%" height="15" fill="rgb(238,207,15)" fg:x="91" fg:w="3"/><text x="2.0873%" y="1599.50"></text></g><g><title>ssl_cipher_process_rulestr (1 samples, 0.02%)</title><rect x="1.8978%" y="1589" width="0.0202%" height="15" fill="rgb(213,199,42)" fg:x="94" fg:w="1"/><text x="2.1478%" y="1599.50"></text></g><g><title>__strncmp_avx2 (1 samples, 0.02%)</title><rect x="1.8978%" y="1573" width="0.0202%" height="15" fill="rgb(235,201,11)" fg:x="94" fg:w="1"/><text x="2.1478%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="1.9180%" y="1573" width="0.0202%" height="15" fill="rgb(207,46,11)" fg:x="95" fg:w="1"/><text x="2.1680%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="1.9180%" y="1557" width="0.0202%" height="15" fill="rgb(241,35,35)" fg:x="95" fg:w="1"/><text x="2.1680%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="1.9180%" y="1541" width="0.0202%" height="15" fill="rgb(243,32,47)" fg:x="95" fg:w="1"/><text x="2.1680%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="1.9180%" y="1525" width="0.0202%" height="15" fill="rgb(247,202,23)" fg:x="95" fg:w="1"/><text x="2.1680%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="1.9180%" y="1509" width="0.0202%" height="15" fill="rgb(219,102,11)" fg:x="95" fg:w="1"/><text x="2.1680%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="1.9180%" y="1493" width="0.0202%" height="15" fill="rgb(243,110,44)" fg:x="95" fg:w="1"/><text x="2.1680%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="1.9180%" y="1477" width="0.0202%" height="15" fill="rgb(222,74,54)" fg:x="95" fg:w="1"/><text x="2.1680%" y="1487.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="1.9180%" y="1461" width="0.0202%" height="15" fill="rgb(216,99,12)" fg:x="95" fg:w="1"/><text x="2.1680%" y="1471.50"></text></g><g><title>std::fs::read::inner (2 samples, 0.04%)</title><rect x="1.9180%" y="1589" width="0.0404%" height="15" fill="rgb(226,22,26)" fg:x="95" fg:w="2"/><text x="2.1680%" y="1599.50"></text></g><g><title>std::fs::File::open (1 samples, 0.02%)</title><rect x="1.9382%" y="1573" width="0.0202%" height="15" fill="rgb(217,163,10)" fg:x="96" fg:w="1"/><text x="2.1882%" y="1583.50"></text></g><g><title>std::fs::OpenOptions::new (1 samples, 0.02%)</title><rect x="1.9382%" y="1557" width="0.0202%" height="15" fill="rgb(213,25,53)" fg:x="96" fg:w="1"/><text x="2.1882%" y="1567.50"></text></g><g><title>std::sys::unix::fs::OpenOptions::new (1 samples, 0.02%)</title><rect x="1.9382%" y="1541" width="0.0202%" height="15" fill="rgb(252,105,26)" fg:x="96" fg:w="1"/><text x="2.1882%" y="1551.50"></text></g><g><title>cargo (100 samples, 2.02%)</title><rect x="0.0000%" y="1605" width="2.0190%" height="15" fill="rgb(220,39,43)" fg:x="0" fg:w="100"/><text x="0.2500%" y="1615.50">c..</text></g><g><title>ubc_check (3 samples, 0.06%)</title><rect x="1.9584%" y="1589" width="0.0606%" height="15" fill="rgb(229,68,48)" fg:x="97" fg:w="3"/><text x="2.2084%" y="1599.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="2.0392%" y="1093" width="0.0202%" height="15" fill="rgb(252,8,32)" fg:x="101" fg:w="1"/><text x="2.2892%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="2.1199%" y="1045" width="0.0202%" height="15" fill="rgb(223,20,43)" fg:x="105" fg:w="1"/><text x="2.3699%" y="1055.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect x="2.4430%" y="805" width="0.0606%" height="15" fill="rgb(229,81,49)" fg:x="121" fg:w="3"/><text x="2.6930%" y="815.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="2.4430%" y="837" width="0.1413%" height="15" fill="rgb(236,28,36)" fg:x="121" fg:w="7"/><text x="2.6930%" y="847.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="2.4430%" y="821" width="0.1413%" height="15" fill="rgb(249,185,26)" fg:x="121" fg:w="7"/><text x="2.6930%" y="831.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="2.5035%" y="805" width="0.0808%" height="15" fill="rgb(249,174,33)" fg:x="124" fg:w="4"/><text x="2.7535%" y="815.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="2.5035%" y="789" width="0.0808%" height="15" fill="rgb(233,201,37)" fg:x="124" fg:w="4"/><text x="2.7535%" y="799.50"></text></g><g><title>&lt;u32 as core::num::FromStrRadixHelper&gt;::checked_mul (5 samples, 0.10%)</title><rect x="2.7256%" y="773" width="0.1009%" height="15" fill="rgb(221,78,26)" fg:x="135" fg:w="5"/><text x="2.9756%" y="783.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_mul (5 samples, 0.10%)</title><rect x="2.7256%" y="757" width="0.1009%" height="15" fill="rgb(250,127,30)" fg:x="135" fg:w="5"/><text x="2.9756%" y="767.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_mul (5 samples, 0.10%)</title><rect x="2.7256%" y="741" width="0.1009%" height="15" fill="rgb(230,49,44)" fg:x="135" fg:w="5"/><text x="2.9756%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.48%)</title><rect x="2.3824%" y="901" width="0.4846%" height="15" fill="rgb(229,67,23)" fg:x="118" fg:w="24"/><text x="2.6324%" y="911.50"></text></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize (21 samples, 0.42%)</title><rect x="2.4430%" y="885" width="0.4240%" height="15" fill="rgb(249,83,47)" fg:x="121" fg:w="21"/><text x="2.6930%" y="895.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (21 samples, 0.42%)</title><rect x="2.4430%" y="869" width="0.4240%" height="15" fill="rgb(215,43,3)" fg:x="121" fg:w="21"/><text x="2.6930%" y="879.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21 samples, 0.42%)</title><rect x="2.4430%" y="853" width="0.4240%" height="15" fill="rgb(238,154,13)" fg:x="121" fg:w="21"/><text x="2.6930%" y="863.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (14 samples, 0.28%)</title><rect x="2.5843%" y="837" width="0.2827%" height="15" fill="rgb(219,56,2)" fg:x="128" fg:w="14"/><text x="2.8343%" y="847.50"></text></g><g><title>&lt;&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize::Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_str (14 samples, 0.28%)</title><rect x="2.5843%" y="821" width="0.2827%" height="15" fill="rgb(233,0,4)" fg:x="128" fg:w="14"/><text x="2.8343%" y="831.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (14 samples, 0.28%)</title><rect x="2.5843%" y="805" width="0.2827%" height="15" fill="rgb(235,30,7)" fg:x="128" fg:w="14"/><text x="2.8343%" y="815.50"></text></g><g><title>core::num::from_str_radix (14 samples, 0.28%)</title><rect x="2.5843%" y="789" width="0.2827%" height="15" fill="rgb(250,79,13)" fg:x="128" fg:w="14"/><text x="2.8343%" y="799.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (2 samples, 0.04%)</title><rect x="2.8266%" y="773" width="0.0404%" height="15" fill="rgb(211,146,34)" fg:x="140" fg:w="2"/><text x="3.0766%" y="783.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (2 samples, 0.04%)</title><rect x="2.8266%" y="757" width="0.0404%" height="15" fill="rgb(228,22,38)" fg:x="140" fg:w="2"/><text x="3.0766%" y="767.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="2.8669%" y="885" width="0.0202%" height="15" fill="rgb(235,168,5)" fg:x="142" fg:w="1"/><text x="3.1169%" y="895.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (2 samples, 0.04%)</title><rect x="2.8871%" y="885" width="0.0404%" height="15" fill="rgb(221,155,16)" fg:x="143" fg:w="2"/><text x="3.1371%" y="895.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect x="2.9073%" y="869" width="0.0202%" height="15" fill="rgb(215,215,53)" fg:x="144" fg:w="1"/><text x="3.1573%" y="879.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect x="2.9073%" y="853" width="0.0202%" height="15" fill="rgb(223,4,10)" fg:x="144" fg:w="1"/><text x="3.1573%" y="863.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="2.9073%" y="837" width="0.0202%" height="15" fill="rgb(234,103,6)" fg:x="144" fg:w="1"/><text x="3.1573%" y="847.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="2.9073%" y="821" width="0.0202%" height="15" fill="rgb(227,97,0)" fg:x="144" fg:w="1"/><text x="3.1573%" y="831.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (3 samples, 0.06%)</title><rect x="2.9275%" y="869" width="0.0606%" height="15" fill="rgb(234,150,53)" fg:x="145" fg:w="3"/><text x="3.1775%" y="879.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (36 samples, 0.73%)</title><rect x="2.3218%" y="917" width="0.7268%" height="15" fill="rgb(228,201,54)" fg:x="115" fg:w="36"/><text x="2.5718%" y="927.50"></text></g><g><title>?? (9 samples, 0.18%)</title><rect x="2.8669%" y="901" width="0.1817%" height="15" fill="rgb(222,22,37)" fg:x="142" fg:w="9"/><text x="3.1169%" y="911.50"></text></g><g><title>sonic_rs::reader::Reader::next (6 samples, 0.12%)</title><rect x="2.9275%" y="885" width="0.1211%" height="15" fill="rgb(237,53,32)" fg:x="145" fg:w="6"/><text x="3.1775%" y="895.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="2.9881%" y="869" width="0.0606%" height="15" fill="rgb(233,25,53)" fg:x="148" fg:w="3"/><text x="3.2381%" y="879.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect x="2.9881%" y="853" width="0.0606%" height="15" fill="rgb(210,40,34)" fg:x="148" fg:w="3"/><text x="3.2381%" y="863.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect x="2.9881%" y="837" width="0.0606%" height="15" fill="rgb(241,220,44)" fg:x="148" fg:w="3"/><text x="3.2381%" y="847.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="3.0487%" y="853" width="0.0202%" height="15" fill="rgb(235,28,35)" fg:x="151" fg:w="1"/><text x="3.2987%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.06%)</title><rect x="3.1900%" y="837" width="0.0606%" height="15" fill="rgb(210,56,17)" fg:x="158" fg:w="3"/><text x="3.4400%" y="847.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for ()&gt;::deserialize (1 samples, 0.02%)</title><rect x="3.4121%" y="789" width="0.0202%" height="15" fill="rgb(224,130,29)" fg:x="169" fg:w="1"/><text x="3.6621%" y="799.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_unit (1 samples, 0.02%)</title><rect x="3.4121%" y="773" width="0.0202%" height="15" fill="rgb(235,212,8)" fg:x="169" fg:w="1"/><text x="3.6621%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="3.4121%" y="757" width="0.0202%" height="15" fill="rgb(223,33,50)" fg:x="169" fg:w="1"/><text x="3.6621%" y="767.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="3.4121%" y="741" width="0.0202%" height="15" fill="rgb(219,149,13)" fg:x="169" fg:w="1"/><text x="3.6621%" y="751.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="3.4121%" y="725" width="0.0202%" height="15" fill="rgb(250,156,29)" fg:x="169" fg:w="1"/><text x="3.6621%" y="735.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="3.4121%" y="709" width="0.0202%" height="15" fill="rgb(216,193,19)" fg:x="169" fg:w="1"/><text x="3.6621%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="3.4121%" y="693" width="0.0202%" height="15" fill="rgb(216,135,14)" fg:x="169" fg:w="1"/><text x="3.6621%" y="703.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="3.4726%" y="693" width="0.0202%" height="15" fill="rgb(241,47,5)" fg:x="172" fg:w="1"/><text x="3.7226%" y="703.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="3.4928%" y="693" width="0.0202%" height="15" fill="rgb(233,42,35)" fg:x="173" fg:w="1"/><text x="3.7428%" y="703.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="3.4726%" y="709" width="0.0606%" height="15" fill="rgb(231,13,6)" fg:x="172" fg:w="3"/><text x="3.7226%" y="719.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="3.5130%" y="693" width="0.0202%" height="15" fill="rgb(207,181,40)" fg:x="174" fg:w="1"/><text x="3.7630%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="3.5332%" y="709" width="0.0202%" height="15" fill="rgb(254,173,49)" fg:x="175" fg:w="1"/><text x="3.7832%" y="719.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="3.5534%" y="693" width="0.0202%" height="15" fill="rgb(221,1,38)" fg:x="176" fg:w="1"/><text x="3.8034%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="3.5534%" y="677" width="0.0202%" height="15" fill="rgb(206,124,46)" fg:x="176" fg:w="1"/><text x="3.8034%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="3.5534%" y="661" width="0.0202%" height="15" fill="rgb(249,21,11)" fg:x="176" fg:w="1"/><text x="3.8034%" y="671.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="3.5534%" y="645" width="0.0202%" height="15" fill="rgb(222,201,40)" fg:x="176" fg:w="1"/><text x="3.8034%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="3.5534%" y="629" width="0.0202%" height="15" fill="rgb(235,61,29)" fg:x="176" fg:w="1"/><text x="3.8034%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="3.5534%" y="613" width="0.0202%" height="15" fill="rgb(219,207,3)" fg:x="176" fg:w="1"/><text x="3.8034%" y="623.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="3.4726%" y="741" width="0.1413%" height="15" fill="rgb(222,56,46)" fg:x="172" fg:w="7"/><text x="3.7226%" y="751.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="3.4726%" y="725" width="0.1413%" height="15" fill="rgb(239,76,54)" fg:x="172" fg:w="7"/><text x="3.7226%" y="735.50"></text></g><g><title>sonic_rs::util::string::parse_valid_escaped_string (3 samples, 0.06%)</title><rect x="3.5534%" y="709" width="0.0606%" height="15" fill="rgb(231,124,27)" fg:x="176" fg:w="3"/><text x="3.8034%" y="719.50"></text></g><g><title>sonic_rs::util::string::parse_string_unchecked (2 samples, 0.04%)</title><rect x="3.5736%" y="693" width="0.0404%" height="15" fill="rgb(249,195,6)" fg:x="177" fg:w="2"/><text x="3.8236%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="3.6140%" y="741" width="0.0606%" height="15" fill="rgb(237,174,47)" fg:x="179" fg:w="3"/><text x="3.8640%" y="751.50"></text></g><g><title>_rjem_je_ecache_alloc (2 samples, 0.04%)</title><rect x="3.6947%" y="261" width="0.0404%" height="15" fill="rgb(206,201,31)" fg:x="183" fg:w="2"/><text x="3.9447%" y="271.50"></text></g><g><title>extent_recycle (2 samples, 0.04%)</title><rect x="3.6947%" y="245" width="0.0404%" height="15" fill="rgb(231,57,52)" fg:x="183" fg:w="2"/><text x="3.9447%" y="255.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="3.7149%" y="229" width="0.0202%" height="15" fill="rgb(248,177,22)" fg:x="184" fg:w="1"/><text x="3.9649%" y="239.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="3.7149%" y="213" width="0.0202%" height="15" fill="rgb(215,211,37)" fg:x="184" fg:w="1"/><text x="3.9649%" y="223.50"></text></g><g><title>_rjem_je_emap_update_edata_state (1 samples, 0.02%)</title><rect x="3.7149%" y="197" width="0.0202%" height="15" fill="rgb(241,128,51)" fg:x="184" fg:w="1"/><text x="3.9649%" y="207.50"></text></g><g><title>rtree_leaf_elm_state_update (1 samples, 0.02%)</title><rect x="3.7149%" y="181" width="0.0202%" height="15" fill="rgb(227,165,31)" fg:x="184" fg:w="1"/><text x="3.9649%" y="191.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="3.7351%" y="197" width="0.0202%" height="15" fill="rgb(228,167,24)" fg:x="185" fg:w="1"/><text x="3.9851%" y="207.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="3.7351%" y="181" width="0.0202%" height="15" fill="rgb(228,143,12)" fg:x="185" fg:w="1"/><text x="3.9851%" y="191.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="3.7351%" y="165" width="0.0202%" height="15" fill="rgb(249,149,8)" fg:x="185" fg:w="1"/><text x="3.9851%" y="175.50"></text></g><g><title>_rjem_je_malloc_default (4 samples, 0.08%)</title><rect x="3.6947%" y="485" width="0.0808%" height="15" fill="rgb(243,35,44)" fg:x="183" fg:w="4"/><text x="3.9447%" y="495.50"></text></g><g><title>imalloc (4 samples, 0.08%)</title><rect x="3.6947%" y="469" width="0.0808%" height="15" fill="rgb(246,89,9)" fg:x="183" fg:w="4"/><text x="3.9447%" y="479.50"></text></g><g><title>imalloc_body (4 samples, 0.08%)</title><rect x="3.6947%" y="453" width="0.0808%" height="15" fill="rgb(233,213,13)" fg:x="183" fg:w="4"/><text x="3.9447%" y="463.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.08%)</title><rect x="3.6947%" y="437" width="0.0808%" height="15" fill="rgb(233,141,41)" fg:x="183" fg:w="4"/><text x="3.9447%" y="447.50"></text></g><g><title>iallocztm (4 samples, 0.08%)</title><rect x="3.6947%" y="421" width="0.0808%" height="15" fill="rgb(239,167,4)" fg:x="183" fg:w="4"/><text x="3.9447%" y="431.50"></text></g><g><title>arena_malloc (4 samples, 0.08%)</title><rect x="3.6947%" y="405" width="0.0808%" height="15" fill="rgb(209,217,16)" fg:x="183" fg:w="4"/><text x="3.9447%" y="415.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.08%)</title><rect x="3.6947%" y="389" width="0.0808%" height="15" fill="rgb(219,88,35)" fg:x="183" fg:w="4"/><text x="3.9447%" y="399.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (4 samples, 0.08%)</title><rect x="3.6947%" y="373" width="0.0808%" height="15" fill="rgb(220,193,23)" fg:x="183" fg:w="4"/><text x="3.9447%" y="383.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (4 samples, 0.08%)</title><rect x="3.6947%" y="357" width="0.0808%" height="15" fill="rgb(230,90,52)" fg:x="183" fg:w="4"/><text x="3.9447%" y="367.50"></text></g><g><title>arena_slab_alloc (4 samples, 0.08%)</title><rect x="3.6947%" y="341" width="0.0808%" height="15" fill="rgb(252,106,19)" fg:x="183" fg:w="4"/><text x="3.9447%" y="351.50"></text></g><g><title>_rjem_je_pa_alloc (4 samples, 0.08%)</title><rect x="3.6947%" y="325" width="0.0808%" height="15" fill="rgb(206,74,20)" fg:x="183" fg:w="4"/><text x="3.9447%" y="335.50"></text></g><g><title>pai_alloc (4 samples, 0.08%)</title><rect x="3.6947%" y="309" width="0.0808%" height="15" fill="rgb(230,138,44)" fg:x="183" fg:w="4"/><text x="3.9447%" y="319.50"></text></g><g><title>pac_alloc_impl (4 samples, 0.08%)</title><rect x="3.6947%" y="293" width="0.0808%" height="15" fill="rgb(235,182,43)" fg:x="183" fg:w="4"/><text x="3.9447%" y="303.50"></text></g><g><title>pac_alloc_real (4 samples, 0.08%)</title><rect x="3.6947%" y="277" width="0.0808%" height="15" fill="rgb(242,16,51)" fg:x="183" fg:w="4"/><text x="3.9447%" y="287.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (2 samples, 0.04%)</title><rect x="3.7351%" y="261" width="0.0404%" height="15" fill="rgb(248,9,4)" fg:x="185" fg:w="2"/><text x="3.9851%" y="271.50"></text></g><g><title>extent_alloc_retained (2 samples, 0.04%)</title><rect x="3.7351%" y="245" width="0.0404%" height="15" fill="rgb(210,31,22)" fg:x="185" fg:w="2"/><text x="3.9851%" y="255.50"></text></g><g><title>extent_recycle (2 samples, 0.04%)</title><rect x="3.7351%" y="229" width="0.0404%" height="15" fill="rgb(239,54,39)" fg:x="185" fg:w="2"/><text x="3.9851%" y="239.50"></text></g><g><title>extent_recycle_split (2 samples, 0.04%)</title><rect x="3.7351%" y="213" width="0.0404%" height="15" fill="rgb(230,99,41)" fg:x="185" fg:w="2"/><text x="3.9851%" y="223.50"></text></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect x="3.7553%" y="197" width="0.0202%" height="15" fill="rgb(253,106,12)" fg:x="186" fg:w="1"/><text x="4.0053%" y="207.50"></text></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect x="3.7553%" y="181" width="0.0202%" height="15" fill="rgb(213,46,41)" fg:x="186" fg:w="1"/><text x="4.0053%" y="191.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect x="3.7553%" y="165" width="0.0202%" height="15" fill="rgb(215,133,35)" fg:x="186" fg:w="1"/><text x="4.0053%" y="175.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="3.7553%" y="149" width="0.0202%" height="15" fill="rgb(213,28,5)" fg:x="186" fg:w="1"/><text x="4.0053%" y="159.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="3.7553%" y="133" width="0.0202%" height="15" fill="rgb(215,77,49)" fg:x="186" fg:w="1"/><text x="4.0053%" y="143.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="3.7553%" y="117" width="0.0202%" height="15" fill="rgb(248,100,22)" fg:x="186" fg:w="1"/><text x="4.0053%" y="127.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="3.7553%" y="101" width="0.0202%" height="15" fill="rgb(208,67,9)" fg:x="186" fg:w="1"/><text x="4.0053%" y="111.50"></text></g><g><title>phn_merge (1 samples, 0.02%)</title><rect x="3.7553%" y="85" width="0.0202%" height="15" fill="rgb(219,133,21)" fg:x="186" fg:w="1"/><text x="4.0053%" y="95.50"></text></g><g><title>phn_merge_ordered (1 samples, 0.02%)</title><rect x="3.7553%" y="69" width="0.0202%" height="15" fill="rgb(246,46,29)" fg:x="186" fg:w="1"/><text x="4.0053%" y="79.50"></text></g><g><title>phn_lchild_set (1 samples, 0.02%)</title><rect x="3.7553%" y="53" width="0.0202%" height="15" fill="rgb(246,185,52)" fg:x="186" fg:w="1"/><text x="4.0053%" y="63.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (19 samples, 0.38%)</title><rect x="3.4323%" y="789" width="0.3836%" height="15" fill="rgb(252,136,11)" fg:x="170" fg:w="19"/><text x="3.6823%" y="799.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (17 samples, 0.34%)</title><rect x="3.4726%" y="773" width="0.3432%" height="15" fill="rgb(219,138,53)" fg:x="172" fg:w="17"/><text x="3.7226%" y="783.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (17 samples, 0.34%)</title><rect x="3.4726%" y="757" width="0.3432%" height="15" fill="rgb(211,51,23)" fg:x="172" fg:w="17"/><text x="3.7226%" y="767.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (7 samples, 0.14%)</title><rect x="3.6745%" y="741" width="0.1413%" height="15" fill="rgb(247,221,28)" fg:x="182" fg:w="7"/><text x="3.9245%" y="751.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (7 samples, 0.14%)</title><rect x="3.6745%" y="725" width="0.1413%" height="15" fill="rgb(251,222,45)" fg:x="182" fg:w="7"/><text x="3.9245%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (7 samples, 0.14%)</title><rect x="3.6745%" y="709" width="0.1413%" height="15" fill="rgb(217,162,53)" fg:x="182" fg:w="7"/><text x="3.9245%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (7 samples, 0.14%)</title><rect x="3.6745%" y="693" width="0.1413%" height="15" fill="rgb(229,93,14)" fg:x="182" fg:w="7"/><text x="3.9245%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.14%)</title><rect x="3.6745%" y="677" width="0.1413%" height="15" fill="rgb(209,67,49)" fg:x="182" fg:w="7"/><text x="3.9245%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.14%)</title><rect x="3.6745%" y="661" width="0.1413%" height="15" fill="rgb(213,87,29)" fg:x="182" fg:w="7"/><text x="3.9245%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.14%)</title><rect x="3.6745%" y="645" width="0.1413%" height="15" fill="rgb(205,151,52)" fg:x="182" fg:w="7"/><text x="3.9245%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.14%)</title><rect x="3.6745%" y="629" width="0.1413%" height="15" fill="rgb(253,215,39)" fg:x="182" fg:w="7"/><text x="3.9245%" y="639.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="3.6745%" y="613" width="0.1413%" height="15" fill="rgb(221,220,41)" fg:x="182" fg:w="7"/><text x="3.9245%" y="623.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="3.6745%" y="597" width="0.1413%" height="15" fill="rgb(218,133,21)" fg:x="182" fg:w="7"/><text x="3.9245%" y="607.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="3.6745%" y="581" width="0.1413%" height="15" fill="rgb(221,193,43)" fg:x="182" fg:w="7"/><text x="3.9245%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.14%)</title><rect x="3.6745%" y="565" width="0.1413%" height="15" fill="rgb(240,128,52)" fg:x="182" fg:w="7"/><text x="3.9245%" y="575.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="3.6745%" y="549" width="0.1413%" height="15" fill="rgb(253,114,12)" fg:x="182" fg:w="7"/><text x="3.9245%" y="559.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.14%)</title><rect x="3.6745%" y="533" width="0.1413%" height="15" fill="rgb(215,223,47)" fg:x="182" fg:w="7"/><text x="3.9245%" y="543.50"></text></g><g><title>__rust_alloc (7 samples, 0.14%)</title><rect x="3.6745%" y="517" width="0.1413%" height="15" fill="rgb(248,225,23)" fg:x="182" fg:w="7"/><text x="3.9245%" y="527.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.14%)</title><rect x="3.6745%" y="501" width="0.1413%" height="15" fill="rgb(250,108,0)" fg:x="182" fg:w="7"/><text x="3.9245%" y="511.50"></text></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect x="3.7755%" y="485" width="0.0404%" height="15" fill="rgb(228,208,7)" fg:x="187" fg:w="2"/><text x="4.0255%" y="495.50"></text></g><g><title>imalloc_fastpath (2 samples, 0.04%)</title><rect x="3.7755%" y="469" width="0.0404%" height="15" fill="rgb(244,45,10)" fg:x="187" fg:w="2"/><text x="4.0255%" y="479.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.04%)</title><rect x="3.7755%" y="453" width="0.0404%" height="15" fill="rgb(207,125,25)" fg:x="187" fg:w="2"/><text x="4.0255%" y="463.50"></text></g><g><title>cache_bin_alloc_impl (2 samples, 0.04%)</title><rect x="3.7755%" y="437" width="0.0404%" height="15" fill="rgb(210,195,18)" fg:x="187" fg:w="2"/><text x="4.0255%" y="447.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="3.8562%" y="757" width="0.0202%" height="15" fill="rgb(249,80,12)" fg:x="191" fg:w="1"/><text x="4.1062%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="4.0178%" y="693" width="0.0202%" height="15" fill="rgb(221,65,9)" fg:x="199" fg:w="1"/><text x="4.2678%" y="703.50"></text></g><g><title>core::cmp::max (3 samples, 0.06%)</title><rect x="4.0380%" y="693" width="0.0606%" height="15" fill="rgb(235,49,36)" fg:x="200" fg:w="3"/><text x="4.2880%" y="703.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.06%)</title><rect x="4.0380%" y="677" width="0.0606%" height="15" fill="rgb(225,32,20)" fg:x="200" fg:w="3"/><text x="4.2880%" y="687.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.06%)</title><rect x="4.0380%" y="661" width="0.0606%" height="15" fill="rgb(215,141,46)" fg:x="200" fg:w="3"/><text x="4.2880%" y="671.50"></text></g><g><title>?? (6 samples, 0.12%)</title><rect x="4.0178%" y="709" width="0.1211%" height="15" fill="rgb(250,160,47)" fg:x="199" fg:w="6"/><text x="4.2678%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.04%)</title><rect x="4.0985%" y="693" width="0.0404%" height="15" fill="rgb(216,222,40)" fg:x="203" fg:w="2"/><text x="4.3485%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.04%)</title><rect x="4.0985%" y="677" width="0.0404%" height="15" fill="rgb(234,217,39)" fg:x="203" fg:w="2"/><text x="4.3485%" y="687.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (2 samples, 0.04%)</title><rect x="4.2802%" y="549" width="0.0404%" height="15" fill="rgb(207,178,40)" fg:x="212" fg:w="2"/><text x="4.5302%" y="559.50"></text></g><g><title>edata_usize_get (2 samples, 0.04%)</title><rect x="4.2802%" y="533" width="0.0404%" height="15" fill="rgb(221,136,13)" fg:x="212" fg:w="2"/><text x="4.5302%" y="543.50"></text></g><g><title>sz_index2size (2 samples, 0.04%)</title><rect x="4.2802%" y="517" width="0.0404%" height="15" fill="rgb(249,199,10)" fg:x="212" fg:w="2"/><text x="4.5302%" y="527.50"></text></g><g><title>sz_index2size_lookup (2 samples, 0.04%)</title><rect x="4.2802%" y="501" width="0.0404%" height="15" fill="rgb(249,222,13)" fg:x="212" fg:w="2"/><text x="4.5302%" y="511.50"></text></g><g><title>sz_index2size_lookup_impl (2 samples, 0.04%)</title><rect x="4.2802%" y="485" width="0.0404%" height="15" fill="rgb(244,185,38)" fg:x="212" fg:w="2"/><text x="4.5302%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.08%)</title><rect x="4.2600%" y="677" width="0.0808%" height="15" fill="rgb(236,202,9)" fg:x="211" fg:w="4"/><text x="4.5100%" y="687.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="4.2600%" y="661" width="0.0808%" height="15" fill="rgb(250,229,37)" fg:x="211" fg:w="4"/><text x="4.5100%" y="671.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.08%)</title><rect x="4.2600%" y="645" width="0.0808%" height="15" fill="rgb(206,174,23)" fg:x="211" fg:w="4"/><text x="4.5100%" y="655.50"></text></g><g><title>__rust_realloc (4 samples, 0.08%)</title><rect x="4.2600%" y="629" width="0.0808%" height="15" fill="rgb(211,33,43)" fg:x="211" fg:w="4"/><text x="4.5100%" y="639.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (4 samples, 0.08%)</title><rect x="4.2600%" y="613" width="0.0808%" height="15" fill="rgb(245,58,50)" fg:x="211" fg:w="4"/><text x="4.5100%" y="623.50"></text></g><g><title>do_rallocx (4 samples, 0.08%)</title><rect x="4.2600%" y="597" width="0.0808%" height="15" fill="rgb(244,68,36)" fg:x="211" fg:w="4"/><text x="4.5100%" y="607.50"></text></g><g><title>iralloct (4 samples, 0.08%)</title><rect x="4.2600%" y="581" width="0.0808%" height="15" fill="rgb(232,229,15)" fg:x="211" fg:w="4"/><text x="4.5100%" y="591.50"></text></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.08%)</title><rect x="4.2600%" y="565" width="0.0808%" height="15" fill="rgb(254,30,23)" fg:x="211" fg:w="4"/><text x="4.5100%" y="575.50"></text></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect x="4.3206%" y="549" width="0.0202%" height="15" fill="rgb(235,160,14)" fg:x="214" fg:w="1"/><text x="4.5706%" y="559.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect x="4.3206%" y="533" width="0.0202%" height="15" fill="rgb(212,155,44)" fg:x="214" fg:w="1"/><text x="4.5706%" y="543.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="4.3206%" y="517" width="0.0202%" height="15" fill="rgb(226,2,50)" fg:x="214" fg:w="1"/><text x="4.5706%" y="527.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect x="4.3206%" y="501" width="0.0202%" height="15" fill="rgb(234,177,6)" fg:x="214" fg:w="1"/><text x="4.5706%" y="511.50"></text></g><g><title>_rjem_je_arena_bin_choose (1 samples, 0.02%)</title><rect x="4.3610%" y="533" width="0.0202%" height="15" fill="rgb(217,24,9)" fg:x="216" fg:w="1"/><text x="4.6110%" y="543.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="4.3610%" y="517" width="0.0202%" height="15" fill="rgb(220,13,46)" fg:x="216" fg:w="1"/><text x="4.6110%" y="527.50"></text></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (1 samples, 0.02%)</title><rect x="4.3812%" y="533" width="0.0202%" height="15" fill="rgb(239,221,27)" fg:x="217" fg:w="1"/><text x="4.6312%" y="543.50"></text></g><g><title>arena_bin_slabs_full_insert (1 samples, 0.02%)</title><rect x="4.3812%" y="517" width="0.0202%" height="15" fill="rgb(222,198,25)" fg:x="217" fg:w="1"/><text x="4.6312%" y="527.50"></text></g><g><title>arena_is_auto (1 samples, 0.02%)</title><rect x="4.3812%" y="501" width="0.0202%" height="15" fill="rgb(211,99,13)" fg:x="217" fg:w="1"/><text x="4.6312%" y="511.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="4.4014%" y="405" width="0.0202%" height="15" fill="rgb(232,111,31)" fg:x="218" fg:w="1"/><text x="4.6514%" y="415.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.02%)</title><rect x="4.4014%" y="389" width="0.0202%" height="15" fill="rgb(245,82,37)" fg:x="218" fg:w="1"/><text x="4.6514%" y="399.50"></text></g><g><title>arena_slab_alloc (3 samples, 0.06%)</title><rect x="4.4014%" y="533" width="0.0606%" height="15" fill="rgb(227,149,46)" fg:x="218" fg:w="3"/><text x="4.6514%" y="543.50"></text></g><g><title>_rjem_je_pa_alloc (3 samples, 0.06%)</title><rect x="4.4014%" y="517" width="0.0606%" height="15" fill="rgb(218,36,50)" fg:x="218" fg:w="3"/><text x="4.6514%" y="527.50"></text></g><g><title>pai_alloc (3 samples, 0.06%)</title><rect x="4.4014%" y="501" width="0.0606%" height="15" fill="rgb(226,80,48)" fg:x="218" fg:w="3"/><text x="4.6514%" y="511.50"></text></g><g><title>pac_alloc_impl (3 samples, 0.06%)</title><rect x="4.4014%" y="485" width="0.0606%" height="15" fill="rgb(238,224,15)" fg:x="218" fg:w="3"/><text x="4.6514%" y="495.50"></text></g><g><title>pac_alloc_real (3 samples, 0.06%)</title><rect x="4.4014%" y="469" width="0.0606%" height="15" fill="rgb(241,136,10)" fg:x="218" fg:w="3"/><text x="4.6514%" y="479.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (3 samples, 0.06%)</title><rect x="4.4014%" y="453" width="0.0606%" height="15" fill="rgb(208,32,45)" fg:x="218" fg:w="3"/><text x="4.6514%" y="463.50"></text></g><g><title>extent_alloc_retained (3 samples, 0.06%)</title><rect x="4.4014%" y="437" width="0.0606%" height="15" fill="rgb(207,135,9)" fg:x="218" fg:w="3"/><text x="4.6514%" y="447.50"></text></g><g><title>extent_recycle (3 samples, 0.06%)</title><rect x="4.4014%" y="421" width="0.0606%" height="15" fill="rgb(206,86,44)" fg:x="218" fg:w="3"/><text x="4.6514%" y="431.50"></text></g><g><title>extent_recycle_split (2 samples, 0.04%)</title><rect x="4.4216%" y="405" width="0.0404%" height="15" fill="rgb(245,177,15)" fg:x="219" fg:w="2"/><text x="4.6716%" y="415.50"></text></g><g><title>extent_split_interior (2 samples, 0.04%)</title><rect x="4.4216%" y="389" width="0.0404%" height="15" fill="rgb(206,64,50)" fg:x="219" fg:w="2"/><text x="4.6716%" y="399.50"></text></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect x="4.4418%" y="373" width="0.0202%" height="15" fill="rgb(234,36,40)" fg:x="220" fg:w="1"/><text x="4.6918%" y="383.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect x="4.4418%" y="357" width="0.0202%" height="15" fill="rgb(213,64,8)" fg:x="220" fg:w="1"/><text x="4.6918%" y="367.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="4.4418%" y="341" width="0.0202%" height="15" fill="rgb(210,75,36)" fg:x="220" fg:w="1"/><text x="4.6918%" y="351.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="4.4418%" y="325" width="0.0202%" height="15" fill="rgb(229,88,21)" fg:x="220" fg:w="1"/><text x="4.6918%" y="335.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="4.4418%" y="309" width="0.0202%" height="15" fill="rgb(252,204,47)" fg:x="220" fg:w="1"/><text x="4.6918%" y="319.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="4.4418%" y="293" width="0.0202%" height="15" fill="rgb(208,77,27)" fg:x="220" fg:w="1"/><text x="4.6918%" y="303.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="4.4619%" y="517" width="0.0202%" height="15" fill="rgb(221,76,26)" fg:x="221" fg:w="1"/><text x="4.7119%" y="527.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="4.4619%" y="501" width="0.0202%" height="15" fill="rgb(225,139,18)" fg:x="221" fg:w="1"/><text x="4.7119%" y="511.50"></text></g><g><title>_rjem_je_malloc_default (8 samples, 0.16%)</title><rect x="4.3408%" y="677" width="0.1615%" height="15" fill="rgb(230,137,11)" fg:x="215" fg:w="8"/><text x="4.5908%" y="687.50"></text></g><g><title>imalloc (7 samples, 0.14%)</title><rect x="4.3610%" y="661" width="0.1413%" height="15" fill="rgb(212,28,1)" fg:x="216" fg:w="7"/><text x="4.6110%" y="671.50"></text></g><g><title>imalloc_body (7 samples, 0.14%)</title><rect x="4.3610%" y="645" width="0.1413%" height="15" fill="rgb(248,164,17)" fg:x="216" fg:w="7"/><text x="4.6110%" y="655.50"></text></g><g><title>imalloc_no_sample (7 samples, 0.14%)</title><rect x="4.3610%" y="629" width="0.1413%" height="15" fill="rgb(222,171,42)" fg:x="216" fg:w="7"/><text x="4.6110%" y="639.50"></text></g><g><title>iallocztm (7 samples, 0.14%)</title><rect x="4.3610%" y="613" width="0.1413%" height="15" fill="rgb(243,84,45)" fg:x="216" fg:w="7"/><text x="4.6110%" y="623.50"></text></g><g><title>arena_malloc (7 samples, 0.14%)</title><rect x="4.3610%" y="597" width="0.1413%" height="15" fill="rgb(252,49,23)" fg:x="216" fg:w="7"/><text x="4.6110%" y="607.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.14%)</title><rect x="4.3610%" y="581" width="0.1413%" height="15" fill="rgb(215,19,7)" fg:x="216" fg:w="7"/><text x="4.6110%" y="591.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (7 samples, 0.14%)</title><rect x="4.3610%" y="565" width="0.1413%" height="15" fill="rgb(238,81,41)" fg:x="216" fg:w="7"/><text x="4.6110%" y="575.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (7 samples, 0.14%)</title><rect x="4.3610%" y="549" width="0.1413%" height="15" fill="rgb(210,199,37)" fg:x="216" fg:w="7"/><text x="4.6110%" y="559.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.04%)</title><rect x="4.4619%" y="533" width="0.0404%" height="15" fill="rgb(244,192,49)" fg:x="221" fg:w="2"/><text x="4.7119%" y="543.50"></text></g><g><title>mutex_owner_stats_update (1 samples, 0.02%)</title><rect x="4.4821%" y="517" width="0.0202%" height="15" fill="rgb(226,211,11)" fg:x="222" fg:w="1"/><text x="4.7321%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (32 samples, 0.65%)</title><rect x="3.9774%" y="741" width="0.6461%" height="15" fill="rgb(236,162,54)" fg:x="197" fg:w="32"/><text x="4.2274%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (30 samples, 0.61%)</title><rect x="4.0178%" y="725" width="0.6057%" height="15" fill="rgb(220,229,9)" fg:x="199" fg:w="30"/><text x="4.2678%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (24 samples, 0.48%)</title><rect x="4.1389%" y="709" width="0.4846%" height="15" fill="rgb(250,87,22)" fg:x="205" fg:w="24"/><text x="4.3889%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.38%)</title><rect x="4.2399%" y="693" width="0.3836%" height="15" fill="rgb(239,43,17)" fg:x="210" fg:w="19"/><text x="4.4899%" y="703.50"></text></g><g><title>_rjem_malloc (6 samples, 0.12%)</title><rect x="4.5023%" y="677" width="0.1211%" height="15" fill="rgb(231,177,25)" fg:x="223" fg:w="6"/><text x="4.7523%" y="687.50"></text></g><g><title>imalloc_fastpath (5 samples, 0.10%)</title><rect x="4.5225%" y="661" width="0.1009%" height="15" fill="rgb(219,179,1)" fg:x="224" fg:w="5"/><text x="4.7725%" y="671.50"></text></g><g><title>cache_bin_alloc_easy (4 samples, 0.08%)</title><rect x="4.5427%" y="645" width="0.0808%" height="15" fill="rgb(238,219,53)" fg:x="225" fg:w="4"/><text x="4.7927%" y="655.50"></text></g><g><title>cache_bin_alloc_impl (4 samples, 0.08%)</title><rect x="4.5427%" y="629" width="0.0808%" height="15" fill="rgb(232,167,36)" fg:x="225" fg:w="4"/><text x="4.7927%" y="639.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="4.8052%" y="693" width="0.0202%" height="15" fill="rgb(244,19,51)" fg:x="238" fg:w="1"/><text x="5.0552%" y="703.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::set_index (1 samples, 0.02%)</title><rect x="4.8254%" y="693" width="0.0202%" height="15" fill="rgb(224,6,22)" fg:x="239" fg:w="1"/><text x="5.0754%" y="703.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (4 samples, 0.08%)</title><rect x="4.8455%" y="677" width="0.0808%" height="15" fill="rgb(224,145,5)" fg:x="240" fg:w="4"/><text x="5.0955%" y="687.50"></text></g><g><title>sonic_rs::reader::Reader::next (5 samples, 0.10%)</title><rect x="4.8455%" y="693" width="0.1009%" height="15" fill="rgb(234,130,49)" fg:x="240" fg:w="5"/><text x="5.0955%" y="703.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="4.9263%" y="677" width="0.0202%" height="15" fill="rgb(254,6,2)" fg:x="244" fg:w="1"/><text x="5.1763%" y="687.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="4.9263%" y="661" width="0.0202%" height="15" fill="rgb(208,96,46)" fg:x="244" fg:w="1"/><text x="5.1763%" y="671.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="4.9263%" y="645" width="0.0202%" height="15" fill="rgb(239,3,39)" fg:x="244" fg:w="1"/><text x="5.1763%" y="655.50"></text></g><g><title>?? (9 samples, 0.18%)</title><rect x="4.8052%" y="709" width="0.1817%" height="15" fill="rgb(233,210,1)" fg:x="238" fg:w="9"/><text x="5.0552%" y="719.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect x="4.9465%" y="693" width="0.0404%" height="15" fill="rgb(244,137,37)" fg:x="245" fg:w="2"/><text x="5.1965%" y="703.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.04%)</title><rect x="4.9465%" y="677" width="0.0404%" height="15" fill="rgb(240,136,2)" fg:x="245" fg:w="2"/><text x="5.1965%" y="687.50"></text></g><g><title>serde::de::SeqAccess::next_element (12 samples, 0.24%)</title><rect x="4.9869%" y="709" width="0.2423%" height="15" fill="rgb(239,18,37)" fg:x="247" fg:w="12"/><text x="5.2369%" y="719.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (1 samples, 0.02%)</title><rect x="5.3301%" y="645" width="0.0202%" height="15" fill="rgb(218,185,22)" fg:x="264" fg:w="1"/><text x="5.5801%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="5.3503%" y="645" width="0.0202%" height="15" fill="rgb(225,218,4)" fg:x="265" fg:w="1"/><text x="5.6003%" y="655.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="5.3705%" y="629" width="0.0202%" height="15" fill="rgb(230,182,32)" fg:x="266" fg:w="1"/><text x="5.6205%" y="639.50"></text></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect x="5.3705%" y="645" width="0.0404%" height="15" fill="rgb(242,56,43)" fg:x="266" fg:w="2"/><text x="5.6205%" y="655.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="5.3907%" y="629" width="0.0202%" height="15" fill="rgb(233,99,24)" fg:x="267" fg:w="1"/><text x="5.6407%" y="639.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="5.3907%" y="613" width="0.0202%" height="15" fill="rgb(234,209,42)" fg:x="267" fg:w="1"/><text x="5.6407%" y="623.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="5.3907%" y="597" width="0.0202%" height="15" fill="rgb(227,7,12)" fg:x="267" fg:w="1"/><text x="5.6407%" y="607.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect x="5.4109%" y="645" width="0.0404%" height="15" fill="rgb(245,203,43)" fg:x="268" fg:w="2"/><text x="5.6609%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.04%)</title><rect x="5.4109%" y="629" width="0.0404%" height="15" fill="rgb(238,205,33)" fg:x="268" fg:w="2"/><text x="5.6609%" y="639.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (4 samples, 0.08%)</title><rect x="5.5522%" y="629" width="0.0808%" height="15" fill="rgb(231,56,7)" fg:x="275" fg:w="4"/><text x="5.8022%" y="639.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (4 samples, 0.08%)</title><rect x="5.5522%" y="613" width="0.0808%" height="15" fill="rgb(244,186,29)" fg:x="275" fg:w="4"/><text x="5.8022%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (6 samples, 0.12%)</title><rect x="5.6329%" y="629" width="0.1211%" height="15" fill="rgb(234,111,31)" fg:x="279" fg:w="6"/><text x="5.8829%" y="639.50"></text></g><g><title>?? (29 samples, 0.59%)</title><rect x="5.3301%" y="661" width="0.5855%" height="15" fill="rgb(241,149,10)" fg:x="264" fg:w="29"/><text x="5.5801%" y="671.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (23 samples, 0.46%)</title><rect x="5.4512%" y="645" width="0.4644%" height="15" fill="rgb(249,206,44)" fg:x="270" fg:w="23"/><text x="5.7012%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (8 samples, 0.16%)</title><rect x="5.7541%" y="629" width="0.1615%" height="15" fill="rgb(251,153,30)" fg:x="285" fg:w="8"/><text x="6.0041%" y="639.50"></text></g><g><title>?? (39 samples, 0.79%)</title><rect x="5.3301%" y="677" width="0.7874%" height="15" fill="rgb(239,152,38)" fg:x="264" fg:w="39"/><text x="5.5801%" y="687.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (10 samples, 0.20%)</title><rect x="5.9156%" y="661" width="0.2019%" height="15" fill="rgb(249,139,47)" fg:x="293" fg:w="10"/><text x="6.1656%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (117 samples, 2.36%)</title><rect x="3.8159%" y="789" width="2.3622%" height="15" fill="rgb(244,64,35)" fg:x="189" fg:w="117"/><text x="4.0659%" y="799.50">se..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (117 samples, 2.36%)</title><rect x="3.8159%" y="773" width="2.3622%" height="15" fill="rgb(216,46,15)" fg:x="189" fg:w="117"/><text x="4.0659%" y="783.50">&lt;&amp;..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (114 samples, 2.30%)</title><rect x="3.8764%" y="757" width="2.3016%" height="15" fill="rgb(250,74,19)" fg:x="192" fg:w="114"/><text x="4.1264%" y="767.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (77 samples, 1.55%)</title><rect x="4.6235%" y="741" width="1.5546%" height="15" fill="rgb(249,42,33)" fg:x="229" fg:w="77"/><text x="4.8735%" y="751.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (76 samples, 1.53%)</title><rect x="4.6437%" y="725" width="1.5344%" height="15" fill="rgb(242,149,17)" fg:x="230" fg:w="76"/><text x="4.8937%" y="735.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (47 samples, 0.95%)</title><rect x="5.2292%" y="709" width="0.9489%" height="15" fill="rgb(244,29,21)" fg:x="259" fg:w="47"/><text x="5.4792%" y="719.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (42 samples, 0.85%)</title><rect x="5.3301%" y="693" width="0.8480%" height="15" fill="rgb(220,130,37)" fg:x="264" fg:w="42"/><text x="5.5801%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (3 samples, 0.06%)</title><rect x="6.1175%" y="677" width="0.0606%" height="15" fill="rgb(211,67,2)" fg:x="303" fg:w="3"/><text x="6.3675%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="6.1781%" y="741" width="0.0202%" height="15" fill="rgb(235,68,52)" fg:x="306" fg:w="1"/><text x="6.4281%" y="751.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="6.2588%" y="693" width="0.0202%" height="15" fill="rgb(246,142,3)" fg:x="310" fg:w="1"/><text x="6.5088%" y="703.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="6.2588%" y="677" width="0.0202%" height="15" fill="rgb(241,25,7)" fg:x="310" fg:w="1"/><text x="6.5088%" y="687.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="6.2588%" y="661" width="0.0202%" height="15" fill="rgb(242,119,39)" fg:x="310" fg:w="1"/><text x="6.5088%" y="671.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="6.2588%" y="645" width="0.0202%" height="15" fill="rgb(241,98,45)" fg:x="310" fg:w="1"/><text x="6.5088%" y="655.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="6.2790%" y="293" width="0.0202%" height="15" fill="rgb(254,28,30)" fg:x="311" fg:w="1"/><text x="6.5290%" y="303.50"></text></g><g><title>_rjem_je_malloc_default (2 samples, 0.04%)</title><rect x="6.2790%" y="437" width="0.0404%" height="15" fill="rgb(241,142,54)" fg:x="311" fg:w="2"/><text x="6.5290%" y="447.50"></text></g><g><title>imalloc (2 samples, 0.04%)</title><rect x="6.2790%" y="421" width="0.0404%" height="15" fill="rgb(222,85,15)" fg:x="311" fg:w="2"/><text x="6.5290%" y="431.50"></text></g><g><title>imalloc_body (2 samples, 0.04%)</title><rect x="6.2790%" y="405" width="0.0404%" height="15" fill="rgb(210,85,47)" fg:x="311" fg:w="2"/><text x="6.5290%" y="415.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.04%)</title><rect x="6.2790%" y="389" width="0.0404%" height="15" fill="rgb(224,206,25)" fg:x="311" fg:w="2"/><text x="6.5290%" y="399.50"></text></g><g><title>iallocztm (2 samples, 0.04%)</title><rect x="6.2790%" y="373" width="0.0404%" height="15" fill="rgb(243,201,19)" fg:x="311" fg:w="2"/><text x="6.5290%" y="383.50"></text></g><g><title>arena_malloc (2 samples, 0.04%)</title><rect x="6.2790%" y="357" width="0.0404%" height="15" fill="rgb(236,59,4)" fg:x="311" fg:w="2"/><text x="6.5290%" y="367.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.04%)</title><rect x="6.2790%" y="341" width="0.0404%" height="15" fill="rgb(254,179,45)" fg:x="311" fg:w="2"/><text x="6.5290%" y="351.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.04%)</title><rect x="6.2790%" y="325" width="0.0404%" height="15" fill="rgb(226,14,10)" fg:x="311" fg:w="2"/><text x="6.5290%" y="335.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.04%)</title><rect x="6.2790%" y="309" width="0.0404%" height="15" fill="rgb(244,27,41)" fg:x="311" fg:w="2"/><text x="6.5290%" y="319.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="6.2992%" y="293" width="0.0202%" height="15" fill="rgb(235,35,32)" fg:x="312" fg:w="1"/><text x="6.5492%" y="303.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="6.2992%" y="277" width="0.0202%" height="15" fill="rgb(218,68,31)" fg:x="312" fg:w="1"/><text x="6.5492%" y="287.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="6.2992%" y="261" width="0.0202%" height="15" fill="rgb(207,120,37)" fg:x="312" fg:w="1"/><text x="6.5492%" y="271.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="6.2992%" y="245" width="0.0202%" height="15" fill="rgb(227,98,0)" fg:x="312" fg:w="1"/><text x="6.5492%" y="255.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="6.2992%" y="229" width="0.0202%" height="15" fill="rgb(207,7,3)" fg:x="312" fg:w="1"/><text x="6.5492%" y="239.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="6.2992%" y="213" width="0.0202%" height="15" fill="rgb(206,98,19)" fg:x="312" fg:w="1"/><text x="6.5492%" y="223.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="6.2992%" y="197" width="0.0202%" height="15" fill="rgb(217,5,26)" fg:x="312" fg:w="1"/><text x="6.5492%" y="207.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="6.2992%" y="181" width="0.0202%" height="15" fill="rgb(235,190,38)" fg:x="312" fg:w="1"/><text x="6.5492%" y="191.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.02%)</title><rect x="6.2992%" y="165" width="0.0202%" height="15" fill="rgb(247,86,24)" fg:x="312" fg:w="1"/><text x="6.5492%" y="175.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (8 samples, 0.16%)</title><rect x="6.1781%" y="757" width="0.1615%" height="15" fill="rgb(205,101,16)" fg:x="306" fg:w="8"/><text x="6.4281%" y="767.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (7 samples, 0.14%)</title><rect x="6.1983%" y="741" width="0.1413%" height="15" fill="rgb(246,168,33)" fg:x="307" fg:w="7"/><text x="6.4483%" y="751.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (5 samples, 0.10%)</title><rect x="6.2386%" y="725" width="0.1009%" height="15" fill="rgb(231,114,1)" fg:x="309" fg:w="5"/><text x="6.4886%" y="735.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (5 samples, 0.10%)</title><rect x="6.2386%" y="709" width="0.1009%" height="15" fill="rgb(207,184,53)" fg:x="309" fg:w="5"/><text x="6.4886%" y="719.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.06%)</title><rect x="6.2790%" y="693" width="0.0606%" height="15" fill="rgb(224,95,51)" fg:x="311" fg:w="3"/><text x="6.5290%" y="703.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.06%)</title><rect x="6.2790%" y="677" width="0.0606%" height="15" fill="rgb(212,188,45)" fg:x="311" fg:w="3"/><text x="6.5290%" y="687.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.06%)</title><rect x="6.2790%" y="661" width="0.0606%" height="15" fill="rgb(223,154,38)" fg:x="311" fg:w="3"/><text x="6.5290%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.06%)</title><rect x="6.2790%" y="645" width="0.0606%" height="15" fill="rgb(251,22,52)" fg:x="311" fg:w="3"/><text x="6.5290%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.06%)</title><rect x="6.2790%" y="629" width="0.0606%" height="15" fill="rgb(229,209,22)" fg:x="311" fg:w="3"/><text x="6.5290%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect x="6.2790%" y="613" width="0.0606%" height="15" fill="rgb(234,138,34)" fg:x="311" fg:w="3"/><text x="6.5290%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect x="6.2790%" y="597" width="0.0606%" height="15" fill="rgb(212,95,11)" fg:x="311" fg:w="3"/><text x="6.5290%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.06%)</title><rect x="6.2790%" y="581" width="0.0606%" height="15" fill="rgb(240,179,47)" fg:x="311" fg:w="3"/><text x="6.5290%" y="591.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="6.2790%" y="565" width="0.0606%" height="15" fill="rgb(240,163,11)" fg:x="311" fg:w="3"/><text x="6.5290%" y="575.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="6.2790%" y="549" width="0.0606%" height="15" fill="rgb(236,37,12)" fg:x="311" fg:w="3"/><text x="6.5290%" y="559.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="6.2790%" y="533" width="0.0606%" height="15" fill="rgb(232,164,16)" fg:x="311" fg:w="3"/><text x="6.5290%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="6.2790%" y="517" width="0.0606%" height="15" fill="rgb(244,205,15)" fg:x="311" fg:w="3"/><text x="6.5290%" y="527.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="6.2790%" y="501" width="0.0606%" height="15" fill="rgb(223,117,47)" fg:x="311" fg:w="3"/><text x="6.5290%" y="511.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="6.2790%" y="485" width="0.0606%" height="15" fill="rgb(244,107,35)" fg:x="311" fg:w="3"/><text x="6.5290%" y="495.50"></text></g><g><title>__rust_alloc (3 samples, 0.06%)</title><rect x="6.2790%" y="469" width="0.0606%" height="15" fill="rgb(205,140,8)" fg:x="311" fg:w="3"/><text x="6.5290%" y="479.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.06%)</title><rect x="6.2790%" y="453" width="0.0606%" height="15" fill="rgb(228,84,46)" fg:x="311" fg:w="3"/><text x="6.5290%" y="463.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="6.3194%" y="437" width="0.0202%" height="15" fill="rgb(254,188,9)" fg:x="313" fg:w="1"/><text x="6.5694%" y="447.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="6.3194%" y="421" width="0.0202%" height="15" fill="rgb(206,112,54)" fg:x="313" fg:w="1"/><text x="6.5694%" y="431.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="6.3194%" y="405" width="0.0202%" height="15" fill="rgb(216,84,49)" fg:x="313" fg:w="1"/><text x="6.5694%" y="415.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="6.3194%" y="389" width="0.0202%" height="15" fill="rgb(214,194,35)" fg:x="313" fg:w="1"/><text x="6.5694%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (9 samples, 0.18%)</title><rect x="6.1781%" y="789" width="0.1817%" height="15" fill="rgb(249,28,3)" fg:x="306" fg:w="9"/><text x="6.4281%" y="799.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (9 samples, 0.18%)</title><rect x="6.1781%" y="773" width="0.1817%" height="15" fill="rgb(222,56,52)" fg:x="306" fg:w="9"/><text x="6.4281%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="6.3396%" y="757" width="0.0202%" height="15" fill="rgb(245,217,50)" fg:x="314" fg:w="1"/><text x="6.5896%" y="767.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="6.3396%" y="741" width="0.0202%" height="15" fill="rgb(213,201,24)" fg:x="314" fg:w="1"/><text x="6.5896%" y="751.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="6.3396%" y="725" width="0.0202%" height="15" fill="rgb(248,116,28)" fg:x="314" fg:w="1"/><text x="6.5896%" y="735.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="6.3396%" y="709" width="0.0202%" height="15" fill="rgb(219,72,43)" fg:x="314" fg:w="1"/><text x="6.5896%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (154 samples, 3.11%)</title><rect x="3.2707%" y="805" width="3.1092%" height="15" fill="rgb(209,138,14)" fg:x="162" fg:w="154"/><text x="3.5207%" y="815.50">&lt;co..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="6.3598%" y="789" width="0.0202%" height="15" fill="rgb(222,18,33)" fg:x="315" fg:w="1"/><text x="6.6098%" y="799.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect x="6.3598%" y="773" width="0.0202%" height="15" fill="rgb(213,199,7)" fg:x="315" fg:w="1"/><text x="6.6098%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="6.3598%" y="757" width="0.0202%" height="15" fill="rgb(250,110,10)" fg:x="315" fg:w="1"/><text x="6.6098%" y="767.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="6.3598%" y="741" width="0.0202%" height="15" fill="rgb(248,123,6)" fg:x="315" fg:w="1"/><text x="6.6098%" y="751.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (1 samples, 0.02%)</title><rect x="6.3598%" y="725" width="0.0202%" height="15" fill="rgb(206,91,31)" fg:x="315" fg:w="1"/><text x="6.6098%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.02%)</title><rect x="6.3598%" y="709" width="0.0202%" height="15" fill="rgb(211,154,13)" fg:x="315" fg:w="1"/><text x="6.6098%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="6.3800%" y="757" width="0.0202%" height="15" fill="rgb(225,148,7)" fg:x="316" fg:w="1"/><text x="6.6300%" y="767.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (158 samples, 3.19%)</title><rect x="3.2506%" y="837" width="3.1900%" height="15" fill="rgb(220,160,43)" fg:x="161" fg:w="158"/><text x="3.5006%" y="847.50">&lt;so..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (158 samples, 3.19%)</title><rect x="3.2506%" y="821" width="3.1900%" height="15" fill="rgb(213,52,39)" fg:x="161" fg:w="158"/><text x="3.5006%" y="831.50">&lt;so..</text></g><g><title>?? (3 samples, 0.06%)</title><rect x="6.3800%" y="805" width="0.0606%" height="15" fill="rgb(243,137,7)" fg:x="316" fg:w="3"/><text x="6.6300%" y="815.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="6.3800%" y="789" width="0.0606%" height="15" fill="rgb(230,79,13)" fg:x="316" fg:w="3"/><text x="6.6300%" y="799.50"></text></g><g><title>sonic_rs::reader::Reader::next (3 samples, 0.06%)</title><rect x="6.3800%" y="773" width="0.0606%" height="15" fill="rgb(247,105,23)" fg:x="316" fg:w="3"/><text x="6.6300%" y="783.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="6.4002%" y="757" width="0.0404%" height="15" fill="rgb(223,179,41)" fg:x="317" fg:w="2"/><text x="6.6502%" y="767.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect x="6.4002%" y="741" width="0.0404%" height="15" fill="rgb(218,9,34)" fg:x="317" fg:w="2"/><text x="6.6502%" y="751.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="6.4002%" y="725" width="0.0404%" height="15" fill="rgb(222,106,8)" fg:x="317" fg:w="2"/><text x="6.6502%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="6.8645%" y="741" width="0.0404%" height="15" fill="rgb(211,220,0)" fg:x="340" fg:w="2"/><text x="7.1145%" y="751.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (10 samples, 0.20%)</title><rect x="6.9049%" y="741" width="0.2019%" height="15" fill="rgb(229,52,16)" fg:x="342" fg:w="10"/><text x="7.1549%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.08%)</title><rect x="7.0260%" y="725" width="0.0808%" height="15" fill="rgb(212,155,18)" fg:x="348" fg:w="4"/><text x="7.2760%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.08%)</title><rect x="7.0260%" y="709" width="0.0808%" height="15" fill="rgb(242,21,14)" fg:x="348" fg:w="4"/><text x="7.2760%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.08%)</title><rect x="7.0260%" y="693" width="0.0808%" height="15" fill="rgb(222,19,48)" fg:x="348" fg:w="4"/><text x="7.2760%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.08%)</title><rect x="7.0260%" y="677" width="0.0808%" height="15" fill="rgb(232,45,27)" fg:x="348" fg:w="4"/><text x="7.2760%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.10%)</title><rect x="7.1068%" y="709" width="0.1009%" height="15" fill="rgb(249,103,42)" fg:x="352" fg:w="5"/><text x="7.3568%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (1 samples, 0.02%)</title><rect x="7.2078%" y="709" width="0.0202%" height="15" fill="rgb(246,81,33)" fg:x="357" fg:w="1"/><text x="7.4578%" y="719.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="7.2078%" y="693" width="0.0202%" height="15" fill="rgb(252,33,42)" fg:x="357" fg:w="1"/><text x="7.4578%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="7.2078%" y="677" width="0.0202%" height="15" fill="rgb(209,212,41)" fg:x="357" fg:w="1"/><text x="7.4578%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.16%)</title><rect x="7.2279%" y="693" width="0.1615%" height="15" fill="rgb(207,154,6)" fg:x="358" fg:w="8"/><text x="7.4779%" y="703.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="7.3895%" y="693" width="0.0202%" height="15" fill="rgb(223,64,47)" fg:x="366" fg:w="1"/><text x="7.6395%" y="703.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="7.4097%" y="693" width="0.0606%" height="15" fill="rgb(211,161,38)" fg:x="367" fg:w="3"/><text x="7.6597%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="7.4097%" y="677" width="0.0606%" height="15" fill="rgb(219,138,40)" fg:x="367" fg:w="3"/><text x="7.6597%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (50 samples, 1.01%)</title><rect x="6.5011%" y="805" width="1.0095%" height="15" fill="rgb(241,228,46)" fg:x="322" fg:w="50"/><text x="6.7511%" y="815.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (32 samples, 0.65%)</title><rect x="6.8645%" y="789" width="0.6461%" height="15" fill="rgb(223,209,38)" fg:x="340" fg:w="32"/><text x="7.1145%" y="799.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (32 samples, 0.65%)</title><rect x="6.8645%" y="773" width="0.6461%" height="15" fill="rgb(236,164,45)" fg:x="340" fg:w="32"/><text x="7.1145%" y="783.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 0.65%)</title><rect x="6.8645%" y="757" width="0.6461%" height="15" fill="rgb(231,15,5)" fg:x="340" fg:w="32"/><text x="7.1145%" y="767.50"></text></g><g><title>?? (20 samples, 0.40%)</title><rect x="7.1068%" y="741" width="0.4038%" height="15" fill="rgb(252,35,15)" fg:x="352" fg:w="20"/><text x="7.3568%" y="751.50"></text></g><g><title>?? (20 samples, 0.40%)</title><rect x="7.1068%" y="725" width="0.4038%" height="15" fill="rgb(248,181,18)" fg:x="352" fg:w="20"/><text x="7.3568%" y="735.50"></text></g><g><title>?? (14 samples, 0.28%)</title><rect x="7.2279%" y="709" width="0.2827%" height="15" fill="rgb(233,39,42)" fg:x="358" fg:w="14"/><text x="7.4779%" y="719.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (2 samples, 0.04%)</title><rect x="7.4702%" y="693" width="0.0404%" height="15" fill="rgb(238,110,33)" fg:x="370" fg:w="2"/><text x="7.7202%" y="703.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (4 samples, 0.08%)</title><rect x="7.5106%" y="789" width="0.0808%" height="15" fill="rgb(233,195,10)" fg:x="372" fg:w="4"/><text x="7.7606%" y="799.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect x="7.5712%" y="773" width="0.0202%" height="15" fill="rgb(254,105,3)" fg:x="375" fg:w="1"/><text x="7.8212%" y="783.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect x="7.5712%" y="757" width="0.0202%" height="15" fill="rgb(221,225,9)" fg:x="375" fg:w="1"/><text x="7.8212%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="7.5712%" y="741" width="0.0202%" height="15" fill="rgb(224,227,45)" fg:x="375" fg:w="1"/><text x="7.8212%" y="751.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="7.5712%" y="725" width="0.0202%" height="15" fill="rgb(229,198,43)" fg:x="375" fg:w="1"/><text x="7.8212%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="7.5914%" y="789" width="0.0202%" height="15" fill="rgb(206,209,35)" fg:x="376" fg:w="1"/><text x="7.8414%" y="799.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (7 samples, 0.14%)</title><rect x="7.6115%" y="773" width="0.1413%" height="15" fill="rgb(245,195,53)" fg:x="377" fg:w="7"/><text x="7.8615%" y="783.50"></text></g><g><title>sonic_rs::reader::Reader::next (12 samples, 0.24%)</title><rect x="7.6115%" y="789" width="0.2423%" height="15" fill="rgb(240,92,26)" fg:x="377" fg:w="12"/><text x="7.8615%" y="799.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="7.7529%" y="773" width="0.1009%" height="15" fill="rgb(207,40,23)" fg:x="384" fg:w="5"/><text x="8.0029%" y="783.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (5 samples, 0.10%)</title><rect x="7.7529%" y="757" width="0.1009%" height="15" fill="rgb(223,111,35)" fg:x="384" fg:w="5"/><text x="8.0029%" y="767.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (5 samples, 0.10%)</title><rect x="7.7529%" y="741" width="0.1009%" height="15" fill="rgb(229,147,28)" fg:x="384" fg:w="5"/><text x="8.0029%" y="751.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (2 samples, 0.04%)</title><rect x="7.8538%" y="773" width="0.0404%" height="15" fill="rgb(211,29,28)" fg:x="389" fg:w="2"/><text x="8.1038%" y="783.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect x="7.8942%" y="773" width="0.0202%" height="15" fill="rgb(228,72,33)" fg:x="391" fg:w="1"/><text x="8.1442%" y="783.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize (242 samples, 4.89%)</title><rect x="3.0487%" y="885" width="4.8859%" height="15" fill="rgb(205,214,31)" fg:x="151" fg:w="242"/><text x="3.2987%" y="895.50">json_b..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (242 samples, 4.89%)</title><rect x="3.0487%" y="869" width="4.8859%" height="15" fill="rgb(224,111,15)" fg:x="151" fg:w="242"/><text x="3.2987%" y="879.50">&lt;&amp;mut ..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (241 samples, 4.87%)</title><rect x="3.0688%" y="853" width="4.8657%" height="15" fill="rgb(253,21,26)" fg:x="152" fg:w="241"/><text x="3.3188%" y="863.50">&lt;json_..</text></g><g><title>serde::de::MapAccess::next_key (74 samples, 1.49%)</title><rect x="6.4405%" y="837" width="1.4940%" height="15" fill="rgb(245,139,43)" fg:x="319" fg:w="74"/><text x="6.6905%" y="847.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (74 samples, 1.49%)</title><rect x="6.4405%" y="821" width="1.4940%" height="15" fill="rgb(252,170,7)" fg:x="319" fg:w="74"/><text x="6.6905%" y="831.50"></text></g><g><title>?? (21 samples, 0.42%)</title><rect x="7.5106%" y="805" width="0.4240%" height="15" fill="rgb(231,118,14)" fg:x="372" fg:w="21"/><text x="7.7606%" y="815.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (4 samples, 0.08%)</title><rect x="7.8538%" y="789" width="0.0808%" height="15" fill="rgb(238,83,0)" fg:x="389" fg:w="4"/><text x="8.1038%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="7.9144%" y="773" width="0.0202%" height="15" fill="rgb(221,39,39)" fg:x="392" fg:w="1"/><text x="8.1644%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="7.9548%" y="837" width="0.0202%" height="15" fill="rgb(222,119,46)" fg:x="394" fg:w="1"/><text x="8.2048%" y="847.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="7.9548%" y="821" width="0.0202%" height="15" fill="rgb(222,165,49)" fg:x="394" fg:w="1"/><text x="8.2048%" y="831.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="7.9548%" y="805" width="0.0202%" height="15" fill="rgb(219,113,52)" fg:x="394" fg:w="1"/><text x="8.2048%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="7.9750%" y="837" width="0.0404%" height="15" fill="rgb(214,7,15)" fg:x="395" fg:w="2"/><text x="8.2250%" y="847.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="8.0153%" y="581" width="0.0202%" height="15" fill="rgb(235,32,4)" fg:x="397" fg:w="1"/><text x="8.2653%" y="591.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="8.0153%" y="565" width="0.0202%" height="15" fill="rgb(238,90,54)" fg:x="397" fg:w="1"/><text x="8.2653%" y="575.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="8.0153%" y="549" width="0.0202%" height="15" fill="rgb(213,208,19)" fg:x="397" fg:w="1"/><text x="8.2653%" y="559.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="8.0153%" y="533" width="0.0202%" height="15" fill="rgb(233,156,4)" fg:x="397" fg:w="1"/><text x="8.2653%" y="543.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="8.0153%" y="517" width="0.0202%" height="15" fill="rgb(207,194,5)" fg:x="397" fg:w="1"/><text x="8.2653%" y="527.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="8.0153%" y="501" width="0.0202%" height="15" fill="rgb(206,111,30)" fg:x="397" fg:w="1"/><text x="8.2653%" y="511.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="8.0153%" y="485" width="0.0202%" height="15" fill="rgb(243,70,54)" fg:x="397" fg:w="1"/><text x="8.2653%" y="495.50"></text></g><g><title>arena_choose (1 samples, 0.02%)</title><rect x="8.0153%" y="469" width="0.0202%" height="15" fill="rgb(242,28,8)" fg:x="397" fg:w="1"/><text x="8.2653%" y="479.50"></text></g><g><title>arena_choose_impl (1 samples, 0.02%)</title><rect x="8.0153%" y="453" width="0.0202%" height="15" fill="rgb(219,106,18)" fg:x="397" fg:w="1"/><text x="8.2653%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (7 samples, 0.14%)</title><rect x="7.9346%" y="885" width="0.1413%" height="15" fill="rgb(244,222,10)" fg:x="393" fg:w="7"/><text x="8.1846%" y="895.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (6 samples, 0.12%)</title><rect x="7.9548%" y="869" width="0.1211%" height="15" fill="rgb(236,179,52)" fg:x="394" fg:w="6"/><text x="8.2048%" y="879.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (6 samples, 0.12%)</title><rect x="7.9548%" y="853" width="0.1211%" height="15" fill="rgb(213,23,39)" fg:x="394" fg:w="6"/><text x="8.2048%" y="863.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.06%)</title><rect x="8.0153%" y="837" width="0.0606%" height="15" fill="rgb(238,48,10)" fg:x="397" fg:w="3"/><text x="8.2653%" y="847.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.06%)</title><rect x="8.0153%" y="821" width="0.0606%" height="15" fill="rgb(251,196,23)" fg:x="397" fg:w="3"/><text x="8.2653%" y="831.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.06%)</title><rect x="8.0153%" y="805" width="0.0606%" height="15" fill="rgb(250,152,24)" fg:x="397" fg:w="3"/><text x="8.2653%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.06%)</title><rect x="8.0153%" y="789" width="0.0606%" height="15" fill="rgb(209,150,17)" fg:x="397" fg:w="3"/><text x="8.2653%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.06%)</title><rect x="8.0153%" y="773" width="0.0606%" height="15" fill="rgb(234,202,34)" fg:x="397" fg:w="3"/><text x="8.2653%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect x="8.0153%" y="757" width="0.0606%" height="15" fill="rgb(253,148,53)" fg:x="397" fg:w="3"/><text x="8.2653%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect x="8.0153%" y="741" width="0.0606%" height="15" fill="rgb(218,129,16)" fg:x="397" fg:w="3"/><text x="8.2653%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.06%)</title><rect x="8.0153%" y="725" width="0.0606%" height="15" fill="rgb(216,85,19)" fg:x="397" fg:w="3"/><text x="8.2653%" y="735.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="8.0153%" y="709" width="0.0606%" height="15" fill="rgb(235,228,7)" fg:x="397" fg:w="3"/><text x="8.2653%" y="719.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="8.0153%" y="693" width="0.0606%" height="15" fill="rgb(245,175,0)" fg:x="397" fg:w="3"/><text x="8.2653%" y="703.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="8.0153%" y="677" width="0.0606%" height="15" fill="rgb(208,168,36)" fg:x="397" fg:w="3"/><text x="8.2653%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="8.0153%" y="661" width="0.0606%" height="15" fill="rgb(246,171,24)" fg:x="397" fg:w="3"/><text x="8.2653%" y="671.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="8.0153%" y="645" width="0.0606%" height="15" fill="rgb(215,142,24)" fg:x="397" fg:w="3"/><text x="8.2653%" y="655.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="8.0153%" y="629" width="0.0606%" height="15" fill="rgb(250,187,7)" fg:x="397" fg:w="3"/><text x="8.2653%" y="639.50"></text></g><g><title>__rust_alloc (3 samples, 0.06%)</title><rect x="8.0153%" y="613" width="0.0606%" height="15" fill="rgb(228,66,33)" fg:x="397" fg:w="3"/><text x="8.2653%" y="623.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.06%)</title><rect x="8.0153%" y="597" width="0.0606%" height="15" fill="rgb(234,215,21)" fg:x="397" fg:w="3"/><text x="8.2653%" y="607.50"></text></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect x="8.0355%" y="581" width="0.0404%" height="15" fill="rgb(222,191,20)" fg:x="398" fg:w="2"/><text x="8.2855%" y="591.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="8.0557%" y="565" width="0.0202%" height="15" fill="rgb(245,79,54)" fg:x="399" fg:w="1"/><text x="8.3057%" y="575.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="8.0557%" y="549" width="0.0202%" height="15" fill="rgb(240,10,37)" fg:x="399" fg:w="1"/><text x="8.3057%" y="559.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="8.0557%" y="533" width="0.0202%" height="15" fill="rgb(214,192,32)" fg:x="399" fg:w="1"/><text x="8.3057%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="8.0961%" y="773" width="0.0202%" height="15" fill="rgb(209,36,54)" fg:x="401" fg:w="1"/><text x="8.3461%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="8.0961%" y="757" width="0.0202%" height="15" fill="rgb(220,10,11)" fg:x="401" fg:w="1"/><text x="8.3461%" y="767.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="8.0961%" y="741" width="0.0202%" height="15" fill="rgb(221,106,17)" fg:x="401" fg:w="1"/><text x="8.3461%" y="751.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="8.0961%" y="725" width="0.0202%" height="15" fill="rgb(251,142,44)" fg:x="401" fg:w="1"/><text x="8.3461%" y="735.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect x="8.0961%" y="709" width="0.0202%" height="15" fill="rgb(238,13,15)" fg:x="401" fg:w="1"/><text x="8.3461%" y="719.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="8.0961%" y="693" width="0.0202%" height="15" fill="rgb(208,107,27)" fg:x="401" fg:w="1"/><text x="8.3461%" y="703.50"></text></g><g><title>iralloct (1 samples, 0.02%)</title><rect x="8.0961%" y="677" width="0.0202%" height="15" fill="rgb(205,136,37)" fg:x="401" fg:w="1"/><text x="8.3461%" y="687.50"></text></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.02%)</title><rect x="8.0961%" y="661" width="0.0202%" height="15" fill="rgb(250,205,27)" fg:x="401" fg:w="1"/><text x="8.3461%" y="671.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (1 samples, 0.02%)</title><rect x="8.0961%" y="645" width="0.0202%" height="15" fill="rgb(210,80,43)" fg:x="401" fg:w="1"/><text x="8.3461%" y="655.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="8.1163%" y="773" width="0.0202%" height="15" fill="rgb(247,160,36)" fg:x="402" fg:w="1"/><text x="8.3663%" y="783.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="8.1163%" y="757" width="0.0202%" height="15" fill="rgb(234,13,49)" fg:x="402" fg:w="1"/><text x="8.3663%" y="767.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="8.1163%" y="741" width="0.0202%" height="15" fill="rgb(234,122,0)" fg:x="402" fg:w="1"/><text x="8.3663%" y="751.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="8.1163%" y="725" width="0.0202%" height="15" fill="rgb(207,146,38)" fg:x="402" fg:w="1"/><text x="8.3663%" y="735.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="8.1163%" y="709" width="0.0202%" height="15" fill="rgb(207,177,25)" fg:x="402" fg:w="1"/><text x="8.3663%" y="719.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="8.1163%" y="693" width="0.0202%" height="15" fill="rgb(211,178,42)" fg:x="402" fg:w="1"/><text x="8.3663%" y="703.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="8.1163%" y="677" width="0.0202%" height="15" fill="rgb(230,69,54)" fg:x="402" fg:w="1"/><text x="8.3663%" y="687.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="8.1163%" y="661" width="0.0202%" height="15" fill="rgb(214,135,41)" fg:x="402" fg:w="1"/><text x="8.3663%" y="671.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="8.1163%" y="645" width="0.0202%" height="15" fill="rgb(237,67,25)" fg:x="402" fg:w="1"/><text x="8.3663%" y="655.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="8.1163%" y="629" width="0.0202%" height="15" fill="rgb(222,189,50)" fg:x="402" fg:w="1"/><text x="8.3663%" y="639.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="8.1163%" y="613" width="0.0202%" height="15" fill="rgb(245,148,34)" fg:x="402" fg:w="1"/><text x="8.3663%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="8.0759%" y="837" width="0.0808%" height="15" fill="rgb(222,29,6)" fg:x="400" fg:w="4"/><text x="8.3259%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect x="8.0759%" y="821" width="0.0808%" height="15" fill="rgb(221,189,43)" fg:x="400" fg:w="4"/><text x="8.3259%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect x="8.0759%" y="805" width="0.0808%" height="15" fill="rgb(207,36,27)" fg:x="400" fg:w="4"/><text x="8.3259%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.08%)</title><rect x="8.0759%" y="789" width="0.0808%" height="15" fill="rgb(217,90,24)" fg:x="400" fg:w="4"/><text x="8.3259%" y="799.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="8.1365%" y="773" width="0.0202%" height="15" fill="rgb(224,66,35)" fg:x="403" fg:w="1"/><text x="8.3865%" y="783.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="8.1365%" y="757" width="0.0202%" height="15" fill="rgb(221,13,50)" fg:x="403" fg:w="1"/><text x="8.3865%" y="767.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="8.1365%" y="741" width="0.0202%" height="15" fill="rgb(236,68,49)" fg:x="403" fg:w="1"/><text x="8.3865%" y="751.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="8.1365%" y="725" width="0.0202%" height="15" fill="rgb(229,146,28)" fg:x="403" fg:w="1"/><text x="8.3865%" y="735.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="8.1567%" y="741" width="0.0202%" height="15" fill="rgb(225,31,38)" fg:x="404" fg:w="1"/><text x="8.4067%" y="751.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="8.1567%" y="725" width="0.0202%" height="15" fill="rgb(250,208,3)" fg:x="404" fg:w="1"/><text x="8.4067%" y="735.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="8.1567%" y="709" width="0.0202%" height="15" fill="rgb(246,54,23)" fg:x="404" fg:w="1"/><text x="8.4067%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="8.1567%" y="693" width="0.0202%" height="15" fill="rgb(243,76,11)" fg:x="404" fg:w="1"/><text x="8.4067%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (255 samples, 5.15%)</title><rect x="3.0487%" y="901" width="5.1484%" height="15" fill="rgb(245,21,50)" fg:x="151" fg:w="255"/><text x="3.2987%" y="911.50">&lt;core:..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (6 samples, 0.12%)</title><rect x="8.0759%" y="885" width="0.1211%" height="15" fill="rgb(228,9,43)" fg:x="400" fg:w="6"/><text x="8.3259%" y="895.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (6 samples, 0.12%)</title><rect x="8.0759%" y="869" width="0.1211%" height="15" fill="rgb(208,100,47)" fg:x="400" fg:w="6"/><text x="8.3259%" y="879.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (6 samples, 0.12%)</title><rect x="8.0759%" y="853" width="0.1211%" height="15" fill="rgb(232,26,8)" fg:x="400" fg:w="6"/><text x="8.3259%" y="863.50"></text></g><g><title>serde::de::SeqAccess::next_element (2 samples, 0.04%)</title><rect x="8.1567%" y="837" width="0.0404%" height="15" fill="rgb(216,166,38)" fg:x="404" fg:w="2"/><text x="8.4067%" y="847.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.04%)</title><rect x="8.1567%" y="821" width="0.0404%" height="15" fill="rgb(251,202,51)" fg:x="404" fg:w="2"/><text x="8.4067%" y="831.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect x="8.1567%" y="805" width="0.0404%" height="15" fill="rgb(254,216,34)" fg:x="404" fg:w="2"/><text x="8.4067%" y="815.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (2 samples, 0.04%)</title><rect x="8.1567%" y="789" width="0.0404%" height="15" fill="rgb(251,32,27)" fg:x="404" fg:w="2"/><text x="8.4067%" y="799.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="8.1567%" y="773" width="0.0404%" height="15" fill="rgb(208,127,28)" fg:x="404" fg:w="2"/><text x="8.4067%" y="783.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="8.1567%" y="757" width="0.0404%" height="15" fill="rgb(224,137,22)" fg:x="404" fg:w="2"/><text x="8.4067%" y="767.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (1 samples, 0.02%)</title><rect x="8.1769%" y="741" width="0.0202%" height="15" fill="rgb(254,70,32)" fg:x="405" fg:w="1"/><text x="8.4269%" y="751.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (1 samples, 0.02%)</title><rect x="8.1769%" y="725" width="0.0202%" height="15" fill="rgb(229,75,37)" fg:x="405" fg:w="1"/><text x="8.4269%" y="735.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_entry (295 samples, 5.96%)</title><rect x="2.2613%" y="949" width="5.9560%" height="15" fill="rgb(252,64,23)" fg:x="112" fg:w="295"/><text x="2.5113%" y="959.50">&lt;sonic_r..</text></g><g><title>serde::de::MapAccess::next_entry_seed (295 samples, 5.96%)</title><rect x="2.2613%" y="933" width="5.9560%" height="15" fill="rgb(232,162,48)" fg:x="112" fg:w="295"/><text x="2.5113%" y="943.50">serde::d..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (256 samples, 5.17%)</title><rect x="3.0487%" y="917" width="5.1686%" height="15" fill="rgb(246,160,12)" fg:x="151" fg:w="256"/><text x="3.2987%" y="927.50">&lt;sonic..</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="8.1971%" y="901" width="0.0202%" height="15" fill="rgb(247,166,0)" fg:x="406" fg:w="1"/><text x="8.4471%" y="911.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="8.1971%" y="885" width="0.0202%" height="15" fill="rgb(249,219,21)" fg:x="406" fg:w="1"/><text x="8.4471%" y="895.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="8.1971%" y="869" width="0.0202%" height="15" fill="rgb(205,209,3)" fg:x="406" fg:w="1"/><text x="8.4471%" y="879.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="8.1971%" y="853" width="0.0202%" height="15" fill="rgb(243,44,1)" fg:x="406" fg:w="1"/><text x="8.4471%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="8.3182%" y="869" width="0.0404%" height="15" fill="rgb(206,159,16)" fg:x="412" fg:w="2"/><text x="8.5682%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="8.3182%" y="853" width="0.0404%" height="15" fill="rgb(244,77,30)" fg:x="412" fg:w="2"/><text x="8.5682%" y="863.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="8.3182%" y="837" width="0.0404%" height="15" fill="rgb(218,69,12)" fg:x="412" fg:w="2"/><text x="8.5682%" y="847.50"></text></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as core::cmp::Ord&gt;::cmp (5 samples, 0.10%)</title><rect x="8.3586%" y="869" width="0.1009%" height="15" fill="rgb(212,87,7)" fg:x="414" fg:w="5"/><text x="8.6086%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (5 samples, 0.10%)</title><rect x="8.3586%" y="853" width="0.1009%" height="15" fill="rgb(245,114,25)" fg:x="414" fg:w="5"/><text x="8.6086%" y="863.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="8.4595%" y="853" width="0.0202%" height="15" fill="rgb(210,61,42)" fg:x="419" fg:w="1"/><text x="8.7095%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="8.4595%" y="837" width="0.0202%" height="15" fill="rgb(211,52,33)" fg:x="419" fg:w="1"/><text x="8.7095%" y="847.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="8.4595%" y="821" width="0.0202%" height="15" fill="rgb(234,58,33)" fg:x="419" fg:w="1"/><text x="8.7095%" y="831.50"></text></g><g><title>aligned_usize_get (1 samples, 0.02%)</title><rect x="8.4797%" y="693" width="0.0202%" height="15" fill="rgb(220,115,36)" fg:x="420" fg:w="1"/><text x="8.7297%" y="703.50"></text></g><g><title>sz_index2size (1 samples, 0.02%)</title><rect x="8.4797%" y="677" width="0.0202%" height="15" fill="rgb(243,153,54)" fg:x="420" fg:w="1"/><text x="8.7297%" y="687.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="8.4797%" y="661" width="0.0202%" height="15" fill="rgb(251,47,18)" fg:x="420" fg:w="1"/><text x="8.7297%" y="671.50"></text></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect x="8.4797%" y="645" width="0.0202%" height="15" fill="rgb(242,102,42)" fg:x="420" fg:w="1"/><text x="8.7297%" y="655.50"></text></g><g><title>_rjem_je_emap_register_interior (1 samples, 0.02%)</title><rect x="8.4999%" y="565" width="0.0202%" height="15" fill="rgb(234,31,38)" fg:x="421" fg:w="1"/><text x="8.7499%" y="575.50"></text></g><g><title>rtree_write_range (1 samples, 0.02%)</title><rect x="8.4999%" y="549" width="0.0202%" height="15" fill="rgb(221,117,51)" fg:x="421" fg:w="1"/><text x="8.7499%" y="559.50"></text></g><g><title>rtree_write_range_impl (1 samples, 0.02%)</title><rect x="8.4999%" y="533" width="0.0202%" height="15" fill="rgb(212,20,18)" fg:x="421" fg:w="1"/><text x="8.7499%" y="543.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="8.5201%" y="517" width="0.0202%" height="15" fill="rgb(245,133,36)" fg:x="422" fg:w="1"/><text x="8.7701%" y="527.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="8.5201%" y="501" width="0.0202%" height="15" fill="rgb(212,6,19)" fg:x="422" fg:w="1"/><text x="8.7701%" y="511.50"></text></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect x="8.5201%" y="485" width="0.0202%" height="15" fill="rgb(218,1,36)" fg:x="422" fg:w="1"/><text x="8.7701%" y="495.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="8.5201%" y="469" width="0.0202%" height="15" fill="rgb(246,84,54)" fg:x="422" fg:w="1"/><text x="8.7701%" y="479.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="8.5201%" y="453" width="0.0202%" height="15" fill="rgb(242,110,6)" fg:x="422" fg:w="1"/><text x="8.7701%" y="463.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="8.5201%" y="437" width="0.0202%" height="15" fill="rgb(214,47,5)" fg:x="422" fg:w="1"/><text x="8.7701%" y="447.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (1 samples, 0.02%)</title><rect x="8.5201%" y="421" width="0.0202%" height="15" fill="rgb(218,159,25)" fg:x="422" fg:w="1"/><text x="8.7701%" y="431.50"></text></g><g><title>arena_slab_alloc (3 samples, 0.06%)</title><rect x="8.4999%" y="597" width="0.0606%" height="15" fill="rgb(215,211,28)" fg:x="421" fg:w="3"/><text x="8.7499%" y="607.50"></text></g><g><title>_rjem_je_pa_alloc (3 samples, 0.06%)</title><rect x="8.4999%" y="581" width="0.0606%" height="15" fill="rgb(238,59,32)" fg:x="421" fg:w="3"/><text x="8.7499%" y="591.50"></text></g><g><title>pai_alloc (2 samples, 0.04%)</title><rect x="8.5201%" y="565" width="0.0404%" height="15" fill="rgb(226,82,3)" fg:x="422" fg:w="2"/><text x="8.7701%" y="575.50"></text></g><g><title>pac_alloc_impl (2 samples, 0.04%)</title><rect x="8.5201%" y="549" width="0.0404%" height="15" fill="rgb(240,164,32)" fg:x="422" fg:w="2"/><text x="8.7701%" y="559.50"></text></g><g><title>pac_alloc_real (2 samples, 0.04%)</title><rect x="8.5201%" y="533" width="0.0404%" height="15" fill="rgb(232,46,7)" fg:x="422" fg:w="2"/><text x="8.7701%" y="543.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect x="8.5403%" y="517" width="0.0202%" height="15" fill="rgb(229,129,53)" fg:x="423" fg:w="1"/><text x="8.7903%" y="527.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect x="8.5403%" y="501" width="0.0202%" height="15" fill="rgb(234,188,29)" fg:x="423" fg:w="1"/><text x="8.7903%" y="511.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="8.5403%" y="485" width="0.0202%" height="15" fill="rgb(246,141,4)" fg:x="423" fg:w="1"/><text x="8.7903%" y="495.50"></text></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect x="8.5403%" y="469" width="0.0202%" height="15" fill="rgb(229,23,39)" fg:x="423" fg:w="1"/><text x="8.7903%" y="479.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="8.5403%" y="453" width="0.0202%" height="15" fill="rgb(206,12,3)" fg:x="423" fg:w="1"/><text x="8.7903%" y="463.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="8.5403%" y="437" width="0.0202%" height="15" fill="rgb(252,226,20)" fg:x="423" fg:w="1"/><text x="8.7903%" y="447.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="8.5403%" y="421" width="0.0202%" height="15" fill="rgb(216,123,35)" fg:x="423" fg:w="1"/><text x="8.7903%" y="431.50"></text></g><g><title>_rjem_je_edata_heap_empty (1 samples, 0.02%)</title><rect x="8.5403%" y="405" width="0.0202%" height="15" fill="rgb(212,68,40)" fg:x="423" fg:w="1"/><text x="8.7903%" y="415.50"></text></g><g><title>ph_empty (1 samples, 0.02%)</title><rect x="8.5403%" y="389" width="0.0202%" height="15" fill="rgb(254,125,32)" fg:x="423" fg:w="1"/><text x="8.7903%" y="399.50"></text></g><g><title>cache_bin_finish_fill (1 samples, 0.02%)</title><rect x="8.5605%" y="597" width="0.0202%" height="15" fill="rgb(253,97,22)" fg:x="424" fg:w="1"/><text x="8.8105%" y="607.50"></text></g><g><title>cache_bin_empty_position_get (1 samples, 0.02%)</title><rect x="8.5605%" y="581" width="0.0202%" height="15" fill="rgb(241,101,14)" fg:x="424" fg:w="1"/><text x="8.8105%" y="591.50"></text></g><g><title>__rust_alloc (6 samples, 0.12%)</title><rect x="8.4797%" y="773" width="0.1211%" height="15" fill="rgb(238,103,29)" fg:x="420" fg:w="6"/><text x="8.7297%" y="783.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.12%)</title><rect x="8.4797%" y="757" width="0.1211%" height="15" fill="rgb(233,195,47)" fg:x="420" fg:w="6"/><text x="8.7297%" y="767.50"></text></g><g><title>_rjem_je_malloc_default (6 samples, 0.12%)</title><rect x="8.4797%" y="741" width="0.1211%" height="15" fill="rgb(246,218,30)" fg:x="420" fg:w="6"/><text x="8.7297%" y="751.50"></text></g><g><title>imalloc (6 samples, 0.12%)</title><rect x="8.4797%" y="725" width="0.1211%" height="15" fill="rgb(219,145,47)" fg:x="420" fg:w="6"/><text x="8.7297%" y="735.50"></text></g><g><title>imalloc_body (6 samples, 0.12%)</title><rect x="8.4797%" y="709" width="0.1211%" height="15" fill="rgb(243,12,26)" fg:x="420" fg:w="6"/><text x="8.7297%" y="719.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.10%)</title><rect x="8.4999%" y="693" width="0.1009%" height="15" fill="rgb(214,87,16)" fg:x="421" fg:w="5"/><text x="8.7499%" y="703.50"></text></g><g><title>iallocztm (5 samples, 0.10%)</title><rect x="8.4999%" y="677" width="0.1009%" height="15" fill="rgb(208,99,42)" fg:x="421" fg:w="5"/><text x="8.7499%" y="687.50"></text></g><g><title>arena_malloc (5 samples, 0.10%)</title><rect x="8.4999%" y="661" width="0.1009%" height="15" fill="rgb(253,99,2)" fg:x="421" fg:w="5"/><text x="8.7499%" y="671.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.10%)</title><rect x="8.4999%" y="645" width="0.1009%" height="15" fill="rgb(220,168,23)" fg:x="421" fg:w="5"/><text x="8.7499%" y="655.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (5 samples, 0.10%)</title><rect x="8.4999%" y="629" width="0.1009%" height="15" fill="rgb(242,38,24)" fg:x="421" fg:w="5"/><text x="8.7499%" y="639.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (5 samples, 0.10%)</title><rect x="8.4999%" y="613" width="0.1009%" height="15" fill="rgb(225,182,9)" fg:x="421" fg:w="5"/><text x="8.7499%" y="623.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="8.5807%" y="597" width="0.0202%" height="15" fill="rgb(243,178,37)" fg:x="425" fg:w="1"/><text x="8.8307%" y="607.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="8.5807%" y="581" width="0.0202%" height="15" fill="rgb(232,139,19)" fg:x="425" fg:w="1"/><text x="8.8307%" y="591.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="8.5807%" y="565" width="0.0202%" height="15" fill="rgb(225,201,24)" fg:x="425" fg:w="1"/><text x="8.8307%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (7 samples, 0.14%)</title><rect x="8.4797%" y="853" width="0.1413%" height="15" fill="rgb(221,47,46)" fg:x="420" fg:w="7"/><text x="8.7297%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (7 samples, 0.14%)</title><rect x="8.4797%" y="837" width="0.1413%" height="15" fill="rgb(249,23,13)" fg:x="420" fg:w="7"/><text x="8.7297%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.14%)</title><rect x="8.4797%" y="821" width="0.1413%" height="15" fill="rgb(219,9,5)" fg:x="420" fg:w="7"/><text x="8.7297%" y="831.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="8.4797%" y="805" width="0.1413%" height="15" fill="rgb(254,171,16)" fg:x="420" fg:w="7"/><text x="8.7297%" y="815.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.14%)</title><rect x="8.4797%" y="789" width="0.1413%" height="15" fill="rgb(230,171,20)" fg:x="420" fg:w="7"/><text x="8.7297%" y="799.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.02%)</title><rect x="8.6008%" y="773" width="0.0202%" height="15" fill="rgb(210,71,41)" fg:x="426" fg:w="1"/><text x="8.8508%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="8.6210%" y="853" width="0.0202%" height="15" fill="rgb(206,173,20)" fg:x="427" fg:w="1"/><text x="8.8710%" y="863.50"></text></g><g><title>?? (11 samples, 0.22%)</title><rect x="8.4595%" y="869" width="0.2221%" height="15" fill="rgb(233,88,34)" fg:x="419" fg:w="11"/><text x="8.7095%" y="879.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (2 samples, 0.04%)</title><rect x="8.6412%" y="853" width="0.0404%" height="15" fill="rgb(223,209,46)" fg:x="428" fg:w="2"/><text x="8.8912%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="8.6412%" y="837" width="0.0404%" height="15" fill="rgb(250,43,18)" fg:x="428" fg:w="2"/><text x="8.8912%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="8.6412%" y="821" width="0.0404%" height="15" fill="rgb(208,13,10)" fg:x="428" fg:w="2"/><text x="8.8912%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="8.6816%" y="869" width="0.0202%" height="15" fill="rgb(212,200,36)" fg:x="430" fg:w="1"/><text x="8.9316%" y="879.50"></text></g><g><title>?? (21 samples, 0.42%)</title><rect x="8.3182%" y="885" width="0.4240%" height="15" fill="rgb(225,90,30)" fg:x="412" fg:w="21"/><text x="8.5682%" y="895.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (2 samples, 0.04%)</title><rect x="8.7018%" y="869" width="0.0404%" height="15" fill="rgb(236,182,39)" fg:x="431" fg:w="2"/><text x="8.9518%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.04%)</title><rect x="8.7018%" y="853" width="0.0404%" height="15" fill="rgb(212,144,35)" fg:x="431" fg:w="2"/><text x="8.9518%" y="863.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="8.7422%" y="661" width="0.0202%" height="15" fill="rgb(228,63,44)" fg:x="433" fg:w="1"/><text x="8.9922%" y="671.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="8.7422%" y="645" width="0.0202%" height="15" fill="rgb(228,109,6)" fg:x="433" fg:w="1"/><text x="8.9922%" y="655.50"></text></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (1 samples, 0.02%)</title><rect x="8.7422%" y="629" width="0.0202%" height="15" fill="rgb(238,117,24)" fg:x="433" fg:w="1"/><text x="8.9922%" y="639.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (1 samples, 0.02%)</title><rect x="8.7422%" y="613" width="0.0202%" height="15" fill="rgb(242,26,26)" fg:x="433" fg:w="1"/><text x="8.9922%" y="623.50"></text></g><g><title>_rjem_je_edata_heap_remove_first (1 samples, 0.02%)</title><rect x="8.7422%" y="597" width="0.0202%" height="15" fill="rgb(221,92,48)" fg:x="433" fg:w="1"/><text x="8.9922%" y="607.50"></text></g><g><title>ph_remove_first (1 samples, 0.02%)</title><rect x="8.7422%" y="581" width="0.0202%" height="15" fill="rgb(209,209,32)" fg:x="433" fg:w="1"/><text x="8.9922%" y="591.50"></text></g><g><title>ph_merge_aux (1 samples, 0.02%)</title><rect x="8.7422%" y="565" width="0.0202%" height="15" fill="rgb(221,70,22)" fg:x="433" fg:w="1"/><text x="8.9922%" y="575.50"></text></g><g><title>_rjem_je_malloc_default (2 samples, 0.04%)</title><rect x="8.7422%" y="773" width="0.0404%" height="15" fill="rgb(248,145,5)" fg:x="433" fg:w="2"/><text x="8.9922%" y="783.50"></text></g><g><title>imalloc (2 samples, 0.04%)</title><rect x="8.7422%" y="757" width="0.0404%" height="15" fill="rgb(226,116,26)" fg:x="433" fg:w="2"/><text x="8.9922%" y="767.50"></text></g><g><title>imalloc_body (2 samples, 0.04%)</title><rect x="8.7422%" y="741" width="0.0404%" height="15" fill="rgb(244,5,17)" fg:x="433" fg:w="2"/><text x="8.9922%" y="751.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.04%)</title><rect x="8.7422%" y="725" width="0.0404%" height="15" fill="rgb(252,159,33)" fg:x="433" fg:w="2"/><text x="8.9922%" y="735.50"></text></g><g><title>iallocztm (2 samples, 0.04%)</title><rect x="8.7422%" y="709" width="0.0404%" height="15" fill="rgb(206,71,0)" fg:x="433" fg:w="2"/><text x="8.9922%" y="719.50"></text></g><g><title>arena_malloc (2 samples, 0.04%)</title><rect x="8.7422%" y="693" width="0.0404%" height="15" fill="rgb(233,118,54)" fg:x="433" fg:w="2"/><text x="8.9922%" y="703.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.04%)</title><rect x="8.7422%" y="677" width="0.0404%" height="15" fill="rgb(234,83,48)" fg:x="433" fg:w="2"/><text x="8.9922%" y="687.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (1 samples, 0.02%)</title><rect x="8.7624%" y="661" width="0.0202%" height="15" fill="rgb(228,3,54)" fg:x="434" fg:w="1"/><text x="9.0124%" y="671.50"></text></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect x="8.7826%" y="741" width="0.0202%" height="15" fill="rgb(226,155,13)" fg:x="435" fg:w="1"/><text x="9.0326%" y="751.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="8.7826%" y="725" width="0.0202%" height="15" fill="rgb(241,28,37)" fg:x="435" fg:w="1"/><text x="9.0326%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (4 samples, 0.08%)</title><rect x="8.7422%" y="885" width="0.0808%" height="15" fill="rgb(233,93,10)" fg:x="433" fg:w="4"/><text x="8.9922%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (4 samples, 0.08%)</title><rect x="8.7422%" y="869" width="0.0808%" height="15" fill="rgb(225,113,19)" fg:x="433" fg:w="4"/><text x="8.9922%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.08%)</title><rect x="8.7422%" y="853" width="0.0808%" height="15" fill="rgb(241,2,18)" fg:x="433" fg:w="4"/><text x="8.9922%" y="863.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="8.7422%" y="837" width="0.0808%" height="15" fill="rgb(228,207,21)" fg:x="433" fg:w="4"/><text x="8.9922%" y="847.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.08%)</title><rect x="8.7422%" y="821" width="0.0808%" height="15" fill="rgb(213,211,35)" fg:x="433" fg:w="4"/><text x="8.9922%" y="831.50"></text></g><g><title>__rust_alloc (4 samples, 0.08%)</title><rect x="8.7422%" y="805" width="0.0808%" height="15" fill="rgb(209,83,10)" fg:x="433" fg:w="4"/><text x="8.9922%" y="815.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.08%)</title><rect x="8.7422%" y="789" width="0.0808%" height="15" fill="rgb(209,164,1)" fg:x="433" fg:w="4"/><text x="8.9922%" y="799.50"></text></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect x="8.7826%" y="773" width="0.0404%" height="15" fill="rgb(213,184,43)" fg:x="435" fg:w="2"/><text x="9.0326%" y="783.50"></text></g><g><title>imalloc_fastpath (2 samples, 0.04%)</title><rect x="8.7826%" y="757" width="0.0404%" height="15" fill="rgb(231,61,34)" fg:x="435" fg:w="2"/><text x="9.0326%" y="767.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="8.8027%" y="741" width="0.0202%" height="15" fill="rgb(235,75,3)" fg:x="436" fg:w="1"/><text x="9.0527%" y="751.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="8.8027%" y="725" width="0.0202%" height="15" fill="rgb(220,106,47)" fg:x="436" fg:w="1"/><text x="9.0527%" y="735.50"></text></g><g><title>?? (36 samples, 0.73%)</title><rect x="8.3182%" y="901" width="0.7268%" height="15" fill="rgb(210,196,33)" fg:x="412" fg:w="36"/><text x="8.5682%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.22%)</title><rect x="8.8229%" y="885" width="0.2221%" height="15" fill="rgb(229,154,42)" fg:x="437" fg:w="11"/><text x="9.0729%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="9.0450%" y="901" width="0.0202%" height="15" fill="rgb(228,114,26)" fg:x="448" fg:w="1"/><text x="9.2950%" y="911.50"></text></g><g><title>?? (38 samples, 0.77%)</title><rect x="8.3182%" y="917" width="0.7672%" height="15" fill="rgb(208,144,1)" fg:x="412" fg:w="38"/><text x="8.5682%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert::_{{closure}} (1 samples, 0.02%)</title><rect x="9.0652%" y="901" width="0.0202%" height="15" fill="rgb(239,112,37)" fg:x="449" fg:w="1"/><text x="9.3152%" y="911.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="9.0652%" y="885" width="0.0202%" height="15" fill="rgb(210,96,50)" fg:x="449" fg:w="1"/><text x="9.3152%" y="895.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (1 samples, 0.02%)</title><rect x="9.0652%" y="869" width="0.0202%" height="15" fill="rgb(222,178,2)" fg:x="449" fg:w="1"/><text x="9.3152%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="9.0652%" y="853" width="0.0202%" height="15" fill="rgb(226,74,18)" fg:x="449" fg:w="1"/><text x="9.3152%" y="863.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::_{{closure}} (1 samples, 0.02%)</title><rect x="9.0652%" y="837" width="0.0202%" height="15" fill="rgb(225,67,54)" fg:x="449" fg:w="1"/><text x="9.3152%" y="847.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::_{{closure}} (1 samples, 0.02%)</title><rect x="9.0652%" y="821" width="0.0202%" height="15" fill="rgb(251,92,32)" fg:x="449" fg:w="1"/><text x="9.3152%" y="831.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="9.0652%" y="805" width="0.0202%" height="15" fill="rgb(228,149,22)" fg:x="449" fg:w="1"/><text x="9.3152%" y="815.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="9.0652%" y="789" width="0.0202%" height="15" fill="rgb(243,54,13)" fg:x="449" fg:w="1"/><text x="9.3152%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.02%)</title><rect x="9.0652%" y="773" width="0.0202%" height="15" fill="rgb(243,180,28)" fg:x="449" fg:w="1"/><text x="9.3152%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.02%)</title><rect x="9.0652%" y="757" width="0.0202%" height="15" fill="rgb(208,167,24)" fg:x="449" fg:w="1"/><text x="9.3152%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="9.0652%" y="741" width="0.0202%" height="15" fill="rgb(245,73,45)" fg:x="449" fg:w="1"/><text x="9.3152%" y="751.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="9.0652%" y="725" width="0.0202%" height="15" fill="rgb(237,203,48)" fg:x="449" fg:w="1"/><text x="9.3152%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="9.0652%" y="709" width="0.0202%" height="15" fill="rgb(211,197,16)" fg:x="449" fg:w="1"/><text x="9.3152%" y="719.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="9.0652%" y="693" width="0.0202%" height="15" fill="rgb(243,99,51)" fg:x="449" fg:w="1"/><text x="9.3152%" y="703.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="9.0652%" y="677" width="0.0202%" height="15" fill="rgb(215,123,29)" fg:x="449" fg:w="1"/><text x="9.3152%" y="687.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="9.0652%" y="661" width="0.0202%" height="15" fill="rgb(239,186,37)" fg:x="449" fg:w="1"/><text x="9.3152%" y="671.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="9.0652%" y="645" width="0.0202%" height="15" fill="rgb(252,136,39)" fg:x="449" fg:w="1"/><text x="9.3152%" y="655.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="9.0652%" y="629" width="0.0202%" height="15" fill="rgb(223,213,32)" fg:x="449" fg:w="1"/><text x="9.3152%" y="639.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="9.0652%" y="613" width="0.0202%" height="15" fill="rgb(233,115,5)" fg:x="449" fg:w="1"/><text x="9.3152%" y="623.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="9.0652%" y="597" width="0.0202%" height="15" fill="rgb(207,226,44)" fg:x="449" fg:w="1"/><text x="9.3152%" y="607.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="9.0652%" y="581" width="0.0202%" height="15" fill="rgb(208,126,0)" fg:x="449" fg:w="1"/><text x="9.3152%" y="591.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="9.0652%" y="565" width="0.0202%" height="15" fill="rgb(244,66,21)" fg:x="449" fg:w="1"/><text x="9.3152%" y="575.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="9.0652%" y="549" width="0.0202%" height="15" fill="rgb(222,97,12)" fg:x="449" fg:w="1"/><text x="9.3152%" y="559.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="9.0652%" y="533" width="0.0202%" height="15" fill="rgb(219,213,19)" fg:x="449" fg:w="1"/><text x="9.3152%" y="543.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="9.0652%" y="517" width="0.0202%" height="15" fill="rgb(252,169,30)" fg:x="449" fg:w="1"/><text x="9.3152%" y="527.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="9.0652%" y="501" width="0.0202%" height="15" fill="rgb(206,32,51)" fg:x="449" fg:w="1"/><text x="9.3152%" y="511.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="9.0652%" y="485" width="0.0202%" height="15" fill="rgb(250,172,42)" fg:x="449" fg:w="1"/><text x="9.3152%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (349 samples, 7.05%)</title><rect x="2.1603%" y="997" width="7.0462%" height="15" fill="rgb(209,34,43)" fg:x="107" fg:w="349"/><text x="2.4103%" y="1007.50">serde::de..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (349 samples, 7.05%)</title><rect x="2.1603%" y="981" width="7.0462%" height="15" fill="rgb(223,11,35)" fg:x="107" fg:w="349"/><text x="2.4103%" y="991.50">&lt;&amp;mut son..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (349 samples, 7.05%)</title><rect x="2.1603%" y="965" width="7.0462%" height="15" fill="rgb(251,219,26)" fg:x="107" fg:w="349"/><text x="2.4103%" y="975.50">&lt;serde::d..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (49 samples, 0.99%)</title><rect x="8.2172%" y="949" width="0.9893%" height="15" fill="rgb(231,119,3)" fg:x="407" fg:w="49"/><text x="8.4672%" y="959.50"></text></g><g><title>?? (44 samples, 0.89%)</title><rect x="8.3182%" y="933" width="0.8884%" height="15" fill="rgb(216,97,11)" fg:x="412" fg:w="44"/><text x="8.5682%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.12%)</title><rect x="9.0854%" y="917" width="0.1211%" height="15" fill="rgb(223,59,9)" fg:x="450" fg:w="6"/><text x="9.3354%" y="927.50"></text></g><g><title>emap_alloc_ctx_lookup (3 samples, 0.06%)</title><rect x="9.2469%" y="789" width="0.0606%" height="15" fill="rgb(233,93,31)" fg:x="458" fg:w="3"/><text x="9.4969%" y="799.50"></text></g><g><title>rtree_metadata_read (3 samples, 0.06%)</title><rect x="9.2469%" y="773" width="0.0606%" height="15" fill="rgb(239,81,33)" fg:x="458" fg:w="3"/><text x="9.4969%" y="783.50"></text></g><g><title>rtree_leaf_elm_read (3 samples, 0.06%)</title><rect x="9.2469%" y="757" width="0.0606%" height="15" fill="rgb(213,120,34)" fg:x="458" fg:w="3"/><text x="9.4969%" y="767.50"></text></g><g><title>rtree_leaf_elm_bits_decode (3 samples, 0.06%)</title><rect x="9.2469%" y="741" width="0.0606%" height="15" fill="rgb(243,49,53)" fg:x="458" fg:w="3"/><text x="9.4969%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.10%)</title><rect x="9.3075%" y="757" width="0.1009%" height="15" fill="rgb(247,216,33)" fg:x="461" fg:w="5"/><text x="9.5575%" y="767.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (3 samples, 0.06%)</title><rect x="9.4084%" y="757" width="0.0606%" height="15" fill="rgb(226,26,14)" fg:x="466" fg:w="3"/><text x="9.6584%" y="767.50"></text></g><g><title>edata_usize_get (3 samples, 0.06%)</title><rect x="9.4084%" y="741" width="0.0606%" height="15" fill="rgb(215,49,53)" fg:x="466" fg:w="3"/><text x="9.6584%" y="751.50"></text></g><g><title>sz_index2size (3 samples, 0.06%)</title><rect x="9.4084%" y="725" width="0.0606%" height="15" fill="rgb(245,162,40)" fg:x="466" fg:w="3"/><text x="9.6584%" y="735.50"></text></g><g><title>sz_index2size_lookup (3 samples, 0.06%)</title><rect x="9.4084%" y="709" width="0.0606%" height="15" fill="rgb(229,68,17)" fg:x="466" fg:w="3"/><text x="9.6584%" y="719.50"></text></g><g><title>sz_index2size_lookup_impl (3 samples, 0.06%)</title><rect x="9.4084%" y="693" width="0.0606%" height="15" fill="rgb(213,182,10)" fg:x="466" fg:w="3"/><text x="9.6584%" y="703.50"></text></g><g><title>_rjem_je_large_malloc (1 samples, 0.02%)</title><rect x="9.4690%" y="709" width="0.0202%" height="15" fill="rgb(245,125,30)" fg:x="469" fg:w="1"/><text x="9.7190%" y="719.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.02%)</title><rect x="9.4892%" y="709" width="0.0202%" height="15" fill="rgb(232,202,2)" fg:x="470" fg:w="1"/><text x="9.7392%" y="719.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.02%)</title><rect x="9.4892%" y="693" width="0.0202%" height="15" fill="rgb(237,140,51)" fg:x="470" fg:w="1"/><text x="9.7392%" y="703.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="9.4892%" y="677" width="0.0202%" height="15" fill="rgb(236,157,25)" fg:x="470" fg:w="1"/><text x="9.7392%" y="687.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="9.4892%" y="661" width="0.0202%" height="15" fill="rgb(219,209,0)" fg:x="470" fg:w="1"/><text x="9.7392%" y="671.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="9.4892%" y="645" width="0.0202%" height="15" fill="rgb(240,116,54)" fg:x="470" fg:w="1"/><text x="9.7392%" y="655.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="9.4892%" y="629" width="0.0202%" height="15" fill="rgb(216,10,36)" fg:x="470" fg:w="1"/><text x="9.7392%" y="639.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect x="9.4892%" y="613" width="0.0202%" height="15" fill="rgb(222,72,44)" fg:x="470" fg:w="1"/><text x="9.7392%" y="623.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect x="9.4892%" y="597" width="0.0202%" height="15" fill="rgb(232,159,9)" fg:x="470" fg:w="1"/><text x="9.7392%" y="607.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="9.4892%" y="581" width="0.0202%" height="15" fill="rgb(210,39,32)" fg:x="470" fg:w="1"/><text x="9.7392%" y="591.50"></text></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect x="9.4892%" y="565" width="0.0202%" height="15" fill="rgb(216,194,45)" fg:x="470" fg:w="1"/><text x="9.7392%" y="575.50"></text></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect x="9.4892%" y="549" width="0.0202%" height="15" fill="rgb(218,18,35)" fg:x="470" fg:w="1"/><text x="9.7392%" y="559.50"></text></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect x="9.4892%" y="533" width="0.0202%" height="15" fill="rgb(207,83,51)" fg:x="470" fg:w="1"/><text x="9.7392%" y="543.50"></text></g><g><title>_rjem_je_emap_split_prepare (1 samples, 0.02%)</title><rect x="9.4892%" y="517" width="0.0202%" height="15" fill="rgb(225,63,43)" fg:x="470" fg:w="1"/><text x="9.7392%" y="527.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (1 samples, 0.02%)</title><rect x="9.4892%" y="501" width="0.0202%" height="15" fill="rgb(207,57,36)" fg:x="470" fg:w="1"/><text x="9.7392%" y="511.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="9.4892%" y="485" width="0.0202%" height="15" fill="rgb(216,99,33)" fg:x="470" fg:w="1"/><text x="9.7392%" y="495.50"></text></g><g><title>rtree_leafkey (1 samples, 0.02%)</title><rect x="9.4892%" y="469" width="0.0202%" height="15" fill="rgb(225,42,16)" fg:x="470" fg:w="1"/><text x="9.7392%" y="479.50"></text></g><g><title>iralloct (11 samples, 0.22%)</title><rect x="9.3075%" y="789" width="0.2221%" height="15" fill="rgb(220,201,45)" fg:x="461" fg:w="11"/><text x="9.5575%" y="799.50"></text></g><g><title>_rjem_je_arena_ralloc (11 samples, 0.22%)</title><rect x="9.3075%" y="773" width="0.2221%" height="15" fill="rgb(225,33,4)" fg:x="461" fg:w="11"/><text x="9.5575%" y="783.50"></text></g><g><title>arena_ralloc_move_helper (3 samples, 0.06%)</title><rect x="9.4690%" y="757" width="0.0606%" height="15" fill="rgb(224,33,50)" fg:x="469" fg:w="3"/><text x="9.7190%" y="767.50"></text></g><g><title>arena_malloc (3 samples, 0.06%)</title><rect x="9.4690%" y="741" width="0.0606%" height="15" fill="rgb(246,198,51)" fg:x="469" fg:w="3"/><text x="9.7190%" y="751.50"></text></g><g><title>tcache_alloc_large (3 samples, 0.06%)</title><rect x="9.4690%" y="725" width="0.0606%" height="15" fill="rgb(205,22,4)" fg:x="469" fg:w="3"/><text x="9.7190%" y="735.50"></text></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect x="9.5094%" y="709" width="0.0202%" height="15" fill="rgb(206,3,8)" fg:x="471" fg:w="1"/><text x="9.7594%" y="719.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="9.5094%" y="693" width="0.0202%" height="15" fill="rgb(251,23,15)" fg:x="471" fg:w="1"/><text x="9.7594%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 0.36%)</title><rect x="9.2065%" y="949" width="0.3634%" height="15" fill="rgb(252,88,28)" fg:x="456" fg:w="18"/><text x="9.4565%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.34%)</title><rect x="9.2267%" y="933" width="0.3432%" height="15" fill="rgb(212,127,14)" fg:x="457" fg:w="17"/><text x="9.4767%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.34%)</title><rect x="9.2267%" y="917" width="0.3432%" height="15" fill="rgb(247,145,37)" fg:x="457" fg:w="17"/><text x="9.4767%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.34%)</title><rect x="9.2267%" y="901" width="0.3432%" height="15" fill="rgb(209,117,53)" fg:x="457" fg:w="17"/><text x="9.4767%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.34%)</title><rect x="9.2267%" y="885" width="0.3432%" height="15" fill="rgb(212,90,42)" fg:x="457" fg:w="17"/><text x="9.4767%" y="895.50"></text></g><g><title>?? (17 samples, 0.34%)</title><rect x="9.2267%" y="869" width="0.3432%" height="15" fill="rgb(218,164,37)" fg:x="457" fg:w="17"/><text x="9.4767%" y="879.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.34%)</title><rect x="9.2267%" y="853" width="0.3432%" height="15" fill="rgb(246,65,34)" fg:x="457" fg:w="17"/><text x="9.4767%" y="863.50"></text></g><g><title>__rust_realloc (17 samples, 0.34%)</title><rect x="9.2267%" y="837" width="0.3432%" height="15" fill="rgb(231,100,33)" fg:x="457" fg:w="17"/><text x="9.4767%" y="847.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (17 samples, 0.34%)</title><rect x="9.2267%" y="821" width="0.3432%" height="15" fill="rgb(228,126,14)" fg:x="457" fg:w="17"/><text x="9.4767%" y="831.50"></text></g><g><title>do_rallocx (17 samples, 0.34%)</title><rect x="9.2267%" y="805" width="0.3432%" height="15" fill="rgb(215,173,21)" fg:x="457" fg:w="17"/><text x="9.4767%" y="815.50"></text></g><g><title>thread_dalloc_event (2 samples, 0.04%)</title><rect x="9.5296%" y="789" width="0.0404%" height="15" fill="rgb(210,6,40)" fg:x="472" fg:w="2"/><text x="9.7796%" y="799.50"></text></g><g><title>te_event_advance (2 samples, 0.04%)</title><rect x="9.5296%" y="773" width="0.0404%" height="15" fill="rgb(212,48,18)" fg:x="472" fg:w="2"/><text x="9.7796%" y="783.50"></text></g><g><title>_rjem_je_te_event_trigger (2 samples, 0.04%)</title><rect x="9.5296%" y="757" width="0.0404%" height="15" fill="rgb(230,214,11)" fg:x="472" fg:w="2"/><text x="9.7796%" y="767.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="9.5700%" y="949" width="0.0606%" height="15" fill="rgb(254,105,39)" fg:x="474" fg:w="3"/><text x="9.8200%" y="959.50"></text></g><g><title>core::ptr::write (3 samples, 0.06%)</title><rect x="9.5700%" y="933" width="0.0606%" height="15" fill="rgb(245,158,5)" fg:x="474" fg:w="3"/><text x="9.8200%" y="943.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect x="9.8122%" y="869" width="0.0404%" height="15" fill="rgb(249,208,11)" fg:x="486" fg:w="2"/><text x="10.0622%" y="879.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="10.1555%" y="853" width="0.0202%" height="15" fill="rgb(210,39,28)" fg:x="503" fg:w="1"/><text x="10.4055%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.16%)</title><rect x="10.1757%" y="853" width="0.1615%" height="15" fill="rgb(211,56,53)" fg:x="504" fg:w="8"/><text x="10.4257%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="10.3977%" y="757" width="0.0202%" height="15" fill="rgb(226,201,30)" fg:x="515" fg:w="1"/><text x="10.6477%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="10.3977%" y="741" width="0.0202%" height="15" fill="rgb(239,101,34)" fg:x="515" fg:w="1"/><text x="10.6477%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="10.3977%" y="725" width="0.0202%" height="15" fill="rgb(226,209,5)" fg:x="515" fg:w="1"/><text x="10.6477%" y="735.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for ()&gt;::deserialize (3 samples, 0.06%)</title><rect x="10.3977%" y="805" width="0.0606%" height="15" fill="rgb(250,105,47)" fg:x="515" fg:w="3"/><text x="10.6477%" y="815.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_unit (3 samples, 0.06%)</title><rect x="10.3977%" y="789" width="0.0606%" height="15" fill="rgb(230,72,3)" fg:x="515" fg:w="3"/><text x="10.6477%" y="799.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="10.3977%" y="773" width="0.0606%" height="15" fill="rgb(232,218,39)" fg:x="515" fg:w="3"/><text x="10.6477%" y="783.50"></text></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect x="10.4179%" y="757" width="0.0404%" height="15" fill="rgb(248,166,6)" fg:x="516" fg:w="2"/><text x="10.6679%" y="767.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="10.4179%" y="741" width="0.0404%" height="15" fill="rgb(247,89,20)" fg:x="516" fg:w="2"/><text x="10.6679%" y="751.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (1 samples, 0.02%)</title><rect x="10.4785%" y="725" width="0.0202%" height="15" fill="rgb(248,130,54)" fg:x="519" fg:w="1"/><text x="10.7285%" y="735.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="10.4785%" y="709" width="0.0202%" height="15" fill="rgb(234,196,4)" fg:x="519" fg:w="1"/><text x="10.7285%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="10.4785%" y="693" width="0.0202%" height="15" fill="rgb(250,143,31)" fg:x="519" fg:w="1"/><text x="10.7285%" y="703.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="10.4785%" y="741" width="0.0606%" height="15" fill="rgb(211,110,34)" fg:x="519" fg:w="3"/><text x="10.7285%" y="751.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="10.4987%" y="725" width="0.0404%" height="15" fill="rgb(215,124,48)" fg:x="520" fg:w="2"/><text x="10.7487%" y="735.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2 samples, 0.04%)</title><rect x="10.4987%" y="709" width="0.0404%" height="15" fill="rgb(216,46,13)" fg:x="520" fg:w="2"/><text x="10.7487%" y="719.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="10.4785%" y="757" width="0.0808%" height="15" fill="rgb(205,184,25)" fg:x="519" fg:w="4"/><text x="10.7285%" y="767.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="10.5391%" y="741" width="0.0202%" height="15" fill="rgb(228,1,10)" fg:x="522" fg:w="1"/><text x="10.7891%" y="751.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="10.5391%" y="725" width="0.0202%" height="15" fill="rgb(213,116,27)" fg:x="522" fg:w="1"/><text x="10.7891%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="10.5593%" y="757" width="0.0404%" height="15" fill="rgb(241,95,50)" fg:x="523" fg:w="2"/><text x="10.8093%" y="767.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.04%)</title><rect x="10.5996%" y="469" width="0.0404%" height="15" fill="rgb(238,48,32)" fg:x="525" fg:w="2"/><text x="10.8496%" y="479.50"></text></g><g><title>cache_bin_alloc_impl (2 samples, 0.04%)</title><rect x="10.5996%" y="453" width="0.0404%" height="15" fill="rgb(235,113,49)" fg:x="525" fg:w="2"/><text x="10.8496%" y="463.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="10.5996%" y="597" width="0.0606%" height="15" fill="rgb(205,127,43)" fg:x="525" fg:w="3"/><text x="10.8496%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="10.5996%" y="581" width="0.0606%" height="15" fill="rgb(250,162,2)" fg:x="525" fg:w="3"/><text x="10.8496%" y="591.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="10.5996%" y="565" width="0.0606%" height="15" fill="rgb(220,13,41)" fg:x="525" fg:w="3"/><text x="10.8496%" y="575.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="10.5996%" y="549" width="0.0606%" height="15" fill="rgb(249,221,25)" fg:x="525" fg:w="3"/><text x="10.8496%" y="559.50"></text></g><g><title>__rust_alloc (3 samples, 0.06%)</title><rect x="10.5996%" y="533" width="0.0606%" height="15" fill="rgb(215,208,19)" fg:x="525" fg:w="3"/><text x="10.8496%" y="543.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.06%)</title><rect x="10.5996%" y="517" width="0.0606%" height="15" fill="rgb(236,175,2)" fg:x="525" fg:w="3"/><text x="10.8496%" y="527.50"></text></g><g><title>_rjem_malloc (3 samples, 0.06%)</title><rect x="10.5996%" y="501" width="0.0606%" height="15" fill="rgb(241,52,2)" fg:x="525" fg:w="3"/><text x="10.8496%" y="511.50"></text></g><g><title>imalloc_fastpath (3 samples, 0.06%)</title><rect x="10.5996%" y="485" width="0.0606%" height="15" fill="rgb(248,140,14)" fg:x="525" fg:w="3"/><text x="10.8496%" y="495.50"></text></g><g><title>te_malloc_fastpath_ctx (1 samples, 0.02%)</title><rect x="10.6400%" y="469" width="0.0202%" height="15" fill="rgb(253,22,42)" fg:x="527" fg:w="1"/><text x="10.8900%" y="479.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (4 samples, 0.08%)</title><rect x="10.5996%" y="757" width="0.0808%" height="15" fill="rgb(234,61,47)" fg:x="525" fg:w="4"/><text x="10.8496%" y="767.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (4 samples, 0.08%)</title><rect x="10.5996%" y="741" width="0.0808%" height="15" fill="rgb(208,226,15)" fg:x="525" fg:w="4"/><text x="10.8496%" y="751.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.08%)</title><rect x="10.5996%" y="725" width="0.0808%" height="15" fill="rgb(217,221,4)" fg:x="525" fg:w="4"/><text x="10.8496%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.08%)</title><rect x="10.5996%" y="709" width="0.0808%" height="15" fill="rgb(212,174,34)" fg:x="525" fg:w="4"/><text x="10.8496%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.08%)</title><rect x="10.5996%" y="693" width="0.0808%" height="15" fill="rgb(253,83,4)" fg:x="525" fg:w="4"/><text x="10.8496%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.08%)</title><rect x="10.5996%" y="677" width="0.0808%" height="15" fill="rgb(250,195,49)" fg:x="525" fg:w="4"/><text x="10.8496%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.08%)</title><rect x="10.5996%" y="661" width="0.0808%" height="15" fill="rgb(241,192,25)" fg:x="525" fg:w="4"/><text x="10.8496%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.08%)</title><rect x="10.5996%" y="645" width="0.0808%" height="15" fill="rgb(208,124,10)" fg:x="525" fg:w="4"/><text x="10.8496%" y="655.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="10.5996%" y="629" width="0.0808%" height="15" fill="rgb(222,33,0)" fg:x="525" fg:w="4"/><text x="10.8496%" y="639.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="10.5996%" y="613" width="0.0808%" height="15" fill="rgb(234,209,28)" fg:x="525" fg:w="4"/><text x="10.8496%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="10.6602%" y="597" width="0.0202%" height="15" fill="rgb(224,11,23)" fg:x="528" fg:w="1"/><text x="10.9102%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (12 samples, 0.24%)</title><rect x="10.4583%" y="805" width="0.2423%" height="15" fill="rgb(232,99,1)" fg:x="518" fg:w="12"/><text x="10.7083%" y="815.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (12 samples, 0.24%)</title><rect x="10.4583%" y="789" width="0.2423%" height="15" fill="rgb(237,95,45)" fg:x="518" fg:w="12"/><text x="10.7083%" y="799.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (12 samples, 0.24%)</title><rect x="10.4583%" y="773" width="0.2423%" height="15" fill="rgb(208,109,11)" fg:x="518" fg:w="12"/><text x="10.7083%" y="783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="10.6804%" y="757" width="0.0202%" height="15" fill="rgb(216,190,48)" fg:x="529" fg:w="1"/><text x="10.9304%" y="767.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="10.7410%" y="773" width="0.0404%" height="15" fill="rgb(251,171,36)" fg:x="532" fg:w="2"/><text x="10.9910%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.04%)</title><rect x="10.9429%" y="709" width="0.0404%" height="15" fill="rgb(230,62,22)" fg:x="542" fg:w="2"/><text x="11.1929%" y="719.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="10.9832%" y="709" width="0.0202%" height="15" fill="rgb(225,114,35)" fg:x="544" fg:w="1"/><text x="11.2332%" y="719.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="10.9832%" y="693" width="0.0202%" height="15" fill="rgb(215,118,42)" fg:x="544" fg:w="1"/><text x="11.2332%" y="703.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="10.9832%" y="677" width="0.0202%" height="15" fill="rgb(243,119,21)" fg:x="544" fg:w="1"/><text x="11.2332%" y="687.50"></text></g><g><title>?? (6 samples, 0.12%)</title><rect x="10.9429%" y="725" width="0.1211%" height="15" fill="rgb(252,177,53)" fg:x="542" fg:w="6"/><text x="11.1929%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.06%)</title><rect x="11.0034%" y="709" width="0.0606%" height="15" fill="rgb(237,209,29)" fg:x="545" fg:w="3"/><text x="11.2534%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.06%)</title><rect x="11.0034%" y="693" width="0.0606%" height="15" fill="rgb(212,65,23)" fg:x="545" fg:w="3"/><text x="11.2534%" y="703.50"></text></g><g><title>emap_alloc_ctx_lookup (1 samples, 0.02%)</title><rect x="11.2659%" y="597" width="0.0202%" height="15" fill="rgb(230,222,46)" fg:x="558" fg:w="1"/><text x="11.5159%" y="607.50"></text></g><g><title>rtree_metadata_read (1 samples, 0.02%)</title><rect x="11.2659%" y="581" width="0.0202%" height="15" fill="rgb(215,135,32)" fg:x="558" fg:w="1"/><text x="11.5159%" y="591.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="11.2659%" y="565" width="0.0202%" height="15" fill="rgb(246,101,22)" fg:x="558" fg:w="1"/><text x="11.5159%" y="575.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="11.2659%" y="549" width="0.0202%" height="15" fill="rgb(206,107,13)" fg:x="558" fg:w="1"/><text x="11.5159%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="11.3265%" y="565" width="0.0202%" height="15" fill="rgb(250,100,44)" fg:x="561" fg:w="1"/><text x="11.5765%" y="575.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (3 samples, 0.06%)</title><rect x="11.3467%" y="565" width="0.0606%" height="15" fill="rgb(231,147,38)" fg:x="562" fg:w="3"/><text x="11.5967%" y="575.50"></text></g><g><title>edata_usize_get (1 samples, 0.02%)</title><rect x="11.3870%" y="549" width="0.0202%" height="15" fill="rgb(229,8,40)" fg:x="564" fg:w="1"/><text x="11.6370%" y="559.50"></text></g><g><title>sz_index2size (1 samples, 0.02%)</title><rect x="11.3870%" y="533" width="0.0202%" height="15" fill="rgb(221,135,30)" fg:x="564" fg:w="1"/><text x="11.6370%" y="543.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="11.3870%" y="517" width="0.0202%" height="15" fill="rgb(249,193,18)" fg:x="564" fg:w="1"/><text x="11.6370%" y="527.50"></text></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect x="11.3870%" y="501" width="0.0202%" height="15" fill="rgb(209,133,39)" fg:x="564" fg:w="1"/><text x="11.6370%" y="511.50"></text></g><g><title>_rjem_je_hook_invoke_alloc (2 samples, 0.04%)</title><rect x="11.4072%" y="565" width="0.0404%" height="15" fill="rgb(232,100,14)" fg:x="565" fg:w="2"/><text x="11.6572%" y="575.50"></text></g><g><title>atomic_load_u (1 samples, 0.02%)</title><rect x="11.4274%" y="549" width="0.0202%" height="15" fill="rgb(224,185,1)" fg:x="566" fg:w="1"/><text x="11.6774%" y="559.50"></text></g><g><title>_rjem_je_hook_invoke_dalloc (1 samples, 0.02%)</title><rect x="11.4476%" y="565" width="0.0202%" height="15" fill="rgb(223,139,8)" fg:x="567" fg:w="1"/><text x="11.6976%" y="575.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="11.4678%" y="485" width="0.0202%" height="15" fill="rgb(232,213,38)" fg:x="568" fg:w="1"/><text x="11.7178%" y="495.50"></text></g><g><title>arena_decay_tick (1 samples, 0.02%)</title><rect x="11.4880%" y="485" width="0.0202%" height="15" fill="rgb(207,94,22)" fg:x="569" fg:w="1"/><text x="11.7380%" y="495.50"></text></g><g><title>arena_decay_ticks (1 samples, 0.02%)</title><rect x="11.4880%" y="469" width="0.0202%" height="15" fill="rgb(219,183,54)" fg:x="569" fg:w="1"/><text x="11.7380%" y="479.50"></text></g><g><title>_rjem_je_arena_decay (1 samples, 0.02%)</title><rect x="11.4880%" y="453" width="0.0202%" height="15" fill="rgb(216,185,54)" fg:x="569" fg:w="1"/><text x="11.7380%" y="463.50"></text></g><g><title>arena_decay_dirty (1 samples, 0.02%)</title><rect x="11.4880%" y="437" width="0.0202%" height="15" fill="rgb(254,217,39)" fg:x="569" fg:w="1"/><text x="11.7380%" y="447.50"></text></g><g><title>arena_decay_impl (1 samples, 0.02%)</title><rect x="11.4880%" y="421" width="0.0202%" height="15" fill="rgb(240,178,23)" fg:x="569" fg:w="1"/><text x="11.7380%" y="431.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="11.4880%" y="405" width="0.0202%" height="15" fill="rgb(218,11,47)" fg:x="569" fg:w="1"/><text x="11.7380%" y="415.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="11.5486%" y="373" width="0.0202%" height="15" fill="rgb(218,51,51)" fg:x="572" fg:w="1"/><text x="11.7986%" y="383.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="11.5486%" y="357" width="0.0202%" height="15" fill="rgb(238,126,27)" fg:x="572" fg:w="1"/><text x="11.7986%" y="367.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="11.5486%" y="341" width="0.0202%" height="15" fill="rgb(249,202,22)" fg:x="572" fg:w="1"/><text x="11.7986%" y="351.50"></text></g><g><title>eset_stats_sub (1 samples, 0.02%)</title><rect x="11.5486%" y="325" width="0.0202%" height="15" fill="rgb(254,195,49)" fg:x="572" fg:w="1"/><text x="11.7986%" y="335.50"></text></g><g><title>atomic_store_zu (1 samples, 0.02%)</title><rect x="11.5486%" y="309" width="0.0202%" height="15" fill="rgb(208,123,14)" fg:x="572" fg:w="1"/><text x="11.7986%" y="319.50"></text></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect x="11.5687%" y="373" width="0.0202%" height="15" fill="rgb(224,200,8)" fg:x="573" fg:w="1"/><text x="11.8187%" y="383.50"></text></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect x="11.5687%" y="357" width="0.0202%" height="15" fill="rgb(217,61,36)" fg:x="573" fg:w="1"/><text x="11.8187%" y="367.50"></text></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect x="11.5687%" y="341" width="0.0202%" height="15" fill="rgb(206,35,45)" fg:x="573" fg:w="1"/><text x="11.8187%" y="351.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect x="11.5687%" y="325" width="0.0202%" height="15" fill="rgb(217,65,33)" fg:x="573" fg:w="1"/><text x="11.8187%" y="335.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="11.5687%" y="309" width="0.0202%" height="15" fill="rgb(222,158,48)" fg:x="573" fg:w="1"/><text x="11.8187%" y="319.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="11.5687%" y="293" width="0.0202%" height="15" fill="rgb(254,2,54)" fg:x="573" fg:w="1"/><text x="11.8187%" y="303.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="11.5687%" y="277" width="0.0202%" height="15" fill="rgb(250,143,38)" fg:x="573" fg:w="1"/><text x="11.8187%" y="287.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="11.5687%" y="261" width="0.0202%" height="15" fill="rgb(248,25,0)" fg:x="573" fg:w="1"/><text x="11.8187%" y="271.50"></text></g><g><title>_rjem_je_ecache_alloc (4 samples, 0.08%)</title><rect x="11.5486%" y="405" width="0.0808%" height="15" fill="rgb(206,152,27)" fg:x="572" fg:w="4"/><text x="11.7986%" y="415.50"></text></g><g><title>extent_recycle (4 samples, 0.08%)</title><rect x="11.5486%" y="389" width="0.0808%" height="15" fill="rgb(240,77,30)" fg:x="572" fg:w="4"/><text x="11.7986%" y="399.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.04%)</title><rect x="11.5889%" y="373" width="0.0404%" height="15" fill="rgb(231,5,3)" fg:x="574" fg:w="2"/><text x="11.8389%" y="383.50"></text></g><g><title>malloc_mutex_trylock_final (2 samples, 0.04%)</title><rect x="11.5889%" y="357" width="0.0404%" height="15" fill="rgb(207,226,32)" fg:x="574" fg:w="2"/><text x="11.8389%" y="367.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="11.5889%" y="341" width="0.0404%" height="15" fill="rgb(222,207,47)" fg:x="574" fg:w="2"/><text x="11.8389%" y="351.50"></text></g><g><title>_rjem_je_emap_update_edata_state (1 samples, 0.02%)</title><rect x="11.6293%" y="325" width="0.0202%" height="15" fill="rgb(229,115,45)" fg:x="576" fg:w="1"/><text x="11.8793%" y="335.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="11.6293%" y="309" width="0.0202%" height="15" fill="rgb(224,191,6)" fg:x="576" fg:w="1"/><text x="11.8793%" y="319.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect x="11.6293%" y="293" width="0.0202%" height="15" fill="rgb(230,227,24)" fg:x="576" fg:w="1"/><text x="11.8793%" y="303.50"></text></g><g><title>extent_recycle_extract (2 samples, 0.04%)</title><rect x="11.6293%" y="357" width="0.0404%" height="15" fill="rgb(228,80,19)" fg:x="576" fg:w="2"/><text x="11.8793%" y="367.50"></text></g><g><title>extent_activate_locked (2 samples, 0.04%)</title><rect x="11.6293%" y="341" width="0.0404%" height="15" fill="rgb(247,229,0)" fg:x="576" fg:w="2"/><text x="11.8793%" y="351.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="11.6495%" y="325" width="0.0202%" height="15" fill="rgb(237,194,15)" fg:x="577" fg:w="1"/><text x="11.8995%" y="335.50"></text></g><g><title>eset_stats_sub (1 samples, 0.02%)</title><rect x="11.6495%" y="309" width="0.0202%" height="15" fill="rgb(219,203,20)" fg:x="577" fg:w="1"/><text x="11.8995%" y="319.50"></text></g><g><title>atomic_store_zu (1 samples, 0.02%)</title><rect x="11.6495%" y="293" width="0.0202%" height="15" fill="rgb(234,128,8)" fg:x="577" fg:w="1"/><text x="11.8995%" y="303.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="11.6697%" y="341" width="0.0202%" height="15" fill="rgb(248,202,8)" fg:x="578" fg:w="1"/><text x="11.9197%" y="351.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="11.6697%" y="325" width="0.0202%" height="15" fill="rgb(206,104,37)" fg:x="578" fg:w="1"/><text x="11.9197%" y="335.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="11.6697%" y="309" width="0.0202%" height="15" fill="rgb(223,8,27)" fg:x="578" fg:w="1"/><text x="11.9197%" y="319.50"></text></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.02%)</title><rect x="11.6697%" y="293" width="0.0202%" height="15" fill="rgb(216,217,28)" fg:x="578" fg:w="1"/><text x="11.9197%" y="303.50"></text></g><g><title>ph_insert (1 samples, 0.02%)</title><rect x="11.6697%" y="277" width="0.0202%" height="15" fill="rgb(249,199,1)" fg:x="578" fg:w="1"/><text x="11.9197%" y="287.50"></text></g><g><title>_rjem_je_base_alloc_edata (1 samples, 0.02%)</title><rect x="11.6899%" y="309" width="0.0202%" height="15" fill="rgb(240,85,17)" fg:x="579" fg:w="1"/><text x="11.9399%" y="319.50"></text></g><g><title>base_alloc_impl (1 samples, 0.02%)</title><rect x="11.6899%" y="293" width="0.0202%" height="15" fill="rgb(206,108,45)" fg:x="579" fg:w="1"/><text x="11.9399%" y="303.50"></text></g><g><title>_rjem_je_edata_heap_remove_first (1 samples, 0.02%)</title><rect x="11.6899%" y="277" width="0.0202%" height="15" fill="rgb(245,210,41)" fg:x="579" fg:w="1"/><text x="11.9399%" y="287.50"></text></g><g><title>extent_recycle_split (3 samples, 0.06%)</title><rect x="11.6697%" y="357" width="0.0606%" height="15" fill="rgb(206,13,37)" fg:x="578" fg:w="3"/><text x="11.9197%" y="367.50"></text></g><g><title>extent_split_interior (2 samples, 0.04%)</title><rect x="11.6899%" y="341" width="0.0404%" height="15" fill="rgb(250,61,18)" fg:x="579" fg:w="2"/><text x="11.9399%" y="351.50"></text></g><g><title>extent_split_impl (2 samples, 0.04%)</title><rect x="11.6899%" y="325" width="0.0404%" height="15" fill="rgb(235,172,48)" fg:x="579" fg:w="2"/><text x="11.9399%" y="335.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect x="11.7101%" y="309" width="0.0202%" height="15" fill="rgb(249,201,17)" fg:x="580" fg:w="1"/><text x="11.9601%" y="319.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="11.7101%" y="293" width="0.0202%" height="15" fill="rgb(219,208,6)" fg:x="580" fg:w="1"/><text x="11.9601%" y="303.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="11.7101%" y="277" width="0.0202%" height="15" fill="rgb(248,31,23)" fg:x="580" fg:w="1"/><text x="11.9601%" y="287.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="11.7101%" y="261" width="0.0202%" height="15" fill="rgb(245,15,42)" fg:x="580" fg:w="1"/><text x="11.9601%" y="271.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="11.7101%" y="245" width="0.0202%" height="15" fill="rgb(222,217,39)" fg:x="580" fg:w="1"/><text x="11.9601%" y="255.50"></text></g><g><title>extent_recycle (6 samples, 0.12%)</title><rect x="11.6293%" y="373" width="0.1211%" height="15" fill="rgb(210,219,27)" fg:x="576" fg:w="6"/><text x="11.8793%" y="383.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="11.7303%" y="357" width="0.0202%" height="15" fill="rgb(252,166,36)" fg:x="581" fg:w="1"/><text x="11.9803%" y="367.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="11.7303%" y="341" width="0.0202%" height="15" fill="rgb(245,132,34)" fg:x="581" fg:w="1"/><text x="11.9803%" y="351.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (7 samples, 0.14%)</title><rect x="11.6293%" y="405" width="0.1413%" height="15" fill="rgb(236,54,3)" fg:x="576" fg:w="7"/><text x="11.8793%" y="415.50"></text></g><g><title>extent_alloc_retained (7 samples, 0.14%)</title><rect x="11.6293%" y="389" width="0.1413%" height="15" fill="rgb(241,173,43)" fg:x="576" fg:w="7"/><text x="11.8793%" y="399.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="11.7505%" y="373" width="0.0202%" height="15" fill="rgb(215,190,9)" fg:x="582" fg:w="1"/><text x="12.0005%" y="383.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="11.7505%" y="357" width="0.0202%" height="15" fill="rgb(242,101,16)" fg:x="582" fg:w="1"/><text x="12.0005%" y="367.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="11.7505%" y="341" width="0.0202%" height="15" fill="rgb(223,190,21)" fg:x="582" fg:w="1"/><text x="12.0005%" y="351.50"></text></g><g><title>arena_slab_alloc (14 samples, 0.28%)</title><rect x="11.5082%" y="485" width="0.2827%" height="15" fill="rgb(215,228,25)" fg:x="570" fg:w="14"/><text x="11.7582%" y="495.50"></text></g><g><title>_rjem_je_pa_alloc (14 samples, 0.28%)</title><rect x="11.5082%" y="469" width="0.2827%" height="15" fill="rgb(225,36,22)" fg:x="570" fg:w="14"/><text x="11.7582%" y="479.50"></text></g><g><title>pai_alloc (13 samples, 0.26%)</title><rect x="11.5284%" y="453" width="0.2625%" height="15" fill="rgb(251,106,46)" fg:x="571" fg:w="13"/><text x="11.7784%" y="463.50"></text></g><g><title>pac_alloc_impl (13 samples, 0.26%)</title><rect x="11.5284%" y="437" width="0.2625%" height="15" fill="rgb(208,90,1)" fg:x="571" fg:w="13"/><text x="11.7784%" y="447.50"></text></g><g><title>pac_alloc_real (13 samples, 0.26%)</title><rect x="11.5284%" y="421" width="0.2625%" height="15" fill="rgb(243,10,4)" fg:x="571" fg:w="13"/><text x="11.7784%" y="431.50"></text></g><g><title>pac_may_have_muzzy (1 samples, 0.02%)</title><rect x="11.7706%" y="405" width="0.0202%" height="15" fill="rgb(212,137,27)" fg:x="583" fg:w="1"/><text x="12.0206%" y="415.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="11.7908%" y="485" width="0.0202%" height="15" fill="rgb(231,220,49)" fg:x="584" fg:w="1"/><text x="12.0408%" y="495.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="11.7908%" y="469" width="0.0202%" height="15" fill="rgb(237,96,20)" fg:x="584" fg:w="1"/><text x="12.0408%" y="479.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="11.7908%" y="453" width="0.0202%" height="15" fill="rgb(239,229,30)" fg:x="584" fg:w="1"/><text x="12.0408%" y="463.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (18 samples, 0.36%)</title><rect x="11.4678%" y="517" width="0.3634%" height="15" fill="rgb(219,65,33)" fg:x="568" fg:w="18"/><text x="11.7178%" y="527.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (18 samples, 0.36%)</title><rect x="11.4678%" y="501" width="0.3634%" height="15" fill="rgb(243,134,7)" fg:x="568" fg:w="18"/><text x="11.7178%" y="511.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="11.8110%" y="485" width="0.0202%" height="15" fill="rgb(216,177,54)" fg:x="585" fg:w="1"/><text x="12.0610%" y="495.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="11.8110%" y="469" width="0.0202%" height="15" fill="rgb(211,160,20)" fg:x="585" fg:w="1"/><text x="12.0610%" y="479.50"></text></g><g><title>arena_malloc (19 samples, 0.38%)</title><rect x="11.4678%" y="549" width="0.3836%" height="15" fill="rgb(239,85,39)" fg:x="568" fg:w="19"/><text x="11.7178%" y="559.50"></text></g><g><title>tcache_alloc_small (19 samples, 0.38%)</title><rect x="11.4678%" y="533" width="0.3836%" height="15" fill="rgb(232,125,22)" fg:x="568" fg:w="19"/><text x="11.7178%" y="543.50"></text></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect x="11.8312%" y="517" width="0.0202%" height="15" fill="rgb(244,57,34)" fg:x="586" fg:w="1"/><text x="12.0812%" y="527.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="11.8312%" y="501" width="0.0202%" height="15" fill="rgb(214,203,32)" fg:x="586" fg:w="1"/><text x="12.0812%" y="511.50"></text></g><g><title>arena_ralloc_move_helper (20 samples, 0.40%)</title><rect x="11.4678%" y="565" width="0.4038%" height="15" fill="rgb(207,58,43)" fg:x="568" fg:w="20"/><text x="11.7178%" y="575.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="11.8514%" y="549" width="0.0202%" height="15" fill="rgb(215,193,15)" fg:x="587" fg:w="1"/><text x="12.1014%" y="559.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="11.8514%" y="533" width="0.0202%" height="15" fill="rgb(232,15,44)" fg:x="587" fg:w="1"/><text x="12.1014%" y="543.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect x="11.8514%" y="517" width="0.0202%" height="15" fill="rgb(212,3,48)" fg:x="587" fg:w="1"/><text x="12.1014%" y="527.50"></text></g><g><title>iralloct (30 samples, 0.61%)</title><rect x="11.2861%" y="597" width="0.6057%" height="15" fill="rgb(218,128,7)" fg:x="559" fg:w="30"/><text x="11.5361%" y="607.50"></text></g><g><title>_rjem_je_arena_ralloc (30 samples, 0.61%)</title><rect x="11.2861%" y="581" width="0.6057%" height="15" fill="rgb(226,216,39)" fg:x="559" fg:w="30"/><text x="11.5361%" y="591.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="11.8716%" y="565" width="0.0202%" height="15" fill="rgb(243,47,51)" fg:x="588" fg:w="1"/><text x="12.1216%" y="575.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="11.8716%" y="549" width="0.0202%" height="15" fill="rgb(241,183,40)" fg:x="588" fg:w="1"/><text x="12.1216%" y="559.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="11.8716%" y="533" width="0.0202%" height="15" fill="rgb(231,217,32)" fg:x="588" fg:w="1"/><text x="12.1216%" y="543.50"></text></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect x="11.8716%" y="517" width="0.0202%" height="15" fill="rgb(229,61,38)" fg:x="588" fg:w="1"/><text x="12.1216%" y="527.50"></text></g><g><title>cache_bin_full (1 samples, 0.02%)</title><rect x="11.8716%" y="501" width="0.0202%" height="15" fill="rgb(225,210,5)" fg:x="588" fg:w="1"/><text x="12.1216%" y="511.50"></text></g><g><title>thread_alloc_event (2 samples, 0.04%)</title><rect x="11.8918%" y="597" width="0.0404%" height="15" fill="rgb(231,79,45)" fg:x="589" fg:w="2"/><text x="12.1418%" y="607.50"></text></g><g><title>te_event_advance (2 samples, 0.04%)</title><rect x="11.8918%" y="581" width="0.0404%" height="15" fill="rgb(224,100,7)" fg:x="589" fg:w="2"/><text x="12.1418%" y="591.50"></text></g><g><title>te_ctx_get (1 samples, 0.02%)</title><rect x="11.9120%" y="565" width="0.0202%" height="15" fill="rgb(241,198,18)" fg:x="590" fg:w="1"/><text x="12.1620%" y="575.50"></text></g><g><title>?? (38 samples, 0.77%)</title><rect x="11.1851%" y="677" width="0.7672%" height="15" fill="rgb(252,97,53)" fg:x="554" fg:w="38"/><text x="11.4351%" y="687.50"></text></g><g><title>alloc::alloc::realloc (38 samples, 0.77%)</title><rect x="11.1851%" y="661" width="0.7672%" height="15" fill="rgb(220,88,7)" fg:x="554" fg:w="38"/><text x="11.4351%" y="671.50"></text></g><g><title>__rust_realloc (38 samples, 0.77%)</title><rect x="11.1851%" y="645" width="0.7672%" height="15" fill="rgb(213,176,14)" fg:x="554" fg:w="38"/><text x="11.4351%" y="655.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (38 samples, 0.77%)</title><rect x="11.1851%" y="629" width="0.7672%" height="15" fill="rgb(246,73,7)" fg:x="554" fg:w="38"/><text x="11.4351%" y="639.50"></text></g><g><title>do_rallocx (38 samples, 0.77%)</title><rect x="11.1851%" y="613" width="0.7672%" height="15" fill="rgb(245,64,36)" fg:x="554" fg:w="38"/><text x="11.4351%" y="623.50"></text></g><g><title>thread_dalloc_event (1 samples, 0.02%)</title><rect x="11.9322%" y="597" width="0.0202%" height="15" fill="rgb(245,80,10)" fg:x="591" fg:w="1"/><text x="12.1822%" y="607.50"></text></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect x="11.9322%" y="581" width="0.0202%" height="15" fill="rgb(232,107,50)" fg:x="591" fg:w="1"/><text x="12.1822%" y="591.50"></text></g><g><title>te_ctx_get (1 samples, 0.02%)</title><rect x="11.9322%" y="565" width="0.0202%" height="15" fill="rgb(253,3,0)" fg:x="591" fg:w="1"/><text x="12.1822%" y="575.50"></text></g><g><title>tsd_thread_deallocated_next_event_fastp_get (1 samples, 0.02%)</title><rect x="11.9322%" y="549" width="0.0202%" height="15" fill="rgb(212,99,53)" fg:x="591" fg:w="1"/><text x="12.1822%" y="559.50"></text></g><g><title>tsd_thread_deallocated_next_event_fastp_get_unsafe (1 samples, 0.02%)</title><rect x="11.9322%" y="533" width="0.0202%" height="15" fill="rgb(249,111,54)" fg:x="591" fg:w="1"/><text x="12.1822%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (39 samples, 0.79%)</title><rect x="11.1851%" y="693" width="0.7874%" height="15" fill="rgb(249,55,30)" fg:x="554" fg:w="39"/><text x="11.4351%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="11.9524%" y="677" width="0.0202%" height="15" fill="rgb(237,47,42)" fg:x="592" fg:w="1"/><text x="12.2024%" y="687.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.02%)</title><rect x="11.9927%" y="405" width="0.0202%" height="15" fill="rgb(211,20,18)" fg:x="594" fg:w="1"/><text x="12.2427%" y="415.50"></text></g><g><title>eset_first_fit (1 samples, 0.02%)</title><rect x="11.9927%" y="389" width="0.0202%" height="15" fill="rgb(231,203,46)" fg:x="594" fg:w="1"/><text x="12.2427%" y="399.50"></text></g><g><title>extent_recycle_extract (2 samples, 0.04%)</title><rect x="11.9927%" y="421" width="0.0404%" height="15" fill="rgb(237,142,3)" fg:x="594" fg:w="2"/><text x="12.2427%" y="431.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="12.0129%" y="405" width="0.0202%" height="15" fill="rgb(241,107,1)" fg:x="595" fg:w="1"/><text x="12.2629%" y="415.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="12.0129%" y="389" width="0.0202%" height="15" fill="rgb(229,83,13)" fg:x="595" fg:w="1"/><text x="12.2629%" y="399.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (1 samples, 0.02%)</title><rect x="12.0129%" y="373" width="0.0202%" height="15" fill="rgb(241,91,40)" fg:x="595" fg:w="1"/><text x="12.2629%" y="383.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="12.0533%" y="357" width="0.0202%" height="15" fill="rgb(225,3,45)" fg:x="597" fg:w="1"/><text x="12.3033%" y="367.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="12.0533%" y="341" width="0.0202%" height="15" fill="rgb(244,223,14)" fg:x="597" fg:w="1"/><text x="12.3033%" y="351.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="12.0533%" y="325" width="0.0202%" height="15" fill="rgb(224,124,37)" fg:x="597" fg:w="1"/><text x="12.3033%" y="335.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="12.0533%" y="309" width="0.0202%" height="15" fill="rgb(251,171,30)" fg:x="597" fg:w="1"/><text x="12.3033%" y="319.50"></text></g><g><title>phn_next_set (1 samples, 0.02%)</title><rect x="12.0533%" y="293" width="0.0202%" height="15" fill="rgb(236,46,54)" fg:x="597" fg:w="1"/><text x="12.3033%" y="303.50"></text></g><g><title>extent_recycle_split (3 samples, 0.06%)</title><rect x="12.0331%" y="421" width="0.0606%" height="15" fill="rgb(245,213,5)" fg:x="596" fg:w="3"/><text x="12.2831%" y="431.50"></text></g><g><title>extent_split_interior (3 samples, 0.06%)</title><rect x="12.0331%" y="405" width="0.0606%" height="15" fill="rgb(230,144,27)" fg:x="596" fg:w="3"/><text x="12.2831%" y="415.50"></text></g><g><title>extent_split_impl (3 samples, 0.06%)</title><rect x="12.0331%" y="389" width="0.0606%" height="15" fill="rgb(220,86,6)" fg:x="596" fg:w="3"/><text x="12.2831%" y="399.50"></text></g><g><title>_rjem_je_edata_cache_get (2 samples, 0.04%)</title><rect x="12.0533%" y="373" width="0.0404%" height="15" fill="rgb(240,20,13)" fg:x="597" fg:w="2"/><text x="12.3033%" y="383.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="12.0735%" y="357" width="0.0202%" height="15" fill="rgb(217,89,34)" fg:x="598" fg:w="1"/><text x="12.3235%" y="367.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="12.0735%" y="341" width="0.0202%" height="15" fill="rgb(229,13,5)" fg:x="598" fg:w="1"/><text x="12.3235%" y="351.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="12.0937%" y="421" width="0.0202%" height="15" fill="rgb(244,67,35)" fg:x="599" fg:w="1"/><text x="12.3437%" y="431.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="12.0937%" y="405" width="0.0202%" height="15" fill="rgb(221,40,2)" fg:x="599" fg:w="1"/><text x="12.3437%" y="415.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="12.0937%" y="389" width="0.0202%" height="15" fill="rgb(237,157,21)" fg:x="599" fg:w="1"/><text x="12.3437%" y="399.50"></text></g><g><title>arena_slab_alloc (7 samples, 0.14%)</title><rect x="11.9927%" y="549" width="0.1413%" height="15" fill="rgb(222,94,11)" fg:x="594" fg:w="7"/><text x="12.2427%" y="559.50"></text></g><g><title>_rjem_je_pa_alloc (7 samples, 0.14%)</title><rect x="11.9927%" y="533" width="0.1413%" height="15" fill="rgb(249,113,6)" fg:x="594" fg:w="7"/><text x="12.2427%" y="543.50"></text></g><g><title>pai_alloc (7 samples, 0.14%)</title><rect x="11.9927%" y="517" width="0.1413%" height="15" fill="rgb(238,137,36)" fg:x="594" fg:w="7"/><text x="12.2427%" y="527.50"></text></g><g><title>pac_alloc_impl (7 samples, 0.14%)</title><rect x="11.9927%" y="501" width="0.1413%" height="15" fill="rgb(210,102,26)" fg:x="594" fg:w="7"/><text x="12.2427%" y="511.50"></text></g><g><title>pac_alloc_real (7 samples, 0.14%)</title><rect x="11.9927%" y="485" width="0.1413%" height="15" fill="rgb(218,30,30)" fg:x="594" fg:w="7"/><text x="12.2427%" y="495.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (7 samples, 0.14%)</title><rect x="11.9927%" y="469" width="0.1413%" height="15" fill="rgb(214,67,26)" fg:x="594" fg:w="7"/><text x="12.2427%" y="479.50"></text></g><g><title>extent_alloc_retained (7 samples, 0.14%)</title><rect x="11.9927%" y="453" width="0.1413%" height="15" fill="rgb(251,9,53)" fg:x="594" fg:w="7"/><text x="12.2427%" y="463.50"></text></g><g><title>extent_recycle (7 samples, 0.14%)</title><rect x="11.9927%" y="437" width="0.1413%" height="15" fill="rgb(228,204,25)" fg:x="594" fg:w="7"/><text x="12.2427%" y="447.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="12.1139%" y="421" width="0.0202%" height="15" fill="rgb(207,153,8)" fg:x="600" fg:w="1"/><text x="12.3639%" y="431.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="12.1139%" y="405" width="0.0202%" height="15" fill="rgb(242,9,16)" fg:x="600" fg:w="1"/><text x="12.3639%" y="415.50"></text></g><g><title>imalloc_no_sample (10 samples, 0.20%)</title><rect x="11.9725%" y="645" width="0.2019%" height="15" fill="rgb(217,211,10)" fg:x="593" fg:w="10"/><text x="12.2225%" y="655.50"></text></g><g><title>iallocztm (10 samples, 0.20%)</title><rect x="11.9725%" y="629" width="0.2019%" height="15" fill="rgb(219,228,52)" fg:x="593" fg:w="10"/><text x="12.2225%" y="639.50"></text></g><g><title>arena_malloc (10 samples, 0.20%)</title><rect x="11.9725%" y="613" width="0.2019%" height="15" fill="rgb(231,92,29)" fg:x="593" fg:w="10"/><text x="12.2225%" y="623.50"></text></g><g><title>tcache_alloc_small (10 samples, 0.20%)</title><rect x="11.9725%" y="597" width="0.2019%" height="15" fill="rgb(232,8,23)" fg:x="593" fg:w="10"/><text x="12.2225%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (9 samples, 0.18%)</title><rect x="11.9927%" y="581" width="0.1817%" height="15" fill="rgb(216,211,34)" fg:x="594" fg:w="9"/><text x="12.2427%" y="591.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (9 samples, 0.18%)</title><rect x="11.9927%" y="565" width="0.1817%" height="15" fill="rgb(236,151,0)" fg:x="594" fg:w="9"/><text x="12.2427%" y="575.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.04%)</title><rect x="12.1341%" y="549" width="0.0404%" height="15" fill="rgb(209,168,3)" fg:x="601" fg:w="2"/><text x="12.3841%" y="559.50"></text></g><g><title>malloc_mutex_trylock_final (2 samples, 0.04%)</title><rect x="12.1341%" y="533" width="0.0404%" height="15" fill="rgb(208,129,28)" fg:x="601" fg:w="2"/><text x="12.3841%" y="543.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="12.1341%" y="517" width="0.0404%" height="15" fill="rgb(229,78,22)" fg:x="601" fg:w="2"/><text x="12.3841%" y="527.50"></text></g><g><title>_rjem_je_malloc_default (11 samples, 0.22%)</title><rect x="11.9725%" y="693" width="0.2221%" height="15" fill="rgb(228,187,13)" fg:x="593" fg:w="11"/><text x="12.2225%" y="703.50"></text></g><g><title>imalloc (11 samples, 0.22%)</title><rect x="11.9725%" y="677" width="0.2221%" height="15" fill="rgb(240,119,24)" fg:x="593" fg:w="11"/><text x="12.2225%" y="687.50"></text></g><g><title>imalloc_body (11 samples, 0.22%)</title><rect x="11.9725%" y="661" width="0.2221%" height="15" fill="rgb(209,194,42)" fg:x="593" fg:w="11"/><text x="12.2225%" y="671.50"></text></g><g><title>thread_alloc_event (1 samples, 0.02%)</title><rect x="12.1744%" y="645" width="0.0202%" height="15" fill="rgb(247,200,46)" fg:x="603" fg:w="1"/><text x="12.4244%" y="655.50"></text></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect x="12.1744%" y="629" width="0.0202%" height="15" fill="rgb(218,76,16)" fg:x="603" fg:w="1"/><text x="12.4244%" y="639.50"></text></g><g><title>te_ctx_get (1 samples, 0.02%)</title><rect x="12.1744%" y="613" width="0.0202%" height="15" fill="rgb(225,21,48)" fg:x="603" fg:w="1"/><text x="12.4244%" y="623.50"></text></g><g><title>cache_bin_alloc_easy (4 samples, 0.08%)</title><rect x="12.2350%" y="661" width="0.0808%" height="15" fill="rgb(239,223,50)" fg:x="606" fg:w="4"/><text x="12.4850%" y="671.50"></text></g><g><title>cache_bin_alloc_impl (4 samples, 0.08%)</title><rect x="12.2350%" y="645" width="0.0808%" height="15" fill="rgb(244,45,21)" fg:x="606" fg:w="4"/><text x="12.4850%" y="655.50"></text></g><g><title>_rjem_malloc (7 samples, 0.14%)</title><rect x="12.1946%" y="693" width="0.1413%" height="15" fill="rgb(232,33,43)" fg:x="604" fg:w="7"/><text x="12.4446%" y="703.50"></text></g><g><title>imalloc_fastpath (6 samples, 0.12%)</title><rect x="12.2148%" y="677" width="0.1211%" height="15" fill="rgb(209,8,3)" fg:x="605" fg:w="6"/><text x="12.4648%" y="687.50"></text></g><g><title>sz_size2index_usize_fastpath (1 samples, 0.02%)</title><rect x="12.3158%" y="661" width="0.0202%" height="15" fill="rgb(214,25,53)" fg:x="610" fg:w="1"/><text x="12.5658%" y="671.50"></text></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect x="12.3158%" y="645" width="0.0202%" height="15" fill="rgb(254,186,54)" fg:x="610" fg:w="1"/><text x="12.5658%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (75 samples, 1.51%)</title><rect x="10.8621%" y="757" width="1.5142%" height="15" fill="rgb(208,174,49)" fg:x="538" fg:w="75"/><text x="11.1121%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (72 samples, 1.45%)</title><rect x="10.9227%" y="741" width="1.4537%" height="15" fill="rgb(233,191,51)" fg:x="541" fg:w="72"/><text x="11.1727%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (65 samples, 1.31%)</title><rect x="11.0640%" y="725" width="1.3123%" height="15" fill="rgb(222,134,10)" fg:x="548" fg:w="65"/><text x="11.3140%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (62 samples, 1.25%)</title><rect x="11.1246%" y="709" width="1.2518%" height="15" fill="rgb(230,226,20)" fg:x="551" fg:w="62"/><text x="11.3746%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="12.3360%" y="693" width="0.0404%" height="15" fill="rgb(251,111,25)" fg:x="611" fg:w="2"/><text x="12.5860%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="12.3763%" y="741" width="0.0202%" height="15" fill="rgb(224,40,46)" fg:x="613" fg:w="1"/><text x="12.6263%" y="751.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="12.3965%" y="741" width="0.0202%" height="15" fill="rgb(236,108,47)" fg:x="614" fg:w="1"/><text x="12.6465%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="12.3965%" y="725" width="0.0202%" height="15" fill="rgb(234,93,0)" fg:x="614" fg:w="1"/><text x="12.6465%" y="735.50"></text></g><g><title>?? (13 samples, 0.26%)</title><rect x="12.3763%" y="757" width="0.2625%" height="15" fill="rgb(224,213,32)" fg:x="613" fg:w="13"/><text x="12.6263%" y="767.50"></text></g><g><title>core::ptr::write (11 samples, 0.22%)</title><rect x="12.4167%" y="741" width="0.2221%" height="15" fill="rgb(251,11,48)" fg:x="615" fg:w="11"/><text x="12.6667%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.14%)</title><rect x="13.3253%" y="677" width="0.1413%" height="15" fill="rgb(236,173,5)" fg:x="660" fg:w="7"/><text x="13.5753%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.10%)</title><rect x="13.6079%" y="661" width="0.1009%" height="15" fill="rgb(230,95,12)" fg:x="674" fg:w="5"/><text x="13.8579%" y="671.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (2 samples, 0.04%)</title><rect x="14.1934%" y="549" width="0.0404%" height="15" fill="rgb(232,209,1)" fg:x="703" fg:w="2"/><text x="14.4434%" y="559.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (6 samples, 0.12%)</title><rect x="14.2338%" y="533" width="0.1211%" height="15" fill="rgb(232,6,1)" fg:x="705" fg:w="6"/><text x="14.4838%" y="543.50"></text></g><g><title>sonic_rs::reader::Reader::next (10 samples, 0.20%)</title><rect x="14.2338%" y="549" width="0.2019%" height="15" fill="rgb(210,224,50)" fg:x="705" fg:w="10"/><text x="14.4838%" y="559.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="14.3549%" y="533" width="0.0808%" height="15" fill="rgb(228,127,35)" fg:x="711" fg:w="4"/><text x="14.6049%" y="543.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (4 samples, 0.08%)</title><rect x="14.3549%" y="517" width="0.0808%" height="15" fill="rgb(245,102,45)" fg:x="711" fg:w="4"/><text x="14.6049%" y="527.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (4 samples, 0.08%)</title><rect x="14.3549%" y="501" width="0.0808%" height="15" fill="rgb(214,1,49)" fg:x="711" fg:w="4"/><text x="14.6049%" y="511.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (7 samples, 0.14%)</title><rect x="14.9001%" y="533" width="0.1413%" height="15" fill="rgb(226,163,40)" fg:x="738" fg:w="7"/><text x="15.1501%" y="543.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (7 samples, 0.14%)</title><rect x="14.9001%" y="517" width="0.1413%" height="15" fill="rgb(239,212,28)" fg:x="738" fg:w="7"/><text x="15.1501%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (10 samples, 0.20%)</title><rect x="15.0414%" y="533" width="0.2019%" height="15" fill="rgb(220,20,13)" fg:x="745" fg:w="10"/><text x="15.2914%" y="543.50"></text></g><g><title>?? (65 samples, 1.31%)</title><rect x="14.1934%" y="565" width="1.3123%" height="15" fill="rgb(210,164,35)" fg:x="703" fg:w="65"/><text x="14.4434%" y="575.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (53 samples, 1.07%)</title><rect x="14.4357%" y="549" width="1.0701%" height="15" fill="rgb(248,109,41)" fg:x="715" fg:w="53"/><text x="14.6857%" y="559.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (13 samples, 0.26%)</title><rect x="15.2433%" y="533" width="0.2625%" height="15" fill="rgb(238,23,50)" fg:x="755" fg:w="13"/><text x="15.4933%" y="543.50"></text></g><g><title>?? (67 samples, 1.35%)</title><rect x="14.1934%" y="581" width="1.3527%" height="15" fill="rgb(211,48,49)" fg:x="703" fg:w="67"/><text x="14.4434%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect x="15.5058%" y="565" width="0.0404%" height="15" fill="rgb(223,36,21)" fg:x="768" fg:w="2"/><text x="15.7558%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (99 samples, 2.00%)</title><rect x="13.7089%" y="629" width="1.9988%" height="15" fill="rgb(207,123,46)" fg:x="679" fg:w="99"/><text x="13.9589%" y="639.50">&lt;..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (92 samples, 1.86%)</title><rect x="13.8502%" y="613" width="1.8575%" height="15" fill="rgb(240,218,32)" fg:x="686" fg:w="92"/><text x="14.1002%" y="623.50">s..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (75 samples, 1.51%)</title><rect x="14.1934%" y="597" width="1.5142%" height="15" fill="rgb(252,5,43)" fg:x="703" fg:w="75"/><text x="14.4434%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (8 samples, 0.16%)</title><rect x="15.5461%" y="581" width="0.1615%" height="15" fill="rgb(252,84,19)" fg:x="770" fg:w="8"/><text x="15.7961%" y="591.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="15.7077%" y="581" width="0.0404%" height="15" fill="rgb(243,152,39)" fg:x="778" fg:w="2"/><text x="15.9577%" y="591.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (103 samples, 2.08%)</title><rect x="13.7089%" y="661" width="2.0795%" height="15" fill="rgb(234,160,15)" fg:x="679" fg:w="103"/><text x="13.9589%" y="671.50">&lt;..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (103 samples, 2.08%)</title><rect x="13.7089%" y="645" width="2.0795%" height="15" fill="rgb(237,34,20)" fg:x="679" fg:w="103"/><text x="13.9589%" y="655.50">&lt;..</text></g><g><title>?? (4 samples, 0.08%)</title><rect x="15.7077%" y="629" width="0.0808%" height="15" fill="rgb(229,97,13)" fg:x="778" fg:w="4"/><text x="15.9577%" y="639.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="15.7077%" y="613" width="0.0808%" height="15" fill="rgb(234,71,50)" fg:x="778" fg:w="4"/><text x="15.9577%" y="623.50"></text></g><g><title>sonic_rs::reader::Reader::next (4 samples, 0.08%)</title><rect x="15.7077%" y="597" width="0.0808%" height="15" fill="rgb(253,155,4)" fg:x="778" fg:w="4"/><text x="15.9577%" y="607.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="15.7480%" y="581" width="0.0404%" height="15" fill="rgb(222,185,37)" fg:x="780" fg:w="2"/><text x="15.9980%" y="591.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect x="15.7480%" y="565" width="0.0404%" height="15" fill="rgb(251,177,13)" fg:x="780" fg:w="2"/><text x="15.9980%" y="575.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="15.7480%" y="549" width="0.0404%" height="15" fill="rgb(250,179,40)" fg:x="780" fg:w="2"/><text x="15.9980%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="16.4547%" y="565" width="0.0808%" height="15" fill="rgb(242,44,2)" fg:x="815" fg:w="4"/><text x="16.7047%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10 samples, 0.20%)</title><rect x="16.5354%" y="533" width="0.2019%" height="15" fill="rgb(216,177,13)" fg:x="819" fg:w="10"/><text x="16.7854%" y="543.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (4 samples, 0.08%)</title><rect x="16.7373%" y="533" width="0.0808%" height="15" fill="rgb(216,106,43)" fg:x="829" fg:w="4"/><text x="16.9873%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.08%)</title><rect x="16.7373%" y="517" width="0.0808%" height="15" fill="rgb(216,183,2)" fg:x="829" fg:w="4"/><text x="16.9873%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.08%)</title><rect x="16.7373%" y="501" width="0.0808%" height="15" fill="rgb(249,75,3)" fg:x="829" fg:w="4"/><text x="16.9873%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.28%)</title><rect x="16.8181%" y="517" width="0.2827%" height="15" fill="rgb(219,67,39)" fg:x="833" fg:w="14"/><text x="17.0681%" y="527.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (7 samples, 0.14%)</title><rect x="17.1007%" y="517" width="0.1413%" height="15" fill="rgb(253,228,2)" fg:x="847" fg:w="7"/><text x="17.3507%" y="527.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="17.2421%" y="517" width="0.0202%" height="15" fill="rgb(235,138,27)" fg:x="854" fg:w="1"/><text x="17.4921%" y="527.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (4 samples, 0.08%)</title><rect x="17.2623%" y="517" width="0.0808%" height="15" fill="rgb(236,97,51)" fg:x="855" fg:w="4"/><text x="17.5123%" y="527.50"></text></g><g><title>?? (41 samples, 0.83%)</title><rect x="16.5354%" y="565" width="0.8278%" height="15" fill="rgb(240,80,30)" fg:x="819" fg:w="41"/><text x="16.7854%" y="575.50"></text></g><g><title>?? (41 samples, 0.83%)</title><rect x="16.5354%" y="549" width="0.8278%" height="15" fill="rgb(230,178,19)" fg:x="819" fg:w="41"/><text x="16.7854%" y="559.50"></text></g><g><title>?? (27 samples, 0.55%)</title><rect x="16.8181%" y="533" width="0.5451%" height="15" fill="rgb(210,190,27)" fg:x="833" fg:w="27"/><text x="17.0681%" y="543.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="17.3430%" y="517" width="0.0202%" height="15" fill="rgb(222,107,31)" fg:x="859" fg:w="1"/><text x="17.5930%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (82 samples, 1.66%)</title><rect x="15.8692%" y="629" width="1.6556%" height="15" fill="rgb(216,127,34)" fg:x="786" fg:w="82"/><text x="16.1192%" y="639.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (53 samples, 1.07%)</title><rect x="16.4547%" y="613" width="1.0701%" height="15" fill="rgb(234,116,52)" fg:x="815" fg:w="53"/><text x="16.7047%" y="623.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (53 samples, 1.07%)</title><rect x="16.4547%" y="597" width="1.0701%" height="15" fill="rgb(222,124,15)" fg:x="815" fg:w="53"/><text x="16.7047%" y="607.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (53 samples, 1.07%)</title><rect x="16.4547%" y="581" width="1.0701%" height="15" fill="rgb(231,179,28)" fg:x="815" fg:w="53"/><text x="16.7047%" y="591.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (8 samples, 0.16%)</title><rect x="17.3632%" y="565" width="0.1615%" height="15" fill="rgb(226,93,45)" fg:x="860" fg:w="8"/><text x="17.6132%" y="575.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (8 samples, 0.16%)</title><rect x="17.3632%" y="549" width="0.1615%" height="15" fill="rgb(215,8,51)" fg:x="860" fg:w="8"/><text x="17.6132%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (7 samples, 0.14%)</title><rect x="17.3834%" y="533" width="0.1413%" height="15" fill="rgb(223,106,5)" fg:x="861" fg:w="7"/><text x="17.6334%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.14%)</title><rect x="17.3834%" y="517" width="0.1413%" height="15" fill="rgb(250,191,5)" fg:x="861" fg:w="7"/><text x="17.6334%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.14%)</title><rect x="17.3834%" y="501" width="0.1413%" height="15" fill="rgb(242,132,44)" fg:x="861" fg:w="7"/><text x="17.6334%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.14%)</title><rect x="17.3834%" y="485" width="0.1413%" height="15" fill="rgb(251,152,29)" fg:x="861" fg:w="7"/><text x="17.6334%" y="495.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="17.5247%" y="613" width="0.0202%" height="15" fill="rgb(218,179,5)" fg:x="868" fg:w="1"/><text x="17.7747%" y="623.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect x="17.5449%" y="613" width="0.0606%" height="15" fill="rgb(227,67,19)" fg:x="869" fg:w="3"/><text x="17.7949%" y="623.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="17.6055%" y="613" width="0.0202%" height="15" fill="rgb(233,119,31)" fg:x="872" fg:w="1"/><text x="17.8555%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (2 samples, 0.04%)</title><rect x="17.6257%" y="613" width="0.0404%" height="15" fill="rgb(241,120,22)" fg:x="873" fg:w="2"/><text x="17.8757%" y="623.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (9 samples, 0.18%)</title><rect x="17.6661%" y="597" width="0.1817%" height="15" fill="rgb(224,102,30)" fg:x="875" fg:w="9"/><text x="17.9161%" y="607.50"></text></g><g><title>sonic_rs::reader::Reader::next (14 samples, 0.28%)</title><rect x="17.6661%" y="613" width="0.2827%" height="15" fill="rgb(210,164,37)" fg:x="875" fg:w="14"/><text x="17.9161%" y="623.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="17.8478%" y="597" width="0.1009%" height="15" fill="rgb(226,191,16)" fg:x="884" fg:w="5"/><text x="18.0978%" y="607.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (5 samples, 0.10%)</title><rect x="17.8478%" y="581" width="0.1009%" height="15" fill="rgb(214,40,45)" fg:x="884" fg:w="5"/><text x="18.0978%" y="591.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (5 samples, 0.10%)</title><rect x="17.8478%" y="565" width="0.1009%" height="15" fill="rgb(244,29,26)" fg:x="884" fg:w="5"/><text x="18.0978%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (5 samples, 0.10%)</title><rect x="17.9891%" y="597" width="0.1009%" height="15" fill="rgb(216,16,5)" fg:x="891" fg:w="5"/><text x="18.2391%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (8 samples, 0.16%)</title><rect x="18.0900%" y="597" width="0.1615%" height="15" fill="rgb(249,76,35)" fg:x="896" fg:w="8"/><text x="18.3400%" y="607.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (238 samples, 4.81%)</title><rect x="13.4666%" y="677" width="4.8052%" height="15" fill="rgb(207,11,44)" fg:x="667" fg:w="238"/><text x="13.7166%" y="687.50">&lt;json_..</text></g><g><title>serde::de::MapAccess::next_key (123 samples, 2.48%)</title><rect x="15.7884%" y="661" width="2.4833%" height="15" fill="rgb(228,190,49)" fg:x="782" fg:w="123"/><text x="16.0384%" y="671.50">se..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (123 samples, 2.48%)</title><rect x="15.7884%" y="645" width="2.4833%" height="15" fill="rgb(214,173,12)" fg:x="782" fg:w="123"/><text x="16.0384%" y="655.50">&lt;s..</text></g><g><title>?? (37 samples, 0.75%)</title><rect x="17.5247%" y="629" width="0.7470%" height="15" fill="rgb(218,26,35)" fg:x="868" fg:w="37"/><text x="17.7747%" y="639.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (16 samples, 0.32%)</title><rect x="17.9487%" y="613" width="0.3230%" height="15" fill="rgb(220,200,19)" fg:x="889" fg:w="16"/><text x="18.1987%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="18.2516%" y="597" width="0.0202%" height="15" fill="rgb(239,95,49)" fg:x="904" fg:w="1"/><text x="18.5016%" y="607.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize (249 samples, 5.03%)</title><rect x="13.2849%" y="709" width="5.0273%" height="15" fill="rgb(235,85,53)" fg:x="658" fg:w="249"/><text x="13.5349%" y="719.50">json_b..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (249 samples, 5.03%)</title><rect x="13.2849%" y="693" width="5.0273%" height="15" fill="rgb(233,133,31)" fg:x="658" fg:w="249"/><text x="13.5349%" y="703.50">&lt;&amp;mut ..</text></g><g><title>?? (2 samples, 0.04%)</title><rect x="18.2718%" y="677" width="0.0404%" height="15" fill="rgb(218,25,20)" fg:x="905" fg:w="2"/><text x="18.5218%" y="687.50"></text></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect x="18.2718%" y="661" width="0.0404%" height="15" fill="rgb(252,210,38)" fg:x="905" fg:w="2"/><text x="18.5218%" y="671.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="18.2718%" y="645" width="0.0404%" height="15" fill="rgb(242,134,21)" fg:x="905" fg:w="2"/><text x="18.5218%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.16%)</title><rect x="18.4535%" y="677" width="0.1615%" height="15" fill="rgb(213,28,48)" fg:x="914" fg:w="8"/><text x="18.7035%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.08%)</title><rect x="18.6352%" y="661" width="0.0808%" height="15" fill="rgb(250,196,2)" fg:x="923" fg:w="4"/><text x="18.8852%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect x="18.9582%" y="581" width="0.0606%" height="15" fill="rgb(227,5,17)" fg:x="939" fg:w="3"/><text x="19.2082%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.06%)</title><rect x="19.8466%" y="517" width="0.0606%" height="15" fill="rgb(221,226,24)" fg:x="983" fg:w="3"/><text x="20.0966%" y="527.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="19.9071%" y="517" width="0.0404%" height="15" fill="rgb(211,5,48)" fg:x="986" fg:w="2"/><text x="20.1571%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.04%)</title><rect x="19.9071%" y="501" width="0.0404%" height="15" fill="rgb(219,150,6)" fg:x="986" fg:w="2"/><text x="20.1571%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.22%)</title><rect x="19.9475%" y="517" width="0.2221%" height="15" fill="rgb(251,46,16)" fg:x="988" fg:w="11"/><text x="20.1975%" y="527.50"></text></g><g><title>core::cmp::max (4 samples, 0.08%)</title><rect x="20.1696%" y="517" width="0.0808%" height="15" fill="rgb(220,204,40)" fg:x="999" fg:w="4"/><text x="20.4196%" y="527.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.08%)</title><rect x="20.1696%" y="501" width="0.0808%" height="15" fill="rgb(211,85,2)" fg:x="999" fg:w="4"/><text x="20.4196%" y="511.50"></text></g><g><title>core::cmp::max_by (4 samples, 0.08%)</title><rect x="20.1696%" y="485" width="0.0808%" height="15" fill="rgb(229,17,7)" fg:x="999" fg:w="4"/><text x="20.4196%" y="495.50"></text></g><g><title>?? (38 samples, 0.77%)</title><rect x="19.8466%" y="533" width="0.7672%" height="15" fill="rgb(239,72,28)" fg:x="983" fg:w="38"/><text x="20.0966%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (18 samples, 0.36%)</title><rect x="20.2504%" y="517" width="0.3634%" height="15" fill="rgb(230,47,54)" fg:x="1003" fg:w="18"/><text x="20.5004%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (18 samples, 0.36%)</title><rect x="20.2504%" y="501" width="0.3634%" height="15" fill="rgb(214,50,8)" fg:x="1003" fg:w="18"/><text x="20.5004%" y="511.50"></text></g><g><title>_rjem_realloc (15 samples, 0.30%)</title><rect x="20.9570%" y="421" width="0.3028%" height="15" fill="rgb(216,198,43)" fg:x="1038" fg:w="15"/><text x="21.2070%" y="431.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="21.7040%" y="357" width="0.0202%" height="15" fill="rgb(234,20,35)" fg:x="1075" fg:w="1"/><text x="21.9540%" y="367.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="21.7040%" y="341" width="0.0202%" height="15" fill="rgb(254,45,19)" fg:x="1075" fg:w="1"/><text x="21.9540%" y="351.50"></text></g><g><title>aligned_usize_get (9 samples, 0.18%)</title><rect x="21.5627%" y="405" width="0.1817%" height="15" fill="rgb(219,14,44)" fg:x="1068" fg:w="9"/><text x="21.8127%" y="415.50"></text></g><g><title>sz_s2u (2 samples, 0.04%)</title><rect x="21.7040%" y="389" width="0.0404%" height="15" fill="rgb(217,220,26)" fg:x="1075" fg:w="2"/><text x="21.9540%" y="399.50"></text></g><g><title>sz_s2u_lookup (2 samples, 0.04%)</title><rect x="21.7040%" y="373" width="0.0404%" height="15" fill="rgb(213,158,28)" fg:x="1075" fg:w="2"/><text x="21.9540%" y="383.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="21.7242%" y="357" width="0.0202%" height="15" fill="rgb(252,51,52)" fg:x="1076" fg:w="1"/><text x="21.9742%" y="367.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect x="21.7242%" y="341" width="0.0202%" height="15" fill="rgb(246,89,16)" fg:x="1076" fg:w="1"/><text x="21.9742%" y="351.50"></text></g><g><title>rtree_leaf_elm_lookup (4 samples, 0.08%)</title><rect x="21.7444%" y="373" width="0.0808%" height="15" fill="rgb(216,158,49)" fg:x="1077" fg:w="4"/><text x="21.9944%" y="383.50"></text></g><g><title>rtree_leafkey (2 samples, 0.04%)</title><rect x="21.7848%" y="357" width="0.0404%" height="15" fill="rgb(236,107,19)" fg:x="1079" fg:w="2"/><text x="22.0348%" y="367.50"></text></g><g><title>rtree_leaf_elm_bits_decode (2 samples, 0.04%)</title><rect x="21.8252%" y="357" width="0.0404%" height="15" fill="rgb(228,185,30)" fg:x="1081" fg:w="2"/><text x="22.0752%" y="367.50"></text></g><g><title>rtree_metadata_read (8 samples, 0.16%)</title><rect x="21.7444%" y="389" width="0.1615%" height="15" fill="rgb(246,134,8)" fg:x="1077" fg:w="8"/><text x="21.9944%" y="399.50"></text></g><g><title>rtree_leaf_elm_read (4 samples, 0.08%)</title><rect x="21.8252%" y="373" width="0.0808%" height="15" fill="rgb(214,143,50)" fg:x="1081" fg:w="4"/><text x="22.0752%" y="383.50"></text></g><g><title>rtree_leaf_elm_bits_read (2 samples, 0.04%)</title><rect x="21.8655%" y="357" width="0.0404%" height="15" fill="rgb(228,75,8)" fg:x="1083" fg:w="2"/><text x="22.1155%" y="367.50"></text></g><g><title>atomic_load_p (2 samples, 0.04%)</title><rect x="21.8655%" y="341" width="0.0404%" height="15" fill="rgb(207,175,4)" fg:x="1083" fg:w="2"/><text x="22.1155%" y="351.50"></text></g><g><title>emap_alloc_ctx_lookup (9 samples, 0.18%)</title><rect x="21.7444%" y="405" width="0.1817%" height="15" fill="rgb(205,108,24)" fg:x="1077" fg:w="9"/><text x="21.9944%" y="415.50"></text></g><g><title>tsdn_rtree_ctx (1 samples, 0.02%)</title><rect x="21.9059%" y="389" width="0.0202%" height="15" fill="rgb(244,120,49)" fg:x="1085" fg:w="1"/><text x="22.1559%" y="399.50"></text></g><g><title>tsdn_null (1 samples, 0.02%)</title><rect x="21.9059%" y="373" width="0.0202%" height="15" fill="rgb(223,47,38)" fg:x="1085" fg:w="1"/><text x="22.1559%" y="383.50"></text></g><g><title>[deserialize_struct-11f044a2796e0e73] (1 samples, 0.02%)</title><rect x="22.5116%" y="373" width="0.0202%" height="15" fill="rgb(229,179,11)" fg:x="1115" fg:w="1"/><text x="22.7616%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (21 samples, 0.42%)</title><rect x="22.5318%" y="373" width="0.4240%" height="15" fill="rgb(231,122,1)" fg:x="1116" fg:w="21"/><text x="22.7818%" y="383.50"></text></g><g><title>edata_usize_get (2 samples, 0.04%)</title><rect x="23.1981%" y="357" width="0.0404%" height="15" fill="rgb(245,119,9)" fg:x="1149" fg:w="2"/><text x="23.4481%" y="367.50"></text></g><g><title>sz_index2size (2 samples, 0.04%)</title><rect x="23.1981%" y="341" width="0.0404%" height="15" fill="rgb(241,163,25)" fg:x="1149" fg:w="2"/><text x="23.4481%" y="351.50"></text></g><g><title>sz_index2size_lookup (2 samples, 0.04%)</title><rect x="23.1981%" y="325" width="0.0404%" height="15" fill="rgb(217,214,3)" fg:x="1149" fg:w="2"/><text x="23.4481%" y="335.50"></text></g><g><title>sz_index2size_lookup_impl (2 samples, 0.04%)</title><rect x="23.1981%" y="309" width="0.0404%" height="15" fill="rgb(240,86,28)" fg:x="1149" fg:w="2"/><text x="23.4481%" y="319.50"></text></g><g><title>rtree_leaf_elm_lookup (4 samples, 0.08%)</title><rect x="23.2384%" y="325" width="0.0808%" height="15" fill="rgb(215,47,9)" fg:x="1151" fg:w="4"/><text x="23.4884%" y="335.50"></text></g><g><title>rtree_leafkey (2 samples, 0.04%)</title><rect x="23.2788%" y="309" width="0.0404%" height="15" fill="rgb(252,25,45)" fg:x="1153" fg:w="2"/><text x="23.5288%" y="319.50"></text></g><g><title>rtree_leaf_elm_bits_decode (4 samples, 0.08%)</title><rect x="23.3192%" y="309" width="0.0808%" height="15" fill="rgb(251,164,9)" fg:x="1155" fg:w="4"/><text x="23.5692%" y="319.50"></text></g><g><title>rtree_read (11 samples, 0.22%)</title><rect x="23.2384%" y="341" width="0.2221%" height="15" fill="rgb(233,194,0)" fg:x="1151" fg:w="11"/><text x="23.4884%" y="351.50"></text></g><g><title>rtree_leaf_elm_read (7 samples, 0.14%)</title><rect x="23.3192%" y="325" width="0.1413%" height="15" fill="rgb(249,111,24)" fg:x="1155" fg:w="7"/><text x="23.5692%" y="335.50"></text></g><g><title>rtree_leaf_elm_bits_read (3 samples, 0.06%)</title><rect x="23.4000%" y="309" width="0.0606%" height="15" fill="rgb(250,223,3)" fg:x="1159" fg:w="3"/><text x="23.6500%" y="319.50"></text></g><g><title>atomic_load_p (3 samples, 0.06%)</title><rect x="23.4000%" y="293" width="0.0606%" height="15" fill="rgb(236,178,37)" fg:x="1159" fg:w="3"/><text x="23.6500%" y="303.50"></text></g><g><title>emap_edata_lookup (12 samples, 0.24%)</title><rect x="23.2384%" y="357" width="0.2423%" height="15" fill="rgb(241,158,50)" fg:x="1151" fg:w="12"/><text x="23.4884%" y="367.50"></text></g><g><title>tsdn_rtree_ctx (1 samples, 0.02%)</title><rect x="23.4605%" y="341" width="0.0202%" height="15" fill="rgb(213,121,41)" fg:x="1162" fg:w="1"/><text x="23.7105%" y="351.50"></text></g><g><title>tsdn_null (1 samples, 0.02%)</title><rect x="23.4605%" y="325" width="0.0202%" height="15" fill="rgb(240,92,3)" fg:x="1162" fg:w="1"/><text x="23.7105%" y="335.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="23.4807%" y="325" width="0.0202%" height="15" fill="rgb(205,123,3)" fg:x="1163" fg:w="1"/><text x="23.7307%" y="335.50"></text></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect x="23.4807%" y="309" width="0.0202%" height="15" fill="rgb(205,97,47)" fg:x="1163" fg:w="1"/><text x="23.7307%" y="319.50"></text></g><g><title>sz_s2u (2 samples, 0.04%)</title><rect x="23.4807%" y="357" width="0.0404%" height="15" fill="rgb(247,152,14)" fg:x="1163" fg:w="2"/><text x="23.7307%" y="367.50"></text></g><g><title>sz_s2u_lookup (2 samples, 0.04%)</title><rect x="23.4807%" y="341" width="0.0404%" height="15" fill="rgb(248,195,53)" fg:x="1163" fg:w="2"/><text x="23.7307%" y="351.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="23.5009%" y="325" width="0.0202%" height="15" fill="rgb(226,201,16)" fg:x="1164" fg:w="1"/><text x="23.7509%" y="335.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect x="23.5009%" y="309" width="0.0202%" height="15" fill="rgb(205,98,0)" fg:x="1164" fg:w="1"/><text x="23.7509%" y="319.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (32 samples, 0.65%)</title><rect x="22.9558%" y="373" width="0.6461%" height="15" fill="rgb(214,191,48)" fg:x="1137" fg:w="32"/><text x="23.2058%" y="383.50"></text></g><g><title>sz_size2index (4 samples, 0.08%)</title><rect x="23.5211%" y="357" width="0.0808%" height="15" fill="rgb(237,112,39)" fg:x="1165" fg:w="4"/><text x="23.7711%" y="367.50"></text></g><g><title>sz_size2index_lookup (4 samples, 0.08%)</title><rect x="23.5211%" y="341" width="0.0808%" height="15" fill="rgb(247,203,27)" fg:x="1165" fg:w="4"/><text x="23.7711%" y="351.50"></text></g><g><title>sz_size2index_lookup_impl (4 samples, 0.08%)</title><rect x="23.5211%" y="325" width="0.0808%" height="15" fill="rgb(235,124,28)" fg:x="1165" fg:w="4"/><text x="23.7711%" y="335.50"></text></g><g><title>_rjem_je_hook_invoke_alloc (18 samples, 0.36%)</title><rect x="23.6019%" y="373" width="0.3634%" height="15" fill="rgb(208,207,46)" fg:x="1169" fg:w="18"/><text x="23.8519%" y="383.50"></text></g><g><title>atomic_load_u (5 samples, 0.10%)</title><rect x="23.8643%" y="357" width="0.1009%" height="15" fill="rgb(234,176,4)" fg:x="1182" fg:w="5"/><text x="24.1143%" y="367.50"></text></g><g><title>_rjem_je_hook_invoke_dalloc (8 samples, 0.16%)</title><rect x="23.9653%" y="373" width="0.1615%" height="15" fill="rgb(230,133,28)" fg:x="1187" fg:w="8"/><text x="24.2153%" y="383.50"></text></g><g><title>atomic_load_u (2 samples, 0.04%)</title><rect x="24.0864%" y="357" width="0.0404%" height="15" fill="rgb(211,137,40)" fg:x="1193" fg:w="2"/><text x="24.3364%" y="367.50"></text></g><g><title>_rjem_je_arena_ralloc (2 samples, 0.04%)</title><rect x="24.1268%" y="357" width="0.0404%" height="15" fill="rgb(254,35,13)" fg:x="1195" fg:w="2"/><text x="24.3768%" y="367.50"></text></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (1 samples, 0.02%)</title><rect x="24.2883%" y="293" width="0.0202%" height="15" fill="rgb(225,49,51)" fg:x="1203" fg:w="1"/><text x="24.5383%" y="303.50"></text></g><g><title>_rjem_je_edata_heap_remove (2 samples, 0.04%)</title><rect x="24.3287%" y="133" width="0.0404%" height="15" fill="rgb(251,10,15)" fg:x="1205" fg:w="2"/><text x="24.5787%" y="143.50"></text></g><g><title>ph_remove (2 samples, 0.04%)</title><rect x="24.3287%" y="117" width="0.0404%" height="15" fill="rgb(228,207,15)" fg:x="1205" fg:w="2"/><text x="24.5787%" y="127.50"></text></g><g><title>ph_merge_children (2 samples, 0.04%)</title><rect x="24.3287%" y="101" width="0.0404%" height="15" fill="rgb(241,99,19)" fg:x="1205" fg:w="2"/><text x="24.5787%" y="111.50"></text></g><g><title>phn_merge_siblings (2 samples, 0.04%)</title><rect x="24.3287%" y="85" width="0.0404%" height="15" fill="rgb(207,104,49)" fg:x="1205" fg:w="2"/><text x="24.5787%" y="95.50"></text></g><g><title>phn_merge (1 samples, 0.02%)</title><rect x="24.3489%" y="69" width="0.0202%" height="15" fill="rgb(234,99,18)" fg:x="1206" fg:w="1"/><text x="24.5989%" y="79.50"></text></g><g><title>edata_heap_ph_cmp (1 samples, 0.02%)</title><rect x="24.3489%" y="53" width="0.0202%" height="15" fill="rgb(213,191,49)" fg:x="1206" fg:w="1"/><text x="24.5989%" y="63.50"></text></g><g><title>_rjem_je_ecache_alloc (4 samples, 0.08%)</title><rect x="24.3085%" y="213" width="0.0808%" height="15" fill="rgb(210,226,19)" fg:x="1204" fg:w="4"/><text x="24.5585%" y="223.50"></text></g><g><title>extent_recycle (3 samples, 0.06%)</title><rect x="24.3287%" y="197" width="0.0606%" height="15" fill="rgb(229,97,18)" fg:x="1205" fg:w="3"/><text x="24.5787%" y="207.50"></text></g><g><title>extent_recycle_extract (3 samples, 0.06%)</title><rect x="24.3287%" y="181" width="0.0606%" height="15" fill="rgb(211,167,15)" fg:x="1205" fg:w="3"/><text x="24.5787%" y="191.50"></text></g><g><title>extent_activate_locked (3 samples, 0.06%)</title><rect x="24.3287%" y="165" width="0.0606%" height="15" fill="rgb(210,169,34)" fg:x="1205" fg:w="3"/><text x="24.5787%" y="175.50"></text></g><g><title>_rjem_je_eset_remove (3 samples, 0.06%)</title><rect x="24.3287%" y="149" width="0.0606%" height="15" fill="rgb(241,121,31)" fg:x="1205" fg:w="3"/><text x="24.5787%" y="159.50"></text></g><g><title>edata_list_inactive_remove (1 samples, 0.02%)</title><rect x="24.3691%" y="133" width="0.0202%" height="15" fill="rgb(232,40,11)" fg:x="1207" fg:w="1"/><text x="24.6191%" y="143.50"></text></g><g><title>_rjem_je_edata_avail_remove (2 samples, 0.04%)</title><rect x="24.3893%" y="101" width="0.0404%" height="15" fill="rgb(205,86,26)" fg:x="1208" fg:w="2"/><text x="24.6393%" y="111.50"></text></g><g><title>ph_remove (2 samples, 0.04%)</title><rect x="24.3893%" y="85" width="0.0404%" height="15" fill="rgb(231,126,28)" fg:x="1208" fg:w="2"/><text x="24.6393%" y="95.50"></text></g><g><title>ph_merge_children (2 samples, 0.04%)</title><rect x="24.3893%" y="69" width="0.0404%" height="15" fill="rgb(219,221,18)" fg:x="1208" fg:w="2"/><text x="24.6393%" y="79.50"></text></g><g><title>phn_merge_siblings (2 samples, 0.04%)</title><rect x="24.3893%" y="53" width="0.0404%" height="15" fill="rgb(211,40,0)" fg:x="1208" fg:w="2"/><text x="24.6393%" y="63.50"></text></g><g><title>phn_next_set (1 samples, 0.02%)</title><rect x="24.4094%" y="37" width="0.0202%" height="15" fill="rgb(239,85,43)" fg:x="1209" fg:w="1"/><text x="24.6594%" y="47.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="24.4296%" y="101" width="0.0202%" height="15" fill="rgb(231,55,21)" fg:x="1210" fg:w="1"/><text x="24.6796%" y="111.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="24.4296%" y="85" width="0.0202%" height="15" fill="rgb(225,184,43)" fg:x="1210" fg:w="1"/><text x="24.6796%" y="95.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="24.4296%" y="69" width="0.0202%" height="15" fill="rgb(251,158,41)" fg:x="1210" fg:w="1"/><text x="24.6796%" y="79.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="24.4498%" y="85" width="0.0202%" height="15" fill="rgb(234,159,37)" fg:x="1211" fg:w="1"/><text x="24.6998%" y="95.50"></text></g><g><title>extent_recycle_split (5 samples, 0.10%)</title><rect x="24.3893%" y="165" width="0.1009%" height="15" fill="rgb(216,204,22)" fg:x="1208" fg:w="5"/><text x="24.6393%" y="175.50"></text></g><g><title>extent_split_interior (5 samples, 0.10%)</title><rect x="24.3893%" y="149" width="0.1009%" height="15" fill="rgb(214,17,3)" fg:x="1208" fg:w="5"/><text x="24.6393%" y="159.50"></text></g><g><title>extent_split_impl (5 samples, 0.10%)</title><rect x="24.3893%" y="133" width="0.1009%" height="15" fill="rgb(212,111,17)" fg:x="1208" fg:w="5"/><text x="24.6393%" y="143.50"></text></g><g><title>_rjem_je_edata_cache_get (5 samples, 0.10%)</title><rect x="24.3893%" y="117" width="0.1009%" height="15" fill="rgb(221,157,24)" fg:x="1208" fg:w="5"/><text x="24.6393%" y="127.50"></text></g><g><title>malloc_mutex_unlock (2 samples, 0.04%)</title><rect x="24.4498%" y="101" width="0.0404%" height="15" fill="rgb(252,16,13)" fg:x="1211" fg:w="2"/><text x="24.6998%" y="111.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="24.4700%" y="85" width="0.0202%" height="15" fill="rgb(221,62,2)" fg:x="1212" fg:w="1"/><text x="24.7200%" y="95.50"></text></g><g><title>_rjem_je_pa_alloc (11 samples, 0.22%)</title><rect x="24.3085%" y="277" width="0.2221%" height="15" fill="rgb(247,87,22)" fg:x="1204" fg:w="11"/><text x="24.5585%" y="287.50"></text></g><g><title>pai_alloc (11 samples, 0.22%)</title><rect x="24.3085%" y="261" width="0.2221%" height="15" fill="rgb(215,73,9)" fg:x="1204" fg:w="11"/><text x="24.5585%" y="271.50"></text></g><g><title>pac_alloc_impl (11 samples, 0.22%)</title><rect x="24.3085%" y="245" width="0.2221%" height="15" fill="rgb(207,175,33)" fg:x="1204" fg:w="11"/><text x="24.5585%" y="255.50"></text></g><g><title>pac_alloc_real (11 samples, 0.22%)</title><rect x="24.3085%" y="229" width="0.2221%" height="15" fill="rgb(243,129,54)" fg:x="1204" fg:w="11"/><text x="24.5585%" y="239.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (7 samples, 0.14%)</title><rect x="24.3893%" y="213" width="0.1413%" height="15" fill="rgb(227,119,45)" fg:x="1208" fg:w="7"/><text x="24.6393%" y="223.50"></text></g><g><title>extent_alloc_retained (7 samples, 0.14%)</title><rect x="24.3893%" y="197" width="0.1413%" height="15" fill="rgb(205,109,36)" fg:x="1208" fg:w="7"/><text x="24.6393%" y="207.50"></text></g><g><title>extent_recycle (7 samples, 0.14%)</title><rect x="24.3893%" y="181" width="0.1413%" height="15" fill="rgb(205,6,39)" fg:x="1208" fg:w="7"/><text x="24.6393%" y="191.50"></text></g><g><title>malloc_mutex_unlock (2 samples, 0.04%)</title><rect x="24.4902%" y="165" width="0.0404%" height="15" fill="rgb(221,32,16)" fg:x="1213" fg:w="2"/><text x="24.7402%" y="175.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.04%)</title><rect x="24.4902%" y="149" width="0.0404%" height="15" fill="rgb(228,144,50)" fg:x="1213" fg:w="2"/><text x="24.7402%" y="159.50"></text></g><g><title>arena_slab_alloc (12 samples, 0.24%)</title><rect x="24.3085%" y="293" width="0.2423%" height="15" fill="rgb(229,201,53)" fg:x="1204" fg:w="12"/><text x="24.5585%" y="303.50"></text></g><g><title>edata_nfree_binshard_set (1 samples, 0.02%)</title><rect x="24.5306%" y="277" width="0.0202%" height="15" fill="rgb(249,153,27)" fg:x="1215" fg:w="1"/><text x="24.7806%" y="287.50"></text></g><g><title>arena_slab_reg_alloc_batch (7 samples, 0.14%)</title><rect x="24.5508%" y="293" width="0.1413%" height="15" fill="rgb(227,106,25)" fg:x="1216" fg:w="7"/><text x="24.8008%" y="303.50"></text></g><g><title>cfs_lu (1 samples, 0.02%)</title><rect x="24.6719%" y="277" width="0.0202%" height="15" fill="rgb(230,65,29)" fg:x="1222" fg:w="1"/><text x="24.9219%" y="287.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="24.6921%" y="293" width="0.0202%" height="15" fill="rgb(221,57,46)" fg:x="1223" fg:w="1"/><text x="24.9421%" y="303.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="24.6921%" y="277" width="0.0202%" height="15" fill="rgb(229,161,17)" fg:x="1223" fg:w="1"/><text x="24.9421%" y="287.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="24.6921%" y="261" width="0.0202%" height="15" fill="rgb(222,213,11)" fg:x="1223" fg:w="1"/><text x="24.9421%" y="271.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (24 samples, 0.48%)</title><rect x="24.2479%" y="325" width="0.4846%" height="15" fill="rgb(235,35,13)" fg:x="1201" fg:w="24"/><text x="24.4979%" y="335.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (24 samples, 0.48%)</title><rect x="24.2479%" y="309" width="0.4846%" height="15" fill="rgb(233,158,34)" fg:x="1201" fg:w="24"/><text x="24.4979%" y="319.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="24.7123%" y="293" width="0.0202%" height="15" fill="rgb(215,151,48)" fg:x="1224" fg:w="1"/><text x="24.9623%" y="303.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="24.7123%" y="277" width="0.0202%" height="15" fill="rgb(229,84,14)" fg:x="1224" fg:w="1"/><text x="24.9623%" y="287.50"></text></g><g><title>arena_choose (1 samples, 0.02%)</title><rect x="24.7527%" y="309" width="0.0202%" height="15" fill="rgb(229,68,14)" fg:x="1226" fg:w="1"/><text x="25.0027%" y="319.50"></text></g><g><title>arena_choose (3 samples, 0.06%)</title><rect x="24.7325%" y="325" width="0.0606%" height="15" fill="rgb(243,106,26)" fg:x="1225" fg:w="3"/><text x="24.9825%" y="335.50"></text></g><g><title>arena_choose_impl (1 samples, 0.02%)</title><rect x="24.7729%" y="309" width="0.0202%" height="15" fill="rgb(206,45,38)" fg:x="1227" fg:w="1"/><text x="25.0229%" y="319.50"></text></g><g><title>arena_malloc (38 samples, 0.77%)</title><rect x="24.1672%" y="357" width="0.7672%" height="15" fill="rgb(226,6,15)" fg:x="1197" fg:w="38"/><text x="24.4172%" y="367.50"></text></g><g><title>tcache_alloc_small (37 samples, 0.75%)</title><rect x="24.1874%" y="341" width="0.7470%" height="15" fill="rgb(232,22,54)" fg:x="1198" fg:w="37"/><text x="24.4374%" y="351.50"></text></g><g><title>cache_bin_alloc (7 samples, 0.14%)</title><rect x="24.7931%" y="325" width="0.1413%" height="15" fill="rgb(229,222,32)" fg:x="1228" fg:w="7"/><text x="25.0431%" y="335.50"></text></g><g><title>cache_bin_alloc_impl (7 samples, 0.14%)</title><rect x="24.7931%" y="309" width="0.1413%" height="15" fill="rgb(228,62,29)" fg:x="1228" fg:w="7"/><text x="25.0431%" y="319.50"></text></g><g><title>arena_ralloc_move_helper (43 samples, 0.87%)</title><rect x="24.1268%" y="373" width="0.8682%" height="15" fill="rgb(251,103,34)" fg:x="1195" fg:w="43"/><text x="24.3768%" y="383.50"></text></g><g><title>sz_size2index (3 samples, 0.06%)</title><rect x="24.9344%" y="357" width="0.0606%" height="15" fill="rgb(233,12,30)" fg:x="1235" fg:w="3"/><text x="25.1844%" y="367.50"></text></g><g><title>sz_size2index_lookup (3 samples, 0.06%)</title><rect x="24.9344%" y="341" width="0.0606%" height="15" fill="rgb(238,52,0)" fg:x="1235" fg:w="3"/><text x="25.1844%" y="351.50"></text></g><g><title>sz_size2index_lookup_impl (3 samples, 0.06%)</title><rect x="24.9344%" y="325" width="0.0606%" height="15" fill="rgb(223,98,5)" fg:x="1235" fg:w="3"/><text x="25.1844%" y="335.50"></text></g><g><title>iralloct (162 samples, 3.27%)</title><rect x="21.9261%" y="405" width="3.2707%" height="15" fill="rgb(228,75,37)" fg:x="1086" fg:w="162"/><text x="22.1761%" y="415.50">ira..</text></g><g><title>_rjem_je_arena_ralloc (156 samples, 3.15%)</title><rect x="22.0472%" y="389" width="3.1496%" height="15" fill="rgb(205,115,49)" fg:x="1092" fg:w="156"/><text x="22.2972%" y="399.50">_rj..</text></g><g><title>isdalloct (10 samples, 0.20%)</title><rect x="24.9950%" y="373" width="0.2019%" height="15" fill="rgb(250,154,43)" fg:x="1238" fg:w="10"/><text x="25.2450%" y="383.50"></text></g><g><title>arena_sdalloc (10 samples, 0.20%)</title><rect x="24.9950%" y="357" width="0.2019%" height="15" fill="rgb(226,43,29)" fg:x="1238" fg:w="10"/><text x="25.2450%" y="367.50"></text></g><g><title>tcache_dalloc_small (9 samples, 0.18%)</title><rect x="25.0151%" y="341" width="0.1817%" height="15" fill="rgb(249,228,39)" fg:x="1239" fg:w="9"/><text x="25.2651%" y="351.50"></text></g><g><title>cache_bin_dalloc_easy (8 samples, 0.16%)</title><rect x="25.0353%" y="325" width="0.1615%" height="15" fill="rgb(216,79,43)" fg:x="1240" fg:w="8"/><text x="25.2853%" y="335.50"></text></g><g><title>cache_bin_full (3 samples, 0.06%)</title><rect x="25.1363%" y="309" width="0.0606%" height="15" fill="rgb(228,95,12)" fg:x="1245" fg:w="3"/><text x="25.3863%" y="319.50"></text></g><g><title>do_rallocx (7 samples, 0.14%)</title><rect x="25.1969%" y="373" width="0.1413%" height="15" fill="rgb(249,221,15)" fg:x="1248" fg:w="7"/><text x="25.4469%" y="383.50"></text></g><g><title>sz_index2size (9 samples, 0.18%)</title><rect x="25.1969%" y="405" width="0.1817%" height="15" fill="rgb(233,34,13)" fg:x="1248" fg:w="9"/><text x="25.4469%" y="415.50"></text></g><g><title>sz_index2size_lookup (9 samples, 0.18%)</title><rect x="25.1969%" y="389" width="0.1817%" height="15" fill="rgb(214,103,39)" fg:x="1248" fg:w="9"/><text x="25.4469%" y="399.50"></text></g><g><title>sz_index2size_lookup_impl (2 samples, 0.04%)</title><rect x="25.3382%" y="373" width="0.0404%" height="15" fill="rgb(251,126,39)" fg:x="1255" fg:w="2"/><text x="25.5882%" y="383.50"></text></g><g><title>tcache_get_from_ind (2 samples, 0.04%)</title><rect x="25.3786%" y="405" width="0.0404%" height="15" fill="rgb(214,216,36)" fg:x="1257" fg:w="2"/><text x="25.6286%" y="415.50"></text></g><g><title>tcache_get (2 samples, 0.04%)</title><rect x="25.3786%" y="389" width="0.0404%" height="15" fill="rgb(220,221,8)" fg:x="1257" fg:w="2"/><text x="25.6286%" y="399.50"></text></g><g><title>tcache_available (1 samples, 0.02%)</title><rect x="25.3987%" y="373" width="0.0202%" height="15" fill="rgb(240,216,3)" fg:x="1258" fg:w="1"/><text x="25.6487%" y="383.50"></text></g><g><title>tsd_tcache_enabled_get (1 samples, 0.02%)</title><rect x="25.3987%" y="357" width="0.0202%" height="15" fill="rgb(232,218,17)" fg:x="1258" fg:w="1"/><text x="25.6487%" y="367.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="25.4189%" y="389" width="0.0202%" height="15" fill="rgb(229,163,45)" fg:x="1259" fg:w="1"/><text x="25.6689%" y="399.50"></text></g><g><title>thread_alloc_event (6 samples, 0.12%)</title><rect x="25.4189%" y="405" width="0.1211%" height="15" fill="rgb(231,110,42)" fg:x="1259" fg:w="6"/><text x="25.6689%" y="415.50"></text></g><g><title>te_event_advance (5 samples, 0.10%)</title><rect x="25.4391%" y="389" width="0.1009%" height="15" fill="rgb(208,170,48)" fg:x="1260" fg:w="5"/><text x="25.6891%" y="399.50"></text></g><g><title>te_ctx_get (2 samples, 0.04%)</title><rect x="25.4997%" y="373" width="0.0404%" height="15" fill="rgb(239,116,25)" fg:x="1263" fg:w="2"/><text x="25.7497%" y="383.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="25.5401%" y="389" width="0.0202%" height="15" fill="rgb(219,200,50)" fg:x="1265" fg:w="1"/><text x="25.7901%" y="399.50"></text></g><g><title>?? (237 samples, 4.78%)</title><rect x="20.9368%" y="485" width="4.7850%" height="15" fill="rgb(245,200,0)" fg:x="1037" fg:w="237"/><text x="21.1868%" y="495.50">??</text></g><g><title>alloc::alloc::realloc (237 samples, 4.78%)</title><rect x="20.9368%" y="469" width="4.7850%" height="15" fill="rgb(245,119,33)" fg:x="1037" fg:w="237"/><text x="21.1868%" y="479.50">alloc:..</text></g><g><title>__rust_realloc (237 samples, 4.78%)</title><rect x="20.9368%" y="453" width="4.7850%" height="15" fill="rgb(231,125,12)" fg:x="1037" fg:w="237"/><text x="21.1868%" y="463.50">__rust..</text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (237 samples, 4.78%)</title><rect x="20.9368%" y="437" width="4.7850%" height="15" fill="rgb(216,96,41)" fg:x="1037" fg:w="237"/><text x="21.1868%" y="447.50">&lt;jemal..</text></g><g><title>do_rallocx (221 samples, 4.46%)</title><rect x="21.2598%" y="421" width="4.4619%" height="15" fill="rgb(248,43,45)" fg:x="1053" fg:w="221"/><text x="21.5098%" y="431.50">do_ra..</text></g><g><title>thread_dalloc_event (9 samples, 0.18%)</title><rect x="25.5401%" y="405" width="0.1817%" height="15" fill="rgb(217,222,7)" fg:x="1265" fg:w="9"/><text x="25.7901%" y="415.50"></text></g><g><title>te_event_advance (8 samples, 0.16%)</title><rect x="25.5603%" y="389" width="0.1615%" height="15" fill="rgb(233,28,6)" fg:x="1266" fg:w="8"/><text x="25.8103%" y="399.50"></text></g><g><title>te_ctx_get (7 samples, 0.14%)</title><rect x="25.5805%" y="373" width="0.1413%" height="15" fill="rgb(231,218,15)" fg:x="1267" fg:w="7"/><text x="25.8305%" y="383.50"></text></g><g><title>tsd_thread_deallocatedp_get (5 samples, 0.10%)</title><rect x="25.6208%" y="357" width="0.1009%" height="15" fill="rgb(226,171,48)" fg:x="1269" fg:w="5"/><text x="25.8708%" y="367.50"></text></g><g><title>tsd_thread_deallocatedp_get_unsafe (5 samples, 0.10%)</title><rect x="25.6208%" y="341" width="0.1009%" height="15" fill="rgb(235,201,9)" fg:x="1269" fg:w="5"/><text x="25.8708%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (238 samples, 4.81%)</title><rect x="20.9368%" y="501" width="4.8052%" height="15" fill="rgb(217,80,15)" fg:x="1037" fg:w="238"/><text x="21.1868%" y="511.50">&lt;alloc..</text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="25.7218%" y="485" width="0.0202%" height="15" fill="rgb(219,152,8)" fg:x="1274" fg:w="1"/><text x="25.9718%" y="495.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="25.7622%" y="357" width="0.0202%" height="15" fill="rgb(243,107,38)" fg:x="1276" fg:w="1"/><text x="26.0122%" y="367.50"></text></g><g><title>_rjem_je_malloc_default (6 samples, 0.12%)</title><rect x="25.7420%" y="501" width="0.1211%" height="15" fill="rgb(231,17,5)" fg:x="1275" fg:w="6"/><text x="25.9920%" y="511.50"></text></g><g><title>imalloc (5 samples, 0.10%)</title><rect x="25.7622%" y="485" width="0.1009%" height="15" fill="rgb(209,25,54)" fg:x="1276" fg:w="5"/><text x="26.0122%" y="495.50"></text></g><g><title>imalloc_body (5 samples, 0.10%)</title><rect x="25.7622%" y="469" width="0.1009%" height="15" fill="rgb(219,0,2)" fg:x="1276" fg:w="5"/><text x="26.0122%" y="479.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.10%)</title><rect x="25.7622%" y="453" width="0.1009%" height="15" fill="rgb(246,9,5)" fg:x="1276" fg:w="5"/><text x="26.0122%" y="463.50"></text></g><g><title>iallocztm (5 samples, 0.10%)</title><rect x="25.7622%" y="437" width="0.1009%" height="15" fill="rgb(226,159,4)" fg:x="1276" fg:w="5"/><text x="26.0122%" y="447.50"></text></g><g><title>arena_malloc (5 samples, 0.10%)</title><rect x="25.7622%" y="421" width="0.1009%" height="15" fill="rgb(219,175,34)" fg:x="1276" fg:w="5"/><text x="26.0122%" y="431.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.10%)</title><rect x="25.7622%" y="405" width="0.1009%" height="15" fill="rgb(236,10,46)" fg:x="1276" fg:w="5"/><text x="26.0122%" y="415.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (5 samples, 0.10%)</title><rect x="25.7622%" y="389" width="0.1009%" height="15" fill="rgb(240,211,16)" fg:x="1276" fg:w="5"/><text x="26.0122%" y="399.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (5 samples, 0.10%)</title><rect x="25.7622%" y="373" width="0.1009%" height="15" fill="rgb(205,3,43)" fg:x="1276" fg:w="5"/><text x="26.0122%" y="383.50"></text></g><g><title>arena_slab_reg_alloc_batch (4 samples, 0.08%)</title><rect x="25.7824%" y="357" width="0.0808%" height="15" fill="rgb(245,7,22)" fg:x="1277" fg:w="4"/><text x="26.0324%" y="367.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="25.9035%" y="485" width="0.0202%" height="15" fill="rgb(239,132,32)" fg:x="1283" fg:w="1"/><text x="26.1535%" y="495.50"></text></g><g><title>_rjem_malloc (4 samples, 0.08%)</title><rect x="25.8631%" y="501" width="0.0808%" height="15" fill="rgb(228,202,34)" fg:x="1281" fg:w="4"/><text x="26.1131%" y="511.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="25.9237%" y="485" width="0.0202%" height="15" fill="rgb(254,200,22)" fg:x="1284" fg:w="1"/><text x="26.1737%" y="495.50"></text></g><g><title>sz_size2index_usize_fastpath (1 samples, 0.02%)</title><rect x="25.9237%" y="469" width="0.0202%" height="15" fill="rgb(219,10,39)" fg:x="1284" fg:w="1"/><text x="26.1737%" y="479.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect x="25.9237%" y="453" width="0.0202%" height="15" fill="rgb(226,210,39)" fg:x="1284" fg:w="1"/><text x="26.1737%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (343 samples, 6.93%)</title><rect x="19.1399%" y="565" width="6.9251%" height="15" fill="rgb(208,219,16)" fg:x="948" fg:w="343"/><text x="19.3899%" y="575.50">&lt;core::ma..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (310 samples, 6.26%)</title><rect x="19.8062%" y="549" width="6.2588%" height="15" fill="rgb(216,158,51)" fg:x="981" fg:w="310"/><text x="20.0562%" y="559.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (270 samples, 5.45%)</title><rect x="20.6138%" y="533" width="5.4512%" height="15" fill="rgb(233,14,44)" fg:x="1021" fg:w="270"/><text x="20.8638%" y="543.50">alloc::..</text></g><g><title>alloc::raw_vec::finish_grow (265 samples, 5.35%)</title><rect x="20.7147%" y="517" width="5.3503%" height="15" fill="rgb(237,97,39)" fg:x="1026" fg:w="265"/><text x="20.9647%" y="527.50">alloc::..</text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.12%)</title><rect x="25.9439%" y="501" width="0.1211%" height="15" fill="rgb(218,198,43)" fg:x="1285" fg:w="6"/><text x="26.1939%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="26.0650%" y="549" width="0.0202%" height="15" fill="rgb(231,104,20)" fg:x="1291" fg:w="1"/><text x="26.3150%" y="559.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="26.0650%" y="565" width="0.0606%" height="15" fill="rgb(254,36,13)" fg:x="1291" fg:w="3"/><text x="26.3150%" y="575.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="26.0852%" y="549" width="0.0404%" height="15" fill="rgb(248,14,50)" fg:x="1292" fg:w="2"/><text x="26.3352%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="26.0852%" y="533" width="0.0404%" height="15" fill="rgb(217,107,29)" fg:x="1292" fg:w="2"/><text x="26.3352%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (43 samples, 0.87%)</title><rect x="28.8714%" y="485" width="0.8682%" height="15" fill="rgb(251,169,33)" fg:x="1430" fg:w="43"/><text x="29.1214%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.28%)</title><rect x="30.2847%" y="469" width="0.2827%" height="15" fill="rgb(217,108,32)" fg:x="1500" fg:w="14"/><text x="30.5347%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.28%)</title><rect x="31.8797%" y="373" width="0.2827%" height="15" fill="rgb(219,66,42)" fg:x="1579" fg:w="14"/><text x="32.1297%" y="383.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (29 samples, 0.59%)</title><rect x="32.1623%" y="341" width="0.5855%" height="15" fill="rgb(206,180,7)" fg:x="1593" fg:w="29"/><text x="32.4123%" y="351.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (52 samples, 1.05%)</title><rect x="31.7585%" y="389" width="1.0499%" height="15" fill="rgb(208,226,31)" fg:x="1573" fg:w="52"/><text x="32.0085%" y="399.50"></text></g><g><title>?? (32 samples, 0.65%)</title><rect x="32.1623%" y="373" width="0.6461%" height="15" fill="rgb(218,26,49)" fg:x="1593" fg:w="32"/><text x="32.4123%" y="383.50"></text></g><g><title>sonic_rs::reader::Reader::next (32 samples, 0.65%)</title><rect x="32.1623%" y="357" width="0.6461%" height="15" fill="rgb(233,197,48)" fg:x="1593" fg:w="32"/><text x="32.4123%" y="367.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="32.7478%" y="341" width="0.0606%" height="15" fill="rgb(252,181,51)" fg:x="1622" fg:w="3"/><text x="32.9978%" y="351.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect x="32.7478%" y="325" width="0.0606%" height="15" fill="rgb(253,90,19)" fg:x="1622" fg:w="3"/><text x="32.9978%" y="335.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect x="32.7478%" y="309" width="0.0606%" height="15" fill="rgb(215,171,30)" fg:x="1622" fg:w="3"/><text x="32.9978%" y="319.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="32.8084%" y="389" width="0.0404%" height="15" fill="rgb(214,222,9)" fg:x="1625" fg:w="2"/><text x="33.0584%" y="399.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (8 samples, 0.16%)</title><rect x="32.8488%" y="341" width="0.1615%" height="15" fill="rgb(223,3,22)" fg:x="1627" fg:w="8"/><text x="33.0988%" y="351.50"></text></g><g><title>&lt;json_benchmark::empty::Array as serde::de::Deserialize&gt;::deserialize (63 samples, 1.27%)</title><rect x="31.7585%" y="421" width="1.2720%" height="15" fill="rgb(225,196,46)" fg:x="1573" fg:w="63"/><text x="32.0085%" y="431.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (63 samples, 1.27%)</title><rect x="31.7585%" y="405" width="1.2720%" height="15" fill="rgb(209,110,37)" fg:x="1573" fg:w="63"/><text x="32.0085%" y="415.50"></text></g><g><title>?? (9 samples, 0.18%)</title><rect x="32.8488%" y="389" width="0.1817%" height="15" fill="rgb(249,89,12)" fg:x="1627" fg:w="9"/><text x="33.0988%" y="399.50"></text></g><g><title>?? (9 samples, 0.18%)</title><rect x="32.8488%" y="373" width="0.1817%" height="15" fill="rgb(226,27,33)" fg:x="1627" fg:w="9"/><text x="33.0988%" y="383.50"></text></g><g><title>sonic_rs::reader::Reader::next (9 samples, 0.18%)</title><rect x="32.8488%" y="357" width="0.1817%" height="15" fill="rgb(213,82,22)" fg:x="1627" fg:w="9"/><text x="33.0988%" y="367.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="33.0103%" y="341" width="0.0202%" height="15" fill="rgb(248,140,0)" fg:x="1635" fg:w="1"/><text x="33.2603%" y="351.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="33.0103%" y="325" width="0.0202%" height="15" fill="rgb(228,106,3)" fg:x="1635" fg:w="1"/><text x="33.2603%" y="335.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="33.0103%" y="309" width="0.0202%" height="15" fill="rgb(209,23,37)" fg:x="1635" fg:w="1"/><text x="33.2603%" y="319.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (5 samples, 0.10%)</title><rect x="34.0804%" y="357" width="0.1009%" height="15" fill="rgb(241,93,50)" fg:x="1688" fg:w="5"/><text x="34.3304%" y="367.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::set_index (9 samples, 0.18%)</title><rect x="34.1813%" y="357" width="0.1817%" height="15" fill="rgb(253,46,43)" fg:x="1693" fg:w="9"/><text x="34.4313%" y="367.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (20 samples, 0.40%)</title><rect x="34.3630%" y="341" width="0.4038%" height="15" fill="rgb(226,206,43)" fg:x="1702" fg:w="20"/><text x="34.6130%" y="351.50"></text></g><g><title>sonic_rs::reader::Reader::next (31 samples, 0.63%)</title><rect x="34.3630%" y="357" width="0.6259%" height="15" fill="rgb(217,54,7)" fg:x="1702" fg:w="31"/><text x="34.6130%" y="367.50"></text></g><g><title>?? (11 samples, 0.22%)</title><rect x="34.7668%" y="341" width="0.2221%" height="15" fill="rgb(223,5,52)" fg:x="1722" fg:w="11"/><text x="35.0168%" y="351.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (11 samples, 0.22%)</title><rect x="34.7668%" y="325" width="0.2221%" height="15" fill="rgb(206,52,46)" fg:x="1722" fg:w="11"/><text x="35.0168%" y="335.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (11 samples, 0.22%)</title><rect x="34.7668%" y="309" width="0.2221%" height="15" fill="rgb(253,136,11)" fg:x="1722" fg:w="11"/><text x="35.0168%" y="319.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (25 samples, 0.50%)</title><rect x="36.3618%" y="341" width="0.5047%" height="15" fill="rgb(208,106,33)" fg:x="1801" fg:w="25"/><text x="36.6118%" y="351.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (25 samples, 0.50%)</title><rect x="36.3618%" y="325" width="0.5047%" height="15" fill="rgb(206,54,4)" fg:x="1801" fg:w="25"/><text x="36.6118%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (17 samples, 0.34%)</title><rect x="36.8665%" y="341" width="0.3432%" height="15" fill="rgb(213,3,15)" fg:x="1826" fg:w="17"/><text x="37.1165%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (48 samples, 0.97%)</title><rect x="37.2098%" y="341" width="0.9691%" height="15" fill="rgb(252,211,39)" fg:x="1843" fg:w="48"/><text x="37.4598%" y="351.50"></text></g><g><title>?? (241 samples, 4.87%)</title><rect x="34.0804%" y="373" width="4.8657%" height="15" fill="rgb(223,6,36)" fg:x="1688" fg:w="241"/><text x="34.3304%" y="383.50">??</text></g><g><title>sonic_rs::util::num::parse_number_unchecked (196 samples, 3.96%)</title><rect x="34.9889%" y="357" width="3.9572%" height="15" fill="rgb(252,169,45)" fg:x="1733" fg:w="196"/><text x="35.2389%" y="367.50">soni..</text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (38 samples, 0.77%)</title><rect x="38.1789%" y="341" width="0.7672%" height="15" fill="rgb(212,48,26)" fg:x="1891" fg:w="38"/><text x="38.4289%" y="351.50"></text></g><g><title>?? (249 samples, 5.03%)</title><rect x="34.0804%" y="389" width="5.0273%" height="15" fill="rgb(251,102,48)" fg:x="1688" fg:w="249"/><text x="34.3304%" y="399.50">??</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (8 samples, 0.16%)</title><rect x="38.9461%" y="373" width="0.1615%" height="15" fill="rgb(243,208,16)" fg:x="1929" fg:w="8"/><text x="39.1961%" y="383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (434 samples, 8.76%)</title><rect x="30.8298%" y="437" width="8.7624%" height="15" fill="rgb(219,96,24)" fg:x="1527" fg:w="434"/><text x="31.0798%" y="447.50">&lt;core::marke..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (325 samples, 6.56%)</title><rect x="33.0305%" y="421" width="6.5617%" height="15" fill="rgb(219,33,29)" fg:x="1636" fg:w="325"/><text x="33.2805%" y="431.50">serde::de..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (273 samples, 5.51%)</title><rect x="34.0804%" y="405" width="5.5118%" height="15" fill="rgb(223,176,5)" fg:x="1688" fg:w="273"/><text x="34.3304%" y="415.50">&lt;&amp;mut s..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (24 samples, 0.48%)</title><rect x="39.1076%" y="389" width="0.4846%" height="15" fill="rgb(228,140,14)" fg:x="1937" fg:w="24"/><text x="39.3576%" y="399.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (19 samples, 0.38%)</title><rect x="39.5922%" y="389" width="0.3836%" height="15" fill="rgb(217,179,31)" fg:x="1961" fg:w="19"/><text x="39.8422%" y="399.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (487 samples, 9.83%)</title><rect x="30.5673%" y="469" width="9.8324%" height="15" fill="rgb(230,9,30)" fg:x="1514" fg:w="487"/><text x="30.8173%" y="479.50">&lt;sonic_rs::ser..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (487 samples, 9.83%)</title><rect x="30.5673%" y="453" width="9.8324%" height="15" fill="rgb(230,136,20)" fg:x="1514" fg:w="487"/><text x="30.8173%" y="463.50">&lt;sonic_rs::ser..</text></g><g><title>?? (40 samples, 0.81%)</title><rect x="39.5922%" y="437" width="0.8076%" height="15" fill="rgb(215,210,22)" fg:x="1961" fg:w="40"/><text x="39.8422%" y="447.50"></text></g><g><title>?? (40 samples, 0.81%)</title><rect x="39.5922%" y="421" width="0.8076%" height="15" fill="rgb(218,43,5)" fg:x="1961" fg:w="40"/><text x="39.8422%" y="431.50"></text></g><g><title>sonic_rs::reader::Reader::next (40 samples, 0.81%)</title><rect x="39.5922%" y="405" width="0.8076%" height="15" fill="rgb(216,11,5)" fg:x="1961" fg:w="40"/><text x="39.8422%" y="415.50"></text></g><g><title>?? (21 samples, 0.42%)</title><rect x="39.9758%" y="389" width="0.4240%" height="15" fill="rgb(209,82,29)" fg:x="1980" fg:w="21"/><text x="40.2258%" y="399.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (21 samples, 0.42%)</title><rect x="39.9758%" y="373" width="0.4240%" height="15" fill="rgb(244,115,12)" fg:x="1980" fg:w="21"/><text x="40.2258%" y="383.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (21 samples, 0.42%)</title><rect x="39.9758%" y="357" width="0.4240%" height="15" fill="rgb(222,82,18)" fg:x="1980" fg:w="21"/><text x="40.2258%" y="367.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.28%)</title><rect x="44.7809%" y="373" width="0.2827%" height="15" fill="rgb(249,227,8)" fg:x="2218" fg:w="14"/><text x="45.0309%" y="383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (65 samples, 1.31%)</title><rect x="45.0636%" y="341" width="1.3123%" height="15" fill="rgb(253,141,45)" fg:x="2232" fg:w="65"/><text x="45.3136%" y="351.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (19 samples, 0.38%)</title><rect x="46.3759%" y="341" width="0.3836%" height="15" fill="rgb(234,184,4)" fg:x="2297" fg:w="19"/><text x="46.6259%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (19 samples, 0.38%)</title><rect x="46.3759%" y="325" width="0.3836%" height="15" fill="rgb(218,194,23)" fg:x="2297" fg:w="19"/><text x="46.6259%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (19 samples, 0.38%)</title><rect x="46.3759%" y="309" width="0.3836%" height="15" fill="rgb(235,66,41)" fg:x="2297" fg:w="19"/><text x="46.6259%" y="319.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (132 samples, 2.67%)</title><rect x="46.7595%" y="325" width="2.6651%" height="15" fill="rgb(245,217,1)" fg:x="2316" fg:w="132"/><text x="47.0095%" y="335.50">&lt;c..</text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (33 samples, 0.67%)</title><rect x="49.4246%" y="325" width="0.6663%" height="15" fill="rgb(229,91,1)" fg:x="2448" fg:w="33"/><text x="49.6746%" y="335.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (9 samples, 0.18%)</title><rect x="50.0909%" y="325" width="0.1817%" height="15" fill="rgb(207,101,30)" fg:x="2481" fg:w="9"/><text x="50.3409%" y="335.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect x="50.2524%" y="309" width="0.0202%" height="15" fill="rgb(223,82,49)" fg:x="2489" fg:w="1"/><text x="50.5024%" y="319.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect x="50.2524%" y="293" width="0.0202%" height="15" fill="rgb(218,167,17)" fg:x="2489" fg:w="1"/><text x="50.5024%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="50.2524%" y="277" width="0.0202%" height="15" fill="rgb(208,103,14)" fg:x="2489" fg:w="1"/><text x="50.5024%" y="287.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="50.2524%" y="261" width="0.0202%" height="15" fill="rgb(238,20,8)" fg:x="2489" fg:w="1"/><text x="50.5024%" y="271.50"></text></g><g><title>?? (9 samples, 0.18%)</title><rect x="50.2726%" y="325" width="0.1817%" height="15" fill="rgb(218,80,54)" fg:x="2490" fg:w="9"/><text x="50.5226%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.18%)</title><rect x="50.2726%" y="309" width="0.1817%" height="15" fill="rgb(240,144,17)" fg:x="2490" fg:w="9"/><text x="50.5226%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (11 samples, 0.22%)</title><rect x="50.4543%" y="325" width="0.2221%" height="15" fill="rgb(245,27,50)" fg:x="2499" fg:w="11"/><text x="50.7043%" y="335.50"></text></g><g><title>?? (295 samples, 5.96%)</title><rect x="45.0636%" y="373" width="5.9560%" height="15" fill="rgb(251,51,7)" fg:x="2232" fg:w="295"/><text x="45.3136%" y="383.50">??</text></g><g><title>?? (295 samples, 5.96%)</title><rect x="45.0636%" y="357" width="5.9560%" height="15" fill="rgb(245,217,29)" fg:x="2232" fg:w="295"/><text x="45.3136%" y="367.50">??</text></g><g><title>?? (211 samples, 4.26%)</title><rect x="46.7595%" y="341" width="4.2600%" height="15" fill="rgb(221,176,29)" fg:x="2316" fg:w="211"/><text x="47.0095%" y="351.50">??</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (17 samples, 0.34%)</title><rect x="50.6764%" y="325" width="0.3432%" height="15" fill="rgb(212,180,24)" fg:x="2510" fg:w="17"/><text x="50.9264%" y="335.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (510 samples, 10.30%)</title><rect x="41.1064%" y="437" width="10.2968%" height="15" fill="rgb(254,24,2)" fg:x="2036" fg:w="510"/><text x="41.3564%" y="447.50">&lt;core::marker::..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (328 samples, 6.62%)</title><rect x="44.7809%" y="421" width="6.6222%" height="15" fill="rgb(230,100,2)" fg:x="2218" fg:w="328"/><text x="45.0309%" y="431.50">&lt;json_ben..</text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (328 samples, 6.62%)</title><rect x="44.7809%" y="405" width="6.6222%" height="15" fill="rgb(219,142,25)" fg:x="2218" fg:w="328"/><text x="45.0309%" y="415.50">&lt;sonic_rs..</text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (328 samples, 6.62%)</title><rect x="44.7809%" y="389" width="6.6222%" height="15" fill="rgb(240,73,43)" fg:x="2218" fg:w="328"/><text x="45.0309%" y="399.50">&lt;sonic_rs..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (19 samples, 0.38%)</title><rect x="51.0196%" y="373" width="0.3836%" height="15" fill="rgb(214,114,15)" fg:x="2527" fg:w="19"/><text x="51.2696%" y="383.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (19 samples, 0.38%)</title><rect x="51.0196%" y="357" width="0.3836%" height="15" fill="rgb(207,130,4)" fg:x="2527" fg:w="19"/><text x="51.2696%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (19 samples, 0.38%)</title><rect x="51.0196%" y="341" width="0.3836%" height="15" fill="rgb(221,25,40)" fg:x="2527" fg:w="19"/><text x="51.2696%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.38%)</title><rect x="51.0196%" y="325" width="0.3836%" height="15" fill="rgb(241,184,7)" fg:x="2527" fg:w="19"/><text x="51.2696%" y="335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (19 samples, 0.38%)</title><rect x="51.0196%" y="309" width="0.3836%" height="15" fill="rgb(235,159,4)" fg:x="2527" fg:w="19"/><text x="51.2696%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (19 samples, 0.38%)</title><rect x="51.0196%" y="293" width="0.3836%" height="15" fill="rgb(214,87,48)" fg:x="2527" fg:w="19"/><text x="51.2696%" y="303.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (12 samples, 0.24%)</title><rect x="51.4032%" y="421" width="0.2423%" height="15" fill="rgb(246,198,24)" fg:x="2546" fg:w="12"/><text x="51.6532%" y="431.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (10 samples, 0.20%)</title><rect x="51.6455%" y="421" width="0.2019%" height="15" fill="rgb(209,66,40)" fg:x="2558" fg:w="10"/><text x="51.8955%" y="431.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (8 samples, 0.16%)</title><rect x="51.8474%" y="421" width="0.1615%" height="15" fill="rgb(233,147,39)" fg:x="2568" fg:w="8"/><text x="52.0974%" y="431.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (51 samples, 1.03%)</title><rect x="52.0089%" y="405" width="1.0297%" height="15" fill="rgb(231,145,52)" fg:x="2576" fg:w="51"/><text x="52.2589%" y="415.50"></text></g><g><title>sonic_rs::reader::Reader::next (82 samples, 1.66%)</title><rect x="52.0089%" y="421" width="1.6556%" height="15" fill="rgb(206,20,26)" fg:x="2576" fg:w="82"/><text x="52.2589%" y="431.50"></text></g><g><title>?? (31 samples, 0.63%)</title><rect x="53.0386%" y="405" width="0.6259%" height="15" fill="rgb(238,220,4)" fg:x="2627" fg:w="31"/><text x="53.2886%" y="415.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (31 samples, 0.63%)</title><rect x="53.0386%" y="389" width="0.6259%" height="15" fill="rgb(252,195,42)" fg:x="2627" fg:w="31"/><text x="53.2886%" y="399.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (31 samples, 0.63%)</title><rect x="53.0386%" y="373" width="0.6259%" height="15" fill="rgb(209,10,6)" fg:x="2627" fg:w="31"/><text x="53.2886%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (17 samples, 0.34%)</title><rect x="53.8865%" y="405" width="0.3432%" height="15" fill="rgb(229,3,52)" fg:x="2669" fg:w="17"/><text x="54.1365%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (21 samples, 0.42%)</title><rect x="54.2298%" y="405" width="0.4240%" height="15" fill="rgb(253,49,37)" fg:x="2686" fg:w="21"/><text x="54.4798%" y="415.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1,240 samples, 25.04%)</title><rect x="29.7396%" y="485" width="25.0353%" height="15" fill="rgb(240,103,49)" fg:x="1473" fg:w="1240"/><text x="29.9896%" y="495.50">&lt;json_benchmark::copy::citm_catalog::_::..</text></g><g><title>serde::de::MapAccess::next_key (712 samples, 14.38%)</title><rect x="40.3998%" y="469" width="14.3751%" height="15" fill="rgb(250,182,30)" fg:x="2001" fg:w="712"/><text x="40.6498%" y="479.50">serde::de::MapAccess::..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (712 samples, 14.38%)</title><rect x="40.3998%" y="453" width="14.3751%" height="15" fill="rgb(248,8,30)" fg:x="2001" fg:w="712"/><text x="40.6498%" y="463.50">&lt;sonic_rs::serde::de::..</text></g><g><title>?? (167 samples, 3.37%)</title><rect x="51.4032%" y="437" width="3.3717%" height="15" fill="rgb(237,120,30)" fg:x="2546" fg:w="167"/><text x="51.6532%" y="447.50">??</text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (55 samples, 1.11%)</title><rect x="53.6644%" y="421" width="1.1104%" height="15" fill="rgb(221,146,34)" fg:x="2658" fg:w="55"/><text x="53.9144%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.12%)</title><rect x="54.6537%" y="405" width="0.1211%" height="15" fill="rgb(242,55,13)" fg:x="2707" fg:w="6"/><text x="54.9037%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (10 samples, 0.20%)</title><rect x="54.7749%" y="469" width="0.2019%" height="15" fill="rgb(242,112,31)" fg:x="2713" fg:w="10"/><text x="55.0249%" y="479.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (29 samples, 0.59%)</title><rect x="54.9768%" y="453" width="0.5855%" height="15" fill="rgb(249,192,27)" fg:x="2723" fg:w="29"/><text x="55.2268%" y="463.50"></text></g><g><title>sonic_rs::reader::Reader::next (32 samples, 0.65%)</title><rect x="54.9768%" y="469" width="0.6461%" height="15" fill="rgb(208,204,44)" fg:x="2723" fg:w="32"/><text x="55.2268%" y="479.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="55.5623%" y="453" width="0.0606%" height="15" fill="rgb(208,93,54)" fg:x="2752" fg:w="3"/><text x="55.8123%" y="463.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect x="55.5623%" y="437" width="0.0606%" height="15" fill="rgb(242,1,31)" fg:x="2752" fg:w="3"/><text x="55.8123%" y="447.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect x="55.5623%" y="421" width="0.0606%" height="15" fill="rgb(241,83,25)" fg:x="2752" fg:w="3"/><text x="55.8123%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="55.6229%" y="453" width="0.0202%" height="15" fill="rgb(205,169,50)" fg:x="2755" fg:w="1"/><text x="55.8729%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,426 samples, 28.79%)</title><rect x="26.8726%" y="533" width="28.7906%" height="15" fill="rgb(239,186,37)" fg:x="1331" fg:w="1426"/><text x="27.1226%" y="543.50">&lt;core::marker::PhantomData&lt;T&gt; as serde::de::De..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (1,361 samples, 27.48%)</title><rect x="28.1849%" y="517" width="27.4783%" height="15" fill="rgb(205,221,10)" fg:x="1396" fg:w="1361"/><text x="28.4349%" y="527.50">json_benchmark::copy::citm_catalog::_::&lt;impl..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1,361 samples, 27.48%)</title><rect x="28.1849%" y="501" width="27.4783%" height="15" fill="rgb(218,196,15)" fg:x="1396" fg:w="1361"/><text x="28.4349%" y="511.50">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; a..</text></g><g><title>?? (44 samples, 0.89%)</title><rect x="54.7749%" y="485" width="0.8884%" height="15" fill="rgb(218,196,35)" fg:x="2713" fg:w="44"/><text x="55.0249%" y="495.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect x="55.6229%" y="469" width="0.0404%" height="15" fill="rgb(233,63,24)" fg:x="2755" fg:w="2"/><text x="55.8729%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="55.6430%" y="453" width="0.0202%" height="15" fill="rgb(225,8,4)" fg:x="2756" fg:w="1"/><text x="55.8930%" y="463.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="55.6632%" y="517" width="0.0202%" height="15" fill="rgb(234,105,35)" fg:x="2757" fg:w="1"/><text x="55.9132%" y="527.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="55.6834%" y="517" width="0.0202%" height="15" fill="rgb(236,21,32)" fg:x="2758" fg:w="1"/><text x="55.9334%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (2 samples, 0.04%)</title><rect x="55.7036%" y="517" width="0.0404%" height="15" fill="rgb(228,109,6)" fg:x="2759" fg:w="2"/><text x="55.9536%" y="527.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (22 samples, 0.44%)</title><rect x="55.7440%" y="501" width="0.4442%" height="15" fill="rgb(229,215,31)" fg:x="2761" fg:w="22"/><text x="55.9940%" y="511.50"></text></g><g><title>sonic_rs::reader::Reader::next (25 samples, 0.50%)</title><rect x="55.7440%" y="517" width="0.5047%" height="15" fill="rgb(221,52,54)" fg:x="2761" fg:w="25"/><text x="55.9940%" y="527.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="56.1882%" y="501" width="0.0606%" height="15" fill="rgb(252,129,43)" fg:x="2783" fg:w="3"/><text x="56.4382%" y="511.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect x="56.1882%" y="485" width="0.0606%" height="15" fill="rgb(248,183,27)" fg:x="2783" fg:w="3"/><text x="56.4382%" y="495.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect x="56.1882%" y="469" width="0.0606%" height="15" fill="rgb(250,0,22)" fg:x="2783" fg:w="3"/><text x="56.4382%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="56.2689%" y="501" width="0.0202%" height="15" fill="rgb(213,166,10)" fg:x="2787" fg:w="1"/><text x="56.5189%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect x="56.2891%" y="501" width="0.0202%" height="15" fill="rgb(207,163,36)" fg:x="2788" fg:w="1"/><text x="56.5391%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1,848 samples, 37.31%)</title><rect x="19.0188%" y="581" width="37.3107%" height="15" fill="rgb(208,122,22)" fg:x="942" fg:w="1848"/><text x="19.2688%" y="591.50">&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::ve..</text></g><g><title>serde::de::SeqAccess::next_element (1,496 samples, 30.20%)</title><rect x="26.1256%" y="565" width="30.2039%" height="15" fill="rgb(207,104,49)" fg:x="1294" fg:w="1496"/><text x="26.3756%" y="575.50">serde::de::SeqAccess::next_element</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,496 samples, 30.20%)</title><rect x="26.1256%" y="549" width="30.2039%" height="15" fill="rgb(248,211,50)" fg:x="1294" fg:w="1496"/><text x="26.3756%" y="559.50">&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::..</text></g><g><title>?? (33 samples, 0.67%)</title><rect x="55.6632%" y="533" width="0.6663%" height="15" fill="rgb(217,13,45)" fg:x="2757" fg:w="33"/><text x="55.9132%" y="543.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (4 samples, 0.08%)</title><rect x="56.2487%" y="517" width="0.0808%" height="15" fill="rgb(211,216,49)" fg:x="2786" fg:w="4"/><text x="56.4987%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="56.3093%" y="501" width="0.0202%" height="15" fill="rgb(221,58,53)" fg:x="2789" fg:w="1"/><text x="56.5593%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1,853 samples, 37.41%)</title><rect x="18.9380%" y="613" width="37.4117%" height="15" fill="rgb(220,112,41)" fg:x="938" fg:w="1853"/><text x="19.1880%" y="623.50">serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1,853 samples, 37.41%)</title><rect x="18.9380%" y="597" width="37.4117%" height="15" fill="rgb(236,38,28)" fg:x="938" fg:w="1853"/><text x="19.1880%" y="607.50">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Dese..</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="56.3295%" y="581" width="0.0202%" height="15" fill="rgb(227,195,22)" fg:x="2790" fg:w="1"/><text x="56.5795%" y="591.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="56.3295%" y="565" width="0.0202%" height="15" fill="rgb(214,55,33)" fg:x="2790" fg:w="1"/><text x="56.5795%" y="575.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="56.3295%" y="549" width="0.0202%" height="15" fill="rgb(248,80,13)" fg:x="2790" fg:w="1"/><text x="56.5795%" y="559.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="56.3295%" y="533" width="0.0202%" height="15" fill="rgb(238,52,6)" fg:x="2790" fg:w="1"/><text x="56.5795%" y="543.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="56.3295%" y="517" width="0.0202%" height="15" fill="rgb(224,198,47)" fg:x="2790" fg:w="1"/><text x="56.5795%" y="527.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (1 samples, 0.02%)</title><rect x="56.4910%" y="549" width="0.0202%" height="15" fill="rgb(233,171,20)" fg:x="2798" fg:w="1"/><text x="56.7410%" y="559.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="56.5112%" y="533" width="0.0404%" height="15" fill="rgb(241,30,25)" fg:x="2799" fg:w="2"/><text x="56.7612%" y="543.50"></text></g><g><title>sonic_rs::reader::Reader::next (4 samples, 0.08%)</title><rect x="56.5112%" y="549" width="0.0808%" height="15" fill="rgb(207,171,38)" fg:x="2799" fg:w="4"/><text x="56.7612%" y="559.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="56.5516%" y="533" width="0.0404%" height="15" fill="rgb(234,70,1)" fg:x="2801" fg:w="2"/><text x="56.8016%" y="543.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect x="56.5516%" y="517" width="0.0404%" height="15" fill="rgb(232,178,18)" fg:x="2801" fg:w="2"/><text x="56.8016%" y="527.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="56.5516%" y="501" width="0.0404%" height="15" fill="rgb(241,78,40)" fg:x="2801" fg:w="2"/><text x="56.8016%" y="511.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.02%)</title><rect x="56.6525%" y="533" width="0.0202%" height="15" fill="rgb(222,35,25)" fg:x="2806" fg:w="1"/><text x="56.9025%" y="543.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="56.6525%" y="517" width="0.0202%" height="15" fill="rgb(207,92,16)" fg:x="2806" fg:w="1"/><text x="56.9025%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="56.6727%" y="533" width="0.0202%" height="15" fill="rgb(216,59,51)" fg:x="2807" fg:w="1"/><text x="56.9227%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (9 samples, 0.18%)</title><rect x="56.6929%" y="533" width="0.1817%" height="15" fill="rgb(213,80,28)" fg:x="2808" fg:w="9"/><text x="56.9429%" y="543.50"></text></g><g><title>?? (25 samples, 0.50%)</title><rect x="56.4910%" y="581" width="0.5047%" height="15" fill="rgb(220,93,7)" fg:x="2798" fg:w="25"/><text x="56.7410%" y="591.50"></text></g><g><title>?? (25 samples, 0.50%)</title><rect x="56.4910%" y="565" width="0.5047%" height="15" fill="rgb(225,24,44)" fg:x="2798" fg:w="25"/><text x="56.7410%" y="575.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (20 samples, 0.40%)</title><rect x="56.5920%" y="549" width="0.4038%" height="15" fill="rgb(243,74,40)" fg:x="2803" fg:w="20"/><text x="56.8420%" y="559.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (6 samples, 0.12%)</title><rect x="56.8746%" y="533" width="0.1211%" height="15" fill="rgb(228,39,7)" fg:x="2817" fg:w="6"/><text x="57.1246%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,898 samples, 38.32%)</title><rect x="18.7563%" y="629" width="38.3202%" height="15" fill="rgb(227,79,8)" fg:x="929" fg:w="1898"/><text x="19.0063%" y="639.50">&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (36 samples, 0.73%)</title><rect x="56.3497%" y="613" width="0.7268%" height="15" fill="rgb(236,58,11)" fg:x="2791" fg:w="36"/><text x="56.5997%" y="623.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (29 samples, 0.59%)</title><rect x="56.4910%" y="597" width="0.5855%" height="15" fill="rgb(249,63,35)" fg:x="2798" fg:w="29"/><text x="56.7410%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (4 samples, 0.08%)</title><rect x="56.9958%" y="581" width="0.0808%" height="15" fill="rgb(252,114,16)" fg:x="2823" fg:w="4"/><text x="57.2458%" y="591.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1,901 samples, 38.38%)</title><rect x="18.7159%" y="661" width="38.3808%" height="15" fill="rgb(254,151,24)" fg:x="927" fg:w="1901"/><text x="18.9659%" y="671.50">&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::ne..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,901 samples, 38.38%)</title><rect x="18.7159%" y="645" width="38.3808%" height="15" fill="rgb(253,54,39)" fg:x="927" fg:w="1901"/><text x="18.9659%" y="655.50">&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::ne..</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="57.0765%" y="629" width="0.0202%" height="15" fill="rgb(243,25,45)" fg:x="2827" fg:w="1"/><text x="57.3265%" y="639.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="57.0765%" y="613" width="0.0202%" height="15" fill="rgb(234,134,9)" fg:x="2827" fg:w="1"/><text x="57.3265%" y="623.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="57.0765%" y="597" width="0.0202%" height="15" fill="rgb(227,166,31)" fg:x="2827" fg:w="1"/><text x="57.3265%" y="607.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="57.0765%" y="581" width="0.0202%" height="15" fill="rgb(245,143,41)" fg:x="2827" fg:w="1"/><text x="57.3265%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="57.9447%" y="565" width="0.0202%" height="15" fill="rgb(238,181,32)" fg:x="2870" fg:w="1"/><text x="58.1947%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.16%)</title><rect x="57.9649%" y="533" width="0.1615%" height="15" fill="rgb(224,113,18)" fg:x="2871" fg:w="8"/><text x="58.2149%" y="543.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (3 samples, 0.06%)</title><rect x="58.1264%" y="533" width="0.0606%" height="15" fill="rgb(240,229,28)" fg:x="2879" fg:w="3"/><text x="58.3764%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.06%)</title><rect x="58.1264%" y="517" width="0.0606%" height="15" fill="rgb(250,185,3)" fg:x="2879" fg:w="3"/><text x="58.3764%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.06%)</title><rect x="58.1264%" y="501" width="0.0606%" height="15" fill="rgb(212,59,25)" fg:x="2879" fg:w="3"/><text x="58.3764%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 0.36%)</title><rect x="58.1870%" y="517" width="0.3634%" height="15" fill="rgb(221,87,20)" fg:x="2882" fg:w="18"/><text x="58.4370%" y="527.50"></text></g><g><title>?? (31 samples, 0.63%)</title><rect x="57.9649%" y="565" width="0.6259%" height="15" fill="rgb(213,74,28)" fg:x="2871" fg:w="31"/><text x="58.2149%" y="575.50"></text></g><g><title>?? (31 samples, 0.63%)</title><rect x="57.9649%" y="549" width="0.6259%" height="15" fill="rgb(224,132,34)" fg:x="2871" fg:w="31"/><text x="58.2149%" y="559.50"></text></g><g><title>?? (20 samples, 0.40%)</title><rect x="58.1870%" y="533" width="0.4038%" height="15" fill="rgb(222,101,24)" fg:x="2882" fg:w="20"/><text x="58.4370%" y="543.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="58.5504%" y="517" width="0.0404%" height="15" fill="rgb(254,142,4)" fg:x="2900" fg:w="2"/><text x="58.8004%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (71 samples, 1.43%)</title><rect x="57.1775%" y="629" width="1.4335%" height="15" fill="rgb(230,229,49)" fg:x="2832" fg:w="71"/><text x="57.4275%" y="639.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (33 samples, 0.67%)</title><rect x="57.9447%" y="613" width="0.6663%" height="15" fill="rgb(238,70,47)" fg:x="2870" fg:w="33"/><text x="58.1947%" y="623.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (33 samples, 0.67%)</title><rect x="57.9447%" y="597" width="0.6663%" height="15" fill="rgb(231,160,17)" fg:x="2870" fg:w="33"/><text x="58.1947%" y="607.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (33 samples, 0.67%)</title><rect x="57.9447%" y="581" width="0.6663%" height="15" fill="rgb(218,68,53)" fg:x="2870" fg:w="33"/><text x="58.1947%" y="591.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect x="58.5908%" y="565" width="0.0202%" height="15" fill="rgb(236,111,10)" fg:x="2902" fg:w="1"/><text x="58.8408%" y="575.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="58.5908%" y="549" width="0.0202%" height="15" fill="rgb(224,34,41)" fg:x="2902" fg:w="1"/><text x="58.8408%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="58.5908%" y="533" width="0.0202%" height="15" fill="rgb(241,118,19)" fg:x="2902" fg:w="1"/><text x="58.8408%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="58.5908%" y="517" width="0.0202%" height="15" fill="rgb(238,129,25)" fg:x="2902" fg:w="1"/><text x="58.8408%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="58.5908%" y="501" width="0.0202%" height="15" fill="rgb(238,22,31)" fg:x="2902" fg:w="1"/><text x="58.8408%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="58.5908%" y="485" width="0.0202%" height="15" fill="rgb(222,174,48)" fg:x="2902" fg:w="1"/><text x="58.8408%" y="495.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="58.6109%" y="613" width="0.0202%" height="15" fill="rgb(206,152,40)" fg:x="2903" fg:w="1"/><text x="58.8609%" y="623.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (6 samples, 0.12%)</title><rect x="58.6311%" y="597" width="0.1211%" height="15" fill="rgb(218,99,54)" fg:x="2904" fg:w="6"/><text x="58.8811%" y="607.50"></text></g><g><title>sonic_rs::reader::Reader::next (11 samples, 0.22%)</title><rect x="58.6311%" y="613" width="0.2221%" height="15" fill="rgb(220,174,26)" fg:x="2904" fg:w="11"/><text x="58.8811%" y="623.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="58.7523%" y="597" width="0.1009%" height="15" fill="rgb(245,116,9)" fg:x="2910" fg:w="5"/><text x="59.0023%" y="607.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (5 samples, 0.10%)</title><rect x="58.7523%" y="581" width="0.1009%" height="15" fill="rgb(209,72,35)" fg:x="2910" fg:w="5"/><text x="59.0023%" y="591.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (5 samples, 0.10%)</title><rect x="58.7523%" y="565" width="0.1009%" height="15" fill="rgb(226,126,21)" fg:x="2910" fg:w="5"/><text x="59.0023%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (3 samples, 0.06%)</title><rect x="58.8734%" y="597" width="0.0606%" height="15" fill="rgb(227,192,1)" fg:x="2916" fg:w="3"/><text x="59.1234%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (3 samples, 0.06%)</title><rect x="58.9340%" y="597" width="0.0606%" height="15" fill="rgb(237,180,29)" fg:x="2919" fg:w="3"/><text x="59.1840%" y="607.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2,001 samples, 40.40%)</title><rect x="18.6150%" y="677" width="40.3998%" height="15" fill="rgb(230,197,35)" fg:x="922" fg:w="2001"/><text x="18.8650%" y="687.50">&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deseriali..</text></g><g><title>serde::de::MapAccess::next_key (95 samples, 1.92%)</title><rect x="57.0967%" y="661" width="1.9180%" height="15" fill="rgb(246,193,31)" fg:x="2828" fg:w="95"/><text x="57.3467%" y="671.50">s..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (95 samples, 1.92%)</title><rect x="57.0967%" y="645" width="1.9180%" height="15" fill="rgb(241,36,4)" fg:x="2828" fg:w="95"/><text x="57.3467%" y="655.50">&lt;..</text></g><g><title>?? (20 samples, 0.40%)</title><rect x="58.6109%" y="629" width="0.4038%" height="15" fill="rgb(241,130,17)" fg:x="2903" fg:w="20"/><text x="58.8609%" y="639.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (8 samples, 0.16%)</title><rect x="58.8532%" y="613" width="0.1615%" height="15" fill="rgb(206,137,32)" fg:x="2915" fg:w="8"/><text x="59.1032%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="58.9945%" y="597" width="0.0202%" height="15" fill="rgb(237,228,51)" fg:x="2922" fg:w="1"/><text x="59.2445%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="59.0147%" y="661" width="0.0202%" height="15" fill="rgb(243,6,42)" fg:x="2923" fg:w="1"/><text x="59.2647%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,283 samples, 46.09%)</title><rect x="12.9618%" y="725" width="46.0933%" height="15" fill="rgb(251,74,28)" fg:x="642" fg:w="2283"/><text x="13.2118%" y="735.50">&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (2,018 samples, 40.74%)</title><rect x="18.3121%" y="709" width="40.7430%" height="15" fill="rgb(218,20,49)" fg:x="907" fg:w="2018"/><text x="18.5621%" y="719.50">json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2,018 samples, 40.74%)</title><rect x="18.3121%" y="693" width="40.7430%" height="15" fill="rgb(238,28,14)" fg:x="907" fg:w="2018"/><text x="18.5621%" y="703.50">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializ..</text></g><g><title>?? (2 samples, 0.04%)</title><rect x="59.0147%" y="677" width="0.0404%" height="15" fill="rgb(229,40,46)" fg:x="2923" fg:w="2"/><text x="59.2647%" y="687.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="59.0349%" y="661" width="0.0202%" height="15" fill="rgb(244,195,20)" fg:x="2924" fg:w="1"/><text x="59.2849%" y="671.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="59.0349%" y="645" width="0.0202%" height="15" fill="rgb(253,56,35)" fg:x="2924" fg:w="1"/><text x="59.2849%" y="655.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="59.0551%" y="709" width="0.0202%" height="15" fill="rgb(210,149,44)" fg:x="2925" fg:w="1"/><text x="59.3051%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="59.0753%" y="709" width="0.0202%" height="15" fill="rgb(240,135,12)" fg:x="2926" fg:w="1"/><text x="59.3253%" y="719.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="59.0955%" y="709" width="0.0202%" height="15" fill="rgb(251,24,50)" fg:x="2927" fg:w="1"/><text x="59.3455%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="59.0955%" y="693" width="0.0202%" height="15" fill="rgb(243,200,47)" fg:x="2927" fg:w="1"/><text x="59.3455%" y="703.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2,395 samples, 48.35%)</title><rect x="10.7813%" y="773" width="48.3545%" height="15" fill="rgb(224,166,26)" fg:x="534" fg:w="2395"/><text x="11.0313%" y="783.50">&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deseri..</text></g><g><title>serde::de::SeqAccess::next_element (2,303 samples, 46.50%)</title><rect x="12.6388%" y="757" width="46.4971%" height="15" fill="rgb(233,0,47)" fg:x="626" fg:w="2303"/><text x="12.8888%" y="767.50">serde::de::SeqAccess::next_element</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,303 samples, 46.50%)</title><rect x="12.6388%" y="741" width="46.4971%" height="15" fill="rgb(253,80,5)" fg:x="626" fg:w="2303"/><text x="12.8888%" y="751.50">&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_se..</text></g><g><title>?? (4 samples, 0.08%)</title><rect x="59.0551%" y="725" width="0.0808%" height="15" fill="rgb(214,133,25)" fg:x="2925" fg:w="4"/><text x="59.3051%" y="735.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect x="59.1157%" y="709" width="0.0202%" height="15" fill="rgb(209,27,14)" fg:x="2928" fg:w="1"/><text x="59.3657%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect x="59.1157%" y="693" width="0.0202%" height="15" fill="rgb(219,102,51)" fg:x="2928" fg:w="1"/><text x="59.3657%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2,400 samples, 48.46%)</title><rect x="10.7006%" y="805" width="48.4555%" height="15" fill="rgb(237,18,16)" fg:x="530" fg:w="2400"/><text x="10.9506%" y="815.50">serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserial..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2,400 samples, 48.46%)</title><rect x="10.7006%" y="789" width="48.4555%" height="15" fill="rgb(241,85,17)" fg:x="530" fg:w="2400"/><text x="10.9506%" y="799.50">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserial..</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="59.1359%" y="773" width="0.0202%" height="15" fill="rgb(236,90,42)" fg:x="2929" fg:w="1"/><text x="59.3859%" y="783.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="59.1359%" y="757" width="0.0202%" height="15" fill="rgb(249,57,21)" fg:x="2929" fg:w="1"/><text x="59.3859%" y="767.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="59.1359%" y="741" width="0.0202%" height="15" fill="rgb(243,12,36)" fg:x="2929" fg:w="1"/><text x="59.3859%" y="751.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="59.1359%" y="725" width="0.0202%" height="15" fill="rgb(253,128,47)" fg:x="2929" fg:w="1"/><text x="59.3859%" y="735.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="59.1359%" y="709" width="0.0202%" height="15" fill="rgb(207,33,20)" fg:x="2929" fg:w="1"/><text x="59.3859%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="59.1763%" y="757" width="0.0404%" height="15" fill="rgb(233,215,35)" fg:x="2931" fg:w="2"/><text x="59.4263%" y="767.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (7 samples, 0.14%)</title><rect x="59.1561%" y="773" width="0.1413%" height="15" fill="rgb(249,188,52)" fg:x="2930" fg:w="7"/><text x="59.4061%" y="783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (4 samples, 0.08%)</title><rect x="59.2166%" y="757" width="0.0808%" height="15" fill="rgb(225,12,32)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="767.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (4 samples, 0.08%)</title><rect x="59.2166%" y="741" width="0.0808%" height="15" fill="rgb(247,98,14)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="751.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.08%)</title><rect x="59.2166%" y="725" width="0.0808%" height="15" fill="rgb(247,219,48)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="735.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (4 samples, 0.08%)</title><rect x="59.2166%" y="709" width="0.0808%" height="15" fill="rgb(253,60,48)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="719.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (4 samples, 0.08%)</title><rect x="59.2166%" y="693" width="0.0808%" height="15" fill="rgb(245,15,52)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="703.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.08%)</title><rect x="59.2166%" y="677" width="0.0808%" height="15" fill="rgb(220,133,28)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.08%)</title><rect x="59.2166%" y="661" width="0.0808%" height="15" fill="rgb(217,180,4)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.08%)</title><rect x="59.2166%" y="645" width="0.0808%" height="15" fill="rgb(251,24,1)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.08%)</title><rect x="59.2166%" y="629" width="0.0808%" height="15" fill="rgb(212,185,49)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.08%)</title><rect x="59.2166%" y="613" width="0.0808%" height="15" fill="rgb(215,175,22)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.08%)</title><rect x="59.2166%" y="597" width="0.0808%" height="15" fill="rgb(250,205,14)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="607.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="59.2166%" y="581" width="0.0808%" height="15" fill="rgb(225,211,22)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="591.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="59.2166%" y="565" width="0.0808%" height="15" fill="rgb(251,179,42)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="575.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="59.2166%" y="549" width="0.0808%" height="15" fill="rgb(208,216,51)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.08%)</title><rect x="59.2166%" y="533" width="0.0808%" height="15" fill="rgb(235,36,11)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="543.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="59.2166%" y="517" width="0.0808%" height="15" fill="rgb(213,189,28)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="527.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.08%)</title><rect x="59.2166%" y="501" width="0.0808%" height="15" fill="rgb(227,203,42)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="511.50"></text></g><g><title>__rust_alloc (4 samples, 0.08%)</title><rect x="59.2166%" y="485" width="0.0808%" height="15" fill="rgb(244,72,36)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="495.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.08%)</title><rect x="59.2166%" y="469" width="0.0808%" height="15" fill="rgb(213,53,17)" fg:x="2933" fg:w="4"/><text x="59.4666%" y="479.50"></text></g><g><title>_rjem_malloc (3 samples, 0.06%)</title><rect x="59.2368%" y="453" width="0.0606%" height="15" fill="rgb(207,167,3)" fg:x="2934" fg:w="3"/><text x="59.4868%" y="463.50"></text></g><g><title>imalloc_fastpath (2 samples, 0.04%)</title><rect x="59.2570%" y="437" width="0.0404%" height="15" fill="rgb(216,98,30)" fg:x="2935" fg:w="2"/><text x="59.5070%" y="447.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="59.2772%" y="421" width="0.0202%" height="15" fill="rgb(236,123,15)" fg:x="2936" fg:w="1"/><text x="59.5272%" y="431.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="59.2772%" y="405" width="0.0202%" height="15" fill="rgb(248,81,50)" fg:x="2936" fg:w="1"/><text x="59.5272%" y="415.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (8 samples, 0.16%)</title><rect x="59.1561%" y="805" width="0.1615%" height="15" fill="rgb(214,120,4)" fg:x="2930" fg:w="8"/><text x="59.4061%" y="815.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (8 samples, 0.16%)</title><rect x="59.1561%" y="789" width="0.1615%" height="15" fill="rgb(208,179,34)" fg:x="2930" fg:w="8"/><text x="59.4061%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="59.2974%" y="773" width="0.0202%" height="15" fill="rgb(227,140,7)" fg:x="2937" fg:w="1"/><text x="59.5474%" y="783.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::backward (1 samples, 0.02%)</title><rect x="59.2974%" y="757" width="0.0202%" height="15" fill="rgb(214,22,6)" fg:x="2937" fg:w="1"/><text x="59.5474%" y="767.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="59.3983%" y="741" width="0.0202%" height="15" fill="rgb(207,137,27)" fg:x="2942" fg:w="1"/><text x="59.6483%" y="751.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="59.3983%" y="725" width="0.0202%" height="15" fill="rgb(210,8,46)" fg:x="2942" fg:w="1"/><text x="59.6483%" y="735.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="59.3983%" y="709" width="0.0202%" height="15" fill="rgb(240,16,54)" fg:x="2942" fg:w="1"/><text x="59.6483%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="59.3983%" y="693" width="0.0202%" height="15" fill="rgb(211,209,29)" fg:x="2942" fg:w="1"/><text x="59.6483%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (2 samples, 0.04%)</title><rect x="59.4993%" y="725" width="0.0404%" height="15" fill="rgb(226,228,24)" fg:x="2947" fg:w="2"/><text x="59.7493%" y="735.50"></text></g><g><title>?? (12 samples, 0.24%)</title><rect x="59.3983%" y="773" width="0.2423%" height="15" fill="rgb(222,84,9)" fg:x="2942" fg:w="12"/><text x="59.6483%" y="783.50"></text></g><g><title>?? (12 samples, 0.24%)</title><rect x="59.3983%" y="757" width="0.2423%" height="15" fill="rgb(234,203,30)" fg:x="2942" fg:w="12"/><text x="59.6483%" y="767.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (11 samples, 0.22%)</title><rect x="59.4185%" y="741" width="0.2221%" height="15" fill="rgb(238,109,14)" fg:x="2943" fg:w="11"/><text x="59.6685%" y="751.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (5 samples, 0.10%)</title><rect x="59.5397%" y="725" width="0.1009%" height="15" fill="rgb(233,206,34)" fg:x="2949" fg:w="5"/><text x="59.7897%" y="735.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (18 samples, 0.36%)</title><rect x="59.3176%" y="805" width="0.3634%" height="15" fill="rgb(220,167,47)" fg:x="2938" fg:w="18"/><text x="59.5676%" y="815.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (14 samples, 0.28%)</title><rect x="59.3983%" y="789" width="0.2827%" height="15" fill="rgb(238,105,10)" fg:x="2942" fg:w="14"/><text x="59.6483%" y="799.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect x="59.6406%" y="773" width="0.0404%" height="15" fill="rgb(213,227,17)" fg:x="2954" fg:w="2"/><text x="59.8906%" y="783.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.02%)</title><rect x="59.7416%" y="725" width="0.0202%" height="15" fill="rgb(217,132,38)" fg:x="2959" fg:w="1"/><text x="59.9916%" y="735.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="59.7416%" y="709" width="0.0202%" height="15" fill="rgb(242,146,4)" fg:x="2959" fg:w="1"/><text x="59.9916%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,451 samples, 49.49%)</title><rect x="10.3574%" y="821" width="49.4852%" height="15" fill="rgb(212,61,9)" fg:x="513" fg:w="2451"/><text x="10.6074%" y="831.50">&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (8 samples, 0.16%)</title><rect x="59.6810%" y="805" width="0.1615%" height="15" fill="rgb(247,126,22)" fg:x="2956" fg:w="8"/><text x="59.9310%" y="815.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (6 samples, 0.12%)</title><rect x="59.7214%" y="789" width="0.1211%" height="15" fill="rgb(220,196,2)" fg:x="2958" fg:w="6"/><text x="59.9714%" y="799.50"></text></g><g><title>?? (6 samples, 0.12%)</title><rect x="59.7214%" y="773" width="0.1211%" height="15" fill="rgb(208,46,4)" fg:x="2958" fg:w="6"/><text x="59.9714%" y="783.50"></text></g><g><title>?? (6 samples, 0.12%)</title><rect x="59.7214%" y="757" width="0.1211%" height="15" fill="rgb(252,104,46)" fg:x="2958" fg:w="6"/><text x="59.9714%" y="767.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (6 samples, 0.12%)</title><rect x="59.7214%" y="741" width="0.1211%" height="15" fill="rgb(237,152,48)" fg:x="2958" fg:w="6"/><text x="59.9714%" y="751.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (4 samples, 0.08%)</title><rect x="59.7618%" y="725" width="0.0808%" height="15" fill="rgb(221,59,37)" fg:x="2960" fg:w="4"/><text x="60.0118%" y="735.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (4 samples, 0.08%)</title><rect x="59.8425%" y="773" width="0.0808%" height="15" fill="rgb(209,202,51)" fg:x="2964" fg:w="4"/><text x="60.0925%" y="783.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (2,457 samples, 49.61%)</title><rect x="10.3372%" y="853" width="49.6063%" height="15" fill="rgb(228,81,30)" fg:x="512" fg:w="2457"/><text x="10.5872%" y="863.50">&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,457 samples, 49.61%)</title><rect x="10.3372%" y="837" width="49.6063%" height="15" fill="rgb(227,42,39)" fg:x="512" fg:w="2457"/><text x="10.5872%" y="847.50">&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed</text></g><g><title>?? (5 samples, 0.10%)</title><rect x="59.8425%" y="821" width="0.1009%" height="15" fill="rgb(221,26,2)" fg:x="2964" fg:w="5"/><text x="60.0925%" y="831.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="59.8425%" y="805" width="0.1009%" height="15" fill="rgb(254,61,31)" fg:x="2964" fg:w="5"/><text x="60.0925%" y="815.50"></text></g><g><title>sonic_rs::reader::Reader::next (5 samples, 0.10%)</title><rect x="59.8425%" y="789" width="0.1009%" height="15" fill="rgb(222,173,38)" fg:x="2964" fg:w="5"/><text x="60.0925%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="59.9233%" y="773" width="0.0202%" height="15" fill="rgb(218,50,12)" fg:x="2968" fg:w="1"/><text x="60.1733%" y="783.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="59.9233%" y="757" width="0.0202%" height="15" fill="rgb(223,88,40)" fg:x="2968" fg:w="1"/><text x="60.1733%" y="767.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="59.9233%" y="741" width="0.0202%" height="15" fill="rgb(237,54,19)" fg:x="2968" fg:w="1"/><text x="60.1733%" y="751.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (25 samples, 0.50%)</title><rect x="60.0040%" y="821" width="0.5047%" height="15" fill="rgb(251,129,25)" fg:x="2972" fg:w="25"/><text x="60.2540%" y="831.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect x="60.5088%" y="757" width="0.0404%" height="15" fill="rgb(238,97,19)" fg:x="2997" fg:w="2"/><text x="60.7588%" y="767.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (11 samples, 0.22%)</title><rect x="60.5492%" y="757" width="0.2221%" height="15" fill="rgb(240,169,18)" fg:x="2999" fg:w="11"/><text x="60.7992%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.06%)</title><rect x="60.7107%" y="741" width="0.0606%" height="15" fill="rgb(230,187,49)" fg:x="3007" fg:w="3"/><text x="60.9607%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.06%)</title><rect x="60.7107%" y="725" width="0.0606%" height="15" fill="rgb(209,44,26)" fg:x="3007" fg:w="3"/><text x="60.9607%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.06%)</title><rect x="60.7107%" y="709" width="0.0606%" height="15" fill="rgb(244,0,6)" fg:x="3007" fg:w="3"/><text x="60.9607%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.06%)</title><rect x="60.7107%" y="693" width="0.0606%" height="15" fill="rgb(248,18,21)" fg:x="3007" fg:w="3"/><text x="60.9607%" y="703.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (2 samples, 0.04%)</title><rect x="60.7712%" y="725" width="0.0404%" height="15" fill="rgb(245,180,19)" fg:x="3010" fg:w="2"/><text x="61.0212%" y="735.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.04%)</title><rect x="60.7712%" y="709" width="0.0404%" height="15" fill="rgb(252,118,36)" fg:x="3010" fg:w="2"/><text x="61.0212%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.04%)</title><rect x="60.7712%" y="693" width="0.0404%" height="15" fill="rgb(210,224,19)" fg:x="3010" fg:w="2"/><text x="61.0212%" y="703.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (22 samples, 0.44%)</title><rect x="60.8116%" y="709" width="0.4442%" height="15" fill="rgb(218,30,24)" fg:x="3012" fg:w="22"/><text x="61.0616%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (6 samples, 0.12%)</title><rect x="61.2558%" y="709" width="0.1211%" height="15" fill="rgb(219,75,50)" fg:x="3034" fg:w="6"/><text x="61.5058%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="61.3769%" y="709" width="0.0202%" height="15" fill="rgb(234,72,50)" fg:x="3040" fg:w="1"/><text x="61.6269%" y="719.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (3 samples, 0.06%)</title><rect x="61.3971%" y="709" width="0.0606%" height="15" fill="rgb(219,100,48)" fg:x="3041" fg:w="3"/><text x="61.6471%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (48 samples, 0.97%)</title><rect x="60.5088%" y="821" width="0.9691%" height="15" fill="rgb(253,5,41)" fg:x="2997" fg:w="48"/><text x="60.7588%" y="831.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (48 samples, 0.97%)</title><rect x="60.5088%" y="805" width="0.9691%" height="15" fill="rgb(247,181,11)" fg:x="2997" fg:w="48"/><text x="60.7588%" y="815.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (48 samples, 0.97%)</title><rect x="60.5088%" y="789" width="0.9691%" height="15" fill="rgb(222,223,25)" fg:x="2997" fg:w="48"/><text x="60.7588%" y="799.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (48 samples, 0.97%)</title><rect x="60.5088%" y="773" width="0.9691%" height="15" fill="rgb(214,198,28)" fg:x="2997" fg:w="48"/><text x="60.7588%" y="783.50"></text></g><g><title>?? (35 samples, 0.71%)</title><rect x="60.7712%" y="757" width="0.7066%" height="15" fill="rgb(230,46,43)" fg:x="3010" fg:w="35"/><text x="61.0212%" y="767.50"></text></g><g><title>?? (35 samples, 0.71%)</title><rect x="60.7712%" y="741" width="0.7066%" height="15" fill="rgb(233,65,53)" fg:x="3010" fg:w="35"/><text x="61.0212%" y="751.50"></text></g><g><title>?? (33 samples, 0.67%)</title><rect x="60.8116%" y="725" width="0.6663%" height="15" fill="rgb(221,121,27)" fg:x="3012" fg:w="33"/><text x="61.0616%" y="735.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="61.4577%" y="709" width="0.0202%" height="15" fill="rgb(247,70,47)" fg:x="3044" fg:w="1"/><text x="61.7077%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="61.4779%" y="805" width="0.0202%" height="15" fill="rgb(228,85,35)" fg:x="3045" fg:w="1"/><text x="61.7279%" y="815.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="61.4981%" y="805" width="0.0202%" height="15" fill="rgb(209,50,18)" fg:x="3046" fg:w="1"/><text x="61.7481%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (3 samples, 0.06%)</title><rect x="61.5183%" y="805" width="0.0606%" height="15" fill="rgb(250,19,35)" fg:x="3047" fg:w="3"/><text x="61.7683%" y="815.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (3 samples, 0.06%)</title><rect x="61.5788%" y="789" width="0.0606%" height="15" fill="rgb(253,107,29)" fg:x="3050" fg:w="3"/><text x="61.8288%" y="799.50"></text></g><g><title>sonic_rs::reader::Reader::next (10 samples, 0.20%)</title><rect x="61.5788%" y="805" width="0.2019%" height="15" fill="rgb(252,179,29)" fg:x="3050" fg:w="10"/><text x="61.8288%" y="815.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="61.6394%" y="789" width="0.1413%" height="15" fill="rgb(238,194,6)" fg:x="3053" fg:w="7"/><text x="61.8894%" y="799.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (7 samples, 0.14%)</title><rect x="61.6394%" y="773" width="0.1413%" height="15" fill="rgb(238,164,29)" fg:x="3053" fg:w="7"/><text x="61.8894%" y="783.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (7 samples, 0.14%)</title><rect x="61.6394%" y="757" width="0.1413%" height="15" fill="rgb(224,25,9)" fg:x="3053" fg:w="7"/><text x="61.8894%" y="767.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (2 samples, 0.04%)</title><rect x="61.7807%" y="789" width="0.0404%" height="15" fill="rgb(244,153,23)" fg:x="3060" fg:w="2"/><text x="62.0307%" y="799.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2,576 samples, 52.01%)</title><rect x="9.8526%" y="869" width="52.0089%" height="15" fill="rgb(212,203,14)" fg:x="488" fg:w="2576"/><text x="10.1026%" y="879.50">&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmar..</text></g><g><title>serde::de::MapAccess::next_key (95 samples, 1.92%)</title><rect x="59.9435%" y="853" width="1.9180%" height="15" fill="rgb(220,164,20)" fg:x="2969" fg:w="95"/><text x="60.1935%" y="863.50">s..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (95 samples, 1.92%)</title><rect x="59.9435%" y="837" width="1.9180%" height="15" fill="rgb(222,203,48)" fg:x="2969" fg:w="95"/><text x="60.1935%" y="847.50">&lt;..</text></g><g><title>?? (19 samples, 0.38%)</title><rect x="61.4779%" y="821" width="0.3836%" height="15" fill="rgb(215,159,22)" fg:x="3045" fg:w="19"/><text x="61.7279%" y="831.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (4 samples, 0.08%)</title><rect x="61.7807%" y="805" width="0.0808%" height="15" fill="rgb(216,183,47)" fg:x="3060" fg:w="4"/><text x="62.0307%" y="815.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.04%)</title><rect x="61.8211%" y="789" width="0.0404%" height="15" fill="rgb(229,195,25)" fg:x="3062" fg:w="2"/><text x="62.0711%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (2 samples, 0.04%)</title><rect x="61.8615%" y="853" width="0.0404%" height="15" fill="rgb(224,132,51)" fg:x="3064" fg:w="2"/><text x="62.1115%" y="863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,584 samples, 52.17%)</title><rect x="9.7719%" y="917" width="52.1704%" height="15" fill="rgb(240,63,7)" fg:x="484" fg:w="2584"/><text x="10.0219%" y="927.50">&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (2,584 samples, 52.17%)</title><rect x="9.7719%" y="901" width="52.1704%" height="15" fill="rgb(249,182,41)" fg:x="484" fg:w="2584"/><text x="10.0219%" y="911.50">json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2,584 samples, 52.17%)</title><rect x="9.7719%" y="885" width="52.1704%" height="15" fill="rgb(243,47,26)" fg:x="484" fg:w="2584"/><text x="10.0219%" y="895.50">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_st..</text></g><g><title>?? (4 samples, 0.08%)</title><rect x="61.8615%" y="869" width="0.0808%" height="15" fill="rgb(233,48,2)" fg:x="3064" fg:w="4"/><text x="62.1115%" y="879.50"></text></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect x="61.9019%" y="853" width="0.0404%" height="15" fill="rgb(244,165,34)" fg:x="3066" fg:w="2"/><text x="62.1519%" y="863.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="61.9019%" y="837" width="0.0404%" height="15" fill="rgb(207,89,7)" fg:x="3066" fg:w="2"/><text x="62.1519%" y="847.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (2,963 samples, 59.82%)</title><rect x="2.1401%" y="1045" width="59.8223%" height="15" fill="rgb(244,117,36)" fg:x="106" fg:w="2963"/><text x="2.3901%" y="1055.50">&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,963 samples, 59.82%)</title><rect x="2.1401%" y="1029" width="59.8223%" height="15" fill="rgb(226,144,34)" fg:x="106" fg:w="2963"/><text x="2.3901%" y="1039.50">&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,963 samples, 59.82%)</title><rect x="2.1401%" y="1013" width="59.8223%" height="15" fill="rgb(213,23,19)" fg:x="106" fg:w="2963"/><text x="2.3901%" y="1023.50">&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2,613 samples, 52.76%)</title><rect x="9.2065%" y="997" width="52.7559%" height="15" fill="rgb(217,75,12)" fg:x="456" fg:w="2613"/><text x="9.4565%" y="1007.50">serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2,613 samples, 52.76%)</title><rect x="9.2065%" y="981" width="52.7559%" height="15" fill="rgb(224,159,17)" fg:x="456" fg:w="2613"/><text x="9.4565%" y="991.50">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2,613 samples, 52.76%)</title><rect x="9.2065%" y="965" width="52.7559%" height="15" fill="rgb(217,118,1)" fg:x="456" fg:w="2613"/><text x="9.4565%" y="975.50">&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::V..</text></g><g><title>serde::de::SeqAccess::next_element (2,592 samples, 52.33%)</title><rect x="9.6305%" y="949" width="52.3319%" height="15" fill="rgb(232,180,48)" fg:x="477" fg:w="2592"/><text x="9.8805%" y="959.50">serde::de::SeqAccess::next_element</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,592 samples, 52.33%)</title><rect x="9.6305%" y="933" width="52.3319%" height="15" fill="rgb(230,27,33)" fg:x="477" fg:w="2592"/><text x="9.8805%" y="943.50">&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="61.9423%" y="917" width="0.0202%" height="15" fill="rgb(205,31,21)" fg:x="3068" fg:w="1"/><text x="62.1923%" y="927.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="61.9423%" y="901" width="0.0202%" height="15" fill="rgb(253,59,4)" fg:x="3068" fg:w="1"/><text x="62.1923%" y="911.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="61.9423%" y="885" width="0.0202%" height="15" fill="rgb(224,201,9)" fg:x="3068" fg:w="1"/><text x="62.1923%" y="895.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="61.9624%" y="949" width="0.0202%" height="15" fill="rgb(229,206,30)" fg:x="3069" fg:w="1"/><text x="62.2124%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="61.9624%" y="1013" width="0.0404%" height="15" fill="rgb(212,67,47)" fg:x="3069" fg:w="2"/><text x="62.2124%" y="1023.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.04%)</title><rect x="61.9624%" y="997" width="0.0404%" height="15" fill="rgb(211,96,50)" fg:x="3069" fg:w="2"/><text x="62.2124%" y="1007.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.04%)</title><rect x="61.9624%" y="981" width="0.0404%" height="15" fill="rgb(252,114,18)" fg:x="3069" fg:w="2"/><text x="62.2124%" y="991.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.04%)</title><rect x="61.9624%" y="965" width="0.0404%" height="15" fill="rgb(223,58,37)" fg:x="3069" fg:w="2"/><text x="62.2124%" y="975.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="61.9826%" y="949" width="0.0202%" height="15" fill="rgb(237,70,4)" fg:x="3070" fg:w="1"/><text x="62.2326%" y="959.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="61.9826%" y="933" width="0.0202%" height="15" fill="rgb(244,85,46)" fg:x="3070" fg:w="1"/><text x="62.2326%" y="943.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="61.9826%" y="917" width="0.0202%" height="15" fill="rgb(223,39,52)" fg:x="3070" fg:w="1"/><text x="62.2326%" y="927.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="61.9826%" y="901" width="0.0202%" height="15" fill="rgb(218,200,14)" fg:x="3070" fg:w="1"/><text x="62.2326%" y="911.50"></text></g><g><title>sonic_rs::serde::de::from_trait (2,972 samples, 60.00%)</title><rect x="2.0190%" y="1109" width="60.0040%" height="15" fill="rgb(208,171,16)" fg:x="100" fg:w="2972"/><text x="2.2690%" y="1119.50">sonic_rs::serde::de::from_trait</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (2,970 samples, 59.96%)</title><rect x="2.0594%" y="1093" width="59.9637%" height="15" fill="rgb(234,200,18)" fg:x="102" fg:w="2970"/><text x="2.3094%" y="1103.50">json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2,970 samples, 59.96%)</title><rect x="2.0594%" y="1077" width="59.9637%" height="15" fill="rgb(228,45,11)" fg:x="102" fg:w="2970"/><text x="2.3094%" y="1087.50">&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2,970 samples, 59.96%)</title><rect x="2.0594%" y="1061" width="59.9637%" height="15" fill="rgb(237,182,11)" fg:x="102" fg:w="2970"/><text x="2.3094%" y="1071.50">&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm..</text></g><g><title>serde::de::MapAccess::next_key (3 samples, 0.06%)</title><rect x="61.9624%" y="1045" width="0.0606%" height="15" fill="rgb(241,175,49)" fg:x="3069" fg:w="3"/><text x="62.2124%" y="1055.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.06%)</title><rect x="61.9624%" y="1029" width="0.0606%" height="15" fill="rgb(247,38,35)" fg:x="3069" fg:w="3"/><text x="62.2124%" y="1039.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="62.0028%" y="1013" width="0.0202%" height="15" fill="rgb(228,39,49)" fg:x="3071" fg:w="1"/><text x="62.2528%" y="1023.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="62.0028%" y="997" width="0.0202%" height="15" fill="rgb(226,101,26)" fg:x="3071" fg:w="1"/><text x="62.2528%" y="1007.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="62.0028%" y="981" width="0.0202%" height="15" fill="rgb(206,141,19)" fg:x="3071" fg:w="1"/><text x="62.2528%" y="991.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="62.1643%" y="949" width="0.0202%" height="15" fill="rgb(211,200,13)" fg:x="3079" fg:w="1"/><text x="62.4143%" y="959.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="62.1643%" y="933" width="0.0202%" height="15" fill="rgb(241,121,6)" fg:x="3079" fg:w="1"/><text x="62.4143%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpgt_epi8 (1 samples, 0.02%)</title><rect x="62.1643%" y="917" width="0.0202%" height="15" fill="rgb(234,221,29)" fg:x="3079" fg:w="1"/><text x="62.4143%" y="927.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="62.1643%" y="965" width="0.0404%" height="15" fill="rgb(229,136,5)" fg:x="3079" fg:w="2"/><text x="62.4143%" y="975.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute2x128_si256 (1 samples, 0.02%)</title><rect x="62.1845%" y="949" width="0.0202%" height="15" fill="rgb(238,36,11)" fg:x="3080" fg:w="1"/><text x="62.4345%" y="959.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (14 samples, 0.28%)</title><rect x="62.2047%" y="965" width="0.2827%" height="15" fill="rgb(251,55,41)" fg:x="3081" fg:w="14"/><text x="62.4547%" y="975.50"></text></g><g><title>?? (31 samples, 0.63%)</title><rect x="62.1643%" y="981" width="0.6259%" height="15" fill="rgb(242,34,40)" fg:x="3079" fg:w="31"/><text x="62.4143%" y="991.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (15 samples, 0.30%)</title><rect x="62.4874%" y="965" width="0.3028%" height="15" fill="rgb(215,42,17)" fg:x="3095" fg:w="15"/><text x="62.7374%" y="975.50"></text></g><g><title>?? (108 samples, 2.18%)</title><rect x="62.1643%" y="1013" width="2.1805%" height="15" fill="rgb(207,44,46)" fg:x="3079" fg:w="108"/><text x="62.4143%" y="1023.50">??</text></g><g><title>?? (108 samples, 2.18%)</title><rect x="62.1643%" y="997" width="2.1805%" height="15" fill="rgb(211,206,28)" fg:x="3079" fg:w="108"/><text x="62.4143%" y="1007.50">??</text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (77 samples, 1.55%)</title><rect x="62.7902%" y="981" width="1.5546%" height="15" fill="rgb(237,167,16)" fg:x="3110" fg:w="77"/><text x="63.0402%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (77 samples, 1.55%)</title><rect x="62.7902%" y="965" width="1.5546%" height="15" fill="rgb(233,66,6)" fg:x="3110" fg:w="77"/><text x="63.0402%" y="975.50"></text></g><g><title>simdutf8::implementation::x86::avx2::validate_utf8_basic (135 samples, 2.73%)</title><rect x="62.0230%" y="1029" width="2.7256%" height="15" fill="rgb(246,123,29)" fg:x="3072" fg:w="135"/><text x="62.2730%" y="1039.50">si..</text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (20 samples, 0.40%)</title><rect x="64.3448%" y="1013" width="0.4038%" height="15" fill="rgb(209,62,40)" fg:x="3187" fg:w="20"/><text x="64.5948%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,127 samples, 63.13%)</title><rect x="2.0190%" y="1285" width="63.1335%" height="15" fill="rgb(218,4,25)" fg:x="100" fg:w="3127"/><text x="2.2690%" y="1295.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,127 samples, 63.13%)</title><rect x="2.0190%" y="1269" width="63.1335%" height="15" fill="rgb(253,91,49)" fg:x="100" fg:w="3127"/><text x="2.2690%" y="1279.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>?? (3,127 samples, 63.13%)</title><rect x="2.0190%" y="1253" width="63.1335%" height="15" fill="rgb(228,155,29)" fg:x="100" fg:w="3127"/><text x="2.2690%" y="1263.50">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,127 samples, 63.13%)</title><rect x="2.0190%" y="1237" width="63.1335%" height="15" fill="rgb(243,57,37)" fg:x="100" fg:w="3127"/><text x="2.2690%" y="1247.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,127 samples, 63.13%)</title><rect x="2.0190%" y="1221" width="63.1335%" height="15" fill="rgb(244,167,17)" fg:x="100" fg:w="3127"/><text x="2.2690%" y="1231.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,127 samples, 63.13%)</title><rect x="2.0190%" y="1205" width="63.1335%" height="15" fill="rgb(207,181,38)" fg:x="100" fg:w="3127"/><text x="2.2690%" y="1215.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,127 samples, 63.13%)</title><rect x="2.0190%" y="1189" width="63.1335%" height="15" fill="rgb(211,8,23)" fg:x="100" fg:w="3127"/><text x="2.2690%" y="1199.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,127 samples, 63.13%)</title><rect x="2.0190%" y="1173" width="63.1335%" height="15" fill="rgb(235,11,44)" fg:x="100" fg:w="3127"/><text x="2.2690%" y="1183.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (3,127 samples, 63.13%)</title><rect x="2.0190%" y="1157" width="63.1335%" height="15" fill="rgb(248,18,52)" fg:x="100" fg:w="3127"/><text x="2.2690%" y="1167.50">deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}}</text></g><g><title>deserialize_struct::sonic_rs_parse_struct (3,127 samples, 63.13%)</title><rect x="2.0190%" y="1141" width="63.1335%" height="15" fill="rgb(208,4,7)" fg:x="100" fg:w="3127"/><text x="2.2690%" y="1151.50">deserialize_struct::sonic_rs_parse_struct</text></g><g><title>sonic_rs::serde::de::from_slice (3,127 samples, 63.13%)</title><rect x="2.0190%" y="1125" width="63.1335%" height="15" fill="rgb(240,17,39)" fg:x="100" fg:w="3127"/><text x="2.2690%" y="1135.50">sonic_rs::serde::de::from_slice</text></g><g><title>sonic_rs::util::utf8::from_utf8 (155 samples, 3.13%)</title><rect x="62.0230%" y="1109" width="3.1294%" height="15" fill="rgb(207,170,3)" fg:x="3072" fg:w="155"/><text x="62.2730%" y="1119.50">son..</text></g><g><title>simdutf8::basic::from_utf8 (155 samples, 3.13%)</title><rect x="62.0230%" y="1093" width="3.1294%" height="15" fill="rgb(236,100,52)" fg:x="3072" fg:w="155"/><text x="62.2730%" y="1103.50">sim..</text></g><g><title>simdutf8::implementation::validate_utf8_basic (155 samples, 3.13%)</title><rect x="62.0230%" y="1077" width="3.1294%" height="15" fill="rgb(246,78,51)" fg:x="3072" fg:w="155"/><text x="62.2730%" y="1087.50">sim..</text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic (155 samples, 3.13%)</title><rect x="62.0230%" y="1061" width="3.1294%" height="15" fill="rgb(211,17,15)" fg:x="3072" fg:w="155"/><text x="62.2730%" y="1071.50">sim..</text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (155 samples, 3.13%)</title><rect x="62.0230%" y="1045" width="3.1294%" height="15" fill="rgb(209,59,46)" fg:x="3072" fg:w="155"/><text x="62.2730%" y="1055.50">sim..</text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (20 samples, 0.40%)</title><rect x="64.7486%" y="1029" width="0.4038%" height="15" fill="rgb(210,92,25)" fg:x="3207" fg:w="20"/><text x="64.9986%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="65.1524%" y="1285" width="0.0202%" height="15" fill="rgb(238,174,52)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="65.1524%" y="1269" width="0.0202%" height="15" fill="rgb(230,73,7)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="65.1524%" y="1253" width="0.0202%" height="15" fill="rgb(243,124,40)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="65.1524%" y="1237" width="0.0202%" height="15" fill="rgb(244,170,11)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1247.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.1524%" y="1221" width="0.0202%" height="15" fill="rgb(207,114,54)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1231.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.1524%" y="1205" width="0.0202%" height="15" fill="rgb(205,42,20)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1215.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.1524%" y="1189" width="0.0202%" height="15" fill="rgb(230,30,28)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1199.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.1524%" y="1173" width="0.0202%" height="15" fill="rgb(205,73,54)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="65.1524%" y="1157" width="0.0202%" height="15" fill="rgb(254,227,23)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1167.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.1524%" y="1141" width="0.0202%" height="15" fill="rgb(228,202,34)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="65.1524%" y="1125" width="0.0202%" height="15" fill="rgb(222,225,37)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1135.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="65.1524%" y="1109" width="0.0202%" height="15" fill="rgb(221,14,54)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1119.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="65.1524%" y="1093" width="0.0202%" height="15" fill="rgb(254,102,2)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1103.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="65.1524%" y="1077" width="0.0202%" height="15" fill="rgb(232,104,17)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1087.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="65.1524%" y="1061" width="0.0202%" height="15" fill="rgb(250,220,14)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1071.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="65.1524%" y="1045" width="0.0202%" height="15" fill="rgb(241,158,9)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1055.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="65.1524%" y="1029" width="0.0202%" height="15" fill="rgb(246,9,43)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1039.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="65.1524%" y="1013" width="0.0202%" height="15" fill="rgb(206,73,33)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1023.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="65.1524%" y="997" width="0.0202%" height="15" fill="rgb(222,79,8)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="1007.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="65.1524%" y="981" width="0.0202%" height="15" fill="rgb(234,8,54)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="991.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="65.1524%" y="965" width="0.0202%" height="15" fill="rgb(209,134,38)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="975.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="65.1524%" y="949" width="0.0202%" height="15" fill="rgb(230,127,29)" fg:x="3227" fg:w="1"/><text x="65.4024%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect x="65.1726%" y="1221" width="0.0404%" height="15" fill="rgb(242,44,41)" fg:x="3228" fg:w="2"/><text x="65.4226%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="65.1726%" y="1205" width="0.0404%" height="15" fill="rgb(222,56,43)" fg:x="3228" fg:w="2"/><text x="65.4226%" y="1215.50"></text></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect x="65.1726%" y="1189" width="0.0404%" height="15" fill="rgb(238,39,47)" fg:x="3228" fg:w="2"/><text x="65.4226%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect x="65.1726%" y="1173" width="0.0404%" height="15" fill="rgb(226,79,43)" fg:x="3228" fg:w="2"/><text x="65.4226%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="65.1726%" y="1157" width="0.0404%" height="15" fill="rgb(242,105,53)" fg:x="3228" fg:w="2"/><text x="65.4226%" y="1167.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="65.1726%" y="1141" width="0.0404%" height="15" fill="rgb(251,132,46)" fg:x="3228" fg:w="2"/><text x="65.4226%" y="1151.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="65.1726%" y="1125" width="0.0404%" height="15" fill="rgb(231,77,14)" fg:x="3228" fg:w="2"/><text x="65.4226%" y="1135.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="65.1726%" y="1109" width="0.0404%" height="15" fill="rgb(240,135,9)" fg:x="3228" fg:w="2"/><text x="65.4226%" y="1119.50"></text></g><g><title>alloc::collections::btree::mem::replace (2 samples, 0.04%)</title><rect x="65.1726%" y="1093" width="0.0404%" height="15" fill="rgb(248,109,14)" fg:x="3228" fg:w="2"/><text x="65.4226%" y="1103.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (2 samples, 0.04%)</title><rect x="65.1726%" y="1077" width="0.0404%" height="15" fill="rgb(227,146,52)" fg:x="3228" fg:w="2"/><text x="65.4226%" y="1087.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="65.1726%" y="1061" width="0.0404%" height="15" fill="rgb(232,54,3)" fg:x="3228" fg:w="2"/><text x="65.4226%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect x="65.1726%" y="1045" width="0.0404%" height="15" fill="rgb(229,201,43)" fg:x="3228" fg:w="2"/><text x="65.4226%" y="1055.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="65.2130%" y="837" width="0.0202%" height="15" fill="rgb(252,161,33)" fg:x="3230" fg:w="1"/><text x="65.4630%" y="847.50"></text></g><g><title>arena_bin_lower_slab (1 samples, 0.02%)</title><rect x="65.2332%" y="821" width="0.0202%" height="15" fill="rgb(226,146,40)" fg:x="3231" fg:w="1"/><text x="65.4832%" y="831.50"></text></g><g><title>arena_bin_slabs_nonfull_insert (1 samples, 0.02%)</title><rect x="65.2332%" y="805" width="0.0202%" height="15" fill="rgb(219,47,25)" fg:x="3231" fg:w="1"/><text x="65.4832%" y="815.50"></text></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.02%)</title><rect x="65.2332%" y="789" width="0.0202%" height="15" fill="rgb(250,135,13)" fg:x="3231" fg:w="1"/><text x="65.4832%" y="799.50"></text></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.04%)</title><rect x="65.2332%" y="837" width="0.0404%" height="15" fill="rgb(219,229,18)" fg:x="3231" fg:w="2"/><text x="65.4832%" y="847.50"></text></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect x="65.2534%" y="821" width="0.0202%" height="15" fill="rgb(217,152,27)" fg:x="3232" fg:w="1"/><text x="65.5034%" y="831.50"></text></g><g><title>_rjem_je_sdallocx_default (4 samples, 0.08%)</title><rect x="65.2130%" y="965" width="0.0808%" height="15" fill="rgb(225,71,47)" fg:x="3230" fg:w="4"/><text x="65.4630%" y="975.50"></text></g><g><title>isfree (4 samples, 0.08%)</title><rect x="65.2130%" y="949" width="0.0808%" height="15" fill="rgb(220,139,14)" fg:x="3230" fg:w="4"/><text x="65.4630%" y="959.50"></text></g><g><title>isdalloct (4 samples, 0.08%)</title><rect x="65.2130%" y="933" width="0.0808%" height="15" fill="rgb(247,54,32)" fg:x="3230" fg:w="4"/><text x="65.4630%" y="943.50"></text></g><g><title>arena_sdalloc (4 samples, 0.08%)</title><rect x="65.2130%" y="917" width="0.0808%" height="15" fill="rgb(252,131,39)" fg:x="3230" fg:w="4"/><text x="65.4630%" y="927.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.08%)</title><rect x="65.2130%" y="901" width="0.0808%" height="15" fill="rgb(210,108,39)" fg:x="3230" fg:w="4"/><text x="65.4630%" y="911.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (4 samples, 0.08%)</title><rect x="65.2130%" y="885" width="0.0808%" height="15" fill="rgb(205,23,29)" fg:x="3230" fg:w="4"/><text x="65.4630%" y="895.50"></text></g><g><title>tcache_bin_flush_bottom (4 samples, 0.08%)</title><rect x="65.2130%" y="869" width="0.0808%" height="15" fill="rgb(246,139,46)" fg:x="3230" fg:w="4"/><text x="65.4630%" y="879.50"></text></g><g><title>tcache_bin_flush_impl (4 samples, 0.08%)</title><rect x="65.2130%" y="853" width="0.0808%" height="15" fill="rgb(250,81,26)" fg:x="3230" fg:w="4"/><text x="65.4630%" y="863.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="65.2736%" y="837" width="0.0202%" height="15" fill="rgb(214,104,7)" fg:x="3233" fg:w="1"/><text x="65.5236%" y="847.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="65.2736%" y="821" width="0.0202%" height="15" fill="rgb(233,189,8)" fg:x="3233" fg:w="1"/><text x="65.5236%" y="831.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="65.2736%" y="805" width="0.0202%" height="15" fill="rgb(228,141,17)" fg:x="3233" fg:w="1"/><text x="65.5236%" y="815.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect x="65.2736%" y="789" width="0.0202%" height="15" fill="rgb(247,157,1)" fg:x="3233" fg:w="1"/><text x="65.5236%" y="799.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="65.2130%" y="1125" width="0.1009%" height="15" fill="rgb(249,225,5)" fg:x="3230" fg:w="5"/><text x="65.4630%" y="1135.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="65.2130%" y="1109" width="0.1009%" height="15" fill="rgb(242,55,13)" fg:x="3230" fg:w="5"/><text x="65.4630%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.10%)</title><rect x="65.2130%" y="1093" width="0.1009%" height="15" fill="rgb(230,49,50)" fg:x="3230" fg:w="5"/><text x="65.4630%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.10%)</title><rect x="65.2130%" y="1077" width="0.1009%" height="15" fill="rgb(241,111,38)" fg:x="3230" fg:w="5"/><text x="65.4630%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.10%)</title><rect x="65.2130%" y="1061" width="0.1009%" height="15" fill="rgb(252,155,4)" fg:x="3230" fg:w="5"/><text x="65.4630%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="65.2130%" y="1045" width="0.1009%" height="15" fill="rgb(212,69,32)" fg:x="3230" fg:w="5"/><text x="65.4630%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.10%)</title><rect x="65.2130%" y="1029" width="0.1009%" height="15" fill="rgb(243,107,47)" fg:x="3230" fg:w="5"/><text x="65.4630%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.10%)</title><rect x="65.2130%" y="1013" width="0.1009%" height="15" fill="rgb(247,130,12)" fg:x="3230" fg:w="5"/><text x="65.4630%" y="1023.50"></text></g><g><title>__rust_dealloc (5 samples, 0.10%)</title><rect x="65.2130%" y="997" width="0.1009%" height="15" fill="rgb(233,74,16)" fg:x="3230" fg:w="5"/><text x="65.4630%" y="1007.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.10%)</title><rect x="65.2130%" y="981" width="0.1009%" height="15" fill="rgb(208,58,18)" fg:x="3230" fg:w="5"/><text x="65.4630%" y="991.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="65.2938%" y="965" width="0.0202%" height="15" fill="rgb(242,225,1)" fg:x="3234" fg:w="1"/><text x="65.5438%" y="975.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="65.2938%" y="949" width="0.0202%" height="15" fill="rgb(249,39,40)" fg:x="3234" fg:w="1"/><text x="65.5438%" y="959.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="65.2938%" y="933" width="0.0202%" height="15" fill="rgb(207,72,44)" fg:x="3234" fg:w="1"/><text x="65.5438%" y="943.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (1 samples, 0.02%)</title><rect x="65.3341%" y="789" width="0.0202%" height="15" fill="rgb(215,193,12)" fg:x="3236" fg:w="1"/><text x="65.5841%" y="799.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="65.3341%" y="1077" width="0.0404%" height="15" fill="rgb(248,41,39)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="65.3341%" y="1061" width="0.0404%" height="15" fill="rgb(253,85,4)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="65.3341%" y="1045" width="0.0404%" height="15" fill="rgb(243,70,31)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="1055.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="65.3341%" y="1029" width="0.0404%" height="15" fill="rgb(253,195,26)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="1039.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.04%)</title><rect x="65.3341%" y="1013" width="0.0404%" height="15" fill="rgb(243,42,11)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="1023.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.04%)</title><rect x="65.3341%" y="997" width="0.0404%" height="15" fill="rgb(239,66,17)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="1007.50"></text></g><g><title>isfree (2 samples, 0.04%)</title><rect x="65.3341%" y="981" width="0.0404%" height="15" fill="rgb(217,132,21)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="991.50"></text></g><g><title>isdalloct (2 samples, 0.04%)</title><rect x="65.3341%" y="965" width="0.0404%" height="15" fill="rgb(252,202,21)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="975.50"></text></g><g><title>arena_sdalloc (2 samples, 0.04%)</title><rect x="65.3341%" y="949" width="0.0404%" height="15" fill="rgb(233,98,36)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="959.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.04%)</title><rect x="65.3341%" y="933" width="0.0404%" height="15" fill="rgb(216,153,54)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="943.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.04%)</title><rect x="65.3341%" y="917" width="0.0404%" height="15" fill="rgb(250,99,7)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="927.50"></text></g><g><title>tcache_bin_flush_bottom (2 samples, 0.04%)</title><rect x="65.3341%" y="901" width="0.0404%" height="15" fill="rgb(207,56,50)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="911.50"></text></g><g><title>tcache_bin_flush_impl (2 samples, 0.04%)</title><rect x="65.3341%" y="885" width="0.0404%" height="15" fill="rgb(244,61,34)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="895.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (2 samples, 0.04%)</title><rect x="65.3341%" y="869" width="0.0404%" height="15" fill="rgb(241,50,38)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="879.50"></text></g><g><title>pac_dalloc_impl (2 samples, 0.04%)</title><rect x="65.3341%" y="853" width="0.0404%" height="15" fill="rgb(212,166,30)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="863.50"></text></g><g><title>_rjem_je_extent_record (2 samples, 0.04%)</title><rect x="65.3341%" y="837" width="0.0404%" height="15" fill="rgb(249,127,32)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="847.50"></text></g><g><title>extent_try_coalesce_large (2 samples, 0.04%)</title><rect x="65.3341%" y="821" width="0.0404%" height="15" fill="rgb(209,103,0)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="831.50"></text></g><g><title>extent_try_coalesce_impl (2 samples, 0.04%)</title><rect x="65.3341%" y="805" width="0.0404%" height="15" fill="rgb(238,209,51)" fg:x="3236" fg:w="2"/><text x="65.5841%" y="815.50"></text></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect x="65.3543%" y="789" width="0.0202%" height="15" fill="rgb(237,56,23)" fg:x="3237" fg:w="1"/><text x="65.6043%" y="799.50"></text></g><g><title>extent_merge_impl (1 samples, 0.02%)</title><rect x="65.3543%" y="773" width="0.0202%" height="15" fill="rgb(215,153,46)" fg:x="3237" fg:w="1"/><text x="65.6043%" y="783.50"></text></g><g><title>_rjem_je_edata_cache_put (1 samples, 0.02%)</title><rect x="65.3543%" y="757" width="0.0202%" height="15" fill="rgb(224,49,31)" fg:x="3237" fg:w="1"/><text x="65.6043%" y="767.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="65.3543%" y="741" width="0.0202%" height="15" fill="rgb(250,18,42)" fg:x="3237" fg:w="1"/><text x="65.6043%" y="751.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="65.3543%" y="725" width="0.0202%" height="15" fill="rgb(215,176,39)" fg:x="3237" fg:w="1"/><text x="65.6043%" y="735.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="65.3543%" y="709" width="0.0202%" height="15" fill="rgb(223,77,29)" fg:x="3237" fg:w="1"/><text x="65.6043%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.04%)</title><rect x="65.3745%" y="1077" width="0.0404%" height="15" fill="rgb(234,94,52)" fg:x="3238" fg:w="2"/><text x="65.6245%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (11 samples, 0.22%)</title><rect x="65.2130%" y="1205" width="0.2221%" height="15" fill="rgb(220,154,50)" fg:x="3230" fg:w="11"/><text x="65.4630%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.22%)</title><rect x="65.2130%" y="1189" width="0.2221%" height="15" fill="rgb(212,11,10)" fg:x="3230" fg:w="11"/><text x="65.4630%" y="1199.50"></text></g><g><title>core::mem::drop (11 samples, 0.22%)</title><rect x="65.2130%" y="1173" width="0.2221%" height="15" fill="rgb(205,166,19)" fg:x="3230" fg:w="11"/><text x="65.4630%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (11 samples, 0.22%)</title><rect x="65.2130%" y="1157" width="0.2221%" height="15" fill="rgb(244,198,16)" fg:x="3230" fg:w="11"/><text x="65.4630%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.22%)</title><rect x="65.2130%" y="1141" width="0.2221%" height="15" fill="rgb(219,69,12)" fg:x="3230" fg:w="11"/><text x="65.4630%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.12%)</title><rect x="65.3140%" y="1125" width="0.1211%" height="15" fill="rgb(245,30,7)" fg:x="3235" fg:w="6"/><text x="65.5640%" y="1135.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="65.3341%" y="1109" width="0.1009%" height="15" fill="rgb(218,221,48)" fg:x="3236" fg:w="5"/><text x="65.5841%" y="1119.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="65.3341%" y="1093" width="0.1009%" height="15" fill="rgb(216,66,15)" fg:x="3236" fg:w="5"/><text x="65.5841%" y="1103.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="65.4149%" y="1077" width="0.0202%" height="15" fill="rgb(226,122,50)" fg:x="3240" fg:w="1"/><text x="65.6649%" y="1087.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect x="65.4149%" y="1061" width="0.0202%" height="15" fill="rgb(239,156,16)" fg:x="3240" fg:w="1"/><text x="65.6649%" y="1071.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.4149%" y="1045" width="0.0202%" height="15" fill="rgb(224,27,38)" fg:x="3240" fg:w="1"/><text x="65.6649%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect x="65.4149%" y="1029" width="0.0202%" height="15" fill="rgb(224,39,27)" fg:x="3240" fg:w="1"/><text x="65.6649%" y="1039.50"></text></g><g><title>cache_bin_finish_flush (1 samples, 0.02%)</title><rect x="65.4351%" y="981" width="0.0202%" height="15" fill="rgb(215,92,29)" fg:x="3241" fg:w="1"/><text x="65.6851%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="65.4351%" y="965" width="0.0202%" height="15" fill="rgb(207,159,16)" fg:x="3241" fg:w="1"/><text x="65.6851%" y="975.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="65.4553%" y="965" width="0.0202%" height="15" fill="rgb(238,163,47)" fg:x="3242" fg:w="1"/><text x="65.7053%" y="975.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="65.4553%" y="949" width="0.0202%" height="15" fill="rgb(219,91,49)" fg:x="3242" fg:w="1"/><text x="65.7053%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="65.4553%" y="933" width="0.0202%" height="15" fill="rgb(227,167,31)" fg:x="3242" fg:w="1"/><text x="65.7053%" y="943.50"></text></g><g><title>_rjem_je_sdallocx_default (3 samples, 0.06%)</title><rect x="65.4351%" y="1093" width="0.0606%" height="15" fill="rgb(234,80,54)" fg:x="3241" fg:w="3"/><text x="65.6851%" y="1103.50"></text></g><g><title>isfree (3 samples, 0.06%)</title><rect x="65.4351%" y="1077" width="0.0606%" height="15" fill="rgb(212,114,2)" fg:x="3241" fg:w="3"/><text x="65.6851%" y="1087.50"></text></g><g><title>isdalloct (3 samples, 0.06%)</title><rect x="65.4351%" y="1061" width="0.0606%" height="15" fill="rgb(234,50,24)" fg:x="3241" fg:w="3"/><text x="65.6851%" y="1071.50"></text></g><g><title>arena_sdalloc (3 samples, 0.06%)</title><rect x="65.4351%" y="1045" width="0.0606%" height="15" fill="rgb(221,68,8)" fg:x="3241" fg:w="3"/><text x="65.6851%" y="1055.50"></text></g><g><title>tcache_dalloc_small (3 samples, 0.06%)</title><rect x="65.4351%" y="1029" width="0.0606%" height="15" fill="rgb(254,180,31)" fg:x="3241" fg:w="3"/><text x="65.6851%" y="1039.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.06%)</title><rect x="65.4351%" y="1013" width="0.0606%" height="15" fill="rgb(247,130,50)" fg:x="3241" fg:w="3"/><text x="65.6851%" y="1023.50"></text></g><g><title>tcache_bin_flush_bottom (3 samples, 0.06%)</title><rect x="65.4351%" y="997" width="0.0606%" height="15" fill="rgb(211,109,4)" fg:x="3241" fg:w="3"/><text x="65.6851%" y="1007.50"></text></g><g><title>tcache_bin_flush_impl (2 samples, 0.04%)</title><rect x="65.4553%" y="981" width="0.0404%" height="15" fill="rgb(238,50,21)" fg:x="3242" fg:w="2"/><text x="65.7053%" y="991.50"></text></g><g><title>arena_get (1 samples, 0.02%)</title><rect x="65.4755%" y="965" width="0.0202%" height="15" fill="rgb(225,57,45)" fg:x="3243" fg:w="1"/><text x="65.7255%" y="975.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="65.4957%" y="1093" width="0.0202%" height="15" fill="rgb(209,196,50)" fg:x="3244" fg:w="1"/><text x="65.7457%" y="1103.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="65.4957%" y="1077" width="0.0202%" height="15" fill="rgb(242,140,13)" fg:x="3244" fg:w="1"/><text x="65.7457%" y="1087.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="65.4957%" y="1061" width="0.0202%" height="15" fill="rgb(217,111,7)" fg:x="3244" fg:w="1"/><text x="65.7457%" y="1071.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="65.5360%" y="821" width="0.0202%" height="15" fill="rgb(253,193,51)" fg:x="3246" fg:w="1"/><text x="65.7860%" y="831.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="65.5360%" y="805" width="0.0202%" height="15" fill="rgb(252,70,29)" fg:x="3246" fg:w="1"/><text x="65.7860%" y="815.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="65.5360%" y="789" width="0.0202%" height="15" fill="rgb(232,127,12)" fg:x="3246" fg:w="1"/><text x="65.7860%" y="799.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="65.5360%" y="773" width="0.0202%" height="15" fill="rgb(211,180,21)" fg:x="3246" fg:w="1"/><text x="65.7860%" y="783.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="65.5360%" y="757" width="0.0202%" height="15" fill="rgb(229,72,13)" fg:x="3246" fg:w="1"/><text x="65.7860%" y="767.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="65.5360%" y="741" width="0.0202%" height="15" fill="rgb(240,211,49)" fg:x="3246" fg:w="1"/><text x="65.7860%" y="751.50"></text></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.02%)</title><rect x="65.5360%" y="725" width="0.0202%" height="15" fill="rgb(219,149,40)" fg:x="3246" fg:w="1"/><text x="65.7860%" y="735.50"></text></g><g><title>rtree_leaf_elm_lookup (2 samples, 0.04%)</title><rect x="65.5764%" y="789" width="0.0404%" height="15" fill="rgb(210,127,46)" fg:x="3248" fg:w="2"/><text x="65.8264%" y="799.50"></text></g><g><title>rtree_leafkey (1 samples, 0.02%)</title><rect x="65.5966%" y="773" width="0.0202%" height="15" fill="rgb(220,106,7)" fg:x="3249" fg:w="1"/><text x="65.8466%" y="783.50"></text></g><g><title>_rjem_je_sdallocx_default (5 samples, 0.10%)</title><rect x="65.5360%" y="949" width="0.1009%" height="15" fill="rgb(249,31,22)" fg:x="3246" fg:w="5"/><text x="65.7860%" y="959.50"></text></g><g><title>isfree (5 samples, 0.10%)</title><rect x="65.5360%" y="933" width="0.1009%" height="15" fill="rgb(253,1,49)" fg:x="3246" fg:w="5"/><text x="65.7860%" y="943.50"></text></g><g><title>isdalloct (5 samples, 0.10%)</title><rect x="65.5360%" y="917" width="0.1009%" height="15" fill="rgb(227,144,33)" fg:x="3246" fg:w="5"/><text x="65.7860%" y="927.50"></text></g><g><title>arena_sdalloc (5 samples, 0.10%)</title><rect x="65.5360%" y="901" width="0.1009%" height="15" fill="rgb(249,163,44)" fg:x="3246" fg:w="5"/><text x="65.7860%" y="911.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.10%)</title><rect x="65.5360%" y="885" width="0.1009%" height="15" fill="rgb(234,15,39)" fg:x="3246" fg:w="5"/><text x="65.7860%" y="895.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.10%)</title><rect x="65.5360%" y="869" width="0.1009%" height="15" fill="rgb(207,66,16)" fg:x="3246" fg:w="5"/><text x="65.7860%" y="879.50"></text></g><g><title>tcache_bin_flush_bottom (5 samples, 0.10%)</title><rect x="65.5360%" y="853" width="0.1009%" height="15" fill="rgb(233,112,24)" fg:x="3246" fg:w="5"/><text x="65.7860%" y="863.50"></text></g><g><title>tcache_bin_flush_impl (5 samples, 0.10%)</title><rect x="65.5360%" y="837" width="0.1009%" height="15" fill="rgb(230,90,22)" fg:x="3246" fg:w="5"/><text x="65.7860%" y="847.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (4 samples, 0.08%)</title><rect x="65.5562%" y="821" width="0.0808%" height="15" fill="rgb(229,61,13)" fg:x="3247" fg:w="4"/><text x="65.8062%" y="831.50"></text></g><g><title>emap_edata_lookup_batch (4 samples, 0.08%)</title><rect x="65.5562%" y="805" width="0.0808%" height="15" fill="rgb(225,57,24)" fg:x="3247" fg:w="4"/><text x="65.8062%" y="815.50"></text></g><g><title>tcache_bin_flush_metadata_visitor (1 samples, 0.02%)</title><rect x="65.6168%" y="789" width="0.0202%" height="15" fill="rgb(208,169,48)" fg:x="3250" fg:w="1"/><text x="65.8668%" y="799.50"></text></g><g><title>util_prefetch_write_range (1 samples, 0.02%)</title><rect x="65.6168%" y="773" width="0.0202%" height="15" fill="rgb(244,218,51)" fg:x="3250" fg:w="1"/><text x="65.8668%" y="783.50"></text></g><g><title>util_prefetch_write (1 samples, 0.02%)</title><rect x="65.6168%" y="757" width="0.0202%" height="15" fill="rgb(214,148,10)" fg:x="3250" fg:w="1"/><text x="65.8668%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.14%)</title><rect x="65.5360%" y="1013" width="0.1413%" height="15" fill="rgb(225,174,27)" fg:x="3246" fg:w="7"/><text x="65.7860%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.14%)</title><rect x="65.5360%" y="997" width="0.1413%" height="15" fill="rgb(230,96,26)" fg:x="3246" fg:w="7"/><text x="65.7860%" y="1007.50"></text></g><g><title>__rust_dealloc (7 samples, 0.14%)</title><rect x="65.5360%" y="981" width="0.1413%" height="15" fill="rgb(232,10,30)" fg:x="3246" fg:w="7"/><text x="65.7860%" y="991.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (7 samples, 0.14%)</title><rect x="65.5360%" y="965" width="0.1413%" height="15" fill="rgb(222,8,50)" fg:x="3246" fg:w="7"/><text x="65.7860%" y="975.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect x="65.6370%" y="949" width="0.0404%" height="15" fill="rgb(213,81,27)" fg:x="3251" fg:w="2"/><text x="65.8870%" y="959.50"></text></g><g><title>free_fastpath (2 samples, 0.04%)</title><rect x="65.6370%" y="933" width="0.0404%" height="15" fill="rgb(245,50,10)" fg:x="3251" fg:w="2"/><text x="65.8870%" y="943.50"></text></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect x="65.6572%" y="917" width="0.0202%" height="15" fill="rgb(216,100,18)" fg:x="3252" fg:w="1"/><text x="65.9072%" y="927.50"></text></g><g><title>cache_bin_full (1 samples, 0.02%)</title><rect x="65.6572%" y="901" width="0.0202%" height="15" fill="rgb(236,147,54)" fg:x="3252" fg:w="1"/><text x="65.9072%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8 samples, 0.16%)</title><rect x="65.5360%" y="1077" width="0.1615%" height="15" fill="rgb(205,143,26)" fg:x="3246" fg:w="8"/><text x="65.7860%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.16%)</title><rect x="65.5360%" y="1061" width="0.1615%" height="15" fill="rgb(236,26,9)" fg:x="3246" fg:w="8"/><text x="65.7860%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.16%)</title><rect x="65.5360%" y="1045" width="0.1615%" height="15" fill="rgb(221,165,53)" fg:x="3246" fg:w="8"/><text x="65.7860%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.16%)</title><rect x="65.5360%" y="1029" width="0.1615%" height="15" fill="rgb(214,110,17)" fg:x="3246" fg:w="8"/><text x="65.7860%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Event&gt; (1 samples, 0.02%)</title><rect x="65.6774%" y="1013" width="0.0202%" height="15" fill="rgb(237,197,12)" fg:x="3253" fg:w="1"/><text x="65.9274%" y="1023.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_locked_handle_newly_empty (1 samples, 0.02%)</title><rect x="65.6976%" y="821" width="0.0202%" height="15" fill="rgb(205,84,17)" fg:x="3254" fg:w="1"/><text x="65.9476%" y="831.50"></text></g><g><title>arena_dissociate_bin_slab (1 samples, 0.02%)</title><rect x="65.6976%" y="805" width="0.0202%" height="15" fill="rgb(237,18,45)" fg:x="3254" fg:w="1"/><text x="65.9476%" y="815.50"></text></g><g><title>arena_bin_slabs_nonfull_remove (1 samples, 0.02%)</title><rect x="65.6976%" y="789" width="0.0202%" height="15" fill="rgb(221,87,14)" fg:x="3254" fg:w="1"/><text x="65.9476%" y="799.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="65.6976%" y="773" width="0.0202%" height="15" fill="rgb(238,186,15)" fg:x="3254" fg:w="1"/><text x="65.9476%" y="783.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="65.6976%" y="757" width="0.0202%" height="15" fill="rgb(208,115,11)" fg:x="3254" fg:w="1"/><text x="65.9476%" y="767.50"></text></g><g><title>phn_prev_set (1 samples, 0.02%)</title><rect x="65.6976%" y="741" width="0.0202%" height="15" fill="rgb(254,175,0)" fg:x="3254" fg:w="1"/><text x="65.9476%" y="751.50"></text></g><g><title>phn_link_get (1 samples, 0.02%)</title><rect x="65.6976%" y="725" width="0.0202%" height="15" fill="rgb(227,24,42)" fg:x="3254" fg:w="1"/><text x="65.9476%" y="735.50"></text></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.04%)</title><rect x="65.6976%" y="837" width="0.0404%" height="15" fill="rgb(223,211,37)" fg:x="3254" fg:w="2"/><text x="65.9476%" y="847.50"></text></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect x="65.7177%" y="821" width="0.0202%" height="15" fill="rgb(235,49,27)" fg:x="3255" fg:w="1"/><text x="65.9677%" y="831.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="65.7379%" y="837" width="0.0202%" height="15" fill="rgb(254,97,51)" fg:x="3256" fg:w="1"/><text x="65.9879%" y="847.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="65.7379%" y="821" width="0.0202%" height="15" fill="rgb(249,51,40)" fg:x="3256" fg:w="1"/><text x="65.9879%" y="831.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="65.7379%" y="805" width="0.0202%" height="15" fill="rgb(210,128,45)" fg:x="3256" fg:w="1"/><text x="65.9879%" y="815.50"></text></g><g><title>rtree_leaf_elm_bits_read (1 samples, 0.02%)</title><rect x="65.7379%" y="789" width="0.0202%" height="15" fill="rgb(224,137,50)" fg:x="3256" fg:w="1"/><text x="65.9879%" y="799.50"></text></g><g><title>atomic_load_p (1 samples, 0.02%)</title><rect x="65.7379%" y="773" width="0.0202%" height="15" fill="rgb(242,15,9)" fg:x="3256" fg:w="1"/><text x="65.9879%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (4 samples, 0.08%)</title><rect x="65.6976%" y="1077" width="0.0808%" height="15" fill="rgb(233,187,41)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (4 samples, 0.08%)</title><rect x="65.6976%" y="1061" width="0.0808%" height="15" fill="rgb(227,2,29)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="65.6976%" y="1045" width="0.0808%" height="15" fill="rgb(222,70,3)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.08%)</title><rect x="65.6976%" y="1029" width="0.0808%" height="15" fill="rgb(213,11,42)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.08%)</title><rect x="65.6976%" y="1013" width="0.0808%" height="15" fill="rgb(225,150,9)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="1023.50"></text></g><g><title>__rust_dealloc (4 samples, 0.08%)</title><rect x="65.6976%" y="997" width="0.0808%" height="15" fill="rgb(230,162,45)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="1007.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (4 samples, 0.08%)</title><rect x="65.6976%" y="981" width="0.0808%" height="15" fill="rgb(222,14,52)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="991.50"></text></g><g><title>_rjem_je_sdallocx_default (4 samples, 0.08%)</title><rect x="65.6976%" y="965" width="0.0808%" height="15" fill="rgb(254,198,14)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="975.50"></text></g><g><title>isfree (4 samples, 0.08%)</title><rect x="65.6976%" y="949" width="0.0808%" height="15" fill="rgb(220,217,30)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="959.50"></text></g><g><title>isdalloct (4 samples, 0.08%)</title><rect x="65.6976%" y="933" width="0.0808%" height="15" fill="rgb(215,146,41)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="943.50"></text></g><g><title>arena_sdalloc (4 samples, 0.08%)</title><rect x="65.6976%" y="917" width="0.0808%" height="15" fill="rgb(217,27,36)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="927.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.08%)</title><rect x="65.6976%" y="901" width="0.0808%" height="15" fill="rgb(219,218,39)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="911.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (4 samples, 0.08%)</title><rect x="65.6976%" y="885" width="0.0808%" height="15" fill="rgb(219,4,42)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="895.50"></text></g><g><title>tcache_bin_flush_bottom (4 samples, 0.08%)</title><rect x="65.6976%" y="869" width="0.0808%" height="15" fill="rgb(249,119,36)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="879.50"></text></g><g><title>tcache_bin_flush_impl (4 samples, 0.08%)</title><rect x="65.6976%" y="853" width="0.0808%" height="15" fill="rgb(209,23,33)" fg:x="3254" fg:w="4"/><text x="65.9476%" y="863.50"></text></g><g><title>tcache_bin_flush_match (1 samples, 0.02%)</title><rect x="65.7581%" y="837" width="0.0202%" height="15" fill="rgb(211,10,0)" fg:x="3257" fg:w="1"/><text x="66.0081%" y="847.50"></text></g><g><title>edata_binshard_get (1 samples, 0.02%)</title><rect x="65.7581%" y="821" width="0.0202%" height="15" fill="rgb(208,99,37)" fg:x="3257" fg:w="1"/><text x="66.0081%" y="831.50"></text></g><g><title>arena_dalloc_bin_locked_step (3 samples, 0.06%)</title><rect x="66.1215%" y="805" width="0.0606%" height="15" fill="rgb(213,132,31)" fg:x="3275" fg:w="3"/><text x="66.3715%" y="815.50"></text></g><g><title>edata_nfree_inc (3 samples, 0.06%)</title><rect x="66.1215%" y="789" width="0.0606%" height="15" fill="rgb(243,129,40)" fg:x="3275" fg:w="3"/><text x="66.3715%" y="799.50"></text></g><g><title>_rjem_je_sdallocx_default (4 samples, 0.08%)</title><rect x="66.1215%" y="933" width="0.0808%" height="15" fill="rgb(210,66,33)" fg:x="3275" fg:w="4"/><text x="66.3715%" y="943.50"></text></g><g><title>isfree (4 samples, 0.08%)</title><rect x="66.1215%" y="917" width="0.0808%" height="15" fill="rgb(209,189,4)" fg:x="3275" fg:w="4"/><text x="66.3715%" y="927.50"></text></g><g><title>isdalloct (4 samples, 0.08%)</title><rect x="66.1215%" y="901" width="0.0808%" height="15" fill="rgb(214,107,37)" fg:x="3275" fg:w="4"/><text x="66.3715%" y="911.50"></text></g><g><title>arena_sdalloc (4 samples, 0.08%)</title><rect x="66.1215%" y="885" width="0.0808%" height="15" fill="rgb(245,88,54)" fg:x="3275" fg:w="4"/><text x="66.3715%" y="895.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.08%)</title><rect x="66.1215%" y="869" width="0.0808%" height="15" fill="rgb(205,146,20)" fg:x="3275" fg:w="4"/><text x="66.3715%" y="879.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (4 samples, 0.08%)</title><rect x="66.1215%" y="853" width="0.0808%" height="15" fill="rgb(220,161,25)" fg:x="3275" fg:w="4"/><text x="66.3715%" y="863.50"></text></g><g><title>tcache_bin_flush_bottom (4 samples, 0.08%)</title><rect x="66.1215%" y="837" width="0.0808%" height="15" fill="rgb(215,152,15)" fg:x="3275" fg:w="4"/><text x="66.3715%" y="847.50"></text></g><g><title>tcache_bin_flush_impl (4 samples, 0.08%)</title><rect x="66.1215%" y="821" width="0.0808%" height="15" fill="rgb(233,192,44)" fg:x="3275" fg:w="4"/><text x="66.3715%" y="831.50"></text></g><g><title>arena_decay_ticks (1 samples, 0.02%)</title><rect x="66.1821%" y="805" width="0.0202%" height="15" fill="rgb(240,170,46)" fg:x="3278" fg:w="1"/><text x="66.4321%" y="815.50"></text></g><g><title>_rjem_je_arena_decay (1 samples, 0.02%)</title><rect x="66.1821%" y="789" width="0.0202%" height="15" fill="rgb(207,104,33)" fg:x="3278" fg:w="1"/><text x="66.4321%" y="799.50"></text></g><g><title>arena_decay_dirty (1 samples, 0.02%)</title><rect x="66.1821%" y="773" width="0.0202%" height="15" fill="rgb(219,21,39)" fg:x="3278" fg:w="1"/><text x="66.4321%" y="783.50"></text></g><g><title>arena_decay_impl (1 samples, 0.02%)</title><rect x="66.1821%" y="757" width="0.0202%" height="15" fill="rgb(214,133,29)" fg:x="3278" fg:w="1"/><text x="66.4321%" y="767.50"></text></g><g><title>malloc_mutex_trylock (1 samples, 0.02%)</title><rect x="66.1821%" y="741" width="0.0202%" height="15" fill="rgb(226,93,6)" fg:x="3278" fg:w="1"/><text x="66.4321%" y="751.50"></text></g><g><title>mutex_owner_stats_update (1 samples, 0.02%)</title><rect x="66.1821%" y="725" width="0.0202%" height="15" fill="rgb(252,222,34)" fg:x="3278" fg:w="1"/><text x="66.4321%" y="735.50"></text></g><g><title>?? (39 samples, 0.79%)</title><rect x="65.4351%" y="1125" width="0.7874%" height="15" fill="rgb(252,92,48)" fg:x="3241" fg:w="39"/><text x="65.6851%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (39 samples, 0.79%)</title><rect x="65.4351%" y="1109" width="0.7874%" height="15" fill="rgb(245,223,24)" fg:x="3241" fg:w="39"/><text x="65.6851%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Event&gt; (35 samples, 0.71%)</title><rect x="65.5158%" y="1093" width="0.7066%" height="15" fill="rgb(205,176,3)" fg:x="3245" fg:w="35"/><text x="65.7658%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (22 samples, 0.44%)</title><rect x="65.7783%" y="1077" width="0.4442%" height="15" fill="rgb(235,151,15)" fg:x="3258" fg:w="22"/><text x="66.0283%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.10%)</title><rect x="66.1215%" y="1061" width="0.1009%" height="15" fill="rgb(237,209,11)" fg:x="3275" fg:w="5"/><text x="66.3715%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.10%)</title><rect x="66.1215%" y="1045" width="0.1009%" height="15" fill="rgb(243,227,24)" fg:x="3275" fg:w="5"/><text x="66.3715%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.10%)</title><rect x="66.1215%" y="1029" width="0.1009%" height="15" fill="rgb(239,193,16)" fg:x="3275" fg:w="5"/><text x="66.3715%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="66.1215%" y="1013" width="0.1009%" height="15" fill="rgb(231,27,9)" fg:x="3275" fg:w="5"/><text x="66.3715%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.10%)</title><rect x="66.1215%" y="997" width="0.1009%" height="15" fill="rgb(219,169,10)" fg:x="3275" fg:w="5"/><text x="66.3715%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.10%)</title><rect x="66.1215%" y="981" width="0.1009%" height="15" fill="rgb(244,229,43)" fg:x="3275" fg:w="5"/><text x="66.3715%" y="991.50"></text></g><g><title>__rust_dealloc (5 samples, 0.10%)</title><rect x="66.1215%" y="965" width="0.1009%" height="15" fill="rgb(254,38,20)" fg:x="3275" fg:w="5"/><text x="66.3715%" y="975.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.10%)</title><rect x="66.1215%" y="949" width="0.1009%" height="15" fill="rgb(250,47,30)" fg:x="3275" fg:w="5"/><text x="66.3715%" y="959.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="66.2023%" y="933" width="0.0202%" height="15" fill="rgb(224,124,36)" fg:x="3279" fg:w="1"/><text x="66.4523%" y="943.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="66.2023%" y="917" width="0.0202%" height="15" fill="rgb(246,68,51)" fg:x="3279" fg:w="1"/><text x="66.4523%" y="927.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="66.2427%" y="1077" width="0.0202%" height="15" fill="rgb(253,43,49)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="66.2427%" y="1061" width="0.0202%" height="15" fill="rgb(219,54,36)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="66.2427%" y="1045" width="0.0202%" height="15" fill="rgb(227,133,34)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="1055.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="66.2427%" y="1029" width="0.0202%" height="15" fill="rgb(247,227,15)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="1039.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="66.2427%" y="1013" width="0.0202%" height="15" fill="rgb(229,96,14)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="1023.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="66.2427%" y="997" width="0.0202%" height="15" fill="rgb(220,79,17)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="1007.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="66.2427%" y="981" width="0.0202%" height="15" fill="rgb(205,131,53)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="991.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="66.2427%" y="965" width="0.0202%" height="15" fill="rgb(209,50,29)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="975.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="66.2427%" y="949" width="0.0202%" height="15" fill="rgb(245,86,46)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="959.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="66.2427%" y="933" width="0.0202%" height="15" fill="rgb(235,66,46)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="943.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="66.2427%" y="917" width="0.0202%" height="15" fill="rgb(232,148,31)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="927.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="66.2427%" y="901" width="0.0202%" height="15" fill="rgb(217,149,8)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="911.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="66.2427%" y="885" width="0.0202%" height="15" fill="rgb(209,183,11)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="895.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="66.2427%" y="869" width="0.0202%" height="15" fill="rgb(208,55,20)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="879.50"></text></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect x="66.2427%" y="853" width="0.0202%" height="15" fill="rgb(218,39,14)" fg:x="3281" fg:w="1"/><text x="66.4927%" y="863.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect x="66.2629%" y="1077" width="0.0202%" height="15" fill="rgb(216,169,33)" fg:x="3282" fg:w="1"/><text x="66.5129%" y="1087.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="66.3033%" y="693" width="0.0202%" height="15" fill="rgb(233,80,24)" fg:x="3284" fg:w="1"/><text x="66.5533%" y="703.50"></text></g><g><title>_rjem_je_eset_remove (2 samples, 0.04%)</title><rect x="66.3033%" y="725" width="0.0404%" height="15" fill="rgb(213,179,31)" fg:x="3284" fg:w="2"/><text x="66.5533%" y="735.50"></text></g><g><title>_rjem_je_edata_heap_remove (2 samples, 0.04%)</title><rect x="66.3033%" y="709" width="0.0404%" height="15" fill="rgb(209,19,5)" fg:x="3284" fg:w="2"/><text x="66.5533%" y="719.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="66.3234%" y="693" width="0.0202%" height="15" fill="rgb(219,18,35)" fg:x="3285" fg:w="1"/><text x="66.5734%" y="703.50"></text></g><g><title>phn_prev_set (1 samples, 0.02%)</title><rect x="66.3234%" y="677" width="0.0202%" height="15" fill="rgb(209,169,16)" fg:x="3285" fg:w="1"/><text x="66.5734%" y="687.50"></text></g><g><title>phn_link_get (1 samples, 0.02%)</title><rect x="66.3234%" y="661" width="0.0202%" height="15" fill="rgb(245,90,51)" fg:x="3285" fg:w="1"/><text x="66.5734%" y="671.50"></text></g><g><title>_rjem_je_edata_cache_put (2 samples, 0.04%)</title><rect x="66.3638%" y="709" width="0.0404%" height="15" fill="rgb(220,99,45)" fg:x="3287" fg:w="2"/><text x="66.6138%" y="719.50"></text></g><g><title>_rjem_je_edata_avail_insert (2 samples, 0.04%)</title><rect x="66.3638%" y="693" width="0.0404%" height="15" fill="rgb(249,89,25)" fg:x="3287" fg:w="2"/><text x="66.6138%" y="703.50"></text></g><g><title>ph_insert (1 samples, 0.02%)</title><rect x="66.3840%" y="677" width="0.0202%" height="15" fill="rgb(239,193,0)" fg:x="3288" fg:w="1"/><text x="66.6340%" y="687.50"></text></g><g><title>_rjem_je_emap_merge_commit (1 samples, 0.02%)</title><rect x="66.4042%" y="709" width="0.0202%" height="15" fill="rgb(231,126,1)" fg:x="3289" fg:w="1"/><text x="66.6542%" y="719.50"></text></g><g><title>emap_rtree_write_acquired (1 samples, 0.02%)</title><rect x="66.4042%" y="693" width="0.0202%" height="15" fill="rgb(243,166,3)" fg:x="3289" fg:w="1"/><text x="66.6542%" y="703.50"></text></g><g><title>?? (8 samples, 0.16%)</title><rect x="66.2831%" y="1029" width="0.1615%" height="15" fill="rgb(223,22,34)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.16%)</title><rect x="66.2831%" y="1013" width="0.1615%" height="15" fill="rgb(251,52,51)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.16%)</title><rect x="66.2831%" y="997" width="0.1615%" height="15" fill="rgb(221,165,28)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="1007.50"></text></g><g><title>__rust_dealloc (8 samples, 0.16%)</title><rect x="66.2831%" y="981" width="0.1615%" height="15" fill="rgb(218,121,47)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="991.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8 samples, 0.16%)</title><rect x="66.2831%" y="965" width="0.1615%" height="15" fill="rgb(209,120,9)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="975.50"></text></g><g><title>_rjem_je_sdallocx_default (8 samples, 0.16%)</title><rect x="66.2831%" y="949" width="0.1615%" height="15" fill="rgb(236,68,12)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="959.50"></text></g><g><title>isfree (8 samples, 0.16%)</title><rect x="66.2831%" y="933" width="0.1615%" height="15" fill="rgb(225,194,26)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="943.50"></text></g><g><title>isdalloct (8 samples, 0.16%)</title><rect x="66.2831%" y="917" width="0.1615%" height="15" fill="rgb(231,84,39)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="927.50"></text></g><g><title>arena_sdalloc (8 samples, 0.16%)</title><rect x="66.2831%" y="901" width="0.1615%" height="15" fill="rgb(210,11,45)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="911.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.16%)</title><rect x="66.2831%" y="885" width="0.1615%" height="15" fill="rgb(224,54,52)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="895.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (8 samples, 0.16%)</title><rect x="66.2831%" y="869" width="0.1615%" height="15" fill="rgb(238,102,14)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="879.50"></text></g><g><title>tcache_bin_flush_bottom (8 samples, 0.16%)</title><rect x="66.2831%" y="853" width="0.1615%" height="15" fill="rgb(243,160,52)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="863.50"></text></g><g><title>tcache_bin_flush_impl (8 samples, 0.16%)</title><rect x="66.2831%" y="837" width="0.1615%" height="15" fill="rgb(216,114,19)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="847.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (8 samples, 0.16%)</title><rect x="66.2831%" y="821" width="0.1615%" height="15" fill="rgb(244,166,37)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="831.50"></text></g><g><title>pac_dalloc_impl (8 samples, 0.16%)</title><rect x="66.2831%" y="805" width="0.1615%" height="15" fill="rgb(246,29,44)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="815.50"></text></g><g><title>_rjem_je_extent_record (8 samples, 0.16%)</title><rect x="66.2831%" y="789" width="0.1615%" height="15" fill="rgb(215,56,53)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="799.50"></text></g><g><title>extent_try_coalesce_large (8 samples, 0.16%)</title><rect x="66.2831%" y="773" width="0.1615%" height="15" fill="rgb(217,60,2)" fg:x="3283" fg:w="8"/><text x="66.5331%" y="783.50"></text></g><g><title>extent_try_coalesce_impl (7 samples, 0.14%)</title><rect x="66.3033%" y="757" width="0.1413%" height="15" fill="rgb(207,26,24)" fg:x="3284" fg:w="7"/><text x="66.5533%" y="767.50"></text></g><g><title>extent_coalesce (7 samples, 0.14%)</title><rect x="66.3033%" y="741" width="0.1413%" height="15" fill="rgb(252,210,15)" fg:x="3284" fg:w="7"/><text x="66.5533%" y="751.50"></text></g><g><title>extent_merge_impl (5 samples, 0.10%)</title><rect x="66.3436%" y="725" width="0.1009%" height="15" fill="rgb(253,209,26)" fg:x="3286" fg:w="5"/><text x="66.5936%" y="735.50"></text></g><g><title>_rjem_je_emap_merge_prepare (1 samples, 0.02%)</title><rect x="66.4244%" y="709" width="0.0202%" height="15" fill="rgb(238,170,14)" fg:x="3290" fg:w="1"/><text x="66.6744%" y="719.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (1 samples, 0.02%)</title><rect x="66.4244%" y="693" width="0.0202%" height="15" fill="rgb(216,178,15)" fg:x="3290" fg:w="1"/><text x="66.6744%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (51 samples, 1.03%)</title><rect x="65.4351%" y="1205" width="1.0297%" height="15" fill="rgb(250,197,2)" fg:x="3241" fg:w="51"/><text x="65.6851%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 1.03%)</title><rect x="65.4351%" y="1189" width="1.0297%" height="15" fill="rgb(212,70,42)" fg:x="3241" fg:w="51"/><text x="65.6851%" y="1199.50"></text></g><g><title>core::mem::drop (51 samples, 1.03%)</title><rect x="65.4351%" y="1173" width="1.0297%" height="15" fill="rgb(227,213,9)" fg:x="3241" fg:w="51"/><text x="65.6851%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (51 samples, 1.03%)</title><rect x="65.4351%" y="1157" width="1.0297%" height="15" fill="rgb(245,99,25)" fg:x="3241" fg:w="51"/><text x="65.6851%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 1.03%)</title><rect x="65.4351%" y="1141" width="1.0297%" height="15" fill="rgb(250,82,29)" fg:x="3241" fg:w="51"/><text x="65.6851%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.24%)</title><rect x="66.2225%" y="1125" width="0.2423%" height="15" fill="rgb(241,226,54)" fg:x="3280" fg:w="12"/><text x="66.4725%" y="1135.50"></text></g><g><title>?? (11 samples, 0.22%)</title><rect x="66.2427%" y="1109" width="0.2221%" height="15" fill="rgb(221,99,41)" fg:x="3281" fg:w="11"/><text x="66.4927%" y="1119.50"></text></g><g><title>?? (11 samples, 0.22%)</title><rect x="66.2427%" y="1093" width="0.2221%" height="15" fill="rgb(213,90,21)" fg:x="3281" fg:w="11"/><text x="66.4927%" y="1103.50"></text></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.18%)</title><rect x="66.2831%" y="1077" width="0.1817%" height="15" fill="rgb(205,208,24)" fg:x="3283" fg:w="9"/><text x="66.5331%" y="1087.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (9 samples, 0.18%)</title><rect x="66.2831%" y="1061" width="0.1817%" height="15" fill="rgb(246,31,12)" fg:x="3283" fg:w="9"/><text x="66.5331%" y="1071.50"></text></g><g><title>?? (9 samples, 0.18%)</title><rect x="66.2831%" y="1045" width="0.1817%" height="15" fill="rgb(213,154,6)" fg:x="3283" fg:w="9"/><text x="66.5331%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect x="66.4446%" y="1029" width="0.0202%" height="15" fill="rgb(222,163,29)" fg:x="3291" fg:w="1"/><text x="66.6946%" y="1039.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="66.4850%" y="1029" width="0.0202%" height="15" fill="rgb(227,201,8)" fg:x="3293" fg:w="1"/><text x="66.7350%" y="1039.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="66.4850%" y="1013" width="0.0202%" height="15" fill="rgb(233,9,32)" fg:x="3293" fg:w="1"/><text x="66.7350%" y="1023.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="66.4850%" y="997" width="0.0202%" height="15" fill="rgb(217,54,24)" fg:x="3293" fg:w="1"/><text x="66.7350%" y="1007.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="66.4850%" y="981" width="0.0202%" height="15" fill="rgb(235,192,0)" fg:x="3293" fg:w="1"/><text x="66.7350%" y="991.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="66.4850%" y="965" width="0.0202%" height="15" fill="rgb(235,45,9)" fg:x="3293" fg:w="1"/><text x="66.7350%" y="975.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="66.4850%" y="949" width="0.0202%" height="15" fill="rgb(246,42,40)" fg:x="3293" fg:w="1"/><text x="66.7350%" y="959.50"></text></g><g><title>edata_list_inactive_append (1 samples, 0.02%)</title><rect x="66.4850%" y="933" width="0.0202%" height="15" fill="rgb(248,111,24)" fg:x="3293" fg:w="1"/><text x="66.7350%" y="943.50"></text></g><g><title>bitmap_unset (1 samples, 0.02%)</title><rect x="66.5051%" y="1013" width="0.0202%" height="15" fill="rgb(249,65,22)" fg:x="3294" fg:w="1"/><text x="66.7551%" y="1023.50"></text></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.04%)</title><rect x="66.5051%" y="1029" width="0.0404%" height="15" fill="rgb(238,111,51)" fg:x="3294" fg:w="2"/><text x="66.7551%" y="1039.50"></text></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect x="66.5253%" y="1013" width="0.0202%" height="15" fill="rgb(250,118,22)" fg:x="3295" fg:w="1"/><text x="66.7753%" y="1023.50"></text></g><g><title>_rjem_je_sdallocx_default (5 samples, 0.10%)</title><rect x="66.4850%" y="1157" width="0.1009%" height="15" fill="rgb(234,84,26)" fg:x="3293" fg:w="5"/><text x="66.7350%" y="1167.50"></text></g><g><title>isfree (5 samples, 0.10%)</title><rect x="66.4850%" y="1141" width="0.1009%" height="15" fill="rgb(243,172,12)" fg:x="3293" fg:w="5"/><text x="66.7350%" y="1151.50"></text></g><g><title>isdalloct (5 samples, 0.10%)</title><rect x="66.4850%" y="1125" width="0.1009%" height="15" fill="rgb(236,150,49)" fg:x="3293" fg:w="5"/><text x="66.7350%" y="1135.50"></text></g><g><title>arena_sdalloc (5 samples, 0.10%)</title><rect x="66.4850%" y="1109" width="0.1009%" height="15" fill="rgb(225,197,26)" fg:x="3293" fg:w="5"/><text x="66.7350%" y="1119.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.10%)</title><rect x="66.4850%" y="1093" width="0.1009%" height="15" fill="rgb(214,17,42)" fg:x="3293" fg:w="5"/><text x="66.7350%" y="1103.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.10%)</title><rect x="66.4850%" y="1077" width="0.1009%" height="15" fill="rgb(224,165,40)" fg:x="3293" fg:w="5"/><text x="66.7350%" y="1087.50"></text></g><g><title>tcache_bin_flush_bottom (5 samples, 0.10%)</title><rect x="66.4850%" y="1061" width="0.1009%" height="15" fill="rgb(246,100,4)" fg:x="3293" fg:w="5"/><text x="66.7350%" y="1071.50"></text></g><g><title>tcache_bin_flush_impl (5 samples, 0.10%)</title><rect x="66.4850%" y="1045" width="0.1009%" height="15" fill="rgb(222,103,0)" fg:x="3293" fg:w="5"/><text x="66.7350%" y="1055.50"></text></g><g><title>tcache_bin_flush_match (2 samples, 0.04%)</title><rect x="66.5455%" y="1029" width="0.0404%" height="15" fill="rgb(227,189,26)" fg:x="3296" fg:w="2"/><text x="66.7955%" y="1039.50"></text></g><g><title>edata_binshard_get (2 samples, 0.04%)</title><rect x="66.5455%" y="1013" width="0.0404%" height="15" fill="rgb(214,202,17)" fg:x="3296" fg:w="2"/><text x="66.7955%" y="1023.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect x="66.5859%" y="1157" width="0.0404%" height="15" fill="rgb(229,111,3)" fg:x="3298" fg:w="2"/><text x="66.8359%" y="1167.50"></text></g><g><title>free_fastpath (2 samples, 0.04%)</title><rect x="66.5859%" y="1141" width="0.0404%" height="15" fill="rgb(229,172,15)" fg:x="3298" fg:w="2"/><text x="66.8359%" y="1151.50"></text></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect x="66.6061%" y="1125" width="0.0202%" height="15" fill="rgb(230,224,35)" fg:x="3299" fg:w="1"/><text x="66.8561%" y="1135.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="66.6465%" y="901" width="0.0202%" height="15" fill="rgb(251,141,6)" fg:x="3301" fg:w="1"/><text x="66.8965%" y="911.50"></text></g><g><title>_rjem_je_pa_dalloc (1 samples, 0.02%)</title><rect x="66.6465%" y="885" width="0.0202%" height="15" fill="rgb(225,208,6)" fg:x="3301" fg:w="1"/><text x="66.8965%" y="895.50"></text></g><g><title>_rjem_je_emap_deregister_interior (1 samples, 0.02%)</title><rect x="66.6465%" y="869" width="0.0202%" height="15" fill="rgb(246,181,16)" fg:x="3301" fg:w="1"/><text x="66.8965%" y="879.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="66.6667%" y="901" width="0.0202%" height="15" fill="rgb(227,129,36)" fg:x="3302" fg:w="1"/><text x="66.9167%" y="911.50"></text></g><g><title>arena_dalloc_bin_locked_step (3 samples, 0.06%)</title><rect x="66.6869%" y="901" width="0.0606%" height="15" fill="rgb(248,117,24)" fg:x="3303" fg:w="3"/><text x="66.9369%" y="911.50"></text></g><g><title>edata_nfree_inc (3 samples, 0.06%)</title><rect x="66.6869%" y="885" width="0.0606%" height="15" fill="rgb(214,185,35)" fg:x="3303" fg:w="3"/><text x="66.9369%" y="895.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="66.7474%" y="869" width="0.0202%" height="15" fill="rgb(236,150,34)" fg:x="3306" fg:w="1"/><text x="66.9974%" y="879.50"></text></g><g><title>_rjem_je_sdallocx_default (7 samples, 0.14%)</title><rect x="66.6465%" y="1029" width="0.1413%" height="15" fill="rgb(243,228,27)" fg:x="3301" fg:w="7"/><text x="66.8965%" y="1039.50"></text></g><g><title>isfree (7 samples, 0.14%)</title><rect x="66.6465%" y="1013" width="0.1413%" height="15" fill="rgb(245,77,44)" fg:x="3301" fg:w="7"/><text x="66.8965%" y="1023.50"></text></g><g><title>isdalloct (7 samples, 0.14%)</title><rect x="66.6465%" y="997" width="0.1413%" height="15" fill="rgb(235,214,42)" fg:x="3301" fg:w="7"/><text x="66.8965%" y="1007.50"></text></g><g><title>arena_sdalloc (7 samples, 0.14%)</title><rect x="66.6465%" y="981" width="0.1413%" height="15" fill="rgb(221,74,3)" fg:x="3301" fg:w="7"/><text x="66.8965%" y="991.50"></text></g><g><title>tcache_dalloc_small (7 samples, 0.14%)</title><rect x="66.6465%" y="965" width="0.1413%" height="15" fill="rgb(206,121,29)" fg:x="3301" fg:w="7"/><text x="66.8965%" y="975.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (7 samples, 0.14%)</title><rect x="66.6465%" y="949" width="0.1413%" height="15" fill="rgb(249,131,53)" fg:x="3301" fg:w="7"/><text x="66.8965%" y="959.50"></text></g><g><title>tcache_bin_flush_bottom (7 samples, 0.14%)</title><rect x="66.6465%" y="933" width="0.1413%" height="15" fill="rgb(236,170,29)" fg:x="3301" fg:w="7"/><text x="66.8965%" y="943.50"></text></g><g><title>tcache_bin_flush_impl (7 samples, 0.14%)</title><rect x="66.6465%" y="917" width="0.1413%" height="15" fill="rgb(247,96,15)" fg:x="3301" fg:w="7"/><text x="66.8965%" y="927.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (2 samples, 0.04%)</title><rect x="66.7474%" y="901" width="0.0404%" height="15" fill="rgb(211,210,7)" fg:x="3306" fg:w="2"/><text x="66.9974%" y="911.50"></text></g><g><title>emap_edata_lookup_batch (2 samples, 0.04%)</title><rect x="66.7474%" y="885" width="0.0404%" height="15" fill="rgb(240,88,50)" fg:x="3306" fg:w="2"/><text x="66.9974%" y="895.50"></text></g><g><title>tcache_bin_flush_metadata_visitor (1 samples, 0.02%)</title><rect x="66.7676%" y="869" width="0.0202%" height="15" fill="rgb(209,229,26)" fg:x="3307" fg:w="1"/><text x="67.0176%" y="879.50"></text></g><g><title>util_prefetch_write_range (1 samples, 0.02%)</title><rect x="66.7676%" y="853" width="0.0202%" height="15" fill="rgb(210,68,23)" fg:x="3307" fg:w="1"/><text x="67.0176%" y="863.50"></text></g><g><title>util_prefetch_write (1 samples, 0.02%)</title><rect x="66.7676%" y="837" width="0.0202%" height="15" fill="rgb(229,180,13)" fg:x="3307" fg:w="1"/><text x="67.0176%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.24%)</title><rect x="66.6465%" y="1093" width="0.2423%" height="15" fill="rgb(236,53,44)" fg:x="3301" fg:w="12"/><text x="66.8965%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.24%)</title><rect x="66.6465%" y="1077" width="0.2423%" height="15" fill="rgb(244,214,29)" fg:x="3301" fg:w="12"/><text x="66.8965%" y="1087.50"></text></g><g><title>__rust_dealloc (12 samples, 0.24%)</title><rect x="66.6465%" y="1061" width="0.2423%" height="15" fill="rgb(220,75,29)" fg:x="3301" fg:w="12"/><text x="66.8965%" y="1071.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.24%)</title><rect x="66.6465%" y="1045" width="0.2423%" height="15" fill="rgb(214,183,37)" fg:x="3301" fg:w="12"/><text x="66.8965%" y="1055.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.10%)</title><rect x="66.7878%" y="1029" width="0.1009%" height="15" fill="rgb(239,117,29)" fg:x="3308" fg:w="5"/><text x="67.0378%" y="1039.50"></text></g><g><title>free_fastpath (3 samples, 0.06%)</title><rect x="66.8282%" y="1013" width="0.0606%" height="15" fill="rgb(237,171,35)" fg:x="3310" fg:w="3"/><text x="67.0782%" y="1023.50"></text></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect x="66.8686%" y="997" width="0.0202%" height="15" fill="rgb(229,178,53)" fg:x="3312" fg:w="1"/><text x="67.1186%" y="1007.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="66.8888%" y="1093" width="0.0202%" height="15" fill="rgb(210,102,19)" fg:x="3313" fg:w="1"/><text x="67.1388%" y="1103.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="66.8888%" y="1077" width="0.0202%" height="15" fill="rgb(235,127,22)" fg:x="3313" fg:w="1"/><text x="67.1388%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Price&gt;&gt; (14 samples, 0.28%)</title><rect x="66.6465%" y="1141" width="0.2827%" height="15" fill="rgb(244,31,31)" fg:x="3301" fg:w="14"/><text x="66.8965%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Price&gt;&gt; (14 samples, 0.28%)</title><rect x="66.6465%" y="1125" width="0.2827%" height="15" fill="rgb(231,43,21)" fg:x="3301" fg:w="14"/><text x="66.8965%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.28%)</title><rect x="66.6465%" y="1109" width="0.2827%" height="15" fill="rgb(217,131,35)" fg:x="3301" fg:w="14"/><text x="66.8965%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (1 samples, 0.02%)</title><rect x="66.9089%" y="1093" width="0.0202%" height="15" fill="rgb(221,149,4)" fg:x="3314" fg:w="1"/><text x="67.1589%" y="1103.50"></text></g><g><title>cache_bin_finish_flush (2 samples, 0.04%)</title><rect x="67.0099%" y="853" width="0.0404%" height="15" fill="rgb(232,170,28)" fg:x="3319" fg:w="2"/><text x="67.2599%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="67.0099%" y="837" width="0.0404%" height="15" fill="rgb(238,56,10)" fg:x="3319" fg:w="2"/><text x="67.2599%" y="847.50"></text></g><g><title>_rjem_je_pa_dalloc (1 samples, 0.02%)</title><rect x="67.0705%" y="821" width="0.0202%" height="15" fill="rgb(235,196,14)" fg:x="3322" fg:w="1"/><text x="67.3205%" y="831.50"></text></g><g><title>pa_get_pai (1 samples, 0.02%)</title><rect x="67.0705%" y="805" width="0.0202%" height="15" fill="rgb(216,45,48)" fg:x="3322" fg:w="1"/><text x="67.3205%" y="815.50"></text></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.02%)</title><rect x="67.1108%" y="741" width="0.0202%" height="15" fill="rgb(238,213,17)" fg:x="3324" fg:w="1"/><text x="67.3608%" y="751.50"></text></g><g><title>ph_insert (1 samples, 0.02%)</title><rect x="67.1108%" y="725" width="0.0202%" height="15" fill="rgb(212,13,2)" fg:x="3324" fg:w="1"/><text x="67.3608%" y="735.50"></text></g><g><title>ph_try_aux_merge_pair (1 samples, 0.02%)</title><rect x="67.1108%" y="709" width="0.0202%" height="15" fill="rgb(240,114,20)" fg:x="3324" fg:w="1"/><text x="67.3608%" y="719.50"></text></g><g><title>phn_merge (1 samples, 0.02%)</title><rect x="67.1108%" y="693" width="0.0202%" height="15" fill="rgb(228,41,40)" fg:x="3324" fg:w="1"/><text x="67.3608%" y="703.50"></text></g><g><title>phn_merge_ordered (1 samples, 0.02%)</title><rect x="67.1108%" y="677" width="0.0202%" height="15" fill="rgb(244,132,35)" fg:x="3324" fg:w="1"/><text x="67.3608%" y="687.50"></text></g><g><title>phn_lchild_get (1 samples, 0.02%)</title><rect x="67.1108%" y="661" width="0.0202%" height="15" fill="rgb(253,189,4)" fg:x="3324" fg:w="1"/><text x="67.3608%" y="671.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (4 samples, 0.08%)</title><rect x="67.0705%" y="837" width="0.0808%" height="15" fill="rgb(224,37,19)" fg:x="3322" fg:w="4"/><text x="67.3205%" y="847.50"></text></g><g><title>pac_dalloc_impl (3 samples, 0.06%)</title><rect x="67.0907%" y="821" width="0.0606%" height="15" fill="rgb(235,223,18)" fg:x="3323" fg:w="3"/><text x="67.3407%" y="831.50"></text></g><g><title>_rjem_je_extent_record (3 samples, 0.06%)</title><rect x="67.0907%" y="805" width="0.0606%" height="15" fill="rgb(235,163,25)" fg:x="3323" fg:w="3"/><text x="67.3407%" y="815.50"></text></g><g><title>extent_deactivate_locked (2 samples, 0.04%)</title><rect x="67.1108%" y="789" width="0.0404%" height="15" fill="rgb(217,145,28)" fg:x="3324" fg:w="2"/><text x="67.3608%" y="799.50"></text></g><g><title>extent_deactivate_locked_impl (2 samples, 0.04%)</title><rect x="67.1108%" y="773" width="0.0404%" height="15" fill="rgb(223,223,32)" fg:x="3324" fg:w="2"/><text x="67.3608%" y="783.50"></text></g><g><title>_rjem_je_eset_insert (2 samples, 0.04%)</title><rect x="67.1108%" y="757" width="0.0404%" height="15" fill="rgb(227,189,39)" fg:x="3324" fg:w="2"/><text x="67.3608%" y="767.50"></text></g><g><title>edata_list_inactive_append (1 samples, 0.02%)</title><rect x="67.1310%" y="741" width="0.0202%" height="15" fill="rgb(248,10,22)" fg:x="3325" fg:w="1"/><text x="67.3810%" y="751.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="67.1512%" y="837" width="0.0202%" height="15" fill="rgb(248,46,39)" fg:x="3326" fg:w="1"/><text x="67.4012%" y="847.50"></text></g><g><title>arena_bin_lower_slab (1 samples, 0.02%)</title><rect x="67.1714%" y="821" width="0.0202%" height="15" fill="rgb(248,113,48)" fg:x="3327" fg:w="1"/><text x="67.4214%" y="831.50"></text></g><g><title>arena_bin_lower_slab (1 samples, 0.02%)</title><rect x="67.1714%" y="805" width="0.0202%" height="15" fill="rgb(245,16,25)" fg:x="3327" fg:w="1"/><text x="67.4214%" y="815.50"></text></g><g><title>bitmap_unset (5 samples, 0.10%)</title><rect x="67.1916%" y="821" width="0.1009%" height="15" fill="rgb(249,152,16)" fg:x="3328" fg:w="5"/><text x="67.4416%" y="831.50"></text></g><g><title>arena_dalloc_bin_locked_step (7 samples, 0.14%)</title><rect x="67.1714%" y="837" width="0.1413%" height="15" fill="rgb(250,16,1)" fg:x="3327" fg:w="7"/><text x="67.4214%" y="847.50"></text></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect x="67.2925%" y="821" width="0.0202%" height="15" fill="rgb(249,138,3)" fg:x="3333" fg:w="1"/><text x="67.5425%" y="831.50"></text></g><g><title>arena_get (1 samples, 0.02%)</title><rect x="67.3127%" y="837" width="0.0202%" height="15" fill="rgb(227,71,41)" fg:x="3334" fg:w="1"/><text x="67.5627%" y="847.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="67.3329%" y="837" width="0.0202%" height="15" fill="rgb(209,184,23)" fg:x="3335" fg:w="1"/><text x="67.5829%" y="847.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="67.3329%" y="821" width="0.0202%" height="15" fill="rgb(223,215,31)" fg:x="3335" fg:w="1"/><text x="67.5829%" y="831.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="67.3329%" y="805" width="0.0202%" height="15" fill="rgb(210,146,28)" fg:x="3335" fg:w="1"/><text x="67.5829%" y="815.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="67.3531%" y="837" width="0.0202%" height="15" fill="rgb(209,183,41)" fg:x="3336" fg:w="1"/><text x="67.6031%" y="847.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="67.3531%" y="821" width="0.0202%" height="15" fill="rgb(209,224,45)" fg:x="3336" fg:w="1"/><text x="67.6031%" y="831.50"></text></g><g><title>rtree_leaf_elm_lookup (2 samples, 0.04%)</title><rect x="67.3935%" y="805" width="0.0404%" height="15" fill="rgb(224,209,51)" fg:x="3338" fg:w="2"/><text x="67.6435%" y="815.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect x="67.4137%" y="789" width="0.0202%" height="15" fill="rgb(223,17,39)" fg:x="3339" fg:w="1"/><text x="67.6637%" y="799.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="67.4339%" y="805" width="0.0202%" height="15" fill="rgb(234,204,37)" fg:x="3340" fg:w="1"/><text x="67.6839%" y="815.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="67.4339%" y="789" width="0.0202%" height="15" fill="rgb(236,120,5)" fg:x="3340" fg:w="1"/><text x="67.6839%" y="799.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (6 samples, 0.12%)</title><rect x="67.3733%" y="837" width="0.1211%" height="15" fill="rgb(248,97,27)" fg:x="3337" fg:w="6"/><text x="67.6233%" y="847.50"></text></g><g><title>emap_edata_lookup_batch (6 samples, 0.12%)</title><rect x="67.3733%" y="821" width="0.1211%" height="15" fill="rgb(240,66,17)" fg:x="3337" fg:w="6"/><text x="67.6233%" y="831.50"></text></g><g><title>tcache_bin_flush_metadata_visitor (2 samples, 0.04%)</title><rect x="67.4541%" y="805" width="0.0404%" height="15" fill="rgb(210,79,3)" fg:x="3341" fg:w="2"/><text x="67.7041%" y="815.50"></text></g><g><title>util_prefetch_write_range (2 samples, 0.04%)</title><rect x="67.4541%" y="789" width="0.0404%" height="15" fill="rgb(214,176,27)" fg:x="3341" fg:w="2"/><text x="67.7041%" y="799.50"></text></g><g><title>util_prefetch_write (2 samples, 0.04%)</title><rect x="67.4541%" y="773" width="0.0404%" height="15" fill="rgb(235,185,3)" fg:x="3341" fg:w="2"/><text x="67.7041%" y="783.50"></text></g><g><title>_rjem_je_sdallocx_default (25 samples, 0.50%)</title><rect x="67.0099%" y="965" width="0.5047%" height="15" fill="rgb(227,24,12)" fg:x="3319" fg:w="25"/><text x="67.2599%" y="975.50"></text></g><g><title>isfree (25 samples, 0.50%)</title><rect x="67.0099%" y="949" width="0.5047%" height="15" fill="rgb(252,169,48)" fg:x="3319" fg:w="25"/><text x="67.2599%" y="959.50"></text></g><g><title>isdalloct (25 samples, 0.50%)</title><rect x="67.0099%" y="933" width="0.5047%" height="15" fill="rgb(212,65,1)" fg:x="3319" fg:w="25"/><text x="67.2599%" y="943.50"></text></g><g><title>arena_sdalloc (25 samples, 0.50%)</title><rect x="67.0099%" y="917" width="0.5047%" height="15" fill="rgb(242,39,24)" fg:x="3319" fg:w="25"/><text x="67.2599%" y="927.50"></text></g><g><title>tcache_dalloc_small (25 samples, 0.50%)</title><rect x="67.0099%" y="901" width="0.5047%" height="15" fill="rgb(249,32,23)" fg:x="3319" fg:w="25"/><text x="67.2599%" y="911.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (25 samples, 0.50%)</title><rect x="67.0099%" y="885" width="0.5047%" height="15" fill="rgb(251,195,23)" fg:x="3319" fg:w="25"/><text x="67.2599%" y="895.50"></text></g><g><title>tcache_bin_flush_bottom (25 samples, 0.50%)</title><rect x="67.0099%" y="869" width="0.5047%" height="15" fill="rgb(236,174,8)" fg:x="3319" fg:w="25"/><text x="67.2599%" y="879.50"></text></g><g><title>tcache_bin_flush_impl (23 samples, 0.46%)</title><rect x="67.0503%" y="853" width="0.4644%" height="15" fill="rgb(220,197,8)" fg:x="3321" fg:w="23"/><text x="67.3003%" y="863.50"></text></g><g><title>tcache_bin_flush_match (1 samples, 0.02%)</title><rect x="67.4944%" y="837" width="0.0202%" height="15" fill="rgb(240,108,37)" fg:x="3343" fg:w="1"/><text x="67.7444%" y="847.50"></text></g><g><title>edata_binshard_get (1 samples, 0.02%)</title><rect x="67.4944%" y="821" width="0.0202%" height="15" fill="rgb(232,176,24)" fg:x="3343" fg:w="1"/><text x="67.7444%" y="831.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect x="67.5954%" y="933" width="0.0404%" height="15" fill="rgb(243,35,29)" fg:x="3348" fg:w="2"/><text x="67.8454%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36 samples, 0.73%)</title><rect x="66.9897%" y="1029" width="0.7268%" height="15" fill="rgb(210,37,18)" fg:x="3318" fg:w="36"/><text x="67.2397%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (36 samples, 0.73%)</title><rect x="66.9897%" y="1013" width="0.7268%" height="15" fill="rgb(224,184,40)" fg:x="3318" fg:w="36"/><text x="67.2397%" y="1023.50"></text></g><g><title>__rust_dealloc (36 samples, 0.73%)</title><rect x="66.9897%" y="997" width="0.7268%" height="15" fill="rgb(236,39,29)" fg:x="3318" fg:w="36"/><text x="67.2397%" y="1007.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (36 samples, 0.73%)</title><rect x="66.9897%" y="981" width="0.7268%" height="15" fill="rgb(232,48,39)" fg:x="3318" fg:w="36"/><text x="67.2397%" y="991.50"></text></g><g><title>_rjem_sdallocx (10 samples, 0.20%)</title><rect x="67.5146%" y="965" width="0.2019%" height="15" fill="rgb(236,34,42)" fg:x="3344" fg:w="10"/><text x="67.7646%" y="975.50"></text></g><g><title>free_fastpath (8 samples, 0.16%)</title><rect x="67.5550%" y="949" width="0.1615%" height="15" fill="rgb(243,106,37)" fg:x="3346" fg:w="8"/><text x="67.8050%" y="959.50"></text></g><g><title>cache_bin_dalloc_easy (4 samples, 0.08%)</title><rect x="67.6358%" y="933" width="0.0808%" height="15" fill="rgb(218,96,6)" fg:x="3350" fg:w="4"/><text x="67.8858%" y="943.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="67.7165%" y="1029" width="0.0404%" height="15" fill="rgb(235,130,12)" fg:x="3354" fg:w="2"/><text x="67.9665%" y="1039.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.04%)</title><rect x="67.7165%" y="1013" width="0.0404%" height="15" fill="rgb(231,95,0)" fg:x="3354" fg:w="2"/><text x="67.9665%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 1.05%)</title><rect x="66.9493%" y="1125" width="1.0499%" height="15" fill="rgb(228,12,23)" fg:x="3316" fg:w="52"/><text x="67.1993%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::SeatCategory]&gt; (52 samples, 1.05%)</title><rect x="66.9493%" y="1109" width="1.0499%" height="15" fill="rgb(216,12,1)" fg:x="3316" fg:w="52"/><text x="67.1993%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt; (50 samples, 1.01%)</title><rect x="66.9897%" y="1093" width="1.0095%" height="15" fill="rgb(219,59,3)" fg:x="3318" fg:w="50"/><text x="67.2397%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (50 samples, 1.01%)</title><rect x="66.9897%" y="1077" width="1.0095%" height="15" fill="rgb(215,208,46)" fg:x="3318" fg:w="50"/><text x="67.2397%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (50 samples, 1.01%)</title><rect x="66.9897%" y="1061" width="1.0095%" height="15" fill="rgb(254,224,29)" fg:x="3318" fg:w="50"/><text x="67.2397%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 1.01%)</title><rect x="66.9897%" y="1045" width="1.0095%" height="15" fill="rgb(232,14,29)" fg:x="3318" fg:w="50"/><text x="67.2397%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (12 samples, 0.24%)</title><rect x="67.7569%" y="1029" width="0.2423%" height="15" fill="rgb(208,45,52)" fg:x="3356" fg:w="12"/><text x="68.0069%" y="1039.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="68.0194%" y="901" width="0.0202%" height="15" fill="rgb(234,191,28)" fg:x="3369" fg:w="1"/><text x="68.2694%" y="911.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="68.0396%" y="901" width="0.0202%" height="15" fill="rgb(244,67,43)" fg:x="3370" fg:w="1"/><text x="68.2896%" y="911.50"></text></g><g><title>arena_bin_lower_slab (1 samples, 0.02%)</title><rect x="68.0396%" y="885" width="0.0202%" height="15" fill="rgb(236,189,24)" fg:x="3370" fg:w="1"/><text x="68.2896%" y="895.50"></text></g><g><title>arena_bin_slabs_nonfull_insert (1 samples, 0.02%)</title><rect x="68.0396%" y="869" width="0.0202%" height="15" fill="rgb(239,214,33)" fg:x="3370" fg:w="1"/><text x="68.2896%" y="879.50"></text></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.02%)</title><rect x="68.0396%" y="853" width="0.0202%" height="15" fill="rgb(226,176,41)" fg:x="3370" fg:w="1"/><text x="68.2896%" y="863.50"></text></g><g><title>ph_insert (1 samples, 0.02%)</title><rect x="68.0396%" y="837" width="0.0202%" height="15" fill="rgb(248,47,8)" fg:x="3370" fg:w="1"/><text x="68.2896%" y="847.50"></text></g><g><title>phn_link_init (1 samples, 0.02%)</title><rect x="68.0396%" y="821" width="0.0202%" height="15" fill="rgb(218,81,44)" fg:x="3370" fg:w="1"/><text x="68.2896%" y="831.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="68.0598%" y="901" width="0.0202%" height="15" fill="rgb(213,98,6)" fg:x="3371" fg:w="1"/><text x="68.3098%" y="911.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="68.0598%" y="885" width="0.0202%" height="15" fill="rgb(222,85,22)" fg:x="3371" fg:w="1"/><text x="68.3098%" y="895.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="68.0598%" y="869" width="0.0202%" height="15" fill="rgb(239,46,39)" fg:x="3371" fg:w="1"/><text x="68.3098%" y="879.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="68.0800%" y="901" width="0.0202%" height="15" fill="rgb(237,12,29)" fg:x="3372" fg:w="1"/><text x="68.3300%" y="911.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="68.0800%" y="885" width="0.0202%" height="15" fill="rgb(214,77,8)" fg:x="3372" fg:w="1"/><text x="68.3300%" y="895.50"></text></g><g><title>rtree_leaf_elm_lookup (2 samples, 0.04%)</title><rect x="68.1001%" y="869" width="0.0404%" height="15" fill="rgb(217,168,37)" fg:x="3373" fg:w="2"/><text x="68.3501%" y="879.50"></text></g><g><title>_rjem_je_sdallocx_default (8 samples, 0.16%)</title><rect x="67.9992%" y="1029" width="0.1615%" height="15" fill="rgb(221,217,23)" fg:x="3368" fg:w="8"/><text x="68.2492%" y="1039.50"></text></g><g><title>isfree (8 samples, 0.16%)</title><rect x="67.9992%" y="1013" width="0.1615%" height="15" fill="rgb(243,229,36)" fg:x="3368" fg:w="8"/><text x="68.2492%" y="1023.50"></text></g><g><title>isdalloct (8 samples, 0.16%)</title><rect x="67.9992%" y="997" width="0.1615%" height="15" fill="rgb(251,163,40)" fg:x="3368" fg:w="8"/><text x="68.2492%" y="1007.50"></text></g><g><title>arena_sdalloc (8 samples, 0.16%)</title><rect x="67.9992%" y="981" width="0.1615%" height="15" fill="rgb(237,222,12)" fg:x="3368" fg:w="8"/><text x="68.2492%" y="991.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.16%)</title><rect x="67.9992%" y="965" width="0.1615%" height="15" fill="rgb(248,132,6)" fg:x="3368" fg:w="8"/><text x="68.2492%" y="975.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (8 samples, 0.16%)</title><rect x="67.9992%" y="949" width="0.1615%" height="15" fill="rgb(227,167,50)" fg:x="3368" fg:w="8"/><text x="68.2492%" y="959.50"></text></g><g><title>tcache_bin_flush_bottom (8 samples, 0.16%)</title><rect x="67.9992%" y="933" width="0.1615%" height="15" fill="rgb(242,84,37)" fg:x="3368" fg:w="8"/><text x="68.2492%" y="943.50"></text></g><g><title>tcache_bin_flush_impl (8 samples, 0.16%)</title><rect x="67.9992%" y="917" width="0.1615%" height="15" fill="rgb(212,4,50)" fg:x="3368" fg:w="8"/><text x="68.2492%" y="927.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (3 samples, 0.06%)</title><rect x="68.1001%" y="901" width="0.0606%" height="15" fill="rgb(230,228,32)" fg:x="3373" fg:w="3"/><text x="68.3501%" y="911.50"></text></g><g><title>emap_edata_lookup_batch (3 samples, 0.06%)</title><rect x="68.1001%" y="885" width="0.0606%" height="15" fill="rgb(248,217,23)" fg:x="3373" fg:w="3"/><text x="68.3501%" y="895.50"></text></g><g><title>tcache_bin_flush_metadata_visitor (1 samples, 0.02%)</title><rect x="68.1405%" y="869" width="0.0202%" height="15" fill="rgb(238,197,32)" fg:x="3375" fg:w="1"/><text x="68.3905%" y="879.50"></text></g><g><title>util_prefetch_write_range (1 samples, 0.02%)</title><rect x="68.1405%" y="853" width="0.0202%" height="15" fill="rgb(236,106,1)" fg:x="3375" fg:w="1"/><text x="68.3905%" y="863.50"></text></g><g><title>util_prefetch_write (1 samples, 0.02%)</title><rect x="68.1405%" y="837" width="0.0202%" height="15" fill="rgb(219,228,13)" fg:x="3375" fg:w="1"/><text x="68.3905%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.20%)</title><rect x="67.9992%" y="1093" width="0.2019%" height="15" fill="rgb(238,30,35)" fg:x="3368" fg:w="10"/><text x="68.2492%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.20%)</title><rect x="67.9992%" y="1077" width="0.2019%" height="15" fill="rgb(236,70,23)" fg:x="3368" fg:w="10"/><text x="68.2492%" y="1087.50"></text></g><g><title>__rust_dealloc (10 samples, 0.20%)</title><rect x="67.9992%" y="1061" width="0.2019%" height="15" fill="rgb(249,104,48)" fg:x="3368" fg:w="10"/><text x="68.2492%" y="1071.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (10 samples, 0.20%)</title><rect x="67.9992%" y="1045" width="0.2019%" height="15" fill="rgb(254,117,50)" fg:x="3368" fg:w="10"/><text x="68.2492%" y="1055.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect x="68.1607%" y="1029" width="0.0404%" height="15" fill="rgb(223,152,4)" fg:x="3376" fg:w="2"/><text x="68.4107%" y="1039.50"></text></g><g><title>free_fastpath (2 samples, 0.04%)</title><rect x="68.1607%" y="1013" width="0.0404%" height="15" fill="rgb(245,6,2)" fg:x="3376" fg:w="2"/><text x="68.4107%" y="1023.50"></text></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect x="68.1809%" y="997" width="0.0202%" height="15" fill="rgb(249,150,24)" fg:x="3377" fg:w="1"/><text x="68.4309%" y="1007.50"></text></g><g><title>cache_bin_full (1 samples, 0.02%)</title><rect x="68.1809%" y="981" width="0.0202%" height="15" fill="rgb(228,185,42)" fg:x="3377" fg:w="1"/><text x="68.4309%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (64 samples, 1.29%)</title><rect x="66.9291%" y="1141" width="1.2921%" height="15" fill="rgb(226,39,33)" fg:x="3315" fg:w="64"/><text x="67.1791%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (11 samples, 0.22%)</title><rect x="67.9992%" y="1125" width="0.2221%" height="15" fill="rgb(221,166,19)" fg:x="3368" fg:w="11"/><text x="68.2492%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.22%)</title><rect x="67.9992%" y="1109" width="0.2221%" height="15" fill="rgb(209,109,2)" fg:x="3368" fg:w="11"/><text x="68.2492%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (1 samples, 0.02%)</title><rect x="68.2011%" y="1093" width="0.0202%" height="15" fill="rgb(252,216,26)" fg:x="3378" fg:w="1"/><text x="68.4511%" y="1103.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="68.2415%" y="837" width="0.0202%" height="15" fill="rgb(227,173,36)" fg:x="3380" fg:w="1"/><text x="68.4915%" y="847.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect x="68.2415%" y="821" width="0.0202%" height="15" fill="rgb(209,90,7)" fg:x="3380" fg:w="1"/><text x="68.4915%" y="831.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.04%)</title><rect x="68.2415%" y="997" width="0.0404%" height="15" fill="rgb(250,194,11)" fg:x="3380" fg:w="2"/><text x="68.4915%" y="1007.50"></text></g><g><title>isfree (2 samples, 0.04%)</title><rect x="68.2415%" y="981" width="0.0404%" height="15" fill="rgb(220,72,50)" fg:x="3380" fg:w="2"/><text x="68.4915%" y="991.50"></text></g><g><title>isdalloct (2 samples, 0.04%)</title><rect x="68.2415%" y="965" width="0.0404%" height="15" fill="rgb(222,106,48)" fg:x="3380" fg:w="2"/><text x="68.4915%" y="975.50"></text></g><g><title>arena_sdalloc (2 samples, 0.04%)</title><rect x="68.2415%" y="949" width="0.0404%" height="15" fill="rgb(216,220,45)" fg:x="3380" fg:w="2"/><text x="68.4915%" y="959.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.04%)</title><rect x="68.2415%" y="933" width="0.0404%" height="15" fill="rgb(234,112,18)" fg:x="3380" fg:w="2"/><text x="68.4915%" y="943.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.04%)</title><rect x="68.2415%" y="917" width="0.0404%" height="15" fill="rgb(206,179,9)" fg:x="3380" fg:w="2"/><text x="68.4915%" y="927.50"></text></g><g><title>tcache_bin_flush_bottom (2 samples, 0.04%)</title><rect x="68.2415%" y="901" width="0.0404%" height="15" fill="rgb(215,115,40)" fg:x="3380" fg:w="2"/><text x="68.4915%" y="911.50"></text></g><g><title>tcache_bin_flush_impl (2 samples, 0.04%)</title><rect x="68.2415%" y="885" width="0.0404%" height="15" fill="rgb(222,69,34)" fg:x="3380" fg:w="2"/><text x="68.4915%" y="895.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (2 samples, 0.04%)</title><rect x="68.2415%" y="869" width="0.0404%" height="15" fill="rgb(209,161,10)" fg:x="3380" fg:w="2"/><text x="68.4915%" y="879.50"></text></g><g><title>emap_edata_lookup_batch (2 samples, 0.04%)</title><rect x="68.2415%" y="853" width="0.0404%" height="15" fill="rgb(217,6,38)" fg:x="3380" fg:w="2"/><text x="68.4915%" y="863.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="68.2617%" y="837" width="0.0202%" height="15" fill="rgb(229,229,48)" fg:x="3381" fg:w="1"/><text x="68.5117%" y="847.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="68.2617%" y="821" width="0.0202%" height="15" fill="rgb(225,21,28)" fg:x="3381" fg:w="1"/><text x="68.5117%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 1.84%)</title><rect x="66.4648%" y="1189" width="1.8373%" height="15" fill="rgb(206,33,13)" fg:x="3292" fg:w="91"/><text x="66.7148%" y="1199.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::Performance]&gt; (91 samples, 1.84%)</title><rect x="66.4648%" y="1173" width="1.8373%" height="15" fill="rgb(242,178,17)" fg:x="3292" fg:w="91"/><text x="66.7148%" y="1183.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (83 samples, 1.68%)</title><rect x="66.6263%" y="1157" width="1.6758%" height="15" fill="rgb(220,162,5)" fg:x="3300" fg:w="83"/><text x="66.8763%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (4 samples, 0.08%)</title><rect x="68.2213%" y="1141" width="0.0808%" height="15" fill="rgb(210,33,43)" fg:x="3379" fg:w="4"/><text x="68.4713%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.06%)</title><rect x="68.2415%" y="1125" width="0.0606%" height="15" fill="rgb(216,116,54)" fg:x="3380" fg:w="3"/><text x="68.4915%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.06%)</title><rect x="68.2415%" y="1109" width="0.0606%" height="15" fill="rgb(249,92,24)" fg:x="3380" fg:w="3"/><text x="68.4915%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.06%)</title><rect x="68.2415%" y="1093" width="0.0606%" height="15" fill="rgb(231,189,14)" fg:x="3380" fg:w="3"/><text x="68.4915%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="68.2415%" y="1077" width="0.0606%" height="15" fill="rgb(230,8,41)" fg:x="3380" fg:w="3"/><text x="68.4915%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect x="68.2415%" y="1061" width="0.0606%" height="15" fill="rgb(249,7,27)" fg:x="3380" fg:w="3"/><text x="68.4915%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect x="68.2415%" y="1045" width="0.0606%" height="15" fill="rgb(232,86,5)" fg:x="3380" fg:w="3"/><text x="68.4915%" y="1055.50"></text></g><g><title>__rust_dealloc (3 samples, 0.06%)</title><rect x="68.2415%" y="1029" width="0.0606%" height="15" fill="rgb(224,175,18)" fg:x="3380" fg:w="3"/><text x="68.4915%" y="1039.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.06%)</title><rect x="68.2415%" y="1013" width="0.0606%" height="15" fill="rgb(220,129,12)" fg:x="3380" fg:w="3"/><text x="68.4915%" y="1023.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="68.2818%" y="997" width="0.0202%" height="15" fill="rgb(210,19,36)" fg:x="3382" fg:w="1"/><text x="68.5318%" y="1007.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="68.2818%" y="981" width="0.0202%" height="15" fill="rgb(219,96,14)" fg:x="3382" fg:w="1"/><text x="68.5318%" y="991.50"></text></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect x="68.2818%" y="965" width="0.0202%" height="15" fill="rgb(249,106,1)" fg:x="3382" fg:w="1"/><text x="68.5318%" y="975.50"></text></g><g><title>tcache_gc_large (1 samples, 0.02%)</title><rect x="68.3020%" y="1045" width="0.0202%" height="15" fill="rgb(249,155,20)" fg:x="3383" fg:w="1"/><text x="68.5520%" y="1055.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (1 samples, 0.02%)</title><rect x="68.3020%" y="1029" width="0.0202%" height="15" fill="rgb(244,168,9)" fg:x="3383" fg:w="1"/><text x="68.5520%" y="1039.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="68.3020%" y="1013" width="0.0202%" height="15" fill="rgb(216,23,50)" fg:x="3383" fg:w="1"/><text x="68.5520%" y="1023.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="68.3020%" y="997" width="0.0202%" height="15" fill="rgb(224,219,20)" fg:x="3383" fg:w="1"/><text x="68.5520%" y="1007.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="68.3020%" y="981" width="0.0202%" height="15" fill="rgb(222,156,15)" fg:x="3383" fg:w="1"/><text x="68.5520%" y="991.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="68.3020%" y="965" width="0.0202%" height="15" fill="rgb(231,97,17)" fg:x="3383" fg:w="1"/><text x="68.5520%" y="975.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="68.3020%" y="949" width="0.0202%" height="15" fill="rgb(218,70,48)" fg:x="3383" fg:w="1"/><text x="68.5520%" y="959.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="68.3020%" y="933" width="0.0202%" height="15" fill="rgb(212,196,52)" fg:x="3383" fg:w="1"/><text x="68.5520%" y="943.50"></text></g><g><title>_rjem_je_te_event_trigger (2 samples, 0.04%)</title><rect x="68.3020%" y="1077" width="0.0404%" height="15" fill="rgb(243,203,18)" fg:x="3383" fg:w="2"/><text x="68.5520%" y="1087.50"></text></g><g><title>tcache_event (2 samples, 0.04%)</title><rect x="68.3020%" y="1061" width="0.0404%" height="15" fill="rgb(252,125,41)" fg:x="3383" fg:w="2"/><text x="68.5520%" y="1071.50"></text></g><g><title>tcache_gc_small (1 samples, 0.02%)</title><rect x="68.3222%" y="1045" width="0.0202%" height="15" fill="rgb(223,180,33)" fg:x="3384" fg:w="1"/><text x="68.5722%" y="1055.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="68.3222%" y="1029" width="0.0202%" height="15" fill="rgb(254,159,46)" fg:x="3384" fg:w="1"/><text x="68.5722%" y="1039.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="68.3222%" y="1013" width="0.0202%" height="15" fill="rgb(254,38,10)" fg:x="3384" fg:w="1"/><text x="68.5722%" y="1023.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="68.3222%" y="997" width="0.0202%" height="15" fill="rgb(208,217,32)" fg:x="3384" fg:w="1"/><text x="68.5722%" y="1007.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="68.3222%" y="981" width="0.0202%" height="15" fill="rgb(221,120,13)" fg:x="3384" fg:w="1"/><text x="68.5722%" y="991.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="68.3222%" y="965" width="0.0202%" height="15" fill="rgb(246,54,52)" fg:x="3384" fg:w="1"/><text x="68.5722%" y="975.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="68.3222%" y="949" width="0.0202%" height="15" fill="rgb(242,34,25)" fg:x="3384" fg:w="1"/><text x="68.5722%" y="959.50"></text></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect x="68.3222%" y="933" width="0.0202%" height="15" fill="rgb(247,209,9)" fg:x="3384" fg:w="1"/><text x="68.5722%" y="943.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect x="68.3222%" y="917" width="0.0202%" height="15" fill="rgb(228,71,26)" fg:x="3384" fg:w="1"/><text x="68.5722%" y="927.50"></text></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect x="68.3222%" y="901" width="0.0202%" height="15" fill="rgb(222,145,49)" fg:x="3384" fg:w="1"/><text x="68.5722%" y="911.50"></text></g><g><title>extent_merge_impl (1 samples, 0.02%)</title><rect x="68.3222%" y="885" width="0.0202%" height="15" fill="rgb(218,121,17)" fg:x="3384" fg:w="1"/><text x="68.5722%" y="895.50"></text></g><g><title>_rjem_je_emap_merge_prepare (1 samples, 0.02%)</title><rect x="68.3222%" y="869" width="0.0202%" height="15" fill="rgb(244,50,7)" fg:x="3384" fg:w="1"/><text x="68.5722%" y="879.50"></text></g><g><title>_rjem_je_emap_merge_commit (1 samples, 0.02%)</title><rect x="68.3424%" y="821" width="0.0202%" height="15" fill="rgb(246,229,37)" fg:x="3385" fg:w="1"/><text x="68.5924%" y="831.50"></text></g><g><title>emap_rtree_write_acquired (1 samples, 0.02%)</title><rect x="68.3424%" y="805" width="0.0202%" height="15" fill="rgb(225,18,5)" fg:x="3385" fg:w="1"/><text x="68.5924%" y="815.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1509" width="66.3840%" height="15" fill="rgb(213,204,8)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1519.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1493" width="66.3840%" height="15" fill="rgb(238,103,6)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1503.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1477" width="66.3840%" height="15" fill="rgb(222,25,35)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1487.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1461" width="66.3840%" height="15" fill="rgb(213,203,35)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1471.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1445" width="66.3840%" height="15" fill="rgb(221,79,53)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1455.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1429" width="66.3840%" height="15" fill="rgb(243,200,35)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1439.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>?? (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1413" width="66.3840%" height="15" fill="rgb(248,60,25)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1423.50">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1397" width="66.3840%" height="15" fill="rgb(227,53,46)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1407.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1381" width="66.3840%" height="15" fill="rgb(216,120,32)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1391.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1365" width="66.3840%" height="15" fill="rgb(220,134,1)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1375.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1349" width="66.3840%" height="15" fill="rgb(237,168,5)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1359.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1333" width="66.3840%" height="15" fill="rgb(231,100,33)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1343.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}}</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}} (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1317" width="66.3840%" height="15" fill="rgb(236,177,47)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1327.50">deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched (3,288 samples, 66.38%)</title><rect x="2.0190%" y="1301" width="66.3840%" height="15" fill="rgb(235,7,49)" fg:x="100" fg:w="3288"/><text x="2.2690%" y="1311.50">criterion::bencher::Bencher&lt;M&gt;::iter_batched</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;&gt;&gt; (160 samples, 3.23%)</title><rect x="65.1726%" y="1285" width="3.2304%" height="15" fill="rgb(232,119,22)" fg:x="3228" fg:w="160"/><text x="65.4226%" y="1295.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 3.23%)</title><rect x="65.1726%" y="1269" width="3.2304%" height="15" fill="rgb(254,73,53)" fg:x="3228" fg:w="160"/><text x="65.4226%" y="1279.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;]&gt; (160 samples, 3.23%)</title><rect x="65.1726%" y="1253" width="3.2304%" height="15" fill="rgb(251,35,20)" fg:x="3228" fg:w="160"/><text x="65.4226%" y="1263.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;&gt; (160 samples, 3.23%)</title><rect x="65.1726%" y="1237" width="3.2304%" height="15" fill="rgb(241,119,20)" fg:x="3228" fg:w="160"/><text x="65.4226%" y="1247.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (158 samples, 3.19%)</title><rect x="65.2130%" y="1221" width="3.1900%" height="15" fill="rgb(207,102,14)" fg:x="3230" fg:w="158"/><text x="65.4630%" y="1231.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Performance&gt;&gt; (96 samples, 1.94%)</title><rect x="66.4648%" y="1205" width="1.9382%" height="15" fill="rgb(248,201,50)" fg:x="3292" fg:w="96"/><text x="66.7148%" y="1215.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Performance&gt;&gt; (5 samples, 0.10%)</title><rect x="68.3020%" y="1189" width="0.1009%" height="15" fill="rgb(222,185,44)" fg:x="3383" fg:w="5"/><text x="68.5520%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="68.3020%" y="1173" width="0.1009%" height="15" fill="rgb(218,107,18)" fg:x="3383" fg:w="5"/><text x="68.5520%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.10%)</title><rect x="68.3020%" y="1157" width="0.1009%" height="15" fill="rgb(237,177,39)" fg:x="3383" fg:w="5"/><text x="68.5520%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.10%)</title><rect x="68.3020%" y="1141" width="0.1009%" height="15" fill="rgb(246,69,6)" fg:x="3383" fg:w="5"/><text x="68.5520%" y="1151.50"></text></g><g><title>__rust_dealloc (5 samples, 0.10%)</title><rect x="68.3020%" y="1125" width="0.1009%" height="15" fill="rgb(234,208,37)" fg:x="3383" fg:w="5"/><text x="68.5520%" y="1135.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.10%)</title><rect x="68.3020%" y="1109" width="0.1009%" height="15" fill="rgb(225,4,6)" fg:x="3383" fg:w="5"/><text x="68.5520%" y="1119.50"></text></g><g><title>_rjem_je_sdallocx_default (5 samples, 0.10%)</title><rect x="68.3020%" y="1093" width="0.1009%" height="15" fill="rgb(233,45,0)" fg:x="3383" fg:w="5"/><text x="68.5520%" y="1103.50"></text></g><g><title>isfree (3 samples, 0.06%)</title><rect x="68.3424%" y="1077" width="0.0606%" height="15" fill="rgb(226,136,5)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="1087.50"></text></g><g><title>isdalloct (3 samples, 0.06%)</title><rect x="68.3424%" y="1061" width="0.0606%" height="15" fill="rgb(211,91,47)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="1071.50"></text></g><g><title>arena_sdalloc (3 samples, 0.06%)</title><rect x="68.3424%" y="1045" width="0.0606%" height="15" fill="rgb(242,88,51)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="1055.50"></text></g><g><title>arena_dalloc_large (3 samples, 0.06%)</title><rect x="68.3424%" y="1029" width="0.0606%" height="15" fill="rgb(230,91,28)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="1039.50"></text></g><g><title>tcache_dalloc_large (3 samples, 0.06%)</title><rect x="68.3424%" y="1013" width="0.0606%" height="15" fill="rgb(254,186,29)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="1023.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (3 samples, 0.06%)</title><rect x="68.3424%" y="997" width="0.0606%" height="15" fill="rgb(238,6,4)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="1007.50"></text></g><g><title>tcache_bin_flush_bottom (3 samples, 0.06%)</title><rect x="68.3424%" y="981" width="0.0606%" height="15" fill="rgb(221,151,16)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="991.50"></text></g><g><title>tcache_bin_flush_impl (3 samples, 0.06%)</title><rect x="68.3424%" y="965" width="0.0606%" height="15" fill="rgb(251,143,52)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="975.50"></text></g><g><title>_rjem_je_large_dalloc_finish (3 samples, 0.06%)</title><rect x="68.3424%" y="949" width="0.0606%" height="15" fill="rgb(206,90,15)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="959.50"></text></g><g><title>large_dalloc_finish_impl (3 samples, 0.06%)</title><rect x="68.3424%" y="933" width="0.0606%" height="15" fill="rgb(218,35,8)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="943.50"></text></g><g><title>pac_dalloc_impl (3 samples, 0.06%)</title><rect x="68.3424%" y="917" width="0.0606%" height="15" fill="rgb(239,215,6)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="927.50"></text></g><g><title>_rjem_je_extent_record (3 samples, 0.06%)</title><rect x="68.3424%" y="901" width="0.0606%" height="15" fill="rgb(245,116,39)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="911.50"></text></g><g><title>extent_try_coalesce_large (3 samples, 0.06%)</title><rect x="68.3424%" y="885" width="0.0606%" height="15" fill="rgb(242,65,28)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="895.50"></text></g><g><title>extent_try_coalesce_impl (3 samples, 0.06%)</title><rect x="68.3424%" y="869" width="0.0606%" height="15" fill="rgb(252,132,53)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="879.50"></text></g><g><title>extent_coalesce (3 samples, 0.06%)</title><rect x="68.3424%" y="853" width="0.0606%" height="15" fill="rgb(224,159,50)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="863.50"></text></g><g><title>extent_merge_impl (3 samples, 0.06%)</title><rect x="68.3424%" y="837" width="0.0606%" height="15" fill="rgb(224,93,4)" fg:x="3385" fg:w="3"/><text x="68.5924%" y="847.50"></text></g><g><title>_rjem_je_emap_merge_prepare (2 samples, 0.04%)</title><rect x="68.3626%" y="821" width="0.0404%" height="15" fill="rgb(208,81,34)" fg:x="3386" fg:w="2"/><text x="68.6126%" y="831.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (1 samples, 0.02%)</title><rect x="68.3828%" y="805" width="0.0202%" height="15" fill="rgb(233,92,54)" fg:x="3387" fg:w="1"/><text x="68.6328%" y="815.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="68.4434%" y="1141" width="0.0202%" height="15" fill="rgb(237,21,14)" fg:x="3390" fg:w="1"/><text x="68.6934%" y="1151.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="68.5241%" y="1013" width="0.0202%" height="15" fill="rgb(249,128,51)" fg:x="3394" fg:w="1"/><text x="68.7741%" y="1023.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="68.5241%" y="997" width="0.0202%" height="15" fill="rgb(223,129,24)" fg:x="3394" fg:w="1"/><text x="68.7741%" y="1007.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="68.5241%" y="981" width="0.0202%" height="15" fill="rgb(231,168,25)" fg:x="3394" fg:w="1"/><text x="68.7741%" y="991.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="68.5241%" y="965" width="0.0202%" height="15" fill="rgb(224,39,20)" fg:x="3394" fg:w="1"/><text x="68.7741%" y="975.50"></text></g><g><title>&lt;u32 as core::num::FromStrRadixHelper&gt;::checked_mul (2 samples, 0.04%)</title><rect x="68.5443%" y="949" width="0.0404%" height="15" fill="rgb(225,152,53)" fg:x="3395" fg:w="2"/><text x="68.7943%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_mul (2 samples, 0.04%)</title><rect x="68.5443%" y="933" width="0.0404%" height="15" fill="rgb(252,17,24)" fg:x="3395" fg:w="2"/><text x="68.7943%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_mul (2 samples, 0.04%)</title><rect x="68.5443%" y="917" width="0.0404%" height="15" fill="rgb(250,114,30)" fg:x="3395" fg:w="2"/><text x="68.7943%" y="927.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.12%)</title><rect x="68.4837%" y="1093" width="0.1211%" height="15" fill="rgb(229,5,4)" fg:x="3392" fg:w="6"/><text x="68.7337%" y="1103.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.10%)</title><rect x="68.5039%" y="1077" width="0.1009%" height="15" fill="rgb(225,176,49)" fg:x="3393" fg:w="5"/><text x="68.7539%" y="1087.50"></text></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize (4 samples, 0.08%)</title><rect x="68.5241%" y="1061" width="0.0808%" height="15" fill="rgb(224,221,49)" fg:x="3394" fg:w="4"/><text x="68.7741%" y="1071.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.08%)</title><rect x="68.5241%" y="1045" width="0.0808%" height="15" fill="rgb(253,169,27)" fg:x="3394" fg:w="4"/><text x="68.7741%" y="1055.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.08%)</title><rect x="68.5241%" y="1029" width="0.0808%" height="15" fill="rgb(211,206,16)" fg:x="3394" fg:w="4"/><text x="68.7741%" y="1039.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.06%)</title><rect x="68.5443%" y="1013" width="0.0606%" height="15" fill="rgb(244,87,35)" fg:x="3395" fg:w="3"/><text x="68.7943%" y="1023.50"></text></g><g><title>&lt;&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize::Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_str (3 samples, 0.06%)</title><rect x="68.5443%" y="997" width="0.0606%" height="15" fill="rgb(246,28,10)" fg:x="3395" fg:w="3"/><text x="68.7943%" y="1007.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (3 samples, 0.06%)</title><rect x="68.5443%" y="981" width="0.0606%" height="15" fill="rgb(229,12,44)" fg:x="3395" fg:w="3"/><text x="68.7943%" y="991.50"></text></g><g><title>core::num::from_str_radix (3 samples, 0.06%)</title><rect x="68.5443%" y="965" width="0.0606%" height="15" fill="rgb(210,145,37)" fg:x="3395" fg:w="3"/><text x="68.7943%" y="975.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (1 samples, 0.02%)</title><rect x="68.5847%" y="949" width="0.0202%" height="15" fill="rgb(227,112,52)" fg:x="3397" fg:w="1"/><text x="68.8347%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="68.5847%" y="933" width="0.0202%" height="15" fill="rgb(238,155,34)" fg:x="3397" fg:w="1"/><text x="68.8347%" y="943.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="68.6049%" y="1013" width="0.0202%" height="15" fill="rgb(239,226,36)" fg:x="3398" fg:w="1"/><text x="68.8549%" y="1023.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for ()&gt;::deserialize (2 samples, 0.04%)</title><rect x="68.6251%" y="965" width="0.0404%" height="15" fill="rgb(230,16,23)" fg:x="3399" fg:w="2"/><text x="68.8751%" y="975.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_unit (2 samples, 0.04%)</title><rect x="68.6251%" y="949" width="0.0404%" height="15" fill="rgb(236,171,36)" fg:x="3399" fg:w="2"/><text x="68.8751%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="68.6453%" y="933" width="0.0202%" height="15" fill="rgb(221,22,14)" fg:x="3400" fg:w="1"/><text x="68.8953%" y="943.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="68.6655%" y="885" width="0.0202%" height="15" fill="rgb(242,43,11)" fg:x="3401" fg:w="1"/><text x="68.9155%" y="895.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="68.6655%" y="869" width="0.0202%" height="15" fill="rgb(232,69,23)" fg:x="3401" fg:w="1"/><text x="68.9155%" y="879.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="68.6856%" y="885" width="0.0202%" height="15" fill="rgb(216,180,54)" fg:x="3402" fg:w="1"/><text x="68.9356%" y="895.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (3 samples, 0.06%)</title><rect x="68.6655%" y="965" width="0.0606%" height="15" fill="rgb(216,5,24)" fg:x="3401" fg:w="3"/><text x="68.9155%" y="975.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (3 samples, 0.06%)</title><rect x="68.6655%" y="949" width="0.0606%" height="15" fill="rgb(225,89,9)" fg:x="3401" fg:w="3"/><text x="68.9155%" y="959.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (3 samples, 0.06%)</title><rect x="68.6655%" y="933" width="0.0606%" height="15" fill="rgb(243,75,33)" fg:x="3401" fg:w="3"/><text x="68.9155%" y="943.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="68.6655%" y="917" width="0.0606%" height="15" fill="rgb(247,141,45)" fg:x="3401" fg:w="3"/><text x="68.9155%" y="927.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="68.6655%" y="901" width="0.0606%" height="15" fill="rgb(232,177,36)" fg:x="3401" fg:w="3"/><text x="68.9155%" y="911.50"></text></g><g><title>sonic_rs::util::string::parse_valid_escaped_string (1 samples, 0.02%)</title><rect x="68.7058%" y="885" width="0.0202%" height="15" fill="rgb(219,125,36)" fg:x="3403" fg:w="1"/><text x="68.9558%" y="895.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="68.7664%" y="853" width="0.0202%" height="15" fill="rgb(227,94,9)" fg:x="3406" fg:w="1"/><text x="69.0164%" y="863.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="68.7664%" y="837" width="0.0202%" height="15" fill="rgb(240,34,52)" fg:x="3406" fg:w="1"/><text x="69.0164%" y="847.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="68.7664%" y="821" width="0.0202%" height="15" fill="rgb(216,45,12)" fg:x="3406" fg:w="1"/><text x="69.0164%" y="831.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="68.7664%" y="805" width="0.0202%" height="15" fill="rgb(246,21,19)" fg:x="3406" fg:w="1"/><text x="69.0164%" y="815.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="68.7664%" y="789" width="0.0202%" height="15" fill="rgb(213,98,42)" fg:x="3406" fg:w="1"/><text x="69.0164%" y="799.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="68.7664%" y="773" width="0.0202%" height="15" fill="rgb(250,136,47)" fg:x="3406" fg:w="1"/><text x="69.0164%" y="783.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="68.7664%" y="757" width="0.0202%" height="15" fill="rgb(251,124,27)" fg:x="3406" fg:w="1"/><text x="69.0164%" y="767.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="68.7664%" y="741" width="0.0202%" height="15" fill="rgb(229,180,14)" fg:x="3406" fg:w="1"/><text x="69.0164%" y="751.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="68.7664%" y="725" width="0.0202%" height="15" fill="rgb(245,216,25)" fg:x="3406" fg:w="1"/><text x="69.0164%" y="735.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="68.7664%" y="709" width="0.0202%" height="15" fill="rgb(251,43,5)" fg:x="3406" fg:w="1"/><text x="69.0164%" y="719.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="68.7664%" y="693" width="0.0202%" height="15" fill="rgb(250,128,24)" fg:x="3406" fg:w="1"/><text x="69.0164%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect x="68.7462%" y="917" width="0.0606%" height="15" fill="rgb(217,117,27)" fg:x="3405" fg:w="3"/><text x="68.9962%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="68.7664%" y="901" width="0.0404%" height="15" fill="rgb(245,147,4)" fg:x="3406" fg:w="2"/><text x="69.0164%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="68.7664%" y="885" width="0.0404%" height="15" fill="rgb(242,201,35)" fg:x="3406" fg:w="2"/><text x="69.0164%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="68.7664%" y="869" width="0.0404%" height="15" fill="rgb(218,181,1)" fg:x="3406" fg:w="2"/><text x="69.0164%" y="879.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="68.7866%" y="853" width="0.0202%" height="15" fill="rgb(222,6,29)" fg:x="3407" fg:w="1"/><text x="69.0366%" y="863.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="68.7866%" y="837" width="0.0202%" height="15" fill="rgb(208,186,3)" fg:x="3407" fg:w="1"/><text x="69.0366%" y="847.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="68.7866%" y="821" width="0.0202%" height="15" fill="rgb(216,36,26)" fg:x="3407" fg:w="1"/><text x="69.0366%" y="831.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="68.7866%" y="805" width="0.0202%" height="15" fill="rgb(248,201,23)" fg:x="3407" fg:w="1"/><text x="69.0366%" y="815.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="68.8068%" y="917" width="0.0202%" height="15" fill="rgb(251,170,31)" fg:x="3408" fg:w="1"/><text x="69.0568%" y="927.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="68.8068%" y="901" width="0.0202%" height="15" fill="rgb(207,110,25)" fg:x="3408" fg:w="1"/><text x="69.0568%" y="911.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="68.8068%" y="885" width="0.0202%" height="15" fill="rgb(250,54,15)" fg:x="3408" fg:w="1"/><text x="69.0568%" y="895.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="68.8270%" y="869" width="0.0202%" height="15" fill="rgb(227,68,33)" fg:x="3409" fg:w="1"/><text x="69.0770%" y="879.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="68.8270%" y="853" width="0.0202%" height="15" fill="rgb(238,34,41)" fg:x="3409" fg:w="1"/><text x="69.0770%" y="863.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="68.8270%" y="885" width="0.0606%" height="15" fill="rgb(220,11,15)" fg:x="3409" fg:w="3"/><text x="69.0770%" y="895.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect x="68.8472%" y="869" width="0.0404%" height="15" fill="rgb(246,111,35)" fg:x="3410" fg:w="2"/><text x="69.0972%" y="879.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.04%)</title><rect x="68.8472%" y="853" width="0.0404%" height="15" fill="rgb(209,88,53)" fg:x="3410" fg:w="2"/><text x="69.0972%" y="863.50"></text></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect x="68.9481%" y="821" width="0.0404%" height="15" fill="rgb(231,185,47)" fg:x="3415" fg:w="2"/><text x="69.1981%" y="831.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="68.9481%" y="805" width="0.0404%" height="15" fill="rgb(233,154,1)" fg:x="3415" fg:w="2"/><text x="69.1981%" y="815.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="68.9885%" y="805" width="0.0202%" height="15" fill="rgb(225,15,46)" fg:x="3417" fg:w="1"/><text x="69.2385%" y="815.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect x="68.9885%" y="821" width="0.0404%" height="15" fill="rgb(211,135,41)" fg:x="3417" fg:w="2"/><text x="69.2385%" y="831.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect x="69.0087%" y="805" width="0.0202%" height="15" fill="rgb(208,54,0)" fg:x="3418" fg:w="1"/><text x="69.2587%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.02%)</title><rect x="69.0693%" y="805" width="0.0202%" height="15" fill="rgb(244,136,14)" fg:x="3421" fg:w="1"/><text x="69.3193%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (21 samples, 0.42%)</title><rect x="68.7260%" y="965" width="0.4240%" height="15" fill="rgb(241,56,14)" fg:x="3404" fg:w="21"/><text x="68.9760%" y="975.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (21 samples, 0.42%)</title><rect x="68.7260%" y="949" width="0.4240%" height="15" fill="rgb(205,80,24)" fg:x="3404" fg:w="21"/><text x="68.9760%" y="959.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (21 samples, 0.42%)</title><rect x="68.7260%" y="933" width="0.4240%" height="15" fill="rgb(220,57,4)" fg:x="3404" fg:w="21"/><text x="68.9760%" y="943.50"></text></g><g><title>serde::de::SeqAccess::next_element (16 samples, 0.32%)</title><rect x="68.8270%" y="917" width="0.3230%" height="15" fill="rgb(226,193,50)" fg:x="3409" fg:w="16"/><text x="69.0770%" y="927.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (16 samples, 0.32%)</title><rect x="68.8270%" y="901" width="0.3230%" height="15" fill="rgb(231,168,22)" fg:x="3409" fg:w="16"/><text x="69.0770%" y="911.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (13 samples, 0.26%)</title><rect x="68.8875%" y="885" width="0.2625%" height="15" fill="rgb(254,215,14)" fg:x="3412" fg:w="13"/><text x="69.1375%" y="895.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (10 samples, 0.20%)</title><rect x="68.9481%" y="869" width="0.2019%" height="15" fill="rgb(211,115,16)" fg:x="3415" fg:w="10"/><text x="69.1981%" y="879.50"></text></g><g><title>?? (10 samples, 0.20%)</title><rect x="68.9481%" y="853" width="0.2019%" height="15" fill="rgb(236,210,16)" fg:x="3415" fg:w="10"/><text x="69.1981%" y="863.50"></text></g><g><title>?? (10 samples, 0.20%)</title><rect x="68.9481%" y="837" width="0.2019%" height="15" fill="rgb(221,94,12)" fg:x="3415" fg:w="10"/><text x="69.1981%" y="847.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (6 samples, 0.12%)</title><rect x="69.0289%" y="821" width="0.1211%" height="15" fill="rgb(235,218,49)" fg:x="3419" fg:w="6"/><text x="69.2789%" y="831.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (3 samples, 0.06%)</title><rect x="69.0894%" y="805" width="0.0606%" height="15" fill="rgb(217,114,14)" fg:x="3422" fg:w="3"/><text x="69.3394%" y="815.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_none (1 samples, 0.02%)</title><rect x="69.1500%" y="933" width="0.0202%" height="15" fill="rgb(216,145,22)" fg:x="3425" fg:w="1"/><text x="69.4000%" y="943.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (2 samples, 0.04%)</title><rect x="69.1500%" y="965" width="0.0404%" height="15" fill="rgb(217,112,39)" fg:x="3425" fg:w="2"/><text x="69.4000%" y="975.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 0.04%)</title><rect x="69.1500%" y="949" width="0.0404%" height="15" fill="rgb(225,85,32)" fg:x="3425" fg:w="2"/><text x="69.4000%" y="959.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.02%)</title><rect x="69.1702%" y="933" width="0.0202%" height="15" fill="rgb(245,209,47)" fg:x="3426" fg:w="1"/><text x="69.4202%" y="943.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="69.1702%" y="917" width="0.0202%" height="15" fill="rgb(218,220,15)" fg:x="3426" fg:w="1"/><text x="69.4202%" y="927.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect x="69.1702%" y="901" width="0.0202%" height="15" fill="rgb(222,202,31)" fg:x="3426" fg:w="1"/><text x="69.4202%" y="911.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.02%)</title><rect x="69.1702%" y="885" width="0.0202%" height="15" fill="rgb(243,203,4)" fg:x="3426" fg:w="1"/><text x="69.4202%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="69.1702%" y="869" width="0.0202%" height="15" fill="rgb(237,92,17)" fg:x="3426" fg:w="1"/><text x="69.4202%" y="879.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (29 samples, 0.59%)</title><rect x="68.6251%" y="1013" width="0.5855%" height="15" fill="rgb(231,119,7)" fg:x="3399" fg:w="29"/><text x="68.8751%" y="1023.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (29 samples, 0.59%)</title><rect x="68.6251%" y="997" width="0.5855%" height="15" fill="rgb(237,82,41)" fg:x="3399" fg:w="29"/><text x="68.8751%" y="1007.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (29 samples, 0.59%)</title><rect x="68.6251%" y="981" width="0.5855%" height="15" fill="rgb(226,81,48)" fg:x="3399" fg:w="29"/><text x="68.8751%" y="991.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="69.1904%" y="965" width="0.0202%" height="15" fill="rgb(234,70,51)" fg:x="3427" fg:w="1"/><text x="69.4404%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="69.3115%" y="885" width="0.0202%" height="15" fill="rgb(251,86,4)" fg:x="3433" fg:w="1"/><text x="69.5615%" y="895.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="69.3317%" y="869" width="0.0202%" height="15" fill="rgb(244,144,28)" fg:x="3434" fg:w="1"/><text x="69.5817%" y="879.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="69.3519%" y="869" width="0.0202%" height="15" fill="rgb(232,161,39)" fg:x="3435" fg:w="1"/><text x="69.6019%" y="879.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.18%)</title><rect x="69.2106%" y="981" width="0.1817%" height="15" fill="rgb(247,34,51)" fg:x="3428" fg:w="9"/><text x="69.4606%" y="991.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (4 samples, 0.08%)</title><rect x="69.3115%" y="965" width="0.0808%" height="15" fill="rgb(225,132,2)" fg:x="3433" fg:w="4"/><text x="69.5615%" y="975.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (4 samples, 0.08%)</title><rect x="69.3115%" y="949" width="0.0808%" height="15" fill="rgb(209,159,44)" fg:x="3433" fg:w="4"/><text x="69.5615%" y="959.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.08%)</title><rect x="69.3115%" y="933" width="0.0808%" height="15" fill="rgb(251,214,1)" fg:x="3433" fg:w="4"/><text x="69.5615%" y="943.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="69.3115%" y="917" width="0.0808%" height="15" fill="rgb(247,84,47)" fg:x="3433" fg:w="4"/><text x="69.5615%" y="927.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="69.3115%" y="901" width="0.0808%" height="15" fill="rgb(240,111,43)" fg:x="3433" fg:w="4"/><text x="69.5615%" y="911.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="69.3317%" y="885" width="0.0606%" height="15" fill="rgb(215,214,35)" fg:x="3434" fg:w="3"/><text x="69.5817%" y="895.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.3721%" y="869" width="0.0202%" height="15" fill="rgb(248,207,23)" fg:x="3436" fg:w="1"/><text x="69.6221%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="69.3721%" y="853" width="0.0202%" height="15" fill="rgb(214,186,4)" fg:x="3436" fg:w="1"/><text x="69.6221%" y="863.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="69.3923%" y="965" width="0.0202%" height="15" fill="rgb(220,133,22)" fg:x="3437" fg:w="1"/><text x="69.6423%" y="975.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (4 samples, 0.08%)</title><rect x="69.4125%" y="949" width="0.0808%" height="15" fill="rgb(239,134,19)" fg:x="3438" fg:w="4"/><text x="69.6625%" y="959.50"></text></g><g><title>sonic_rs::reader::Reader::next (6 samples, 0.12%)</title><rect x="69.4125%" y="965" width="0.1211%" height="15" fill="rgb(250,140,9)" fg:x="3438" fg:w="6"/><text x="69.6625%" y="975.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="69.4932%" y="949" width="0.0404%" height="15" fill="rgb(225,59,14)" fg:x="3442" fg:w="2"/><text x="69.7432%" y="959.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect x="69.4932%" y="933" width="0.0404%" height="15" fill="rgb(214,152,51)" fg:x="3442" fg:w="2"/><text x="69.7432%" y="943.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="69.4932%" y="917" width="0.0404%" height="15" fill="rgb(251,227,43)" fg:x="3442" fg:w="2"/><text x="69.7432%" y="927.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize (47 samples, 0.95%)</title><rect x="68.6049%" y="1061" width="0.9489%" height="15" fill="rgb(241,96,17)" fg:x="3398" fg:w="47"/><text x="68.8549%" y="1071.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (47 samples, 0.95%)</title><rect x="68.6049%" y="1045" width="0.9489%" height="15" fill="rgb(234,198,43)" fg:x="3398" fg:w="47"/><text x="68.8549%" y="1055.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (47 samples, 0.95%)</title><rect x="68.6049%" y="1029" width="0.9489%" height="15" fill="rgb(220,108,29)" fg:x="3398" fg:w="47"/><text x="68.8549%" y="1039.50"></text></g><g><title>serde::de::MapAccess::next_key (17 samples, 0.34%)</title><rect x="69.2106%" y="1013" width="0.3432%" height="15" fill="rgb(226,163,33)" fg:x="3428" fg:w="17"/><text x="69.4606%" y="1023.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (17 samples, 0.34%)</title><rect x="69.2106%" y="997" width="0.3432%" height="15" fill="rgb(205,194,45)" fg:x="3428" fg:w="17"/><text x="69.4606%" y="1007.50"></text></g><g><title>?? (8 samples, 0.16%)</title><rect x="69.3923%" y="981" width="0.1615%" height="15" fill="rgb(206,143,44)" fg:x="3437" fg:w="8"/><text x="69.6423%" y="991.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect x="69.5336%" y="965" width="0.0202%" height="15" fill="rgb(236,136,36)" fg:x="3444" fg:w="1"/><text x="69.7836%" y="975.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="69.5336%" y="949" width="0.0202%" height="15" fill="rgb(249,172,42)" fg:x="3444" fg:w="1"/><text x="69.7836%" y="959.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.5740%" y="1013" width="0.0202%" height="15" fill="rgb(216,139,23)" fg:x="3446" fg:w="1"/><text x="69.8240%" y="1023.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.5740%" y="997" width="0.0202%" height="15" fill="rgb(207,166,20)" fg:x="3446" fg:w="1"/><text x="69.8240%" y="1007.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.5740%" y="981" width="0.0202%" height="15" fill="rgb(210,209,22)" fg:x="3446" fg:w="1"/><text x="69.8240%" y="991.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="69.5740%" y="965" width="0.0202%" height="15" fill="rgb(232,118,20)" fg:x="3446" fg:w="1"/><text x="69.8240%" y="975.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect x="69.5740%" y="949" width="0.0202%" height="15" fill="rgb(238,113,42)" fg:x="3446" fg:w="1"/><text x="69.8240%" y="959.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect x="69.5740%" y="933" width="0.0202%" height="15" fill="rgb(231,42,5)" fg:x="3446" fg:w="1"/><text x="69.8240%" y="943.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="69.5740%" y="917" width="0.0202%" height="15" fill="rgb(243,166,24)" fg:x="3446" fg:w="1"/><text x="69.8240%" y="927.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="69.5740%" y="901" width="0.0202%" height="15" fill="rgb(237,226,12)" fg:x="3446" fg:w="1"/><text x="69.8240%" y="911.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_entry (56 samples, 1.13%)</title><rect x="68.4837%" y="1125" width="1.1306%" height="15" fill="rgb(229,133,24)" fg:x="3392" fg:w="56"/><text x="68.7337%" y="1135.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (56 samples, 1.13%)</title><rect x="68.4837%" y="1109" width="1.1306%" height="15" fill="rgb(238,33,43)" fg:x="3392" fg:w="56"/><text x="68.7337%" y="1119.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (50 samples, 1.01%)</title><rect x="68.6049%" y="1093" width="1.0095%" height="15" fill="rgb(227,59,38)" fg:x="3398" fg:w="50"/><text x="68.8549%" y="1103.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (50 samples, 1.01%)</title><rect x="68.6049%" y="1077" width="1.0095%" height="15" fill="rgb(230,97,0)" fg:x="3398" fg:w="50"/><text x="68.8549%" y="1087.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (3 samples, 0.06%)</title><rect x="69.5538%" y="1061" width="0.0606%" height="15" fill="rgb(250,173,50)" fg:x="3445" fg:w="3"/><text x="69.8038%" y="1071.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.04%)</title><rect x="69.5740%" y="1045" width="0.0404%" height="15" fill="rgb(240,15,50)" fg:x="3446" fg:w="2"/><text x="69.8240%" y="1055.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (2 samples, 0.04%)</title><rect x="69.5740%" y="1029" width="0.0404%" height="15" fill="rgb(221,93,22)" fg:x="3446" fg:w="2"/><text x="69.8240%" y="1039.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect x="69.5942%" y="1013" width="0.0202%" height="15" fill="rgb(245,180,53)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="1023.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="69.5942%" y="997" width="0.0202%" height="15" fill="rgb(231,88,51)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect x="69.5942%" y="981" width="0.0202%" height="15" fill="rgb(240,58,21)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect x="69.5942%" y="965" width="0.0202%" height="15" fill="rgb(237,21,10)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect x="69.5942%" y="949" width="0.0202%" height="15" fill="rgb(218,43,11)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="69.5942%" y="933" width="0.0202%" height="15" fill="rgb(218,221,29)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="69.5942%" y="917" width="0.0202%" height="15" fill="rgb(214,118,42)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="69.5942%" y="901" width="0.0202%" height="15" fill="rgb(251,200,26)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="911.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.5942%" y="885" width="0.0202%" height="15" fill="rgb(237,101,39)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="895.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.5942%" y="869" width="0.0202%" height="15" fill="rgb(251,117,11)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="879.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.5942%" y="853" width="0.0202%" height="15" fill="rgb(216,223,23)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="69.5942%" y="837" width="0.0202%" height="15" fill="rgb(251,54,12)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="847.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.5942%" y="821" width="0.0202%" height="15" fill="rgb(254,176,54)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="69.5942%" y="805" width="0.0202%" height="15" fill="rgb(210,32,8)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="815.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="69.5942%" y="789" width="0.0202%" height="15" fill="rgb(235,52,38)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="799.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="69.5942%" y="773" width="0.0202%" height="15" fill="rgb(231,4,44)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="783.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="69.5942%" y="757" width="0.0202%" height="15" fill="rgb(249,2,32)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="767.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="69.5942%" y="741" width="0.0202%" height="15" fill="rgb(224,65,26)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="751.50"></text></g><g><title>sz_size2index_usize_fastpath (1 samples, 0.02%)</title><rect x="69.5942%" y="725" width="0.0202%" height="15" fill="rgb(250,73,40)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="735.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect x="69.5942%" y="709" width="0.0202%" height="15" fill="rgb(253,177,16)" fg:x="3447" fg:w="1"/><text x="69.8442%" y="719.50"></text></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="69.6144%" y="1045" width="0.0202%" height="15" fill="rgb(217,32,34)" fg:x="3448" fg:w="1"/><text x="69.8644%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.02%)</title><rect x="69.6144%" y="1029" width="0.0202%" height="15" fill="rgb(212,7,10)" fg:x="3448" fg:w="1"/><text x="69.8644%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.02%)</title><rect x="69.6346%" y="1029" width="0.0202%" height="15" fill="rgb(245,89,8)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.02%)</title><rect x="69.6346%" y="1013" width="0.0202%" height="15" fill="rgb(237,16,53)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="69.6346%" y="997" width="0.0202%" height="15" fill="rgb(250,204,30)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="1007.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.6346%" y="981" width="0.0202%" height="15" fill="rgb(208,77,27)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="991.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="69.6346%" y="965" width="0.0202%" height="15" fill="rgb(250,204,28)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="975.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="69.6346%" y="949" width="0.0202%" height="15" fill="rgb(244,63,21)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="959.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="69.6346%" y="933" width="0.0202%" height="15" fill="rgb(236,85,44)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="943.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="69.6346%" y="917" width="0.0202%" height="15" fill="rgb(215,98,4)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="927.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="69.6346%" y="901" width="0.0202%" height="15" fill="rgb(235,38,11)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="911.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="69.6346%" y="885" width="0.0202%" height="15" fill="rgb(254,186,25)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="895.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="69.6346%" y="869" width="0.0202%" height="15" fill="rgb(225,55,31)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="879.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="69.6346%" y="853" width="0.0202%" height="15" fill="rgb(211,15,21)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="863.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="69.6346%" y="837" width="0.0202%" height="15" fill="rgb(215,187,41)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="847.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="69.6346%" y="821" width="0.0202%" height="15" fill="rgb(248,69,32)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="831.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="69.6346%" y="805" width="0.0202%" height="15" fill="rgb(252,102,52)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="815.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="69.6346%" y="789" width="0.0202%" height="15" fill="rgb(253,140,32)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="799.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="69.6346%" y="773" width="0.0202%" height="15" fill="rgb(216,56,42)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="783.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="69.6346%" y="757" width="0.0202%" height="15" fill="rgb(216,184,14)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="767.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="69.6346%" y="741" width="0.0202%" height="15" fill="rgb(237,187,27)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="751.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="69.6346%" y="725" width="0.0202%" height="15" fill="rgb(219,65,3)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="735.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="69.6346%" y="709" width="0.0202%" height="15" fill="rgb(245,83,25)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="719.50"></text></g><g><title>pac_may_have_muzzy (1 samples, 0.02%)</title><rect x="69.6346%" y="693" width="0.0202%" height="15" fill="rgb(214,205,45)" fg:x="3449" fg:w="1"/><text x="69.8846%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="69.6548%" y="1029" width="0.0202%" height="15" fill="rgb(241,20,18)" fg:x="3450" fg:w="1"/><text x="69.9048%" y="1039.50"></text></g><g><title>?? (6 samples, 0.12%)</title><rect x="69.6144%" y="1061" width="0.1211%" height="15" fill="rgb(232,163,23)" fg:x="3448" fg:w="6"/><text x="69.8644%" y="1071.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="69.6346%" y="1045" width="0.1009%" height="15" fill="rgb(214,5,46)" fg:x="3449" fg:w="5"/><text x="69.8846%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (3 samples, 0.06%)</title><rect x="69.6749%" y="1029" width="0.0606%" height="15" fill="rgb(229,78,17)" fg:x="3451" fg:w="3"/><text x="69.9249%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="69.6951%" y="1013" width="0.0404%" height="15" fill="rgb(248,89,10)" fg:x="3452" fg:w="2"/><text x="69.9451%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="69.6951%" y="997" width="0.0404%" height="15" fill="rgb(248,54,15)" fg:x="3452" fg:w="2"/><text x="69.9451%" y="1007.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="69.6144%" y="1077" width="0.1413%" height="15" fill="rgb(223,116,6)" fg:x="3448" fg:w="7"/><text x="69.8644%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::splitpoint (1 samples, 0.02%)</title><rect x="69.7355%" y="1061" width="0.0202%" height="15" fill="rgb(205,125,38)" fg:x="3454" fg:w="1"/><text x="69.9855%" y="1071.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.7557%" y="1061" width="0.0202%" height="15" fill="rgb(251,78,38)" fg:x="3455" fg:w="1"/><text x="70.0057%" y="1071.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (1 samples, 0.02%)</title><rect x="69.7557%" y="1045" width="0.0202%" height="15" fill="rgb(253,78,28)" fg:x="3455" fg:w="1"/><text x="70.0057%" y="1055.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="69.7557%" y="1029" width="0.0202%" height="15" fill="rgb(209,120,3)" fg:x="3455" fg:w="1"/><text x="70.0057%" y="1039.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::_{{closure}} (1 samples, 0.02%)</title><rect x="69.7557%" y="1013" width="0.0202%" height="15" fill="rgb(238,229,9)" fg:x="3455" fg:w="1"/><text x="70.0057%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::_{{closure}} (1 samples, 0.02%)</title><rect x="69.7557%" y="997" width="0.0202%" height="15" fill="rgb(253,159,18)" fg:x="3455" fg:w="1"/><text x="70.0057%" y="1007.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.7557%" y="981" width="0.0202%" height="15" fill="rgb(244,42,34)" fg:x="3455" fg:w="1"/><text x="70.0057%" y="991.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.7557%" y="965" width="0.0202%" height="15" fill="rgb(224,8,7)" fg:x="3455" fg:w="1"/><text x="70.0057%" y="975.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.7557%" y="949" width="0.0202%" height="15" fill="rgb(210,201,45)" fg:x="3455" fg:w="1"/><text x="70.0057%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="69.7557%" y="933" width="0.0202%" height="15" fill="rgb(252,185,21)" fg:x="3455" fg:w="1"/><text x="70.0057%" y="943.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="69.7557%" y="917" width="0.0202%" height="15" fill="rgb(223,131,1)" fg:x="3455" fg:w="1"/><text x="70.0057%" y="927.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (67 samples, 1.35%)</title><rect x="68.4434%" y="1173" width="1.3527%" height="15" fill="rgb(245,141,16)" fg:x="3390" fg:w="67"/><text x="68.6934%" y="1183.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (67 samples, 1.35%)</title><rect x="68.4434%" y="1157" width="1.3527%" height="15" fill="rgb(229,55,45)" fg:x="3390" fg:w="67"/><text x="68.6934%" y="1167.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (66 samples, 1.33%)</title><rect x="68.4636%" y="1141" width="1.3325%" height="15" fill="rgb(208,92,15)" fg:x="3391" fg:w="66"/><text x="68.7136%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.18%)</title><rect x="69.6144%" y="1125" width="0.1817%" height="15" fill="rgb(234,185,47)" fg:x="3448" fg:w="9"/><text x="69.8644%" y="1135.50"></text></g><g><title>?? (9 samples, 0.18%)</title><rect x="69.6144%" y="1109" width="0.1817%" height="15" fill="rgb(253,104,50)" fg:x="3448" fg:w="9"/><text x="69.8644%" y="1119.50"></text></g><g><title>?? (9 samples, 0.18%)</title><rect x="69.6144%" y="1093" width="0.1817%" height="15" fill="rgb(205,70,7)" fg:x="3448" fg:w="9"/><text x="69.8644%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert::_{{closure}} (2 samples, 0.04%)</title><rect x="69.7557%" y="1077" width="0.0404%" height="15" fill="rgb(240,178,43)" fg:x="3455" fg:w="2"/><text x="70.0057%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="69.7759%" y="1061" width="0.0202%" height="15" fill="rgb(214,112,2)" fg:x="3456" fg:w="1"/><text x="70.0259%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="69.7961%" y="933" width="0.0404%" height="15" fill="rgb(206,46,17)" fg:x="3457" fg:w="2"/><text x="70.0461%" y="943.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.02%)</title><rect x="69.8365%" y="885" width="0.0202%" height="15" fill="rgb(225,220,16)" fg:x="3459" fg:w="1"/><text x="70.0865%" y="895.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.02%)</title><rect x="69.8365%" y="869" width="0.0202%" height="15" fill="rgb(238,65,40)" fg:x="3459" fg:w="1"/><text x="70.0865%" y="879.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="69.8365%" y="853" width="0.0202%" height="15" fill="rgb(230,151,21)" fg:x="3459" fg:w="1"/><text x="70.0865%" y="863.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="69.8365%" y="837" width="0.0202%" height="15" fill="rgb(218,58,49)" fg:x="3459" fg:w="1"/><text x="70.0865%" y="847.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="69.8365%" y="821" width="0.0202%" height="15" fill="rgb(219,179,14)" fg:x="3459" fg:w="1"/><text x="70.0865%" y="831.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="69.8365%" y="805" width="0.0202%" height="15" fill="rgb(223,72,1)" fg:x="3459" fg:w="1"/><text x="70.0865%" y="815.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="69.7961%" y="1125" width="0.0808%" height="15" fill="rgb(238,126,10)" fg:x="3457" fg:w="4"/><text x="70.0461%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect x="69.7961%" y="1109" width="0.0808%" height="15" fill="rgb(224,206,38)" fg:x="3457" fg:w="4"/><text x="70.0461%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect x="69.7961%" y="1093" width="0.0808%" height="15" fill="rgb(212,201,54)" fg:x="3457" fg:w="4"/><text x="70.0461%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.08%)</title><rect x="69.7961%" y="1077" width="0.0808%" height="15" fill="rgb(218,154,48)" fg:x="3457" fg:w="4"/><text x="70.0461%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.08%)</title><rect x="69.7961%" y="1061" width="0.0808%" height="15" fill="rgb(232,93,24)" fg:x="3457" fg:w="4"/><text x="70.0461%" y="1071.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="69.7961%" y="1045" width="0.0808%" height="15" fill="rgb(245,30,21)" fg:x="3457" fg:w="4"/><text x="70.0461%" y="1055.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.08%)</title><rect x="69.7961%" y="1029" width="0.0808%" height="15" fill="rgb(242,148,29)" fg:x="3457" fg:w="4"/><text x="70.0461%" y="1039.50"></text></g><g><title>__rust_realloc (4 samples, 0.08%)</title><rect x="69.7961%" y="1013" width="0.0808%" height="15" fill="rgb(244,153,54)" fg:x="3457" fg:w="4"/><text x="70.0461%" y="1023.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (4 samples, 0.08%)</title><rect x="69.7961%" y="997" width="0.0808%" height="15" fill="rgb(252,87,22)" fg:x="3457" fg:w="4"/><text x="70.0461%" y="1007.50"></text></g><g><title>do_rallocx (4 samples, 0.08%)</title><rect x="69.7961%" y="981" width="0.0808%" height="15" fill="rgb(210,51,29)" fg:x="3457" fg:w="4"/><text x="70.0461%" y="991.50"></text></g><g><title>iralloct (4 samples, 0.08%)</title><rect x="69.7961%" y="965" width="0.0808%" height="15" fill="rgb(242,136,47)" fg:x="3457" fg:w="4"/><text x="70.0461%" y="975.50"></text></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.08%)</title><rect x="69.7961%" y="949" width="0.0808%" height="15" fill="rgb(238,68,4)" fg:x="3457" fg:w="4"/><text x="70.0461%" y="959.50"></text></g><g><title>arena_ralloc_move_helper (2 samples, 0.04%)</title><rect x="69.8365%" y="933" width="0.0404%" height="15" fill="rgb(242,161,30)" fg:x="3459" fg:w="2"/><text x="70.0865%" y="943.50"></text></g><g><title>arena_malloc (2 samples, 0.04%)</title><rect x="69.8365%" y="917" width="0.0404%" height="15" fill="rgb(218,58,44)" fg:x="3459" fg:w="2"/><text x="70.0865%" y="927.50"></text></g><g><title>tcache_alloc_large (2 samples, 0.04%)</title><rect x="69.8365%" y="901" width="0.0404%" height="15" fill="rgb(252,125,32)" fg:x="3459" fg:w="2"/><text x="70.0865%" y="911.50"></text></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect x="69.8567%" y="885" width="0.0202%" height="15" fill="rgb(219,178,0)" fg:x="3460" fg:w="1"/><text x="70.1067%" y="895.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="69.8567%" y="869" width="0.0202%" height="15" fill="rgb(213,152,7)" fg:x="3460" fg:w="1"/><text x="70.1067%" y="879.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="69.9172%" y="1029" width="0.0202%" height="15" fill="rgb(249,109,34)" fg:x="3463" fg:w="1"/><text x="70.1672%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="69.9374%" y="1029" width="0.0202%" height="15" fill="rgb(232,96,21)" fg:x="3464" fg:w="1"/><text x="70.1874%" y="1039.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for ()&gt;::deserialize (1 samples, 0.02%)</title><rect x="69.9980%" y="981" width="0.0202%" height="15" fill="rgb(228,27,39)" fg:x="3467" fg:w="1"/><text x="70.2480%" y="991.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_unit (1 samples, 0.02%)</title><rect x="69.9980%" y="965" width="0.0202%" height="15" fill="rgb(211,182,52)" fg:x="3467" fg:w="1"/><text x="70.2480%" y="975.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="69.9980%" y="949" width="0.0202%" height="15" fill="rgb(234,178,38)" fg:x="3467" fg:w="1"/><text x="70.2480%" y="959.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::next_n (1 samples, 0.02%)</title><rect x="69.9980%" y="933" width="0.0202%" height="15" fill="rgb(221,111,3)" fg:x="3467" fg:w="1"/><text x="70.2480%" y="943.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="70.0182%" y="933" width="0.0202%" height="15" fill="rgb(228,175,21)" fg:x="3468" fg:w="1"/><text x="70.2682%" y="943.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="70.0182%" y="917" width="0.0202%" height="15" fill="rgb(228,174,43)" fg:x="3468" fg:w="1"/><text x="70.2682%" y="927.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="70.0182%" y="901" width="0.0202%" height="15" fill="rgb(211,191,0)" fg:x="3468" fg:w="1"/><text x="70.2682%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="70.0182%" y="885" width="0.0202%" height="15" fill="rgb(253,117,3)" fg:x="3468" fg:w="1"/><text x="70.2682%" y="895.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (2 samples, 0.04%)</title><rect x="70.0384%" y="933" width="0.0404%" height="15" fill="rgb(241,127,19)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="943.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.04%)</title><rect x="70.0384%" y="917" width="0.0404%" height="15" fill="rgb(218,103,12)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="927.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.04%)</title><rect x="70.0384%" y="901" width="0.0404%" height="15" fill="rgb(236,214,43)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.04%)</title><rect x="70.0384%" y="885" width="0.0404%" height="15" fill="rgb(244,144,19)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.04%)</title><rect x="70.0384%" y="869" width="0.0404%" height="15" fill="rgb(246,188,10)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect x="70.0384%" y="853" width="0.0404%" height="15" fill="rgb(212,193,33)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect x="70.0384%" y="837" width="0.0404%" height="15" fill="rgb(241,51,29)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="70.0384%" y="821" width="0.0404%" height="15" fill="rgb(211,58,19)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="831.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="70.0384%" y="805" width="0.0404%" height="15" fill="rgb(229,111,26)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="815.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="70.0384%" y="789" width="0.0404%" height="15" fill="rgb(213,115,40)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="799.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="70.0384%" y="773" width="0.0404%" height="15" fill="rgb(209,56,44)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="70.0384%" y="757" width="0.0404%" height="15" fill="rgb(230,108,32)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="767.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="70.0384%" y="741" width="0.0404%" height="15" fill="rgb(216,165,31)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="751.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="70.0384%" y="725" width="0.0404%" height="15" fill="rgb(218,122,21)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="735.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="70.0384%" y="709" width="0.0404%" height="15" fill="rgb(223,224,47)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="719.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.04%)</title><rect x="70.0384%" y="693" width="0.0404%" height="15" fill="rgb(238,102,44)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="703.50"></text></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect x="70.0384%" y="677" width="0.0404%" height="15" fill="rgb(236,46,40)" fg:x="3469" fg:w="2"/><text x="70.2884%" y="687.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="70.0586%" y="661" width="0.0202%" height="15" fill="rgb(247,202,50)" fg:x="3470" fg:w="1"/><text x="70.3086%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (4 samples, 0.08%)</title><rect x="70.0182%" y="981" width="0.0808%" height="15" fill="rgb(209,99,20)" fg:x="3468" fg:w="4"/><text x="70.2682%" y="991.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (4 samples, 0.08%)</title><rect x="70.0182%" y="965" width="0.0808%" height="15" fill="rgb(252,27,34)" fg:x="3468" fg:w="4"/><text x="70.2682%" y="975.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.08%)</title><rect x="70.0182%" y="949" width="0.0808%" height="15" fill="rgb(215,206,23)" fg:x="3468" fg:w="4"/><text x="70.2682%" y="959.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="70.0787%" y="933" width="0.0202%" height="15" fill="rgb(212,135,36)" fg:x="3471" fg:w="1"/><text x="70.3287%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="70.1797%" y="885" width="0.0202%" height="15" fill="rgb(240,189,1)" fg:x="3476" fg:w="1"/><text x="70.4297%" y="895.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="70.1797%" y="901" width="0.0404%" height="15" fill="rgb(242,56,20)" fg:x="3476" fg:w="2"/><text x="70.4297%" y="911.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="70.1999%" y="885" width="0.0202%" height="15" fill="rgb(247,132,33)" fg:x="3477" fg:w="1"/><text x="70.4499%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="70.1999%" y="869" width="0.0202%" height="15" fill="rgb(208,149,11)" fg:x="3477" fg:w="1"/><text x="70.4499%" y="879.50"></text></g><g><title>emap_alloc_ctx_lookup (1 samples, 0.02%)</title><rect x="70.2403%" y="773" width="0.0202%" height="15" fill="rgb(211,33,11)" fg:x="3479" fg:w="1"/><text x="70.4903%" y="783.50"></text></g><g><title>rtree_metadata_read (1 samples, 0.02%)</title><rect x="70.2403%" y="757" width="0.0202%" height="15" fill="rgb(221,29,38)" fg:x="3479" fg:w="1"/><text x="70.4903%" y="767.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="70.2403%" y="741" width="0.0202%" height="15" fill="rgb(206,182,49)" fg:x="3479" fg:w="1"/><text x="70.4903%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="70.2604%" y="741" width="0.0202%" height="15" fill="rgb(216,140,1)" fg:x="3480" fg:w="1"/><text x="70.5104%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.14%)</title><rect x="70.1595%" y="933" width="0.1413%" height="15" fill="rgb(232,57,40)" fg:x="3475" fg:w="7"/><text x="70.4095%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.12%)</title><rect x="70.1797%" y="917" width="0.1211%" height="15" fill="rgb(224,186,18)" fg:x="3476" fg:w="6"/><text x="70.4297%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect x="70.2201%" y="901" width="0.0808%" height="15" fill="rgb(215,121,11)" fg:x="3478" fg:w="4"/><text x="70.4701%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.06%)</title><rect x="70.2403%" y="885" width="0.0606%" height="15" fill="rgb(245,147,10)" fg:x="3479" fg:w="3"/><text x="70.4903%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.06%)</title><rect x="70.2403%" y="869" width="0.0606%" height="15" fill="rgb(238,153,13)" fg:x="3479" fg:w="3"/><text x="70.4903%" y="879.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="70.2403%" y="853" width="0.0606%" height="15" fill="rgb(233,108,0)" fg:x="3479" fg:w="3"/><text x="70.4903%" y="863.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.06%)</title><rect x="70.2403%" y="837" width="0.0606%" height="15" fill="rgb(212,157,17)" fg:x="3479" fg:w="3"/><text x="70.4903%" y="847.50"></text></g><g><title>__rust_realloc (3 samples, 0.06%)</title><rect x="70.2403%" y="821" width="0.0606%" height="15" fill="rgb(225,213,38)" fg:x="3479" fg:w="3"/><text x="70.4903%" y="831.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (3 samples, 0.06%)</title><rect x="70.2403%" y="805" width="0.0606%" height="15" fill="rgb(248,16,11)" fg:x="3479" fg:w="3"/><text x="70.4903%" y="815.50"></text></g><g><title>do_rallocx (3 samples, 0.06%)</title><rect x="70.2403%" y="789" width="0.0606%" height="15" fill="rgb(241,33,4)" fg:x="3479" fg:w="3"/><text x="70.4903%" y="799.50"></text></g><g><title>iralloct (2 samples, 0.04%)</title><rect x="70.2604%" y="773" width="0.0404%" height="15" fill="rgb(222,26,43)" fg:x="3480" fg:w="2"/><text x="70.5104%" y="783.50"></text></g><g><title>_rjem_je_arena_ralloc (2 samples, 0.04%)</title><rect x="70.2604%" y="757" width="0.0404%" height="15" fill="rgb(243,29,36)" fg:x="3480" fg:w="2"/><text x="70.5104%" y="767.50"></text></g><g><title>arena_ralloc_move_helper (1 samples, 0.02%)</title><rect x="70.2806%" y="741" width="0.0202%" height="15" fill="rgb(241,9,27)" fg:x="3481" fg:w="1"/><text x="70.5306%" y="751.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="70.2806%" y="725" width="0.0202%" height="15" fill="rgb(205,117,26)" fg:x="3481" fg:w="1"/><text x="70.5306%" y="735.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="70.2806%" y="709" width="0.0202%" height="15" fill="rgb(209,80,39)" fg:x="3481" fg:w="1"/><text x="70.5306%" y="719.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="70.2806%" y="693" width="0.0202%" height="15" fill="rgb(239,155,6)" fg:x="3481" fg:w="1"/><text x="70.5306%" y="703.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="70.2806%" y="677" width="0.0202%" height="15" fill="rgb(212,104,12)" fg:x="3481" fg:w="1"/><text x="70.5306%" y="687.50"></text></g><g><title>arena_slab_reg_alloc_batch (1 samples, 0.02%)</title><rect x="70.2806%" y="661" width="0.0202%" height="15" fill="rgb(234,204,3)" fg:x="3481" fg:w="1"/><text x="70.5306%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="70.3008%" y="917" width="0.0202%" height="15" fill="rgb(251,218,7)" fg:x="3482" fg:w="1"/><text x="70.5508%" y="927.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="70.3008%" y="933" width="0.0606%" height="15" fill="rgb(221,81,32)" fg:x="3482" fg:w="3"/><text x="70.5508%" y="943.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="70.3210%" y="917" width="0.0404%" height="15" fill="rgb(214,152,26)" fg:x="3483" fg:w="2"/><text x="70.5710%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="70.5431%" y="853" width="0.0202%" height="15" fill="rgb(223,22,3)" fg:x="3494" fg:w="1"/><text x="70.7931%" y="863.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="70.6844%" y="725" width="0.0202%" height="15" fill="rgb(207,174,7)" fg:x="3501" fg:w="1"/><text x="70.9344%" y="735.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="70.6844%" y="709" width="0.0202%" height="15" fill="rgb(224,19,52)" fg:x="3501" fg:w="1"/><text x="70.9344%" y="719.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.02%)</title><rect x="70.7652%" y="709" width="0.0202%" height="15" fill="rgb(228,24,14)" fg:x="3505" fg:w="1"/><text x="71.0152%" y="719.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="70.7652%" y="693" width="0.0202%" height="15" fill="rgb(230,153,43)" fg:x="3505" fg:w="1"/><text x="71.0152%" y="703.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (11 samples, 0.22%)</title><rect x="70.6037%" y="837" width="0.2221%" height="15" fill="rgb(231,106,12)" fg:x="3497" fg:w="11"/><text x="70.8537%" y="847.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11 samples, 0.22%)</title><rect x="70.6037%" y="821" width="0.2221%" height="15" fill="rgb(215,92,2)" fg:x="3497" fg:w="11"/><text x="70.8537%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.22%)</title><rect x="70.6037%" y="805" width="0.2221%" height="15" fill="rgb(249,143,25)" fg:x="3497" fg:w="11"/><text x="70.8537%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (11 samples, 0.22%)</title><rect x="70.6037%" y="789" width="0.2221%" height="15" fill="rgb(252,7,35)" fg:x="3497" fg:w="11"/><text x="70.8537%" y="799.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (7 samples, 0.14%)</title><rect x="70.6844%" y="773" width="0.1413%" height="15" fill="rgb(216,69,40)" fg:x="3501" fg:w="7"/><text x="70.9344%" y="783.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="70.6844%" y="757" width="0.1413%" height="15" fill="rgb(240,36,33)" fg:x="3501" fg:w="7"/><text x="70.9344%" y="767.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="70.6844%" y="741" width="0.1413%" height="15" fill="rgb(231,128,14)" fg:x="3501" fg:w="7"/><text x="70.9344%" y="751.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (6 samples, 0.12%)</title><rect x="70.7046%" y="725" width="0.1211%" height="15" fill="rgb(245,143,14)" fg:x="3502" fg:w="6"/><text x="70.9546%" y="735.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (2 samples, 0.04%)</title><rect x="70.7854%" y="709" width="0.0404%" height="15" fill="rgb(222,130,28)" fg:x="3506" fg:w="2"/><text x="71.0354%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="70.8863%" y="709" width="0.0202%" height="15" fill="rgb(212,10,48)" fg:x="3511" fg:w="1"/><text x="71.1363%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect x="70.9065%" y="693" width="0.0606%" height="15" fill="rgb(254,118,45)" fg:x="3512" fg:w="3"/><text x="71.1565%" y="703.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="70.8863%" y="741" width="0.1009%" height="15" fill="rgb(228,6,45)" fg:x="3511" fg:w="5"/><text x="71.1363%" y="751.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="70.8863%" y="725" width="0.1009%" height="15" fill="rgb(241,18,35)" fg:x="3511" fg:w="5"/><text x="71.1363%" y="735.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="70.9065%" y="709" width="0.0808%" height="15" fill="rgb(227,214,53)" fg:x="3512" fg:w="4"/><text x="71.1565%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="70.9671%" y="693" width="0.0202%" height="15" fill="rgb(224,107,51)" fg:x="3515" fg:w="1"/><text x="71.2171%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.18%)</title><rect x="70.8460%" y="805" width="0.1817%" height="15" fill="rgb(248,60,28)" fg:x="3509" fg:w="9"/><text x="71.0960%" y="815.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (7 samples, 0.14%)</title><rect x="70.8863%" y="789" width="0.1413%" height="15" fill="rgb(249,101,23)" fg:x="3511" fg:w="7"/><text x="71.1363%" y="799.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (7 samples, 0.14%)</title><rect x="70.8863%" y="773" width="0.1413%" height="15" fill="rgb(228,51,19)" fg:x="3511" fg:w="7"/><text x="71.1363%" y="783.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.14%)</title><rect x="70.8863%" y="757" width="0.1413%" height="15" fill="rgb(213,20,6)" fg:x="3511" fg:w="7"/><text x="71.1363%" y="767.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (2 samples, 0.04%)</title><rect x="70.9873%" y="741" width="0.0404%" height="15" fill="rgb(212,124,10)" fg:x="3516" fg:w="2"/><text x="71.2373%" y="751.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.04%)</title><rect x="70.9873%" y="725" width="0.0404%" height="15" fill="rgb(248,3,40)" fg:x="3516" fg:w="2"/><text x="71.2373%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.04%)</title><rect x="70.9873%" y="709" width="0.0404%" height="15" fill="rgb(223,178,23)" fg:x="3516" fg:w="2"/><text x="71.2373%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect x="70.9873%" y="693" width="0.0404%" height="15" fill="rgb(240,132,45)" fg:x="3516" fg:w="2"/><text x="71.2373%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.04%)</title><rect x="70.9873%" y="677" width="0.0404%" height="15" fill="rgb(245,164,36)" fg:x="3516" fg:w="2"/><text x="71.2373%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.04%)</title><rect x="70.9873%" y="661" width="0.0404%" height="15" fill="rgb(231,188,53)" fg:x="3516" fg:w="2"/><text x="71.2373%" y="671.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="71.0277%" y="789" width="0.0202%" height="15" fill="rgb(237,198,39)" fg:x="3518" fg:w="1"/><text x="71.2777%" y="799.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="71.0478%" y="773" width="0.0404%" height="15" fill="rgb(223,120,35)" fg:x="3519" fg:w="2"/><text x="71.2978%" y="783.50"></text></g><g><title>sonic_rs::reader::Reader::next (3 samples, 0.06%)</title><rect x="71.0478%" y="789" width="0.0606%" height="15" fill="rgb(253,107,49)" fg:x="3519" fg:w="3"/><text x="71.2978%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="71.0882%" y="773" width="0.0202%" height="15" fill="rgb(216,44,31)" fg:x="3521" fg:w="1"/><text x="71.3382%" y="783.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="71.0882%" y="757" width="0.0202%" height="15" fill="rgb(253,87,21)" fg:x="3521" fg:w="1"/><text x="71.3382%" y="767.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="71.0882%" y="741" width="0.0202%" height="15" fill="rgb(226,18,2)" fg:x="3521" fg:w="1"/><text x="71.3382%" y="751.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect x="71.1084%" y="773" width="0.0202%" height="15" fill="rgb(216,8,46)" fg:x="3522" fg:w="1"/><text x="71.3584%" y="783.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize (31 samples, 0.63%)</title><rect x="70.5229%" y="885" width="0.6259%" height="15" fill="rgb(226,140,39)" fg:x="3493" fg:w="31"/><text x="70.7729%" y="895.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (31 samples, 0.63%)</title><rect x="70.5229%" y="869" width="0.6259%" height="15" fill="rgb(221,194,54)" fg:x="3493" fg:w="31"/><text x="70.7729%" y="879.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (29 samples, 0.59%)</title><rect x="70.5633%" y="853" width="0.5855%" height="15" fill="rgb(213,92,11)" fg:x="3495" fg:w="29"/><text x="70.8133%" y="863.50"></text></g><g><title>serde::de::MapAccess::next_key (16 samples, 0.32%)</title><rect x="70.8258%" y="837" width="0.3230%" height="15" fill="rgb(229,162,46)" fg:x="3508" fg:w="16"/><text x="71.0758%" y="847.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (16 samples, 0.32%)</title><rect x="70.8258%" y="821" width="0.3230%" height="15" fill="rgb(214,111,36)" fg:x="3508" fg:w="16"/><text x="71.0758%" y="831.50"></text></g><g><title>?? (6 samples, 0.12%)</title><rect x="71.0277%" y="805" width="0.1211%" height="15" fill="rgb(207,6,21)" fg:x="3518" fg:w="6"/><text x="71.2777%" y="815.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect x="71.1084%" y="789" width="0.0404%" height="15" fill="rgb(213,127,38)" fg:x="3522" fg:w="2"/><text x="71.3584%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="71.1286%" y="773" width="0.0202%" height="15" fill="rgb(238,118,32)" fg:x="3523" fg:w="1"/><text x="71.3786%" y="783.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="71.1892%" y="853" width="0.0202%" height="15" fill="rgb(240,139,39)" fg:x="3526" fg:w="1"/><text x="71.4392%" y="863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="71.2699%" y="757" width="0.0404%" height="15" fill="rgb(235,10,37)" fg:x="3530" fg:w="2"/><text x="71.5199%" y="767.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="71.4718%" y="709" width="0.0808%" height="15" fill="rgb(249,171,38)" fg:x="3540" fg:w="4"/><text x="71.7218%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.08%)</title><rect x="71.4718%" y="693" width="0.0808%" height="15" fill="rgb(242,144,32)" fg:x="3540" fg:w="4"/><text x="71.7218%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.08%)</title><rect x="71.4718%" y="677" width="0.0808%" height="15" fill="rgb(217,117,21)" fg:x="3540" fg:w="4"/><text x="71.7218%" y="687.50"></text></g><g><title>_rjem_realloc (2 samples, 0.04%)</title><rect x="71.6535%" y="597" width="0.0404%" height="15" fill="rgb(249,87,1)" fg:x="3549" fg:w="2"/><text x="71.9035%" y="607.50"></text></g><g><title>aligned_usize_get (2 samples, 0.04%)</title><rect x="71.7747%" y="581" width="0.0404%" height="15" fill="rgb(248,196,48)" fg:x="3555" fg:w="2"/><text x="72.0247%" y="591.50"></text></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect x="71.7949%" y="565" width="0.0202%" height="15" fill="rgb(251,206,33)" fg:x="3556" fg:w="1"/><text x="72.0449%" y="575.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect x="71.7949%" y="549" width="0.0202%" height="15" fill="rgb(232,141,28)" fg:x="3556" fg:w="1"/><text x="72.0449%" y="559.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="71.7949%" y="533" width="0.0202%" height="15" fill="rgb(209,167,14)" fg:x="3556" fg:w="1"/><text x="72.0449%" y="543.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="71.7949%" y="517" width="0.0202%" height="15" fill="rgb(225,11,50)" fg:x="3556" fg:w="1"/><text x="72.0449%" y="527.50"></text></g><g><title>rtree_leaf_elm_lookup (3 samples, 0.06%)</title><rect x="71.8151%" y="549" width="0.0606%" height="15" fill="rgb(209,50,20)" fg:x="3557" fg:w="3"/><text x="72.0651%" y="559.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect x="71.8554%" y="533" width="0.0202%" height="15" fill="rgb(212,17,46)" fg:x="3559" fg:w="1"/><text x="72.1054%" y="543.50"></text></g><g><title>rtree_metadata_read (4 samples, 0.08%)</title><rect x="71.8151%" y="565" width="0.0808%" height="15" fill="rgb(216,101,39)" fg:x="3557" fg:w="4"/><text x="72.0651%" y="575.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="71.8756%" y="549" width="0.0202%" height="15" fill="rgb(212,228,48)" fg:x="3560" fg:w="1"/><text x="72.1256%" y="559.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="71.8756%" y="533" width="0.0202%" height="15" fill="rgb(250,6,50)" fg:x="3560" fg:w="1"/><text x="72.1256%" y="543.50"></text></g><g><title>emap_alloc_ctx_lookup (5 samples, 0.10%)</title><rect x="71.8151%" y="581" width="0.1009%" height="15" fill="rgb(250,160,48)" fg:x="3557" fg:w="5"/><text x="72.0651%" y="591.50"></text></g><g><title>tsdn_rtree_ctx (1 samples, 0.02%)</title><rect x="71.8958%" y="565" width="0.0202%" height="15" fill="rgb(244,216,33)" fg:x="3561" fg:w="1"/><text x="72.1458%" y="575.50"></text></g><g><title>tsdn_null (1 samples, 0.02%)</title><rect x="71.8958%" y="549" width="0.0202%" height="15" fill="rgb(207,157,5)" fg:x="3561" fg:w="1"/><text x="72.1458%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.10%)</title><rect x="71.9766%" y="549" width="0.1009%" height="15" fill="rgb(228,199,8)" fg:x="3565" fg:w="5"/><text x="72.2266%" y="559.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (1 samples, 0.02%)</title><rect x="72.1381%" y="517" width="0.0202%" height="15" fill="rgb(227,80,20)" fg:x="3573" fg:w="1"/><text x="72.3881%" y="527.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="72.1583%" y="501" width="0.0202%" height="15" fill="rgb(222,9,33)" fg:x="3574" fg:w="1"/><text x="72.4083%" y="511.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect x="72.1583%" y="485" width="0.0202%" height="15" fill="rgb(239,44,28)" fg:x="3574" fg:w="1"/><text x="72.4083%" y="495.50"></text></g><g><title>emap_edata_lookup (4 samples, 0.08%)</title><rect x="72.1381%" y="533" width="0.0808%" height="15" fill="rgb(249,187,43)" fg:x="3573" fg:w="4"/><text x="72.3881%" y="543.50"></text></g><g><title>rtree_read (3 samples, 0.06%)</title><rect x="72.1583%" y="517" width="0.0606%" height="15" fill="rgb(216,141,28)" fg:x="3574" fg:w="3"/><text x="72.4083%" y="527.50"></text></g><g><title>rtree_leaf_elm_read (2 samples, 0.04%)</title><rect x="72.1785%" y="501" width="0.0404%" height="15" fill="rgb(230,154,53)" fg:x="3575" fg:w="2"/><text x="72.4285%" y="511.50"></text></g><g><title>rtree_leaf_elm_bits_decode (2 samples, 0.04%)</title><rect x="72.1785%" y="485" width="0.0404%" height="15" fill="rgb(227,82,4)" fg:x="3575" fg:w="2"/><text x="72.4285%" y="495.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (8 samples, 0.16%)</title><rect x="72.0775%" y="549" width="0.1615%" height="15" fill="rgb(220,107,16)" fg:x="3570" fg:w="8"/><text x="72.3275%" y="559.50"></text></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect x="72.2189%" y="533" width="0.0202%" height="15" fill="rgb(207,187,2)" fg:x="3577" fg:w="1"/><text x="72.4689%" y="543.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect x="72.2189%" y="517" width="0.0202%" height="15" fill="rgb(210,162,52)" fg:x="3577" fg:w="1"/><text x="72.4689%" y="527.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="72.2189%" y="501" width="0.0202%" height="15" fill="rgb(217,216,49)" fg:x="3577" fg:w="1"/><text x="72.4689%" y="511.50"></text></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect x="72.2189%" y="485" width="0.0202%" height="15" fill="rgb(218,146,49)" fg:x="3577" fg:w="1"/><text x="72.4689%" y="495.50"></text></g><g><title>_rjem_je_hook_invoke_dalloc (1 samples, 0.02%)</title><rect x="72.2390%" y="549" width="0.0202%" height="15" fill="rgb(216,55,40)" fg:x="3578" fg:w="1"/><text x="72.4890%" y="559.50"></text></g><g><title>_rjem_je_arena_get_ehooks (1 samples, 0.02%)</title><rect x="72.2592%" y="453" width="0.0202%" height="15" fill="rgb(208,196,21)" fg:x="3579" fg:w="1"/><text x="72.5092%" y="463.50"></text></g><g><title>_rjem_je_base_ehooks_get (1 samples, 0.02%)</title><rect x="72.2592%" y="437" width="0.0202%" height="15" fill="rgb(242,117,42)" fg:x="3579" fg:w="1"/><text x="72.5092%" y="447.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.04%)</title><rect x="72.2592%" y="501" width="0.0404%" height="15" fill="rgb(210,11,23)" fg:x="3579" fg:w="2"/><text x="72.5092%" y="511.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.04%)</title><rect x="72.2592%" y="485" width="0.0404%" height="15" fill="rgb(217,110,2)" fg:x="3579" fg:w="2"/><text x="72.5092%" y="495.50"></text></g><g><title>arena_slab_alloc (2 samples, 0.04%)</title><rect x="72.2592%" y="469" width="0.0404%" height="15" fill="rgb(229,77,54)" fg:x="3579" fg:w="2"/><text x="72.5092%" y="479.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="72.2794%" y="453" width="0.0202%" height="15" fill="rgb(218,53,16)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="463.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="72.2794%" y="437" width="0.0202%" height="15" fill="rgb(215,38,13)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="447.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="72.2794%" y="421" width="0.0202%" height="15" fill="rgb(235,42,18)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="431.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="72.2794%" y="405" width="0.0202%" height="15" fill="rgb(219,66,54)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="415.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="72.2794%" y="389" width="0.0202%" height="15" fill="rgb(222,205,4)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="399.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="72.2794%" y="373" width="0.0202%" height="15" fill="rgb(227,213,46)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="383.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="72.2794%" y="357" width="0.0202%" height="15" fill="rgb(250,145,42)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="367.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="72.2794%" y="341" width="0.0202%" height="15" fill="rgb(219,15,2)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="351.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="72.2794%" y="325" width="0.0202%" height="15" fill="rgb(231,181,52)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="335.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="72.2794%" y="309" width="0.0202%" height="15" fill="rgb(235,1,42)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="319.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="72.2794%" y="293" width="0.0202%" height="15" fill="rgb(249,88,27)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="303.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="72.2794%" y="277" width="0.0202%" height="15" fill="rgb(235,145,16)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="287.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="72.2794%" y="261" width="0.0202%" height="15" fill="rgb(237,114,19)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="271.50"></text></g><g><title>phn_merge (1 samples, 0.02%)</title><rect x="72.2794%" y="245" width="0.0202%" height="15" fill="rgb(238,51,50)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="255.50"></text></g><g><title>phn_merge_ordered (1 samples, 0.02%)</title><rect x="72.2794%" y="229" width="0.0202%" height="15" fill="rgb(205,194,25)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="239.50"></text></g><g><title>phn_lchild_set (1 samples, 0.02%)</title><rect x="72.2794%" y="213" width="0.0202%" height="15" fill="rgb(215,203,17)" fg:x="3580" fg:w="1"/><text x="72.5294%" y="223.50"></text></g><g><title>arena_ralloc_move_helper (4 samples, 0.08%)</title><rect x="72.2592%" y="549" width="0.0808%" height="15" fill="rgb(233,112,49)" fg:x="3579" fg:w="4"/><text x="72.5092%" y="559.50"></text></g><g><title>arena_malloc (4 samples, 0.08%)</title><rect x="72.2592%" y="533" width="0.0808%" height="15" fill="rgb(241,130,26)" fg:x="3579" fg:w="4"/><text x="72.5092%" y="543.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.08%)</title><rect x="72.2592%" y="517" width="0.0808%" height="15" fill="rgb(252,223,19)" fg:x="3579" fg:w="4"/><text x="72.5092%" y="527.50"></text></g><g><title>cache_bin_alloc (2 samples, 0.04%)</title><rect x="72.2996%" y="501" width="0.0404%" height="15" fill="rgb(211,95,25)" fg:x="3581" fg:w="2"/><text x="72.5496%" y="511.50"></text></g><g><title>cache_bin_alloc_impl (2 samples, 0.04%)</title><rect x="72.2996%" y="485" width="0.0404%" height="15" fill="rgb(251,182,27)" fg:x="3581" fg:w="2"/><text x="72.5496%" y="495.50"></text></g><g><title>iralloct (26 samples, 0.52%)</title><rect x="71.9160%" y="581" width="0.5249%" height="15" fill="rgb(238,24,4)" fg:x="3562" fg:w="26"/><text x="72.1660%" y="591.50"></text></g><g><title>_rjem_je_arena_ralloc (25 samples, 0.50%)</title><rect x="71.9362%" y="565" width="0.5047%" height="15" fill="rgb(224,220,25)" fg:x="3563" fg:w="25"/><text x="72.1862%" y="575.50"></text></g><g><title>isdalloct (5 samples, 0.10%)</title><rect x="72.3400%" y="549" width="0.1009%" height="15" fill="rgb(239,133,26)" fg:x="3583" fg:w="5"/><text x="72.5900%" y="559.50"></text></g><g><title>arena_sdalloc (5 samples, 0.10%)</title><rect x="72.3400%" y="533" width="0.1009%" height="15" fill="rgb(211,94,48)" fg:x="3583" fg:w="5"/><text x="72.5900%" y="543.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.10%)</title><rect x="72.3400%" y="517" width="0.1009%" height="15" fill="rgb(239,87,6)" fg:x="3583" fg:w="5"/><text x="72.5900%" y="527.50"></text></g><g><title>cache_bin_dalloc_easy (4 samples, 0.08%)</title><rect x="72.3602%" y="501" width="0.0808%" height="15" fill="rgb(227,62,0)" fg:x="3584" fg:w="4"/><text x="72.6102%" y="511.50"></text></g><g><title>cache_bin_full (1 samples, 0.02%)</title><rect x="72.4208%" y="485" width="0.0202%" height="15" fill="rgb(211,226,4)" fg:x="3587" fg:w="1"/><text x="72.6708%" y="495.50"></text></g><g><title>sz_index2size (2 samples, 0.04%)</title><rect x="72.4409%" y="581" width="0.0404%" height="15" fill="rgb(253,38,52)" fg:x="3588" fg:w="2"/><text x="72.6909%" y="591.50"></text></g><g><title>sz_index2size_lookup (2 samples, 0.04%)</title><rect x="72.4409%" y="565" width="0.0404%" height="15" fill="rgb(229,126,40)" fg:x="3588" fg:w="2"/><text x="72.6909%" y="575.50"></text></g><g><title>do_rallocx (2 samples, 0.04%)</title><rect x="72.4409%" y="549" width="0.0404%" height="15" fill="rgb(229,165,44)" fg:x="3588" fg:w="2"/><text x="72.6909%" y="559.50"></text></g><g><title>tcache_get_from_ind (1 samples, 0.02%)</title><rect x="72.4813%" y="581" width="0.0202%" height="15" fill="rgb(247,95,47)" fg:x="3590" fg:w="1"/><text x="72.7313%" y="591.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="72.4813%" y="565" width="0.0202%" height="15" fill="rgb(216,140,30)" fg:x="3590" fg:w="1"/><text x="72.7313%" y="575.50"></text></g><g><title>tcache_available (1 samples, 0.02%)</title><rect x="72.4813%" y="549" width="0.0202%" height="15" fill="rgb(246,214,8)" fg:x="3590" fg:w="1"/><text x="72.7313%" y="559.50"></text></g><g><title>tsd_tcache_enabled_get (1 samples, 0.02%)</title><rect x="72.4813%" y="533" width="0.0202%" height="15" fill="rgb(227,224,15)" fg:x="3590" fg:w="1"/><text x="72.7313%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (43 samples, 0.87%)</title><rect x="71.6535%" y="677" width="0.8682%" height="15" fill="rgb(233,175,4)" fg:x="3549" fg:w="43"/><text x="71.9035%" y="687.50"></text></g><g><title>?? (43 samples, 0.87%)</title><rect x="71.6535%" y="661" width="0.8682%" height="15" fill="rgb(221,66,45)" fg:x="3549" fg:w="43"/><text x="71.9035%" y="671.50"></text></g><g><title>alloc::alloc::realloc (43 samples, 0.87%)</title><rect x="71.6535%" y="645" width="0.8682%" height="15" fill="rgb(221,178,18)" fg:x="3549" fg:w="43"/><text x="71.9035%" y="655.50"></text></g><g><title>__rust_realloc (43 samples, 0.87%)</title><rect x="71.6535%" y="629" width="0.8682%" height="15" fill="rgb(213,81,29)" fg:x="3549" fg:w="43"/><text x="71.9035%" y="639.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (43 samples, 0.87%)</title><rect x="71.6535%" y="613" width="0.8682%" height="15" fill="rgb(220,89,49)" fg:x="3549" fg:w="43"/><text x="71.9035%" y="623.50"></text></g><g><title>do_rallocx (41 samples, 0.83%)</title><rect x="71.6939%" y="597" width="0.8278%" height="15" fill="rgb(227,60,33)" fg:x="3551" fg:w="41"/><text x="71.9439%" y="607.50"></text></g><g><title>thread_dalloc_event (1 samples, 0.02%)</title><rect x="72.5015%" y="581" width="0.0202%" height="15" fill="rgb(205,113,12)" fg:x="3591" fg:w="1"/><text x="72.7515%" y="591.50"></text></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect x="72.5015%" y="565" width="0.0202%" height="15" fill="rgb(211,32,1)" fg:x="3591" fg:w="1"/><text x="72.7515%" y="575.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="72.5217%" y="677" width="0.0202%" height="15" fill="rgb(246,2,12)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="687.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="72.5217%" y="661" width="0.0202%" height="15" fill="rgb(243,37,27)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="671.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="72.5217%" y="645" width="0.0202%" height="15" fill="rgb(248,211,31)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="655.50"></text></g><g><title>thread_alloc_event (1 samples, 0.02%)</title><rect x="72.5217%" y="629" width="0.0202%" height="15" fill="rgb(242,146,47)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="639.50"></text></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect x="72.5217%" y="613" width="0.0202%" height="15" fill="rgb(206,70,20)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="623.50"></text></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.02%)</title><rect x="72.5217%" y="597" width="0.0202%" height="15" fill="rgb(215,10,51)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="607.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="72.5217%" y="581" width="0.0202%" height="15" fill="rgb(243,178,53)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="591.50"></text></g><g><title>tcache_gc_large (1 samples, 0.02%)</title><rect x="72.5217%" y="565" width="0.0202%" height="15" fill="rgb(233,221,20)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="575.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (1 samples, 0.02%)</title><rect x="72.5217%" y="549" width="0.0202%" height="15" fill="rgb(218,95,35)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="559.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="72.5217%" y="533" width="0.0202%" height="15" fill="rgb(229,13,5)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="543.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="72.5217%" y="517" width="0.0202%" height="15" fill="rgb(252,164,30)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="527.50"></text></g><g><title>_rjem_je_large_dalloc_finish (1 samples, 0.02%)</title><rect x="72.5217%" y="501" width="0.0202%" height="15" fill="rgb(232,68,36)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="511.50"></text></g><g><title>large_dalloc_finish_impl (1 samples, 0.02%)</title><rect x="72.5217%" y="485" width="0.0202%" height="15" fill="rgb(219,59,54)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="495.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="72.5217%" y="469" width="0.0202%" height="15" fill="rgb(250,92,33)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="479.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="72.5217%" y="453" width="0.0202%" height="15" fill="rgb(229,162,54)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="463.50"></text></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect x="72.5217%" y="437" width="0.0202%" height="15" fill="rgb(244,114,52)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="447.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect x="72.5217%" y="421" width="0.0202%" height="15" fill="rgb(212,211,43)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="431.50"></text></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect x="72.5217%" y="405" width="0.0202%" height="15" fill="rgb(226,147,8)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="415.50"></text></g><g><title>extent_merge_impl (1 samples, 0.02%)</title><rect x="72.5217%" y="389" width="0.0202%" height="15" fill="rgb(226,23,13)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="399.50"></text></g><g><title>_rjem_je_emap_merge_commit (1 samples, 0.02%)</title><rect x="72.5217%" y="373" width="0.0202%" height="15" fill="rgb(240,63,4)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="383.50"></text></g><g><title>emap_rtree_write_acquired (1 samples, 0.02%)</title><rect x="72.5217%" y="357" width="0.0202%" height="15" fill="rgb(221,1,32)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="367.50"></text></g><g><title>rtree_leaf_elm_write (1 samples, 0.02%)</title><rect x="72.5217%" y="341" width="0.0202%" height="15" fill="rgb(242,117,10)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="351.50"></text></g><g><title>rtree_leaf_elm_write_commit (1 samples, 0.02%)</title><rect x="72.5217%" y="325" width="0.0202%" height="15" fill="rgb(249,172,44)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="335.50"></text></g><g><title>atomic_store_p (1 samples, 0.02%)</title><rect x="72.5217%" y="309" width="0.0202%" height="15" fill="rgb(244,46,45)" fg:x="3592" fg:w="1"/><text x="72.7717%" y="319.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="72.5419%" y="677" width="0.0202%" height="15" fill="rgb(206,43,17)" fg:x="3593" fg:w="1"/><text x="72.7919%" y="687.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="72.5419%" y="661" width="0.0202%" height="15" fill="rgb(239,218,39)" fg:x="3593" fg:w="1"/><text x="72.7919%" y="671.50"></text></g><g><title>sz_size2index_usize_fastpath (1 samples, 0.02%)</title><rect x="72.5419%" y="645" width="0.0202%" height="15" fill="rgb(208,169,54)" fg:x="3593" fg:w="1"/><text x="72.7919%" y="655.50"></text></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect x="72.5419%" y="629" width="0.0202%" height="15" fill="rgb(247,25,42)" fg:x="3593" fg:w="1"/><text x="72.7919%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (60 samples, 1.21%)</title><rect x="71.3709%" y="741" width="1.2114%" height="15" fill="rgb(226,23,31)" fg:x="3535" fg:w="60"/><text x="71.6209%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (56 samples, 1.13%)</title><rect x="71.4516%" y="725" width="1.1306%" height="15" fill="rgb(247,16,28)" fg:x="3539" fg:w="56"/><text x="71.7016%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (51 samples, 1.03%)</title><rect x="71.5526%" y="709" width="1.0297%" height="15" fill="rgb(231,147,38)" fg:x="3544" fg:w="51"/><text x="71.8026%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (50 samples, 1.01%)</title><rect x="71.5728%" y="693" width="1.0095%" height="15" fill="rgb(253,81,48)" fg:x="3545" fg:w="50"/><text x="71.8228%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="72.5621%" y="677" width="0.0202%" height="15" fill="rgb(249,222,43)" fg:x="3594" fg:w="1"/><text x="72.8121%" y="687.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="72.5823%" y="741" width="0.0404%" height="15" fill="rgb(221,3,27)" fg:x="3595" fg:w="2"/><text x="72.8323%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="72.5823%" y="725" width="0.0404%" height="15" fill="rgb(228,180,5)" fg:x="3595" fg:w="2"/><text x="72.8323%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.18%)</title><rect x="73.0668%" y="661" width="0.1817%" height="15" fill="rgb(227,131,42)" fg:x="3619" fg:w="9"/><text x="73.3168%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="73.2889%" y="645" width="0.0202%" height="15" fill="rgb(212,3,39)" fg:x="3630" fg:w="1"/><text x="73.5389%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="73.7129%" y="549" width="0.0808%" height="15" fill="rgb(226,45,5)" fg:x="3651" fg:w="4"/><text x="73.9629%" y="559.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (8 samples, 0.16%)</title><rect x="73.7937%" y="517" width="0.1615%" height="15" fill="rgb(215,167,45)" fg:x="3655" fg:w="8"/><text x="74.0437%" y="527.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (14 samples, 0.28%)</title><rect x="73.7129%" y="565" width="0.2827%" height="15" fill="rgb(250,218,53)" fg:x="3651" fg:w="14"/><text x="73.9629%" y="575.50"></text></g><g><title>?? (10 samples, 0.20%)</title><rect x="73.7937%" y="549" width="0.2019%" height="15" fill="rgb(207,140,0)" fg:x="3655" fg:w="10"/><text x="74.0437%" y="559.50"></text></g><g><title>sonic_rs::reader::Reader::next (10 samples, 0.20%)</title><rect x="73.7937%" y="533" width="0.2019%" height="15" fill="rgb(238,133,51)" fg:x="3655" fg:w="10"/><text x="74.0437%" y="543.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="73.9552%" y="517" width="0.0404%" height="15" fill="rgb(218,203,53)" fg:x="3663" fg:w="2"/><text x="74.2052%" y="527.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect x="73.9552%" y="501" width="0.0404%" height="15" fill="rgb(226,184,25)" fg:x="3663" fg:w="2"/><text x="74.2052%" y="511.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="73.9552%" y="485" width="0.0404%" height="15" fill="rgb(231,121,21)" fg:x="3663" fg:w="2"/><text x="74.2052%" y="495.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="73.9956%" y="517" width="0.0202%" height="15" fill="rgb(251,14,34)" fg:x="3665" fg:w="1"/><text x="74.2456%" y="527.50"></text></g><g><title>&lt;json_benchmark::empty::Array as serde::de::Deserialize&gt;::deserialize (16 samples, 0.32%)</title><rect x="73.7129%" y="597" width="0.3230%" height="15" fill="rgb(249,193,11)" fg:x="3651" fg:w="16"/><text x="73.9629%" y="607.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (16 samples, 0.32%)</title><rect x="73.7129%" y="581" width="0.3230%" height="15" fill="rgb(220,172,37)" fg:x="3651" fg:w="16"/><text x="73.9629%" y="591.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="73.9956%" y="565" width="0.0404%" height="15" fill="rgb(231,229,43)" fg:x="3665" fg:w="2"/><text x="74.2456%" y="575.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="73.9956%" y="549" width="0.0404%" height="15" fill="rgb(250,161,5)" fg:x="3665" fg:w="2"/><text x="74.2456%" y="559.50"></text></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect x="73.9956%" y="533" width="0.0404%" height="15" fill="rgb(218,225,18)" fg:x="3665" fg:w="2"/><text x="74.2456%" y="543.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="74.0157%" y="517" width="0.0202%" height="15" fill="rgb(245,45,42)" fg:x="3666" fg:w="1"/><text x="74.2657%" y="527.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="74.0157%" y="501" width="0.0202%" height="15" fill="rgb(211,115,1)" fg:x="3666" fg:w="1"/><text x="74.2657%" y="511.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="74.0157%" y="485" width="0.0202%" height="15" fill="rgb(248,133,52)" fg:x="3666" fg:w="1"/><text x="74.2657%" y="495.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (5 samples, 0.10%)</title><rect x="74.0359%" y="517" width="0.1009%" height="15" fill="rgb(238,100,21)" fg:x="3667" fg:w="5"/><text x="74.2859%" y="527.50"></text></g><g><title>sonic_rs::reader::Reader::next (8 samples, 0.16%)</title><rect x="74.0359%" y="533" width="0.1615%" height="15" fill="rgb(247,144,11)" fg:x="3667" fg:w="8"/><text x="74.2859%" y="543.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="74.1369%" y="517" width="0.0606%" height="15" fill="rgb(206,164,16)" fg:x="3672" fg:w="3"/><text x="74.3869%" y="527.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect x="74.1369%" y="501" width="0.0606%" height="15" fill="rgb(222,34,3)" fg:x="3672" fg:w="3"/><text x="74.3869%" y="511.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect x="74.1369%" y="485" width="0.0606%" height="15" fill="rgb(248,82,4)" fg:x="3672" fg:w="3"/><text x="74.3869%" y="495.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (5 samples, 0.10%)</title><rect x="74.3590%" y="517" width="0.1009%" height="15" fill="rgb(228,81,46)" fg:x="3683" fg:w="5"/><text x="74.6090%" y="527.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (5 samples, 0.10%)</title><rect x="74.3590%" y="501" width="0.1009%" height="15" fill="rgb(227,67,47)" fg:x="3683" fg:w="5"/><text x="74.6090%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.08%)</title><rect x="74.4599%" y="517" width="0.0808%" height="15" fill="rgb(215,93,53)" fg:x="3688" fg:w="4"/><text x="74.7099%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (7 samples, 0.14%)</title><rect x="74.5407%" y="517" width="0.1413%" height="15" fill="rgb(248,194,39)" fg:x="3692" fg:w="7"/><text x="74.7907%" y="527.50"></text></g><g><title>?? (34 samples, 0.69%)</title><rect x="74.0359%" y="549" width="0.6865%" height="15" fill="rgb(215,5,19)" fg:x="3667" fg:w="34"/><text x="74.2859%" y="559.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (26 samples, 0.52%)</title><rect x="74.1975%" y="533" width="0.5249%" height="15" fill="rgb(226,215,51)" fg:x="3675" fg:w="26"/><text x="74.4475%" y="543.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (2 samples, 0.04%)</title><rect x="74.6820%" y="517" width="0.0404%" height="15" fill="rgb(225,56,26)" fg:x="3699" fg:w="2"/><text x="74.9320%" y="527.50"></text></g><g><title>?? (35 samples, 0.71%)</title><rect x="74.0359%" y="565" width="0.7066%" height="15" fill="rgb(222,75,29)" fg:x="3667" fg:w="35"/><text x="74.2859%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="74.7224%" y="549" width="0.0202%" height="15" fill="rgb(236,139,6)" fg:x="3701" fg:w="1"/><text x="74.9724%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (74 samples, 1.49%)</title><rect x="73.3495%" y="613" width="1.4940%" height="15" fill="rgb(223,137,36)" fg:x="3633" fg:w="74"/><text x="73.5995%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (40 samples, 0.81%)</title><rect x="74.0359%" y="597" width="0.8076%" height="15" fill="rgb(226,99,2)" fg:x="3667" fg:w="40"/><text x="74.2859%" y="607.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (40 samples, 0.81%)</title><rect x="74.0359%" y="581" width="0.8076%" height="15" fill="rgb(206,133,23)" fg:x="3667" fg:w="40"/><text x="74.2859%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (5 samples, 0.10%)</title><rect x="74.7426%" y="565" width="0.1009%" height="15" fill="rgb(243,173,15)" fg:x="3702" fg:w="5"/><text x="74.9926%" y="575.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (4 samples, 0.08%)</title><rect x="74.8435%" y="565" width="0.0808%" height="15" fill="rgb(228,69,28)" fg:x="3707" fg:w="4"/><text x="75.0935%" y="575.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (83 samples, 1.68%)</title><rect x="73.3091%" y="645" width="1.6758%" height="15" fill="rgb(212,51,22)" fg:x="3631" fg:w="83"/><text x="73.5591%" y="655.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (83 samples, 1.68%)</title><rect x="73.3091%" y="629" width="1.6758%" height="15" fill="rgb(227,113,0)" fg:x="3631" fg:w="83"/><text x="73.5591%" y="639.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="74.8435%" y="613" width="0.1413%" height="15" fill="rgb(252,84,27)" fg:x="3707" fg:w="7"/><text x="75.0935%" y="623.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="74.8435%" y="597" width="0.1413%" height="15" fill="rgb(223,145,39)" fg:x="3707" fg:w="7"/><text x="75.0935%" y="607.50"></text></g><g><title>sonic_rs::reader::Reader::next (7 samples, 0.14%)</title><rect x="74.8435%" y="581" width="0.1413%" height="15" fill="rgb(239,219,30)" fg:x="3707" fg:w="7"/><text x="75.0935%" y="591.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="74.9243%" y="565" width="0.0606%" height="15" fill="rgb(224,196,39)" fg:x="3711" fg:w="3"/><text x="75.1743%" y="575.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect x="74.9243%" y="549" width="0.0606%" height="15" fill="rgb(205,35,43)" fg:x="3711" fg:w="3"/><text x="75.1743%" y="559.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect x="74.9243%" y="533" width="0.0606%" height="15" fill="rgb(228,201,21)" fg:x="3711" fg:w="3"/><text x="75.1743%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect x="75.6107%" y="549" width="0.0606%" height="15" fill="rgb(237,118,16)" fg:x="3745" fg:w="3"/><text x="75.8607%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10 samples, 0.20%)</title><rect x="75.6713%" y="517" width="0.2019%" height="15" fill="rgb(241,17,19)" fg:x="3748" fg:w="10"/><text x="75.9213%" y="527.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (2 samples, 0.04%)</title><rect x="75.8732%" y="517" width="0.0404%" height="15" fill="rgb(214,10,25)" fg:x="3758" fg:w="2"/><text x="76.1232%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.04%)</title><rect x="75.8732%" y="501" width="0.0404%" height="15" fill="rgb(238,37,29)" fg:x="3758" fg:w="2"/><text x="76.1232%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.04%)</title><rect x="75.8732%" y="485" width="0.0404%" height="15" fill="rgb(253,83,25)" fg:x="3758" fg:w="2"/><text x="76.1232%" y="495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22 samples, 0.44%)</title><rect x="75.9136%" y="501" width="0.4442%" height="15" fill="rgb(234,192,12)" fg:x="3760" fg:w="22"/><text x="76.1636%" y="511.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (5 samples, 0.10%)</title><rect x="76.3578%" y="501" width="0.1009%" height="15" fill="rgb(241,216,45)" fg:x="3782" fg:w="5"/><text x="76.6078%" y="511.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="76.4587%" y="501" width="0.0202%" height="15" fill="rgb(242,22,33)" fg:x="3787" fg:w="1"/><text x="76.7087%" y="511.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect x="76.4587%" y="485" width="0.0202%" height="15" fill="rgb(231,105,49)" fg:x="3787" fg:w="1"/><text x="76.7087%" y="495.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect x="76.4587%" y="469" width="0.0202%" height="15" fill="rgb(218,204,15)" fg:x="3787" fg:w="1"/><text x="76.7087%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="76.4587%" y="453" width="0.0202%" height="15" fill="rgb(235,138,41)" fg:x="3787" fg:w="1"/><text x="76.7087%" y="463.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="76.4587%" y="437" width="0.0202%" height="15" fill="rgb(246,0,9)" fg:x="3787" fg:w="1"/><text x="76.7087%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="76.4789%" y="501" width="0.0202%" height="15" fill="rgb(210,74,4)" fg:x="3788" fg:w="1"/><text x="76.7289%" y="511.50"></text></g><g><title>?? (43 samples, 0.87%)</title><rect x="75.6713%" y="549" width="0.8682%" height="15" fill="rgb(250,60,41)" fg:x="3748" fg:w="43"/><text x="75.9213%" y="559.50"></text></g><g><title>?? (43 samples, 0.87%)</title><rect x="75.6713%" y="533" width="0.8682%" height="15" fill="rgb(220,115,12)" fg:x="3748" fg:w="43"/><text x="75.9213%" y="543.50"></text></g><g><title>?? (31 samples, 0.63%)</title><rect x="75.9136%" y="517" width="0.6259%" height="15" fill="rgb(237,100,13)" fg:x="3760" fg:w="31"/><text x="76.1636%" y="527.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (2 samples, 0.04%)</title><rect x="76.4991%" y="501" width="0.0404%" height="15" fill="rgb(213,55,26)" fg:x="3789" fg:w="2"/><text x="76.7491%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (80 samples, 1.62%)</title><rect x="75.0252%" y="613" width="1.6152%" height="15" fill="rgb(216,17,4)" fg:x="3716" fg:w="80"/><text x="75.2752%" y="623.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (51 samples, 1.03%)</title><rect x="75.6107%" y="597" width="1.0297%" height="15" fill="rgb(220,153,47)" fg:x="3745" fg:w="51"/><text x="75.8607%" y="607.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (51 samples, 1.03%)</title><rect x="75.6107%" y="581" width="1.0297%" height="15" fill="rgb(215,131,9)" fg:x="3745" fg:w="51"/><text x="75.8607%" y="591.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (51 samples, 1.03%)</title><rect x="75.6107%" y="565" width="1.0297%" height="15" fill="rgb(233,46,42)" fg:x="3745" fg:w="51"/><text x="75.8607%" y="575.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (5 samples, 0.10%)</title><rect x="76.5395%" y="549" width="0.1009%" height="15" fill="rgb(226,86,7)" fg:x="3791" fg:w="5"/><text x="76.7895%" y="559.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (5 samples, 0.10%)</title><rect x="76.5395%" y="533" width="0.1009%" height="15" fill="rgb(239,226,21)" fg:x="3791" fg:w="5"/><text x="76.7895%" y="543.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.10%)</title><rect x="76.5395%" y="517" width="0.1009%" height="15" fill="rgb(244,137,22)" fg:x="3791" fg:w="5"/><text x="76.7895%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.10%)</title><rect x="76.5395%" y="501" width="0.1009%" height="15" fill="rgb(211,139,35)" fg:x="3791" fg:w="5"/><text x="76.7895%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.10%)</title><rect x="76.5395%" y="485" width="0.1009%" height="15" fill="rgb(214,62,50)" fg:x="3791" fg:w="5"/><text x="76.7895%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.10%)</title><rect x="76.5395%" y="469" width="0.1009%" height="15" fill="rgb(212,113,44)" fg:x="3791" fg:w="5"/><text x="76.7895%" y="479.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (6 samples, 0.12%)</title><rect x="76.6404%" y="597" width="0.1211%" height="15" fill="rgb(226,150,43)" fg:x="3796" fg:w="6"/><text x="76.8904%" y="607.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (2 samples, 0.04%)</title><rect x="76.7616%" y="597" width="0.0404%" height="15" fill="rgb(250,71,37)" fg:x="3802" fg:w="2"/><text x="77.0116%" y="607.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::set_index (1 samples, 0.02%)</title><rect x="76.8019%" y="597" width="0.0202%" height="15" fill="rgb(219,76,19)" fg:x="3804" fg:w="1"/><text x="77.0519%" y="607.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (5 samples, 0.10%)</title><rect x="76.8221%" y="581" width="0.1009%" height="15" fill="rgb(250,39,11)" fg:x="3805" fg:w="5"/><text x="77.0721%" y="591.50"></text></g><g><title>sonic_rs::reader::Reader::next (6 samples, 0.12%)</title><rect x="76.8221%" y="597" width="0.1211%" height="15" fill="rgb(230,64,31)" fg:x="3805" fg:w="6"/><text x="77.0721%" y="607.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="76.9231%" y="581" width="0.0202%" height="15" fill="rgb(208,222,23)" fg:x="3810" fg:w="1"/><text x="77.1731%" y="591.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="76.9231%" y="565" width="0.0202%" height="15" fill="rgb(227,125,18)" fg:x="3810" fg:w="1"/><text x="77.1731%" y="575.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="76.9231%" y="549" width="0.0202%" height="15" fill="rgb(234,210,9)" fg:x="3810" fg:w="1"/><text x="77.1731%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (2 samples, 0.04%)</title><rect x="77.0442%" y="581" width="0.0404%" height="15" fill="rgb(217,127,24)" fg:x="3816" fg:w="2"/><text x="77.2942%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (10 samples, 0.20%)</title><rect x="77.0846%" y="581" width="0.2019%" height="15" fill="rgb(239,141,48)" fg:x="3818" fg:w="10"/><text x="77.3346%" y="591.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (201 samples, 4.06%)</title><rect x="73.2485%" y="661" width="4.0581%" height="15" fill="rgb(227,109,8)" fg:x="3628" fg:w="201"/><text x="73.4985%" y="671.50">&lt;jso..</text></g><g><title>serde::de::MapAccess::next_key (115 samples, 2.32%)</title><rect x="74.9849%" y="645" width="2.3218%" height="15" fill="rgb(235,184,23)" fg:x="3714" fg:w="115"/><text x="75.2349%" y="655.50">s..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (115 samples, 2.32%)</title><rect x="74.9849%" y="629" width="2.3218%" height="15" fill="rgb(227,226,48)" fg:x="3714" fg:w="115"/><text x="75.2349%" y="639.50">&lt;..</text></g><g><title>?? (33 samples, 0.67%)</title><rect x="76.6404%" y="613" width="0.6663%" height="15" fill="rgb(206,150,11)" fg:x="3796" fg:w="33"/><text x="76.8904%" y="623.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (18 samples, 0.36%)</title><rect x="76.9433%" y="597" width="0.3634%" height="15" fill="rgb(254,2,33)" fg:x="3811" fg:w="18"/><text x="77.1933%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="77.2865%" y="581" width="0.0202%" height="15" fill="rgb(243,160,20)" fg:x="3828" fg:w="1"/><text x="77.5365%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="77.3067%" y="645" width="0.0202%" height="15" fill="rgb(218,208,30)" fg:x="3829" fg:w="1"/><text x="77.5567%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (237 samples, 4.78%)</title><rect x="72.6832%" y="709" width="4.7850%" height="15" fill="rgb(224,120,49)" fg:x="3600" fg:w="237"/><text x="72.9332%" y="719.50">&lt;core:..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (221 samples, 4.46%)</title><rect x="73.0063%" y="693" width="4.4619%" height="15" fill="rgb(246,12,2)" fg:x="3616" fg:w="221"/><text x="73.2563%" y="703.50">json_..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (221 samples, 4.46%)</title><rect x="73.0063%" y="677" width="4.4619%" height="15" fill="rgb(236,117,3)" fg:x="3616" fg:w="221"/><text x="73.2563%" y="687.50">&lt;&amp;mut..</text></g><g><title>?? (8 samples, 0.16%)</title><rect x="77.3067%" y="661" width="0.1615%" height="15" fill="rgb(216,128,52)" fg:x="3829" fg:w="8"/><text x="77.5567%" y="671.50"></text></g><g><title>sonic_rs::reader::Reader::next (7 samples, 0.14%)</title><rect x="77.3269%" y="645" width="0.1413%" height="15" fill="rgb(246,145,19)" fg:x="3830" fg:w="7"/><text x="77.5769%" y="655.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (7 samples, 0.14%)</title><rect x="77.3269%" y="629" width="0.1413%" height="15" fill="rgb(222,11,46)" fg:x="3830" fg:w="7"/><text x="77.5769%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (2 samples, 0.04%)</title><rect x="77.4682%" y="693" width="0.0404%" height="15" fill="rgb(245,82,36)" fg:x="3837" fg:w="2"/><text x="77.7182%" y="703.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (3 samples, 0.06%)</title><rect x="77.5086%" y="677" width="0.0606%" height="15" fill="rgb(250,73,51)" fg:x="3839" fg:w="3"/><text x="77.7586%" y="687.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (312 samples, 6.30%)</title><rect x="71.3103%" y="757" width="6.2992%" height="15" fill="rgb(221,189,23)" fg:x="3532" fg:w="312"/><text x="71.5603%" y="767.50">&lt;serde::..</text></g><g><title>serde::de::SeqAccess::next_element (247 samples, 4.99%)</title><rect x="72.6227%" y="741" width="4.9869%" height="15" fill="rgb(210,33,7)" fg:x="3597" fg:w="247"/><text x="72.8727%" y="751.50">serde:..</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (247 samples, 4.99%)</title><rect x="72.6227%" y="725" width="4.9869%" height="15" fill="rgb(210,107,22)" fg:x="3597" fg:w="247"/><text x="72.8727%" y="735.50">&lt;sonic..</text></g><g><title>?? (7 samples, 0.14%)</title><rect x="77.4682%" y="709" width="0.1413%" height="15" fill="rgb(222,116,37)" fg:x="3837" fg:w="7"/><text x="77.7182%" y="719.50"></text></g><g><title>sonic_rs::reader::Reader::next (5 samples, 0.10%)</title><rect x="77.5086%" y="693" width="0.1009%" height="15" fill="rgb(254,17,48)" fg:x="3839" fg:w="5"/><text x="77.7586%" y="703.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="77.5692%" y="677" width="0.0404%" height="15" fill="rgb(224,36,32)" fg:x="3842" fg:w="2"/><text x="77.8192%" y="687.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect x="77.5692%" y="661" width="0.0404%" height="15" fill="rgb(232,90,46)" fg:x="3842" fg:w="2"/><text x="77.8192%" y="671.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="77.5692%" y="645" width="0.0404%" height="15" fill="rgb(241,66,40)" fg:x="3842" fg:w="2"/><text x="77.8192%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (315 samples, 6.36%)</title><rect x="71.2699%" y="789" width="6.3598%" height="15" fill="rgb(249,184,29)" fg:x="3530" fg:w="315"/><text x="71.5199%" y="799.50">serde::d..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (315 samples, 6.36%)</title><rect x="71.2699%" y="773" width="6.3598%" height="15" fill="rgb(231,181,1)" fg:x="3530" fg:w="315"/><text x="71.5199%" y="783.50">&lt;&amp;mut so..</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="77.6095%" y="757" width="0.0202%" height="15" fill="rgb(224,94,2)" fg:x="3844" fg:w="1"/><text x="77.8595%" y="767.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="77.6095%" y="741" width="0.0202%" height="15" fill="rgb(229,170,15)" fg:x="3844" fg:w="1"/><text x="77.8595%" y="751.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="77.6095%" y="725" width="0.0202%" height="15" fill="rgb(240,127,35)" fg:x="3844" fg:w="1"/><text x="77.8595%" y="735.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="77.6095%" y="709" width="0.0202%" height="15" fill="rgb(248,196,34)" fg:x="3844" fg:w="1"/><text x="77.8595%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="77.6095%" y="693" width="0.0202%" height="15" fill="rgb(236,137,7)" fg:x="3844" fg:w="1"/><text x="77.8595%" y="703.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.02%)</title><rect x="77.6297%" y="709" width="0.0202%" height="15" fill="rgb(235,127,16)" fg:x="3845" fg:w="1"/><text x="77.8797%" y="719.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="77.6297%" y="693" width="0.0202%" height="15" fill="rgb(250,192,54)" fg:x="3845" fg:w="1"/><text x="77.8797%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="77.6499%" y="709" width="0.0202%" height="15" fill="rgb(218,98,20)" fg:x="3846" fg:w="1"/><text x="77.8999%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (2 samples, 0.04%)</title><rect x="77.6701%" y="709" width="0.0404%" height="15" fill="rgb(230,176,47)" fg:x="3847" fg:w="2"/><text x="77.9201%" y="719.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="77.6297%" y="757" width="0.1009%" height="15" fill="rgb(244,2,33)" fg:x="3845" fg:w="5"/><text x="77.8797%" y="767.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="77.6297%" y="741" width="0.1009%" height="15" fill="rgb(231,100,17)" fg:x="3845" fg:w="5"/><text x="77.8797%" y="751.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (5 samples, 0.10%)</title><rect x="77.6297%" y="725" width="0.1009%" height="15" fill="rgb(245,23,12)" fg:x="3845" fg:w="5"/><text x="77.8797%" y="735.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (1 samples, 0.02%)</title><rect x="77.7105%" y="709" width="0.0202%" height="15" fill="rgb(249,55,22)" fg:x="3849" fg:w="1"/><text x="77.9605%" y="719.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (323 samples, 6.52%)</title><rect x="71.2497%" y="837" width="6.5213%" height="15" fill="rgb(207,134,9)" fg:x="3529" fg:w="323"/><text x="71.4997%" y="847.50">&lt;sonic_rs..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (323 samples, 6.52%)</title><rect x="71.2497%" y="821" width="6.5213%" height="15" fill="rgb(218,134,0)" fg:x="3529" fg:w="323"/><text x="71.4997%" y="831.50">&lt;sonic_rs..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (323 samples, 6.52%)</title><rect x="71.2497%" y="805" width="6.5213%" height="15" fill="rgb(213,212,33)" fg:x="3529" fg:w="323"/><text x="71.4997%" y="815.50">&lt;core::ma..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (7 samples, 0.14%)</title><rect x="77.6297%" y="789" width="0.1413%" height="15" fill="rgb(252,106,18)" fg:x="3845" fg:w="7"/><text x="77.8797%" y="799.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (7 samples, 0.14%)</title><rect x="77.6297%" y="773" width="0.1413%" height="15" fill="rgb(208,126,42)" fg:x="3845" fg:w="7"/><text x="77.8797%" y="783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect x="77.7307%" y="757" width="0.0404%" height="15" fill="rgb(246,175,29)" fg:x="3850" fg:w="2"/><text x="77.9807%" y="767.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="77.8316%" y="709" width="0.0202%" height="15" fill="rgb(215,13,50)" fg:x="3855" fg:w="1"/><text x="78.0816%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (1 samples, 0.02%)</title><rect x="77.8518%" y="709" width="0.0202%" height="15" fill="rgb(216,172,15)" fg:x="3856" fg:w="1"/><text x="78.1018%" y="719.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="77.8518%" y="693" width="0.0202%" height="15" fill="rgb(212,103,13)" fg:x="3856" fg:w="1"/><text x="78.1018%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="77.8518%" y="677" width="0.0202%" height="15" fill="rgb(231,171,36)" fg:x="3856" fg:w="1"/><text x="78.1018%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="77.8720%" y="693" width="0.0202%" height="15" fill="rgb(250,123,20)" fg:x="3857" fg:w="1"/><text x="78.1220%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="77.8316%" y="805" width="0.0808%" height="15" fill="rgb(212,53,50)" fg:x="3855" fg:w="4"/><text x="78.0816%" y="815.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (4 samples, 0.08%)</title><rect x="77.8316%" y="789" width="0.0808%" height="15" fill="rgb(243,54,12)" fg:x="3855" fg:w="4"/><text x="78.0816%" y="799.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (4 samples, 0.08%)</title><rect x="77.8316%" y="773" width="0.0808%" height="15" fill="rgb(234,101,34)" fg:x="3855" fg:w="4"/><text x="78.0816%" y="783.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.08%)</title><rect x="77.8316%" y="757" width="0.0808%" height="15" fill="rgb(254,67,22)" fg:x="3855" fg:w="4"/><text x="78.0816%" y="767.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="77.8316%" y="741" width="0.0808%" height="15" fill="rgb(250,35,47)" fg:x="3855" fg:w="4"/><text x="78.0816%" y="751.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="77.8316%" y="725" width="0.0808%" height="15" fill="rgb(226,126,38)" fg:x="3855" fg:w="4"/><text x="78.0816%" y="735.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="77.8720%" y="709" width="0.0404%" height="15" fill="rgb(216,138,53)" fg:x="3857" fg:w="2"/><text x="78.1220%" y="719.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="77.8922%" y="693" width="0.0202%" height="15" fill="rgb(246,199,43)" fg:x="3858" fg:w="1"/><text x="78.1422%" y="703.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="77.9124%" y="789" width="0.0202%" height="15" fill="rgb(232,125,11)" fg:x="3859" fg:w="1"/><text x="78.1624%" y="799.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="77.9326%" y="773" width="0.0202%" height="15" fill="rgb(218,219,45)" fg:x="3860" fg:w="1"/><text x="78.1826%" y="783.50"></text></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect x="77.9326%" y="789" width="0.0404%" height="15" fill="rgb(216,102,54)" fg:x="3860" fg:w="2"/><text x="78.1826%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="77.9528%" y="773" width="0.0202%" height="15" fill="rgb(250,228,7)" fg:x="3861" fg:w="1"/><text x="78.2028%" y="783.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="77.9528%" y="757" width="0.0202%" height="15" fill="rgb(226,125,25)" fg:x="3861" fg:w="1"/><text x="78.2028%" y="767.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="77.9528%" y="741" width="0.0202%" height="15" fill="rgb(224,165,27)" fg:x="3861" fg:w="1"/><text x="78.2028%" y="751.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (337 samples, 6.80%)</title><rect x="71.2094%" y="853" width="6.8040%" height="15" fill="rgb(233,86,3)" fg:x="3527" fg:w="337"/><text x="71.4594%" y="863.50">&lt;json_ben..</text></g><g><title>serde::de::MapAccess::next_key (12 samples, 0.24%)</title><rect x="77.7710%" y="837" width="0.2423%" height="15" fill="rgb(228,116,20)" fg:x="3852" fg:w="12"/><text x="78.0210%" y="847.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (12 samples, 0.24%)</title><rect x="77.7710%" y="821" width="0.2423%" height="15" fill="rgb(209,192,17)" fg:x="3852" fg:w="12"/><text x="78.0210%" y="831.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="77.9124%" y="805" width="0.1009%" height="15" fill="rgb(224,88,34)" fg:x="3859" fg:w="5"/><text x="78.1624%" y="815.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect x="77.9729%" y="789" width="0.0404%" height="15" fill="rgb(233,38,6)" fg:x="3862" fg:w="2"/><text x="78.2229%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="77.9931%" y="773" width="0.0202%" height="15" fill="rgb(212,59,30)" fg:x="3863" fg:w="1"/><text x="78.2431%" y="783.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (374 samples, 7.55%)</title><rect x="70.4825%" y="901" width="7.5510%" height="15" fill="rgb(213,80,3)" fg:x="3491" fg:w="374"/><text x="70.7325%" y="911.50">&lt;core::mar..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (341 samples, 6.88%)</title><rect x="71.1488%" y="885" width="6.8847%" height="15" fill="rgb(251,178,7)" fg:x="3524" fg:w="341"/><text x="71.3988%" y="895.50">json_benc..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (341 samples, 6.88%)</title><rect x="71.1488%" y="869" width="6.8847%" height="15" fill="rgb(213,154,26)" fg:x="3524" fg:w="341"/><text x="71.3988%" y="879.50">&lt;&amp;mut son..</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="78.0133%" y="853" width="0.0202%" height="15" fill="rgb(238,165,49)" fg:x="3864" fg:w="1"/><text x="78.2633%" y="863.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="78.0133%" y="837" width="0.0202%" height="15" fill="rgb(248,91,46)" fg:x="3864" fg:w="1"/><text x="78.2633%" y="847.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="78.0133%" y="821" width="0.0202%" height="15" fill="rgb(244,21,52)" fg:x="3864" fg:w="1"/><text x="78.2633%" y="831.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="78.0335%" y="869" width="0.0404%" height="15" fill="rgb(247,122,20)" fg:x="3865" fg:w="2"/><text x="78.2835%" y="879.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (396 samples, 8.00%)</title><rect x="70.0989%" y="981" width="7.9952%" height="15" fill="rgb(218,27,9)" fg:x="3472" fg:w="396"/><text x="70.3489%" y="991.50">serde::de::..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (396 samples, 8.00%)</title><rect x="70.0989%" y="965" width="7.9952%" height="15" fill="rgb(246,7,6)" fg:x="3472" fg:w="396"/><text x="70.3489%" y="975.50">&lt;&amp;mut sonic..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (394 samples, 7.95%)</title><rect x="70.1393%" y="949" width="7.9548%" height="15" fill="rgb(227,135,54)" fg:x="3474" fg:w="394"/><text x="70.3893%" y="959.50">&lt;serde::de:..</text></g><g><title>serde::de::SeqAccess::next_element (383 samples, 7.73%)</title><rect x="70.3614%" y="933" width="7.7327%" height="15" fill="rgb(247,14,11)" fg:x="3485" fg:w="383"/><text x="70.6114%" y="943.50">serde::de::..</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (383 samples, 7.73%)</title><rect x="70.3614%" y="917" width="7.7327%" height="15" fill="rgb(206,149,34)" fg:x="3485" fg:w="383"/><text x="70.6114%" y="927.50">&lt;sonic_rs::..</text></g><g><title>?? (3 samples, 0.06%)</title><rect x="78.0335%" y="901" width="0.0606%" height="15" fill="rgb(227,228,4)" fg:x="3865" fg:w="3"/><text x="78.2835%" y="911.50"></text></g><g><title>sonic_rs::reader::Reader::next (3 samples, 0.06%)</title><rect x="78.0335%" y="885" width="0.0606%" height="15" fill="rgb(238,218,28)" fg:x="3865" fg:w="3"/><text x="78.2835%" y="895.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="78.0739%" y="869" width="0.0202%" height="15" fill="rgb(252,86,40)" fg:x="3867" fg:w="1"/><text x="78.3239%" y="879.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="78.0739%" y="853" width="0.0202%" height="15" fill="rgb(251,225,11)" fg:x="3867" fg:w="1"/><text x="78.3239%" y="863.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="78.0739%" y="837" width="0.0202%" height="15" fill="rgb(206,46,49)" fg:x="3867" fg:w="1"/><text x="78.3239%" y="847.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="78.0941%" y="837" width="0.0202%" height="15" fill="rgb(245,128,24)" fg:x="3868" fg:w="1"/><text x="78.3441%" y="847.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="78.0941%" y="885" width="0.0404%" height="15" fill="rgb(219,177,34)" fg:x="3868" fg:w="2"/><text x="78.3441%" y="895.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="78.0941%" y="869" width="0.0404%" height="15" fill="rgb(218,60,48)" fg:x="3868" fg:w="2"/><text x="78.3441%" y="879.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="78.0941%" y="853" width="0.0404%" height="15" fill="rgb(221,11,5)" fg:x="3868" fg:w="2"/><text x="78.3441%" y="863.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="78.1143%" y="837" width="0.0202%" height="15" fill="rgb(220,148,13)" fg:x="3869" fg:w="1"/><text x="78.3643%" y="847.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (3 samples, 0.06%)</title><rect x="78.0941%" y="981" width="0.0606%" height="15" fill="rgb(210,16,3)" fg:x="3868" fg:w="3"/><text x="78.3441%" y="991.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (3 samples, 0.06%)</title><rect x="78.0941%" y="965" width="0.0606%" height="15" fill="rgb(236,80,2)" fg:x="3868" fg:w="3"/><text x="78.3441%" y="975.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (3 samples, 0.06%)</title><rect x="78.0941%" y="949" width="0.0606%" height="15" fill="rgb(239,129,19)" fg:x="3868" fg:w="3"/><text x="78.3441%" y="959.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (3 samples, 0.06%)</title><rect x="78.0941%" y="933" width="0.0606%" height="15" fill="rgb(220,106,35)" fg:x="3868" fg:w="3"/><text x="78.3441%" y="943.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (3 samples, 0.06%)</title><rect x="78.0941%" y="917" width="0.0606%" height="15" fill="rgb(252,139,45)" fg:x="3868" fg:w="3"/><text x="78.3441%" y="927.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (3 samples, 0.06%)</title><rect x="78.0941%" y="901" width="0.0606%" height="15" fill="rgb(229,8,36)" fg:x="3868" fg:w="3"/><text x="78.3441%" y="911.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="78.1345%" y="885" width="0.0202%" height="15" fill="rgb(230,126,33)" fg:x="3870" fg:w="1"/><text x="78.3845%" y="895.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect x="78.1547%" y="981" width="0.0404%" height="15" fill="rgb(239,140,21)" fg:x="3871" fg:w="2"/><text x="78.4047%" y="991.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (2 samples, 0.04%)</title><rect x="78.1547%" y="965" width="0.0404%" height="15" fill="rgb(254,104,9)" fg:x="3871" fg:w="2"/><text x="78.4047%" y="975.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="78.1547%" y="949" width="0.0404%" height="15" fill="rgb(239,52,14)" fg:x="3871" fg:w="2"/><text x="78.4047%" y="959.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="78.1547%" y="933" width="0.0404%" height="15" fill="rgb(208,227,44)" fg:x="3871" fg:w="2"/><text x="78.4047%" y="943.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (2 samples, 0.04%)</title><rect x="78.1547%" y="917" width="0.0404%" height="15" fill="rgb(246,18,19)" fg:x="3871" fg:w="2"/><text x="78.4047%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="78.1748%" y="901" width="0.0202%" height="15" fill="rgb(235,228,25)" fg:x="3872" fg:w="1"/><text x="78.4248%" y="911.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (409 samples, 8.26%)</title><rect x="69.9576%" y="997" width="8.2576%" height="15" fill="rgb(240,156,20)" fg:x="3465" fg:w="409"/><text x="70.2076%" y="1007.50">&lt;core::mark..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (1 samples, 0.02%)</title><rect x="78.1950%" y="981" width="0.0202%" height="15" fill="rgb(224,8,20)" fg:x="3873" fg:w="1"/><text x="78.4450%" y="991.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (411 samples, 8.30%)</title><rect x="69.9576%" y="1029" width="8.2980%" height="15" fill="rgb(214,12,52)" fg:x="3465" fg:w="411"/><text x="70.2076%" y="1039.50">&lt;sonic_rs::s..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (411 samples, 8.30%)</title><rect x="69.9576%" y="1013" width="8.2980%" height="15" fill="rgb(211,220,47)" fg:x="3465" fg:w="411"/><text x="70.2076%" y="1023.50">&lt;sonic_rs::s..</text></g><g><title>?? (2 samples, 0.04%)</title><rect x="78.2152%" y="997" width="0.0404%" height="15" fill="rgb(250,173,5)" fg:x="3874" fg:w="2"/><text x="78.4652%" y="1007.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="78.2152%" y="981" width="0.0404%" height="15" fill="rgb(250,125,52)" fg:x="3874" fg:w="2"/><text x="78.4652%" y="991.50"></text></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect x="78.2152%" y="965" width="0.0404%" height="15" fill="rgb(209,133,18)" fg:x="3874" fg:w="2"/><text x="78.4652%" y="975.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="78.2152%" y="949" width="0.0404%" height="15" fill="rgb(216,173,22)" fg:x="3874" fg:w="2"/><text x="78.4652%" y="959.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (7 samples, 0.14%)</title><rect x="78.2556%" y="997" width="0.1413%" height="15" fill="rgb(205,3,22)" fg:x="3876" fg:w="7"/><text x="78.5056%" y="1007.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.04%)</title><rect x="78.3969%" y="933" width="0.0404%" height="15" fill="rgb(248,22,20)" fg:x="3883" fg:w="2"/><text x="78.6469%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="78.4171%" y="917" width="0.0202%" height="15" fill="rgb(233,6,29)" fg:x="3884" fg:w="1"/><text x="78.6671%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="78.4171%" y="901" width="0.0202%" height="15" fill="rgb(240,22,54)" fg:x="3884" fg:w="1"/><text x="78.6671%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="78.4171%" y="885" width="0.0202%" height="15" fill="rgb(231,133,32)" fg:x="3884" fg:w="1"/><text x="78.6671%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="78.4171%" y="869" width="0.0202%" height="15" fill="rgb(248,193,4)" fg:x="3884" fg:w="1"/><text x="78.6671%" y="879.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.12%)</title><rect x="78.3969%" y="997" width="0.1211%" height="15" fill="rgb(211,178,46)" fg:x="3883" fg:w="6"/><text x="78.6469%" y="1007.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (6 samples, 0.12%)</title><rect x="78.3969%" y="981" width="0.1211%" height="15" fill="rgb(224,5,42)" fg:x="3883" fg:w="6"/><text x="78.6469%" y="991.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (6 samples, 0.12%)</title><rect x="78.3969%" y="965" width="0.1211%" height="15" fill="rgb(239,176,25)" fg:x="3883" fg:w="6"/><text x="78.6469%" y="975.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.12%)</title><rect x="78.3969%" y="949" width="0.1211%" height="15" fill="rgb(245,187,50)" fg:x="3883" fg:w="6"/><text x="78.6469%" y="959.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="78.4373%" y="933" width="0.0808%" height="15" fill="rgb(248,24,15)" fg:x="3885" fg:w="4"/><text x="78.6873%" y="943.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="78.4373%" y="917" width="0.0808%" height="15" fill="rgb(205,166,13)" fg:x="3885" fg:w="4"/><text x="78.6873%" y="927.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="78.4373%" y="901" width="0.0808%" height="15" fill="rgb(208,114,23)" fg:x="3885" fg:w="4"/><text x="78.6873%" y="911.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.08%)</title><rect x="78.4373%" y="885" width="0.0808%" height="15" fill="rgb(239,127,18)" fg:x="3885" fg:w="4"/><text x="78.6873%" y="895.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="78.5181%" y="981" width="0.0404%" height="15" fill="rgb(219,154,28)" fg:x="3889" fg:w="2"/><text x="78.7681%" y="991.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="78.5584%" y="981" width="0.0202%" height="15" fill="rgb(225,157,23)" fg:x="3891" fg:w="1"/><text x="78.8084%" y="991.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect x="78.5584%" y="965" width="0.0202%" height="15" fill="rgb(219,8,6)" fg:x="3891" fg:w="1"/><text x="78.8084%" y="975.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect x="78.5584%" y="949" width="0.0202%" height="15" fill="rgb(212,47,6)" fg:x="3891" fg:w="1"/><text x="78.8084%" y="959.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="78.5584%" y="933" width="0.0202%" height="15" fill="rgb(224,190,4)" fg:x="3891" fg:w="1"/><text x="78.8084%" y="943.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="78.5584%" y="917" width="0.0202%" height="15" fill="rgb(239,183,29)" fg:x="3891" fg:w="1"/><text x="78.8084%" y="927.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (505 samples, 10.20%)</title><rect x="68.4232%" y="1221" width="10.1958%" height="15" fill="rgb(213,57,7)" fg:x="3389" fg:w="505"/><text x="68.6732%" y="1231.50">&lt;sonic_rs::serd..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (505 samples, 10.20%)</title><rect x="68.4232%" y="1205" width="10.1958%" height="15" fill="rgb(216,148,1)" fg:x="3389" fg:w="505"/><text x="68.6732%" y="1215.50">&lt;sonic_rs::serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (505 samples, 10.20%)</title><rect x="68.4232%" y="1189" width="10.1958%" height="15" fill="rgb(236,182,29)" fg:x="3389" fg:w="505"/><text x="68.6732%" y="1199.50">&lt;core::marker::..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (437 samples, 8.82%)</title><rect x="69.7961%" y="1173" width="8.8229%" height="15" fill="rgb(244,120,48)" fg:x="3457" fg:w="437"/><text x="70.0461%" y="1183.50">serde::de::i..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (437 samples, 8.82%)</title><rect x="69.7961%" y="1157" width="8.8229%" height="15" fill="rgb(206,71,34)" fg:x="3457" fg:w="437"/><text x="70.0461%" y="1167.50">&lt;&amp;mut sonic_..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (437 samples, 8.82%)</title><rect x="69.7961%" y="1141" width="8.8229%" height="15" fill="rgb(242,32,6)" fg:x="3457" fg:w="437"/><text x="70.0461%" y="1151.50">&lt;serde::de::..</text></g><g><title>serde::de::SeqAccess::next_element (433 samples, 8.74%)</title><rect x="69.8768%" y="1125" width="8.7422%" height="15" fill="rgb(241,35,3)" fg:x="3461" fg:w="433"/><text x="70.1268%" y="1135.50">serde::de::S..</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (433 samples, 8.74%)</title><rect x="69.8768%" y="1109" width="8.7422%" height="15" fill="rgb(222,62,19)" fg:x="3461" fg:w="433"/><text x="70.1268%" y="1119.50">&lt;sonic_rs::s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (432 samples, 8.72%)</title><rect x="69.8970%" y="1093" width="8.7220%" height="15" fill="rgb(223,110,41)" fg:x="3462" fg:w="432"/><text x="70.1470%" y="1103.50">&lt;core::marke..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (432 samples, 8.72%)</title><rect x="69.8970%" y="1077" width="8.7220%" height="15" fill="rgb(208,224,4)" fg:x="3462" fg:w="432"/><text x="70.1470%" y="1087.50">json_benchma..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (432 samples, 8.72%)</title><rect x="69.8970%" y="1061" width="8.7220%" height="15" fill="rgb(241,137,19)" fg:x="3462" fg:w="432"/><text x="70.1470%" y="1071.50">&lt;&amp;mut sonic_..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (432 samples, 8.72%)</title><rect x="69.8970%" y="1045" width="8.7220%" height="15" fill="rgb(244,24,17)" fg:x="3462" fg:w="432"/><text x="70.1470%" y="1055.50">&lt;json_benchm..</text></g><g><title>serde::de::MapAccess::next_key (18 samples, 0.36%)</title><rect x="78.2556%" y="1029" width="0.3634%" height="15" fill="rgb(245,178,49)" fg:x="3876" fg:w="18"/><text x="78.5056%" y="1039.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (18 samples, 0.36%)</title><rect x="78.2556%" y="1013" width="0.3634%" height="15" fill="rgb(219,160,38)" fg:x="3876" fg:w="18"/><text x="78.5056%" y="1023.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="78.5181%" y="997" width="0.1009%" height="15" fill="rgb(228,137,14)" fg:x="3889" fg:w="5"/><text x="78.7681%" y="1007.50"></text></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect x="78.5786%" y="981" width="0.0404%" height="15" fill="rgb(237,134,11)" fg:x="3892" fg:w="2"/><text x="78.8286%" y="991.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="78.5786%" y="965" width="0.0404%" height="15" fill="rgb(211,126,44)" fg:x="3892" fg:w="2"/><text x="78.8286%" y="975.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect x="78.5786%" y="949" width="0.0404%" height="15" fill="rgb(226,171,33)" fg:x="3892" fg:w="2"/><text x="78.8286%" y="959.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="78.5786%" y="933" width="0.0404%" height="15" fill="rgb(253,99,13)" fg:x="3892" fg:w="2"/><text x="78.8286%" y="943.50"></text></g><g><title>sonic_rs::serde::de::from_trait (507 samples, 10.24%)</title><rect x="68.4030%" y="1285" width="10.2362%" height="15" fill="rgb(244,48,7)" fg:x="3388" fg:w="507"/><text x="68.6530%" y="1295.50">sonic_rs::serde..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (507 samples, 10.24%)</title><rect x="68.4030%" y="1269" width="10.2362%" height="15" fill="rgb(244,217,54)" fg:x="3388" fg:w="507"/><text x="68.6530%" y="1279.50">json_benchmark:..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (507 samples, 10.24%)</title><rect x="68.4030%" y="1253" width="10.2362%" height="15" fill="rgb(224,15,18)" fg:x="3388" fg:w="507"/><text x="68.6530%" y="1263.50">&lt;&amp;mut sonic_rs:..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (506 samples, 10.22%)</title><rect x="68.4232%" y="1237" width="10.2160%" height="15" fill="rgb(244,99,12)" fg:x="3389" fg:w="506"/><text x="68.6732%" y="1247.50">&lt;json_benchmark..</text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect x="78.6190%" y="1221" width="0.0202%" height="15" fill="rgb(233,226,8)" fg:x="3894" fg:w="1"/><text x="78.8690%" y="1231.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="78.6190%" y="1205" width="0.0202%" height="15" fill="rgb(229,211,3)" fg:x="3894" fg:w="1"/><text x="78.8690%" y="1215.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="78.6190%" y="1189" width="0.0202%" height="15" fill="rgb(216,140,21)" fg:x="3894" fg:w="1"/><text x="78.8690%" y="1199.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="78.6190%" y="1173" width="0.0202%" height="15" fill="rgb(234,122,30)" fg:x="3894" fg:w="1"/><text x="78.8690%" y="1183.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="78.6190%" y="1157" width="0.0202%" height="15" fill="rgb(236,25,46)" fg:x="3894" fg:w="1"/><text x="78.8690%" y="1167.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (4 samples, 0.08%)</title><rect x="78.7402%" y="1141" width="0.0808%" height="15" fill="rgb(217,52,54)" fg:x="3900" fg:w="4"/><text x="78.9902%" y="1151.50"></text></g><g><title>?? (8 samples, 0.16%)</title><rect x="78.7402%" y="1157" width="0.1615%" height="15" fill="rgb(222,29,26)" fg:x="3900" fg:w="8"/><text x="78.9902%" y="1167.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (4 samples, 0.08%)</title><rect x="78.8209%" y="1141" width="0.0808%" height="15" fill="rgb(216,177,29)" fg:x="3904" fg:w="4"/><text x="79.0709%" y="1151.50"></text></g><g><title>?? (27 samples, 0.55%)</title><rect x="78.7402%" y="1189" width="0.5451%" height="15" fill="rgb(247,136,51)" fg:x="3900" fg:w="27"/><text x="78.9902%" y="1199.50"></text></g><g><title>?? (27 samples, 0.55%)</title><rect x="78.7402%" y="1173" width="0.5451%" height="15" fill="rgb(231,47,47)" fg:x="3900" fg:w="27"/><text x="78.9902%" y="1183.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (19 samples, 0.38%)</title><rect x="78.9017%" y="1157" width="0.3836%" height="15" fill="rgb(211,192,36)" fg:x="3908" fg:w="19"/><text x="79.1517%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.38%)</title><rect x="78.9017%" y="1141" width="0.3836%" height="15" fill="rgb(229,156,32)" fg:x="3908" fg:w="19"/><text x="79.1517%" y="1151.50"></text></g><g><title>simdutf8::implementation::x86::avx2::validate_utf8_basic (36 samples, 0.73%)</title><rect x="78.6392%" y="1205" width="0.7268%" height="15" fill="rgb(248,213,20)" fg:x="3895" fg:w="36"/><text x="78.8892%" y="1215.50"></text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (4 samples, 0.08%)</title><rect x="79.2853%" y="1189" width="0.0808%" height="15" fill="rgb(217,64,7)" fg:x="3927" fg:w="4"/><text x="79.5353%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (546 samples, 11.02%)</title><rect x="68.4030%" y="1461" width="11.0236%" height="15" fill="rgb(232,142,8)" fg:x="3388" fg:w="546"/><text x="68.6530%" y="1471.50">&lt;alloc::vec::Vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (546 samples, 11.02%)</title><rect x="68.4030%" y="1445" width="11.0236%" height="15" fill="rgb(224,92,44)" fg:x="3388" fg:w="546"/><text x="68.6530%" y="1455.50">&lt;alloc::vec::Vec..</text></g><g><title>?? (546 samples, 11.02%)</title><rect x="68.4030%" y="1429" width="11.0236%" height="15" fill="rgb(214,169,17)" fg:x="3388" fg:w="546"/><text x="68.6530%" y="1439.50">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (546 samples, 11.02%)</title><rect x="68.4030%" y="1413" width="11.0236%" height="15" fill="rgb(210,59,37)" fg:x="3388" fg:w="546"/><text x="68.6530%" y="1423.50">core::iter::trai..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (546 samples, 11.02%)</title><rect x="68.4030%" y="1397" width="11.0236%" height="15" fill="rgb(214,116,48)" fg:x="3388" fg:w="546"/><text x="68.6530%" y="1407.50">&lt;core::iter::ada..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (546 samples, 11.02%)</title><rect x="68.4030%" y="1381" width="11.0236%" height="15" fill="rgb(244,191,6)" fg:x="3388" fg:w="546"/><text x="68.6530%" y="1391.50">core::iter::trai..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (546 samples, 11.02%)</title><rect x="68.4030%" y="1365" width="11.0236%" height="15" fill="rgb(241,50,52)" fg:x="3388" fg:w="546"/><text x="68.6530%" y="1375.50">core::iter::adap..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (546 samples, 11.02%)</title><rect x="68.4030%" y="1349" width="11.0236%" height="15" fill="rgb(236,75,39)" fg:x="3388" fg:w="546"/><text x="68.6530%" y="1359.50">core::ops::funct..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (546 samples, 11.02%)</title><rect x="68.4030%" y="1333" width="11.0236%" height="15" fill="rgb(236,99,0)" fg:x="3388" fg:w="546"/><text x="68.6530%" y="1343.50">deserialize_stru..</text></g><g><title>deserialize_struct::sonic_rs_parse_struct (546 samples, 11.02%)</title><rect x="68.4030%" y="1317" width="11.0236%" height="15" fill="rgb(207,202,15)" fg:x="3388" fg:w="546"/><text x="68.6530%" y="1327.50">deserialize_stru..</text></g><g><title>sonic_rs::serde::de::from_slice (546 samples, 11.02%)</title><rect x="68.4030%" y="1301" width="11.0236%" height="15" fill="rgb(233,207,14)" fg:x="3388" fg:w="546"/><text x="68.6530%" y="1311.50">sonic_rs::serde:..</text></g><g><title>sonic_rs::util::utf8::from_utf8 (39 samples, 0.79%)</title><rect x="78.6392%" y="1285" width="0.7874%" height="15" fill="rgb(226,27,51)" fg:x="3895" fg:w="39"/><text x="78.8892%" y="1295.50"></text></g><g><title>simdutf8::basic::from_utf8 (39 samples, 0.79%)</title><rect x="78.6392%" y="1269" width="0.7874%" height="15" fill="rgb(206,104,42)" fg:x="3895" fg:w="39"/><text x="78.8892%" y="1279.50"></text></g><g><title>simdutf8::implementation::validate_utf8_basic (39 samples, 0.79%)</title><rect x="78.6392%" y="1253" width="0.7874%" height="15" fill="rgb(212,225,4)" fg:x="3895" fg:w="39"/><text x="78.8892%" y="1263.50"></text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic (39 samples, 0.79%)</title><rect x="78.6392%" y="1237" width="0.7874%" height="15" fill="rgb(233,96,42)" fg:x="3895" fg:w="39"/><text x="78.8892%" y="1247.50"></text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (39 samples, 0.79%)</title><rect x="78.6392%" y="1221" width="0.7874%" height="15" fill="rgb(229,21,32)" fg:x="3895" fg:w="39"/><text x="78.8892%" y="1231.50"></text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (3 samples, 0.06%)</title><rect x="79.3660%" y="1205" width="0.0606%" height="15" fill="rgb(226,216,24)" fg:x="3931" fg:w="3"/><text x="79.6160%" y="1215.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="79.4266%" y="1301" width="0.0202%" height="15" fill="rgb(221,163,17)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1311.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="79.4266%" y="1285" width="0.0202%" height="15" fill="rgb(216,216,42)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="79.4266%" y="1269" width="0.0202%" height="15" fill="rgb(240,118,7)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="79.4266%" y="1253" width="0.0202%" height="15" fill="rgb(221,67,37)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="79.4266%" y="1237" width="0.0202%" height="15" fill="rgb(241,32,44)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="79.4266%" y="1221" width="0.0202%" height="15" fill="rgb(235,204,43)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="79.4266%" y="1205" width="0.0202%" height="15" fill="rgb(213,116,10)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="79.4266%" y="1189" width="0.0202%" height="15" fill="rgb(239,15,48)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1199.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="79.4266%" y="1173" width="0.0202%" height="15" fill="rgb(207,123,36)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1183.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="79.4266%" y="1157" width="0.0202%" height="15" fill="rgb(209,103,30)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1167.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="79.4266%" y="1141" width="0.0202%" height="15" fill="rgb(238,100,19)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1151.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="79.4266%" y="1125" width="0.0202%" height="15" fill="rgb(244,30,14)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1135.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="79.4266%" y="1109" width="0.0202%" height="15" fill="rgb(249,174,6)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1119.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="79.4266%" y="1093" width="0.0202%" height="15" fill="rgb(235,213,41)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1103.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="79.4266%" y="1077" width="0.0202%" height="15" fill="rgb(213,118,6)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1087.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="79.4266%" y="1061" width="0.0202%" height="15" fill="rgb(235,44,51)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1071.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="79.4266%" y="1045" width="0.0202%" height="15" fill="rgb(217,9,53)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1055.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="79.4266%" y="1029" width="0.0202%" height="15" fill="rgb(237,172,34)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1039.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="79.4266%" y="1013" width="0.0202%" height="15" fill="rgb(206,206,11)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1023.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="79.4266%" y="997" width="0.0202%" height="15" fill="rgb(214,149,29)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="1007.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="79.4266%" y="981" width="0.0202%" height="15" fill="rgb(208,123,3)" fg:x="3934" fg:w="1"/><text x="79.6766%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect x="79.4266%" y="1381" width="0.0404%" height="15" fill="rgb(229,126,4)" fg:x="3934" fg:w="2"/><text x="79.6766%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="79.4266%" y="1365" width="0.0404%" height="15" fill="rgb(222,92,36)" fg:x="3934" fg:w="2"/><text x="79.6766%" y="1375.50"></text></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect x="79.4266%" y="1349" width="0.0404%" height="15" fill="rgb(216,39,41)" fg:x="3934" fg:w="2"/><text x="79.6766%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect x="79.4266%" y="1333" width="0.0404%" height="15" fill="rgb(253,127,28)" fg:x="3934" fg:w="2"/><text x="79.6766%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="79.4266%" y="1317" width="0.0404%" height="15" fill="rgb(249,152,51)" fg:x="3934" fg:w="2"/><text x="79.6766%" y="1327.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect x="79.4468%" y="1301" width="0.0202%" height="15" fill="rgb(209,123,42)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1311.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="79.4468%" y="1285" width="0.0202%" height="15" fill="rgb(241,118,22)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1295.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="79.4468%" y="1269" width="0.0202%" height="15" fill="rgb(208,25,7)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1279.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="79.4468%" y="1253" width="0.0202%" height="15" fill="rgb(243,144,39)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="79.4468%" y="1237" width="0.0202%" height="15" fill="rgb(250,50,5)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="79.4468%" y="1221" width="0.0202%" height="15" fill="rgb(207,67,11)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1231.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="79.4468%" y="1205" width="0.0202%" height="15" fill="rgb(245,204,40)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1215.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="79.4468%" y="1189" width="0.0202%" height="15" fill="rgb(238,228,24)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1199.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="79.4468%" y="1173" width="0.0202%" height="15" fill="rgb(217,116,22)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1183.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="79.4468%" y="1157" width="0.0202%" height="15" fill="rgb(234,98,12)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1167.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="79.4468%" y="1141" width="0.0202%" height="15" fill="rgb(242,170,50)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1151.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="79.4468%" y="1125" width="0.0202%" height="15" fill="rgb(235,7,5)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1135.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="79.4468%" y="1109" width="0.0202%" height="15" fill="rgb(241,114,28)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1119.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="79.4468%" y="1093" width="0.0202%" height="15" fill="rgb(246,112,42)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1103.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="79.4468%" y="1077" width="0.0202%" height="15" fill="rgb(248,228,14)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1087.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="79.4468%" y="1061" width="0.0202%" height="15" fill="rgb(208,133,18)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1071.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="79.4468%" y="1045" width="0.0202%" height="15" fill="rgb(207,35,49)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1055.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="79.4468%" y="1029" width="0.0202%" height="15" fill="rgb(205,68,36)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1039.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="79.4468%" y="1013" width="0.0202%" height="15" fill="rgb(245,62,40)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1023.50"></text></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect x="79.4468%" y="997" width="0.0202%" height="15" fill="rgb(228,27,24)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="1007.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect x="79.4468%" y="981" width="0.0202%" height="15" fill="rgb(253,19,12)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="991.50"></text></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect x="79.4468%" y="965" width="0.0202%" height="15" fill="rgb(232,28,20)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="975.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="79.4468%" y="949" width="0.0202%" height="15" fill="rgb(218,35,51)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="959.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="79.4468%" y="933" width="0.0202%" height="15" fill="rgb(212,90,40)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="943.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="79.4468%" y="917" width="0.0202%" height="15" fill="rgb(220,172,12)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="927.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="79.4468%" y="901" width="0.0202%" height="15" fill="rgb(226,159,20)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="911.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="79.4468%" y="885" width="0.0202%" height="15" fill="rgb(234,205,16)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="895.50"></text></g><g><title>phn_merge (1 samples, 0.02%)</title><rect x="79.4468%" y="869" width="0.0202%" height="15" fill="rgb(207,9,39)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="879.50"></text></g><g><title>phn_merge_ordered (1 samples, 0.02%)</title><rect x="79.4468%" y="853" width="0.0202%" height="15" fill="rgb(249,143,15)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="863.50"></text></g><g><title>phn_prev_set (1 samples, 0.02%)</title><rect x="79.4468%" y="837" width="0.0202%" height="15" fill="rgb(253,133,29)" fg:x="3935" fg:w="1"/><text x="79.6968%" y="847.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (1 samples, 0.02%)</title><rect x="79.4670%" y="1157" width="0.0202%" height="15" fill="rgb(221,187,0)" fg:x="3936" fg:w="1"/><text x="79.7170%" y="1167.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.04%)</title><rect x="79.4670%" y="1269" width="0.0404%" height="15" fill="rgb(205,204,26)" fg:x="3936" fg:w="2"/><text x="79.7170%" y="1279.50"></text></g><g><title>isfree (2 samples, 0.04%)</title><rect x="79.4670%" y="1253" width="0.0404%" height="15" fill="rgb(224,68,54)" fg:x="3936" fg:w="2"/><text x="79.7170%" y="1263.50"></text></g><g><title>isdalloct (2 samples, 0.04%)</title><rect x="79.4670%" y="1237" width="0.0404%" height="15" fill="rgb(209,67,4)" fg:x="3936" fg:w="2"/><text x="79.7170%" y="1247.50"></text></g><g><title>arena_sdalloc (2 samples, 0.04%)</title><rect x="79.4670%" y="1221" width="0.0404%" height="15" fill="rgb(228,229,18)" fg:x="3936" fg:w="2"/><text x="79.7170%" y="1231.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.04%)</title><rect x="79.4670%" y="1205" width="0.0404%" height="15" fill="rgb(231,89,13)" fg:x="3936" fg:w="2"/><text x="79.7170%" y="1215.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.04%)</title><rect x="79.4670%" y="1189" width="0.0404%" height="15" fill="rgb(210,182,18)" fg:x="3936" fg:w="2"/><text x="79.7170%" y="1199.50"></text></g><g><title>tcache_bin_flush_bottom (2 samples, 0.04%)</title><rect x="79.4670%" y="1173" width="0.0404%" height="15" fill="rgb(240,105,2)" fg:x="3936" fg:w="2"/><text x="79.7170%" y="1183.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="79.4872%" y="1157" width="0.0202%" height="15" fill="rgb(207,170,50)" fg:x="3937" fg:w="1"/><text x="79.7372%" y="1167.50"></text></g><g><title>arena_decay_ticks (1 samples, 0.02%)</title><rect x="79.4872%" y="1141" width="0.0202%" height="15" fill="rgb(232,133,24)" fg:x="3937" fg:w="1"/><text x="79.7372%" y="1151.50"></text></g><g><title>_rjem_je_arena_decay (1 samples, 0.02%)</title><rect x="79.4872%" y="1125" width="0.0202%" height="15" fill="rgb(235,166,27)" fg:x="3937" fg:w="1"/><text x="79.7372%" y="1135.50"></text></g><g><title>arena_decay_dirty (1 samples, 0.02%)</title><rect x="79.4872%" y="1109" width="0.0202%" height="15" fill="rgb(209,19,13)" fg:x="3937" fg:w="1"/><text x="79.7372%" y="1119.50"></text></g><g><title>arena_decay_impl (1 samples, 0.02%)</title><rect x="79.4872%" y="1093" width="0.0202%" height="15" fill="rgb(226,79,39)" fg:x="3937" fg:w="1"/><text x="79.7372%" y="1103.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="79.4872%" y="1077" width="0.0202%" height="15" fill="rgb(222,163,10)" fg:x="3937" fg:w="1"/><text x="79.7372%" y="1087.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="79.4872%" y="1061" width="0.0202%" height="15" fill="rgb(214,44,19)" fg:x="3937" fg:w="1"/><text x="79.7372%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="79.5074%" y="1253" width="0.0202%" height="15" fill="rgb(210,217,13)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="79.5074%" y="1237" width="0.0202%" height="15" fill="rgb(237,61,54)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="79.5074%" y="1221" width="0.0202%" height="15" fill="rgb(226,184,24)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="79.5074%" y="1205" width="0.0202%" height="15" fill="rgb(223,226,4)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="79.5074%" y="1189" width="0.0202%" height="15" fill="rgb(210,26,41)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="79.5074%" y="1173" width="0.0202%" height="15" fill="rgb(220,221,6)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1183.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="79.5074%" y="1157" width="0.0202%" height="15" fill="rgb(225,89,49)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1167.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="79.5074%" y="1141" width="0.0202%" height="15" fill="rgb(218,70,45)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1151.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="79.5074%" y="1125" width="0.0202%" height="15" fill="rgb(238,166,21)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1135.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="79.5074%" y="1109" width="0.0202%" height="15" fill="rgb(224,141,44)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1119.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="79.5074%" y="1093" width="0.0202%" height="15" fill="rgb(230,12,49)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1103.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="79.5074%" y="1077" width="0.0202%" height="15" fill="rgb(212,174,12)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1087.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="79.5074%" y="1061" width="0.0202%" height="15" fill="rgb(246,67,9)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1071.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="79.5074%" y="1045" width="0.0202%" height="15" fill="rgb(239,35,23)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1055.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="79.5074%" y="1029" width="0.0202%" height="15" fill="rgb(211,167,0)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1039.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="79.5074%" y="1013" width="0.0202%" height="15" fill="rgb(225,119,45)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1023.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="79.5074%" y="997" width="0.0202%" height="15" fill="rgb(210,162,6)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="1007.50"></text></g><g><title>bitmap_unset (1 samples, 0.02%)</title><rect x="79.5074%" y="981" width="0.0202%" height="15" fill="rgb(208,118,35)" fg:x="3938" fg:w="1"/><text x="79.7574%" y="991.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="79.4670%" y="1301" width="0.1413%" height="15" fill="rgb(239,4,53)" fg:x="3936" fg:w="7"/><text x="79.7170%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (7 samples, 0.14%)</title><rect x="79.4670%" y="1285" width="0.1413%" height="15" fill="rgb(213,130,21)" fg:x="3936" fg:w="7"/><text x="79.7170%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Event&gt; (5 samples, 0.10%)</title><rect x="79.5074%" y="1269" width="0.1009%" height="15" fill="rgb(235,148,0)" fg:x="3938" fg:w="5"/><text x="79.7574%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (4 samples, 0.08%)</title><rect x="79.5276%" y="1253" width="0.0808%" height="15" fill="rgb(244,224,18)" fg:x="3939" fg:w="4"/><text x="79.7776%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.04%)</title><rect x="79.5679%" y="1237" width="0.0404%" height="15" fill="rgb(211,214,4)" fg:x="3941" fg:w="2"/><text x="79.8179%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.04%)</title><rect x="79.5679%" y="1221" width="0.0404%" height="15" fill="rgb(206,119,25)" fg:x="3941" fg:w="2"/><text x="79.8179%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.04%)</title><rect x="79.5679%" y="1205" width="0.0404%" height="15" fill="rgb(243,93,47)" fg:x="3941" fg:w="2"/><text x="79.8179%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="79.5679%" y="1189" width="0.0404%" height="15" fill="rgb(224,194,6)" fg:x="3941" fg:w="2"/><text x="79.8179%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="79.5679%" y="1173" width="0.0404%" height="15" fill="rgb(243,229,6)" fg:x="3941" fg:w="2"/><text x="79.8179%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="79.5679%" y="1157" width="0.0404%" height="15" fill="rgb(207,23,50)" fg:x="3941" fg:w="2"/><text x="79.8179%" y="1167.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="79.5679%" y="1141" width="0.0404%" height="15" fill="rgb(253,192,32)" fg:x="3941" fg:w="2"/><text x="79.8179%" y="1151.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.04%)</title><rect x="79.5679%" y="1125" width="0.0404%" height="15" fill="rgb(213,21,6)" fg:x="3941" fg:w="2"/><text x="79.8179%" y="1135.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect x="79.5679%" y="1109" width="0.0404%" height="15" fill="rgb(243,151,13)" fg:x="3941" fg:w="2"/><text x="79.8179%" y="1119.50"></text></g><g><title>free_fastpath (2 samples, 0.04%)</title><rect x="79.5679%" y="1093" width="0.0404%" height="15" fill="rgb(233,165,41)" fg:x="3941" fg:w="2"/><text x="79.8179%" y="1103.50"></text></g><g><title>te_free_fastpath_ctx (2 samples, 0.04%)</title><rect x="79.5679%" y="1077" width="0.0404%" height="15" fill="rgb(246,176,45)" fg:x="3941" fg:w="2"/><text x="79.8179%" y="1087.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="79.6285%" y="1253" width="0.0202%" height="15" fill="rgb(217,170,52)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="79.6285%" y="1237" width="0.0202%" height="15" fill="rgb(214,203,54)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="79.6285%" y="1221" width="0.0202%" height="15" fill="rgb(248,215,49)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1231.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="79.6285%" y="1205" width="0.0202%" height="15" fill="rgb(208,46,10)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1215.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="79.6285%" y="1189" width="0.0202%" height="15" fill="rgb(254,5,31)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1199.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="79.6285%" y="1173" width="0.0202%" height="15" fill="rgb(222,104,33)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1183.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="79.6285%" y="1157" width="0.0202%" height="15" fill="rgb(248,49,16)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1167.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="79.6285%" y="1141" width="0.0202%" height="15" fill="rgb(232,198,41)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1151.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="79.6285%" y="1125" width="0.0202%" height="15" fill="rgb(214,125,3)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1135.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="79.6285%" y="1109" width="0.0202%" height="15" fill="rgb(229,220,28)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1119.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="79.6285%" y="1093" width="0.0202%" height="15" fill="rgb(222,64,37)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1103.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="79.6285%" y="1077" width="0.0202%" height="15" fill="rgb(249,184,13)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1087.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="79.6285%" y="1061" width="0.0202%" height="15" fill="rgb(252,176,6)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1071.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="79.6285%" y="1045" width="0.0202%" height="15" fill="rgb(228,153,7)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1055.50"></text></g><g><title>arena_slab_regind (1 samples, 0.02%)</title><rect x="79.6285%" y="1029" width="0.0202%" height="15" fill="rgb(242,193,5)" fg:x="3944" fg:w="1"/><text x="79.8785%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (10 samples, 0.20%)</title><rect x="79.4670%" y="1381" width="0.2019%" height="15" fill="rgb(232,140,9)" fg:x="3936" fg:w="10"/><text x="79.7170%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.20%)</title><rect x="79.4670%" y="1365" width="0.2019%" height="15" fill="rgb(213,222,16)" fg:x="3936" fg:w="10"/><text x="79.7170%" y="1375.50"></text></g><g><title>core::mem::drop (10 samples, 0.20%)</title><rect x="79.4670%" y="1349" width="0.2019%" height="15" fill="rgb(222,75,50)" fg:x="3936" fg:w="10"/><text x="79.7170%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (10 samples, 0.20%)</title><rect x="79.4670%" y="1333" width="0.2019%" height="15" fill="rgb(205,180,2)" fg:x="3936" fg:w="10"/><text x="79.7170%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.20%)</title><rect x="79.4670%" y="1317" width="0.2019%" height="15" fill="rgb(216,34,7)" fg:x="3936" fg:w="10"/><text x="79.7170%" y="1327.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.06%)</title><rect x="79.6083%" y="1301" width="0.0606%" height="15" fill="rgb(253,16,32)" fg:x="3943" fg:w="3"/><text x="79.8583%" y="1311.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="79.6285%" y="1285" width="0.0404%" height="15" fill="rgb(208,97,28)" fg:x="3944" fg:w="2"/><text x="79.8785%" y="1295.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="79.6285%" y="1269" width="0.0404%" height="15" fill="rgb(225,92,11)" fg:x="3944" fg:w="2"/><text x="79.8785%" y="1279.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="79.6487%" y="1253" width="0.0202%" height="15" fill="rgb(243,38,12)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1263.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect x="79.6487%" y="1237" width="0.0202%" height="15" fill="rgb(208,139,16)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1247.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="79.6487%" y="1221" width="0.0202%" height="15" fill="rgb(227,24,9)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1231.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="79.6487%" y="1205" width="0.0202%" height="15" fill="rgb(206,62,11)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="79.6487%" y="1189" width="0.0202%" height="15" fill="rgb(228,134,27)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="79.6487%" y="1173" width="0.0202%" height="15" fill="rgb(205,55,33)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1183.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="79.6487%" y="1157" width="0.0202%" height="15" fill="rgb(243,75,43)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1167.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="79.6487%" y="1141" width="0.0202%" height="15" fill="rgb(223,27,42)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1151.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="79.6487%" y="1125" width="0.0202%" height="15" fill="rgb(232,189,33)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1135.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="79.6487%" y="1109" width="0.0202%" height="15" fill="rgb(210,9,39)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1119.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="79.6487%" y="1093" width="0.0202%" height="15" fill="rgb(242,85,26)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1103.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="79.6487%" y="1077" width="0.0202%" height="15" fill="rgb(248,44,4)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1087.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="79.6487%" y="1061" width="0.0202%" height="15" fill="rgb(250,96,46)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1071.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="79.6487%" y="1045" width="0.0202%" height="15" fill="rgb(229,116,26)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1055.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="79.6487%" y="1029" width="0.0202%" height="15" fill="rgb(246,94,34)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1039.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="79.6487%" y="1013" width="0.0202%" height="15" fill="rgb(251,73,21)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1023.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="79.6487%" y="997" width="0.0202%" height="15" fill="rgb(254,121,25)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="1007.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="79.6487%" y="981" width="0.0202%" height="15" fill="rgb(215,161,49)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="991.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="79.6487%" y="965" width="0.0202%" height="15" fill="rgb(221,43,13)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="975.50"></text></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect x="79.6487%" y="949" width="0.0202%" height="15" fill="rgb(249,5,37)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="959.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect x="79.6487%" y="933" width="0.0202%" height="15" fill="rgb(226,25,44)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="943.50"></text></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect x="79.6487%" y="917" width="0.0202%" height="15" fill="rgb(238,189,16)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="927.50"></text></g><g><title>extent_merge_impl (1 samples, 0.02%)</title><rect x="79.6487%" y="901" width="0.0202%" height="15" fill="rgb(251,186,8)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="911.50"></text></g><g><title>_rjem_je_emap_merge_prepare (1 samples, 0.02%)</title><rect x="79.6487%" y="885" width="0.0202%" height="15" fill="rgb(254,34,31)" fg:x="3945" fg:w="1"/><text x="79.8987%" y="895.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="79.6689%" y="1333" width="0.0202%" height="15" fill="rgb(225,215,27)" fg:x="3946" fg:w="1"/><text x="79.9189%" y="1343.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="79.6689%" y="1317" width="0.0202%" height="15" fill="rgb(221,192,48)" fg:x="3946" fg:w="1"/><text x="79.9189%" y="1327.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="79.6689%" y="1301" width="0.0202%" height="15" fill="rgb(219,137,20)" fg:x="3946" fg:w="1"/><text x="79.9189%" y="1311.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="79.6689%" y="1285" width="0.0202%" height="15" fill="rgb(219,84,11)" fg:x="3946" fg:w="1"/><text x="79.9189%" y="1295.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="79.6689%" y="1269" width="0.0202%" height="15" fill="rgb(224,10,23)" fg:x="3946" fg:w="1"/><text x="79.9189%" y="1279.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="79.6689%" y="1253" width="0.0202%" height="15" fill="rgb(248,22,39)" fg:x="3946" fg:w="1"/><text x="79.9189%" y="1263.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="79.6689%" y="1237" width="0.0202%" height="15" fill="rgb(212,154,20)" fg:x="3946" fg:w="1"/><text x="79.9189%" y="1247.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="79.6689%" y="1221" width="0.0202%" height="15" fill="rgb(236,199,50)" fg:x="3946" fg:w="1"/><text x="79.9189%" y="1231.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="79.6689%" y="1205" width="0.0202%" height="15" fill="rgb(211,9,17)" fg:x="3946" fg:w="1"/><text x="79.9189%" y="1215.50"></text></g><g><title>arena_slab_regind (1 samples, 0.02%)</title><rect x="79.6689%" y="1189" width="0.0202%" height="15" fill="rgb(243,216,36)" fg:x="3946" fg:w="1"/><text x="79.9189%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Price&gt;&gt; (1 samples, 0.02%)</title><rect x="79.6891%" y="1317" width="0.0202%" height="15" fill="rgb(250,2,10)" fg:x="3947" fg:w="1"/><text x="79.9391%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Price&gt;&gt; (1 samples, 0.02%)</title><rect x="79.6891%" y="1301" width="0.0202%" height="15" fill="rgb(226,50,48)" fg:x="3947" fg:w="1"/><text x="79.9391%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="79.6891%" y="1285" width="0.0202%" height="15" fill="rgb(243,81,16)" fg:x="3947" fg:w="1"/><text x="79.9391%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="79.6891%" y="1269" width="0.0202%" height="15" fill="rgb(250,14,2)" fg:x="3947" fg:w="1"/><text x="79.9391%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="79.6891%" y="1253" width="0.0202%" height="15" fill="rgb(233,135,29)" fg:x="3947" fg:w="1"/><text x="79.9391%" y="1263.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="79.6891%" y="1237" width="0.0202%" height="15" fill="rgb(224,64,43)" fg:x="3947" fg:w="1"/><text x="79.9391%" y="1247.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="79.6891%" y="1221" width="0.0202%" height="15" fill="rgb(238,84,13)" fg:x="3947" fg:w="1"/><text x="79.9391%" y="1231.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="79.6891%" y="1205" width="0.0202%" height="15" fill="rgb(253,48,26)" fg:x="3947" fg:w="1"/><text x="79.9391%" y="1215.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="79.6891%" y="1189" width="0.0202%" height="15" fill="rgb(205,223,31)" fg:x="3947" fg:w="1"/><text x="79.9391%" y="1199.50"></text></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect x="79.6891%" y="1173" width="0.0202%" height="15" fill="rgb(221,41,32)" fg:x="3947" fg:w="1"/><text x="79.9391%" y="1183.50"></text></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.02%)</title><rect x="79.7093%" y="1125" width="0.0202%" height="15" fill="rgb(213,158,31)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="1135.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="79.7093%" y="1109" width="0.0202%" height="15" fill="rgb(245,126,43)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="1119.50"></text></g><g><title>tcache_gc_large (1 samples, 0.02%)</title><rect x="79.7093%" y="1093" width="0.0202%" height="15" fill="rgb(227,7,22)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="1103.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (1 samples, 0.02%)</title><rect x="79.7093%" y="1077" width="0.0202%" height="15" fill="rgb(252,90,44)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="1087.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="79.7093%" y="1061" width="0.0202%" height="15" fill="rgb(253,91,0)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="1071.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="79.7093%" y="1045" width="0.0202%" height="15" fill="rgb(252,175,49)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="1055.50"></text></g><g><title>_rjem_je_large_dalloc_finish (1 samples, 0.02%)</title><rect x="79.7093%" y="1029" width="0.0202%" height="15" fill="rgb(246,150,1)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="1039.50"></text></g><g><title>large_dalloc_finish_impl (1 samples, 0.02%)</title><rect x="79.7093%" y="1013" width="0.0202%" height="15" fill="rgb(241,192,25)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="1023.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="79.7093%" y="997" width="0.0202%" height="15" fill="rgb(239,187,11)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="1007.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="79.7093%" y="981" width="0.0202%" height="15" fill="rgb(218,202,51)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="991.50"></text></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect x="79.7093%" y="965" width="0.0202%" height="15" fill="rgb(225,176,8)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="975.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect x="79.7093%" y="949" width="0.0202%" height="15" fill="rgb(219,122,41)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="959.50"></text></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect x="79.7093%" y="933" width="0.0202%" height="15" fill="rgb(248,140,20)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="943.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="79.7093%" y="917" width="0.0202%" height="15" fill="rgb(245,41,37)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="927.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="79.7093%" y="901" width="0.0202%" height="15" fill="rgb(235,82,39)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="911.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="79.7093%" y="885" width="0.0202%" height="15" fill="rgb(230,108,42)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="895.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="79.7093%" y="869" width="0.0202%" height="15" fill="rgb(215,150,50)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="879.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="79.7093%" y="853" width="0.0202%" height="15" fill="rgb(233,212,5)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="863.50"></text></g><g><title>phn_next_get (1 samples, 0.02%)</title><rect x="79.7093%" y="837" width="0.0202%" height="15" fill="rgb(245,80,22)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="847.50"></text></g><g><title>phn_link_get (1 samples, 0.02%)</title><rect x="79.7093%" y="821" width="0.0202%" height="15" fill="rgb(238,129,16)" fg:x="3948" fg:w="1"/><text x="79.9593%" y="831.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="79.7295%" y="1013" width="0.0202%" height="15" fill="rgb(240,19,0)" fg:x="3949" fg:w="1"/><text x="79.9795%" y="1023.50"></text></g><g><title>bitmap_unset (1 samples, 0.02%)</title><rect x="79.7295%" y="997" width="0.0202%" height="15" fill="rgb(232,42,35)" fg:x="3949" fg:w="1"/><text x="79.9795%" y="1007.50"></text></g><g><title>arena_get (1 samples, 0.02%)</title><rect x="79.7496%" y="1013" width="0.0202%" height="15" fill="rgb(223,130,24)" fg:x="3950" fg:w="1"/><text x="79.9996%" y="1023.50"></text></g><g><title>_rjem_je_sdallocx_default (4 samples, 0.08%)</title><rect x="79.7093%" y="1141" width="0.0808%" height="15" fill="rgb(237,16,22)" fg:x="3948" fg:w="4"/><text x="79.9593%" y="1151.50"></text></g><g><title>isfree (3 samples, 0.06%)</title><rect x="79.7295%" y="1125" width="0.0606%" height="15" fill="rgb(248,192,20)" fg:x="3949" fg:w="3"/><text x="79.9795%" y="1135.50"></text></g><g><title>isdalloct (3 samples, 0.06%)</title><rect x="79.7295%" y="1109" width="0.0606%" height="15" fill="rgb(233,167,2)" fg:x="3949" fg:w="3"/><text x="79.9795%" y="1119.50"></text></g><g><title>arena_sdalloc (3 samples, 0.06%)</title><rect x="79.7295%" y="1093" width="0.0606%" height="15" fill="rgb(252,71,44)" fg:x="3949" fg:w="3"/><text x="79.9795%" y="1103.50"></text></g><g><title>tcache_dalloc_small (3 samples, 0.06%)</title><rect x="79.7295%" y="1077" width="0.0606%" height="15" fill="rgb(238,37,47)" fg:x="3949" fg:w="3"/><text x="79.9795%" y="1087.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.06%)</title><rect x="79.7295%" y="1061" width="0.0606%" height="15" fill="rgb(214,202,54)" fg:x="3949" fg:w="3"/><text x="79.9795%" y="1071.50"></text></g><g><title>tcache_bin_flush_bottom (3 samples, 0.06%)</title><rect x="79.7295%" y="1045" width="0.0606%" height="15" fill="rgb(254,165,40)" fg:x="3949" fg:w="3"/><text x="79.9795%" y="1055.50"></text></g><g><title>tcache_bin_flush_impl (3 samples, 0.06%)</title><rect x="79.7295%" y="1029" width="0.0606%" height="15" fill="rgb(246,173,38)" fg:x="3949" fg:w="3"/><text x="79.9795%" y="1039.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="79.7698%" y="1013" width="0.0202%" height="15" fill="rgb(215,3,27)" fg:x="3951" fg:w="1"/><text x="80.0198%" y="1023.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="79.7698%" y="997" width="0.0202%" height="15" fill="rgb(239,169,51)" fg:x="3951" fg:w="1"/><text x="80.0198%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.12%)</title><rect x="79.7093%" y="1205" width="0.1211%" height="15" fill="rgb(212,5,25)" fg:x="3948" fg:w="6"/><text x="79.9593%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.12%)</title><rect x="79.7093%" y="1189" width="0.1211%" height="15" fill="rgb(243,45,17)" fg:x="3948" fg:w="6"/><text x="79.9593%" y="1199.50"></text></g><g><title>__rust_dealloc (6 samples, 0.12%)</title><rect x="79.7093%" y="1173" width="0.1211%" height="15" fill="rgb(242,97,9)" fg:x="3948" fg:w="6"/><text x="79.9593%" y="1183.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (6 samples, 0.12%)</title><rect x="79.7093%" y="1157" width="0.1211%" height="15" fill="rgb(228,71,31)" fg:x="3948" fg:w="6"/><text x="79.9593%" y="1167.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect x="79.7900%" y="1141" width="0.0404%" height="15" fill="rgb(252,184,16)" fg:x="3952" fg:w="2"/><text x="80.0400%" y="1151.50"></text></g><g><title>free_fastpath (2 samples, 0.04%)</title><rect x="79.7900%" y="1125" width="0.0404%" height="15" fill="rgb(236,169,46)" fg:x="3952" fg:w="2"/><text x="80.0400%" y="1135.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="79.8102%" y="1109" width="0.0202%" height="15" fill="rgb(207,17,47)" fg:x="3953" fg:w="1"/><text x="80.0602%" y="1119.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect x="79.8102%" y="1093" width="0.0202%" height="15" fill="rgb(206,201,28)" fg:x="3953" fg:w="1"/><text x="80.0602%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.14%)</title><rect x="79.7093%" y="1301" width="0.1413%" height="15" fill="rgb(224,184,23)" fg:x="3948" fg:w="7"/><text x="79.9593%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::SeatCategory]&gt; (7 samples, 0.14%)</title><rect x="79.7093%" y="1285" width="0.1413%" height="15" fill="rgb(208,139,48)" fg:x="3948" fg:w="7"/><text x="79.9593%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt; (7 samples, 0.14%)</title><rect x="79.7093%" y="1269" width="0.1413%" height="15" fill="rgb(208,130,10)" fg:x="3948" fg:w="7"/><text x="79.9593%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (7 samples, 0.14%)</title><rect x="79.7093%" y="1253" width="0.1413%" height="15" fill="rgb(211,213,45)" fg:x="3948" fg:w="7"/><text x="79.9593%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (7 samples, 0.14%)</title><rect x="79.7093%" y="1237" width="0.1413%" height="15" fill="rgb(235,100,30)" fg:x="3948" fg:w="7"/><text x="79.9593%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.14%)</title><rect x="79.7093%" y="1221" width="0.1413%" height="15" fill="rgb(206,144,31)" fg:x="3948" fg:w="7"/><text x="79.9593%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (1 samples, 0.02%)</title><rect x="79.8304%" y="1205" width="0.0202%" height="15" fill="rgb(224,200,26)" fg:x="3954" fg:w="1"/><text x="80.0804%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (9 samples, 0.18%)</title><rect x="79.7093%" y="1317" width="0.1817%" height="15" fill="rgb(247,104,53)" fg:x="3948" fg:w="9"/><text x="79.9593%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (2 samples, 0.04%)</title><rect x="79.8506%" y="1301" width="0.0404%" height="15" fill="rgb(220,14,17)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="79.8506%" y="1285" width="0.0404%" height="15" fill="rgb(230,140,40)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="79.8506%" y="1269" width="0.0404%" height="15" fill="rgb(229,2,41)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="79.8506%" y="1253" width="0.0404%" height="15" fill="rgb(232,89,16)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1263.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="79.8506%" y="1237" width="0.0404%" height="15" fill="rgb(247,59,52)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1247.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.04%)</title><rect x="79.8506%" y="1221" width="0.0404%" height="15" fill="rgb(226,110,21)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1231.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.04%)</title><rect x="79.8506%" y="1205" width="0.0404%" height="15" fill="rgb(224,176,43)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1215.50"></text></g><g><title>isfree (2 samples, 0.04%)</title><rect x="79.8506%" y="1189" width="0.0404%" height="15" fill="rgb(221,73,6)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1199.50"></text></g><g><title>isdalloct (2 samples, 0.04%)</title><rect x="79.8506%" y="1173" width="0.0404%" height="15" fill="rgb(232,78,19)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1183.50"></text></g><g><title>arena_sdalloc (2 samples, 0.04%)</title><rect x="79.8506%" y="1157" width="0.0404%" height="15" fill="rgb(233,112,48)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1167.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.04%)</title><rect x="79.8506%" y="1141" width="0.0404%" height="15" fill="rgb(243,131,47)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1151.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.04%)</title><rect x="79.8506%" y="1125" width="0.0404%" height="15" fill="rgb(226,51,1)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1135.50"></text></g><g><title>tcache_bin_flush_bottom (2 samples, 0.04%)</title><rect x="79.8506%" y="1109" width="0.0404%" height="15" fill="rgb(247,58,7)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1119.50"></text></g><g><title>tcache_bin_flush_impl (2 samples, 0.04%)</title><rect x="79.8506%" y="1093" width="0.0404%" height="15" fill="rgb(209,7,32)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1103.50"></text></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.04%)</title><rect x="79.8506%" y="1077" width="0.0404%" height="15" fill="rgb(209,39,41)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1087.50"></text></g><g><title>bitmap_unset (2 samples, 0.04%)</title><rect x="79.8506%" y="1061" width="0.0404%" height="15" fill="rgb(226,182,46)" fg:x="3955" fg:w="2"/><text x="80.1006%" y="1071.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="79.8910%" y="1173" width="0.0202%" height="15" fill="rgb(230,219,10)" fg:x="3957" fg:w="1"/><text x="80.1410%" y="1183.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="79.8910%" y="1157" width="0.0202%" height="15" fill="rgb(227,175,30)" fg:x="3957" fg:w="1"/><text x="80.1410%" y="1167.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="79.8910%" y="1141" width="0.0202%" height="15" fill="rgb(217,2,50)" fg:x="3957" fg:w="1"/><text x="80.1410%" y="1151.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="79.8910%" y="1125" width="0.0202%" height="15" fill="rgb(229,160,0)" fg:x="3957" fg:w="1"/><text x="80.1410%" y="1135.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="79.8910%" y="1109" width="0.0202%" height="15" fill="rgb(207,78,37)" fg:x="3957" fg:w="1"/><text x="80.1410%" y="1119.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="79.8910%" y="1093" width="0.0202%" height="15" fill="rgb(225,57,0)" fg:x="3957" fg:w="1"/><text x="80.1410%" y="1103.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="79.8910%" y="1077" width="0.0202%" height="15" fill="rgb(232,154,2)" fg:x="3957" fg:w="1"/><text x="80.1410%" y="1087.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="79.8910%" y="1061" width="0.0202%" height="15" fill="rgb(241,212,25)" fg:x="3957" fg:w="1"/><text x="80.1410%" y="1071.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="79.8910%" y="1045" width="0.0202%" height="15" fill="rgb(226,69,20)" fg:x="3957" fg:w="1"/><text x="80.1410%" y="1055.50"></text></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect x="79.8910%" y="1029" width="0.0202%" height="15" fill="rgb(247,184,54)" fg:x="3957" fg:w="1"/><text x="80.1410%" y="1039.50"></text></g><g><title>[unknown] (3,859 samples, 77.91%)</title><rect x="2.0190%" y="1589" width="77.9124%" height="15" fill="rgb(210,145,0)" fg:x="100" fg:w="3859"/><text x="2.2690%" y="1599.50">[unknown]</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog (3,859 samples, 77.91%)</title><rect x="2.0190%" y="1573" width="77.9124%" height="15" fill="rgb(253,82,12)" fg:x="100" fg:w="3859"/><text x="2.2690%" y="1583.50">deserialize_struct::bench_citm_catalog_CitmCatalog</text></g><g><title>?? (3,859 samples, 77.91%)</title><rect x="2.0190%" y="1557" width="77.9124%" height="15" fill="rgb(245,42,11)" fg:x="100" fg:w="3859"/><text x="2.2690%" y="1567.50">??</text></g><g><title>?? (3,859 samples, 77.91%)</title><rect x="2.0190%" y="1541" width="77.9124%" height="15" fill="rgb(219,147,32)" fg:x="100" fg:w="3859"/><text x="2.2690%" y="1551.50">??</text></g><g><title>criterion::routine::Routine::profile (3,859 samples, 77.91%)</title><rect x="2.0190%" y="1525" width="77.9124%" height="15" fill="rgb(246,12,7)" fg:x="100" fg:w="3859"/><text x="2.2690%" y="1535.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (571 samples, 11.53%)</title><rect x="68.4030%" y="1509" width="11.5284%" height="15" fill="rgb(243,50,9)" fg:x="3388" fg:w="571"/><text x="68.6530%" y="1519.50">&lt;criterion::routi..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}} (571 samples, 11.53%)</title><rect x="68.4030%" y="1493" width="11.5284%" height="15" fill="rgb(219,149,6)" fg:x="3388" fg:w="571"/><text x="68.6530%" y="1503.50">deserialize_struc..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched (571 samples, 11.53%)</title><rect x="68.4030%" y="1477" width="11.5284%" height="15" fill="rgb(241,51,42)" fg:x="3388" fg:w="571"/><text x="68.6530%" y="1487.50">criterion::benche..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;&gt;&gt; (25 samples, 0.50%)</title><rect x="79.4266%" y="1461" width="0.5047%" height="15" fill="rgb(226,128,27)" fg:x="3934" fg:w="25"/><text x="79.6766%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.50%)</title><rect x="79.4266%" y="1445" width="0.5047%" height="15" fill="rgb(244,144,4)" fg:x="3934" fg:w="25"/><text x="79.6766%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;]&gt; (25 samples, 0.50%)</title><rect x="79.4266%" y="1429" width="0.5047%" height="15" fill="rgb(221,4,13)" fg:x="3934" fg:w="25"/><text x="79.6766%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;&gt; (25 samples, 0.50%)</title><rect x="79.4266%" y="1413" width="0.5047%" height="15" fill="rgb(208,170,28)" fg:x="3934" fg:w="25"/><text x="79.6766%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (25 samples, 0.50%)</title><rect x="79.4266%" y="1397" width="0.5047%" height="15" fill="rgb(226,131,13)" fg:x="3934" fg:w="25"/><text x="79.6766%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Performance&gt;&gt; (13 samples, 0.26%)</title><rect x="79.6689%" y="1381" width="0.2625%" height="15" fill="rgb(215,72,41)" fg:x="3946" fg:w="13"/><text x="79.9189%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.26%)</title><rect x="79.6689%" y="1365" width="0.2625%" height="15" fill="rgb(243,108,20)" fg:x="3946" fg:w="13"/><text x="79.9189%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::Performance]&gt; (13 samples, 0.26%)</title><rect x="79.6689%" y="1349" width="0.2625%" height="15" fill="rgb(230,189,17)" fg:x="3946" fg:w="13"/><text x="79.9189%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (12 samples, 0.24%)</title><rect x="79.6891%" y="1333" width="0.2423%" height="15" fill="rgb(220,50,17)" fg:x="3947" fg:w="12"/><text x="79.9391%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect x="79.8910%" y="1317" width="0.0404%" height="15" fill="rgb(248,152,48)" fg:x="3957" fg:w="2"/><text x="80.1410%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.04%)</title><rect x="79.8910%" y="1301" width="0.0404%" height="15" fill="rgb(244,91,11)" fg:x="3957" fg:w="2"/><text x="80.1410%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.04%)</title><rect x="79.8910%" y="1285" width="0.0404%" height="15" fill="rgb(220,157,5)" fg:x="3957" fg:w="2"/><text x="80.1410%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.04%)</title><rect x="79.8910%" y="1269" width="0.0404%" height="15" fill="rgb(253,137,8)" fg:x="3957" fg:w="2"/><text x="80.1410%" y="1279.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="79.8910%" y="1253" width="0.0404%" height="15" fill="rgb(217,137,51)" fg:x="3957" fg:w="2"/><text x="80.1410%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="79.8910%" y="1237" width="0.0404%" height="15" fill="rgb(218,209,53)" fg:x="3957" fg:w="2"/><text x="80.1410%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="79.8910%" y="1221" width="0.0404%" height="15" fill="rgb(249,137,25)" fg:x="3957" fg:w="2"/><text x="80.1410%" y="1231.50"></text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="79.8910%" y="1205" width="0.0404%" height="15" fill="rgb(239,155,26)" fg:x="3957" fg:w="2"/><text x="80.1410%" y="1215.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.04%)</title><rect x="79.8910%" y="1189" width="0.0404%" height="15" fill="rgb(227,85,46)" fg:x="3957" fg:w="2"/><text x="80.1410%" y="1199.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="79.9112%" y="1173" width="0.0202%" height="15" fill="rgb(251,107,43)" fg:x="3958" fg:w="1"/><text x="80.1612%" y="1183.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="79.9112%" y="1157" width="0.0202%" height="15" fill="rgb(234,170,33)" fg:x="3958" fg:w="1"/><text x="80.1612%" y="1167.50"></text></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect x="79.9112%" y="1141" width="0.0202%" height="15" fill="rgb(206,29,35)" fg:x="3958" fg:w="1"/><text x="80.1612%" y="1151.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="79.9314%" y="1589" width="0.0202%" height="15" fill="rgb(227,138,25)" fg:x="3959" fg:w="1"/><text x="80.1814%" y="1599.50"></text></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (1 samples, 0.02%)</title><rect x="79.9314%" y="1573" width="0.0202%" height="15" fill="rgb(249,131,35)" fg:x="3959" fg:w="1"/><text x="80.1814%" y="1583.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (1 samples, 0.02%)</title><rect x="79.9314%" y="1557" width="0.0202%" height="15" fill="rgb(239,6,40)" fg:x="3959" fg:w="1"/><text x="80.1814%" y="1567.50"></text></g><g><title>_rjem_je_edata_heap_remove_first (1 samples, 0.02%)</title><rect x="79.9314%" y="1541" width="0.0202%" height="15" fill="rgb(246,136,47)" fg:x="3959" fg:w="1"/><text x="80.1814%" y="1551.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (2 samples, 0.04%)</title><rect x="79.9515%" y="1573" width="0.0404%" height="15" fill="rgb(253,58,26)" fg:x="3960" fg:w="2"/><text x="80.2015%" y="1583.50"></text></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.08%)</title><rect x="79.9515%" y="1589" width="0.0808%" height="15" fill="rgb(237,141,10)" fg:x="3960" fg:w="4"/><text x="80.2015%" y="1599.50"></text></g><g><title>_rjem_je_hook_invoke_alloc (2 samples, 0.04%)</title><rect x="79.9919%" y="1573" width="0.0404%" height="15" fill="rgb(234,156,12)" fg:x="3962" fg:w="2"/><text x="80.2419%" y="1583.50"></text></g><g><title>criterion::Criterion&lt;M&gt;::configure_from_args (1 samples, 0.02%)</title><rect x="80.0323%" y="1333" width="0.0202%" height="15" fill="rgb(243,224,36)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1343.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="80.0323%" y="1317" width="0.0202%" height="15" fill="rgb(205,229,51)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1327.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="80.0323%" y="1301" width="0.0202%" height="15" fill="rgb(223,189,4)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1311.50"></text></g><g><title>criterion::Criterion&lt;M&gt;::configure_from_args (1 samples, 0.02%)</title><rect x="80.0323%" y="1285" width="0.0202%" height="15" fill="rgb(249,167,54)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1295.50"></text></g><g><title>clap_builder::builder::command::Command::_do_parse (1 samples, 0.02%)</title><rect x="80.0323%" y="1269" width="0.0202%" height="15" fill="rgb(218,34,28)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1279.50"></text></g><g><title>clap_builder::parser::parser::Parser::get_matches_with (1 samples, 0.02%)</title><rect x="80.0323%" y="1253" width="0.0202%" height="15" fill="rgb(232,109,42)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1263.50"></text></g><g><title>clap_builder::parser::parser::Parser::resolve_pending (1 samples, 0.02%)</title><rect x="80.0323%" y="1237" width="0.0202%" height="15" fill="rgb(248,214,46)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1247.50"></text></g><g><title>clap_builder::parser::parser::Parser::react (1 samples, 0.02%)</title><rect x="80.0323%" y="1221" width="0.0202%" height="15" fill="rgb(244,216,40)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1231.50"></text></g><g><title>clap_builder::parser::parser::Parser::start_custom_arg (1 samples, 0.02%)</title><rect x="80.0323%" y="1205" width="0.0202%" height="15" fill="rgb(231,226,31)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1215.50"></text></g><g><title>clap_builder::parser::parser::Parser::start_custom_arg (1 samples, 0.02%)</title><rect x="80.0323%" y="1189" width="0.0202%" height="15" fill="rgb(238,38,43)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1199.50"></text></g><g><title>clap_builder::parser::matches::matched_arg::MatchedArg::new_val_group (1 samples, 0.02%)</title><rect x="80.0323%" y="1173" width="0.0202%" height="15" fill="rgb(208,88,43)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1183.50"></text></g><g><title>clap_builder::parser::matches::matched_arg::MatchedArg::new_val_group (1 samples, 0.02%)</title><rect x="80.0323%" y="1157" width="0.0202%" height="15" fill="rgb(205,136,37)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="80.0323%" y="1141" width="0.0202%" height="15" fill="rgb(237,34,14)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="80.0323%" y="1125" width="0.0202%" height="15" fill="rgb(236,193,44)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="80.0323%" y="1109" width="0.0202%" height="15" fill="rgb(231,48,10)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1119.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="80.0323%" y="1093" width="0.0202%" height="15" fill="rgb(213,141,34)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1103.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="80.0323%" y="1077" width="0.0202%" height="15" fill="rgb(249,130,34)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1087.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="80.0323%" y="1061" width="0.0202%" height="15" fill="rgb(219,42,41)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1071.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="80.0323%" y="1045" width="0.0202%" height="15" fill="rgb(224,100,54)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1055.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="80.0323%" y="1029" width="0.0202%" height="15" fill="rgb(229,200,27)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1039.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="80.0323%" y="1013" width="0.0202%" height="15" fill="rgb(217,118,10)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1023.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="80.0323%" y="997" width="0.0202%" height="15" fill="rgb(206,22,3)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="1007.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="80.0323%" y="981" width="0.0202%" height="15" fill="rgb(232,163,46)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="991.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="80.0323%" y="965" width="0.0202%" height="15" fill="rgb(206,95,13)" fg:x="3964" fg:w="1"/><text x="80.2823%" y="975.50"></text></g><g><title>&lt;criterion::Criterion as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="80.0525%" y="1317" width="0.0202%" height="15" fill="rgb(253,154,18)" fg:x="3965" fg:w="1"/><text x="80.3025%" y="1327.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="80.0525%" y="1301" width="0.0202%" height="15" fill="rgb(219,32,23)" fg:x="3965" fg:w="1"/><text x="80.3025%" y="1311.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="80.0525%" y="1285" width="0.0202%" height="15" fill="rgb(230,191,45)" fg:x="3965" fg:w="1"/><text x="80.3025%" y="1295.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="80.0525%" y="1269" width="0.0202%" height="15" fill="rgb(229,64,36)" fg:x="3965" fg:w="1"/><text x="80.3025%" y="1279.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.02%)</title><rect x="80.0525%" y="1253" width="0.0202%" height="15" fill="rgb(205,129,25)" fg:x="3965" fg:w="1"/><text x="80.3025%" y="1263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="80.0525%" y="1237" width="0.0202%" height="15" fill="rgb(254,112,7)" fg:x="3965" fg:w="1"/><text x="80.3025%" y="1247.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (1 samples, 0.02%)</title><rect x="80.0525%" y="1221" width="0.0202%" height="15" fill="rgb(226,53,48)" fg:x="3965" fg:w="1"/><text x="80.3025%" y="1231.50"></text></g><g><title>criterion::Criterion&lt;M&gt;::configure_from_args (1 samples, 0.02%)</title><rect x="80.0727%" y="1317" width="0.0202%" height="15" fill="rgb(214,153,38)" fg:x="3966" fg:w="1"/><text x="80.3227%" y="1327.50"></text></g><g><title>criterion::debug_enabled (1 samples, 0.02%)</title><rect x="80.0727%" y="1301" width="0.0202%" height="15" fill="rgb(243,101,7)" fg:x="3966" fg:w="1"/><text x="80.3227%" y="1311.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="80.0727%" y="1285" width="0.0202%" height="15" fill="rgb(240,140,22)" fg:x="3966" fg:w="1"/><text x="80.3227%" y="1295.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="80.0727%" y="1269" width="0.0202%" height="15" fill="rgb(235,114,2)" fg:x="3966" fg:w="1"/><text x="80.3227%" y="1279.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="80.0727%" y="1253" width="0.0202%" height="15" fill="rgb(242,59,12)" fg:x="3966" fg:w="1"/><text x="80.3227%" y="1263.50"></text></g><g><title>criterion::Criterion&lt;M&gt;::configure_from_args (1 samples, 0.02%)</title><rect x="80.0727%" y="1237" width="0.0202%" height="15" fill="rgb(252,134,9)" fg:x="3966" fg:w="1"/><text x="80.3227%" y="1247.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="80.0727%" y="1221" width="0.0202%" height="15" fill="rgb(236,4,44)" fg:x="3966" fg:w="1"/><text x="80.3227%" y="1231.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="80.0727%" y="1205" width="0.0202%" height="15" fill="rgb(254,172,41)" fg:x="3966" fg:w="1"/><text x="80.3227%" y="1215.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="80.0929%" y="1013" width="0.0202%" height="15" fill="rgb(244,63,20)" fg:x="3967" fg:w="1"/><text x="80.3429%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="80.2342%" y="709" width="0.0808%" height="15" fill="rgb(250,73,31)" fg:x="3974" fg:w="4"/><text x="80.4842%" y="719.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="80.2342%" y="757" width="0.1009%" height="15" fill="rgb(241,38,36)" fg:x="3974" fg:w="5"/><text x="80.4842%" y="767.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="80.2342%" y="741" width="0.1009%" height="15" fill="rgb(245,211,2)" fg:x="3974" fg:w="5"/><text x="80.4842%" y="751.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="80.2342%" y="725" width="0.1009%" height="15" fill="rgb(206,120,28)" fg:x="3974" fg:w="5"/><text x="80.4842%" y="735.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="80.3150%" y="709" width="0.0202%" height="15" fill="rgb(211,59,34)" fg:x="3978" fg:w="1"/><text x="80.5650%" y="719.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect x="80.3150%" y="693" width="0.0202%" height="15" fill="rgb(233,168,5)" fg:x="3978" fg:w="1"/><text x="80.5650%" y="703.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect x="80.3150%" y="677" width="0.0202%" height="15" fill="rgb(234,33,13)" fg:x="3978" fg:w="1"/><text x="80.5650%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="80.3150%" y="661" width="0.0202%" height="15" fill="rgb(231,150,26)" fg:x="3978" fg:w="1"/><text x="80.5650%" y="671.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="80.3150%" y="645" width="0.0202%" height="15" fill="rgb(217,191,4)" fg:x="3978" fg:w="1"/><text x="80.5650%" y="655.50"></text></g><g><title>&lt;u32 as core::num::FromStrRadixHelper&gt;::checked_add (1 samples, 0.02%)</title><rect x="80.3957%" y="693" width="0.0202%" height="15" fill="rgb(246,198,38)" fg:x="3982" fg:w="1"/><text x="80.6457%" y="703.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_add (1 samples, 0.02%)</title><rect x="80.3957%" y="677" width="0.0202%" height="15" fill="rgb(245,64,37)" fg:x="3982" fg:w="1"/><text x="80.6457%" y="687.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="80.3957%" y="661" width="0.0202%" height="15" fill="rgb(250,30,36)" fg:x="3982" fg:w="1"/><text x="80.6457%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17 samples, 0.34%)</title><rect x="80.1938%" y="821" width="0.3432%" height="15" fill="rgb(217,86,53)" fg:x="3972" fg:w="17"/><text x="80.4438%" y="831.50"></text></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize (15 samples, 0.30%)</title><rect x="80.2342%" y="805" width="0.3028%" height="15" fill="rgb(228,157,16)" fg:x="3974" fg:w="15"/><text x="80.4842%" y="815.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (15 samples, 0.30%)</title><rect x="80.2342%" y="789" width="0.3028%" height="15" fill="rgb(217,59,31)" fg:x="3974" fg:w="15"/><text x="80.4842%" y="799.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 0.30%)</title><rect x="80.2342%" y="773" width="0.3028%" height="15" fill="rgb(237,138,41)" fg:x="3974" fg:w="15"/><text x="80.4842%" y="783.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (10 samples, 0.20%)</title><rect x="80.3352%" y="757" width="0.2019%" height="15" fill="rgb(227,91,49)" fg:x="3979" fg:w="10"/><text x="80.5852%" y="767.50"></text></g><g><title>&lt;&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize::Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_str (10 samples, 0.20%)</title><rect x="80.3352%" y="741" width="0.2019%" height="15" fill="rgb(247,21,44)" fg:x="3979" fg:w="10"/><text x="80.5852%" y="751.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (10 samples, 0.20%)</title><rect x="80.3352%" y="725" width="0.2019%" height="15" fill="rgb(219,210,51)" fg:x="3979" fg:w="10"/><text x="80.5852%" y="735.50"></text></g><g><title>core::num::from_str_radix (10 samples, 0.20%)</title><rect x="80.3352%" y="709" width="0.2019%" height="15" fill="rgb(209,140,6)" fg:x="3979" fg:w="10"/><text x="80.5852%" y="719.50"></text></g><g><title>&lt;u32 as core::num::FromStrRadixHelper&gt;::checked_mul (6 samples, 0.12%)</title><rect x="80.4159%" y="693" width="0.1211%" height="15" fill="rgb(221,188,24)" fg:x="3983" fg:w="6"/><text x="80.6659%" y="703.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_mul (6 samples, 0.12%)</title><rect x="80.4159%" y="677" width="0.1211%" height="15" fill="rgb(232,154,20)" fg:x="3983" fg:w="6"/><text x="80.6659%" y="687.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_mul (6 samples, 0.12%)</title><rect x="80.4159%" y="661" width="0.1211%" height="15" fill="rgb(244,137,50)" fg:x="3983" fg:w="6"/><text x="80.6659%" y="671.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="80.5370%" y="805" width="0.0202%" height="15" fill="rgb(225,185,43)" fg:x="3989" fg:w="1"/><text x="80.7870%" y="815.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (20 samples, 0.40%)</title><rect x="80.1938%" y="837" width="0.4038%" height="15" fill="rgb(213,205,38)" fg:x="3972" fg:w="20"/><text x="80.4438%" y="847.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="80.5370%" y="821" width="0.0606%" height="15" fill="rgb(236,73,12)" fg:x="3989" fg:w="3"/><text x="80.7870%" y="831.50"></text></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect x="80.5572%" y="805" width="0.0404%" height="15" fill="rgb(235,219,13)" fg:x="3990" fg:w="2"/><text x="80.8072%" y="815.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="80.5572%" y="789" width="0.0404%" height="15" fill="rgb(218,59,36)" fg:x="3990" fg:w="2"/><text x="80.8072%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.06%)</title><rect x="80.5976%" y="757" width="0.0606%" height="15" fill="rgb(205,110,39)" fg:x="3992" fg:w="3"/><text x="80.8476%" y="767.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for ()&gt;::deserialize (2 samples, 0.04%)</title><rect x="80.6582%" y="709" width="0.0404%" height="15" fill="rgb(218,206,42)" fg:x="3995" fg:w="2"/><text x="80.9082%" y="719.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_unit (2 samples, 0.04%)</title><rect x="80.6582%" y="693" width="0.0404%" height="15" fill="rgb(248,125,24)" fg:x="3995" fg:w="2"/><text x="80.9082%" y="703.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="80.6582%" y="677" width="0.0404%" height="15" fill="rgb(242,28,27)" fg:x="3995" fg:w="2"/><text x="80.9082%" y="687.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::next_n (2 samples, 0.04%)</title><rect x="80.6582%" y="661" width="0.0404%" height="15" fill="rgb(216,228,15)" fg:x="3995" fg:w="2"/><text x="80.9082%" y="671.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="80.6986%" y="661" width="0.0202%" height="15" fill="rgb(235,116,46)" fg:x="3997" fg:w="1"/><text x="80.9486%" y="671.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="80.6986%" y="645" width="0.0202%" height="15" fill="rgb(224,18,32)" fg:x="3997" fg:w="1"/><text x="80.9486%" y="655.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="80.6986%" y="629" width="0.0202%" height="15" fill="rgb(252,5,12)" fg:x="3997" fg:w="1"/><text x="80.9486%" y="639.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="80.6986%" y="613" width="0.0202%" height="15" fill="rgb(251,36,5)" fg:x="3997" fg:w="1"/><text x="80.9486%" y="623.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="80.7188%" y="405" width="0.0202%" height="15" fill="rgb(217,53,14)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="415.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="80.7188%" y="389" width="0.0202%" height="15" fill="rgb(215,86,45)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="399.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="80.7188%" y="373" width="0.0202%" height="15" fill="rgb(242,169,11)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="383.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="80.7188%" y="357" width="0.0202%" height="15" fill="rgb(211,213,45)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="367.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="80.7188%" y="341" width="0.0202%" height="15" fill="rgb(205,88,11)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="351.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="80.7188%" y="325" width="0.0202%" height="15" fill="rgb(252,69,26)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="335.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="80.7188%" y="309" width="0.0202%" height="15" fill="rgb(246,123,37)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="319.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="80.7188%" y="293" width="0.0202%" height="15" fill="rgb(212,205,5)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="303.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="80.7188%" y="277" width="0.0202%" height="15" fill="rgb(253,148,0)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="287.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="80.7188%" y="261" width="0.0202%" height="15" fill="rgb(239,22,4)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="271.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="80.7188%" y="245" width="0.0202%" height="15" fill="rgb(226,26,53)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="255.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="80.7188%" y="229" width="0.0202%" height="15" fill="rgb(225,229,45)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="239.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="80.7188%" y="213" width="0.0202%" height="15" fill="rgb(220,60,37)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="223.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="80.7188%" y="197" width="0.0202%" height="15" fill="rgb(217,180,35)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="207.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="80.7188%" y="181" width="0.0202%" height="15" fill="rgb(229,7,53)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="191.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="80.7188%" y="165" width="0.0202%" height="15" fill="rgb(254,137,3)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="175.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="80.7188%" y="149" width="0.0202%" height="15" fill="rgb(215,140,41)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="159.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="80.7188%" y="133" width="0.0202%" height="15" fill="rgb(250,80,15)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="143.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="80.7188%" y="117" width="0.0202%" height="15" fill="rgb(252,191,6)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="127.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="80.7188%" y="101" width="0.0202%" height="15" fill="rgb(246,217,18)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="111.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="80.7188%" y="85" width="0.0202%" height="15" fill="rgb(223,93,7)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="95.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="80.7188%" y="69" width="0.0202%" height="15" fill="rgb(225,55,52)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="79.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="80.7188%" y="53" width="0.0202%" height="15" fill="rgb(240,31,24)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="63.50"></text></g><g><title>phn_next_set (1 samples, 0.02%)</title><rect x="80.7188%" y="37" width="0.0202%" height="15" fill="rgb(205,56,52)" fg:x="3998" fg:w="1"/><text x="80.9688%" y="47.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="80.7389%" y="373" width="0.0202%" height="15" fill="rgb(246,146,12)" fg:x="3999" fg:w="1"/><text x="80.9889%" y="383.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="80.7389%" y="357" width="0.0202%" height="15" fill="rgb(239,84,36)" fg:x="3999" fg:w="1"/><text x="80.9889%" y="367.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (4 samples, 0.08%)</title><rect x="80.6986%" y="709" width="0.0808%" height="15" fill="rgb(207,41,40)" fg:x="3997" fg:w="4"/><text x="80.9486%" y="719.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (4 samples, 0.08%)</title><rect x="80.6986%" y="693" width="0.0808%" height="15" fill="rgb(241,179,25)" fg:x="3997" fg:w="4"/><text x="80.9486%" y="703.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.08%)</title><rect x="80.6986%" y="677" width="0.0808%" height="15" fill="rgb(210,0,34)" fg:x="3997" fg:w="4"/><text x="80.9486%" y="687.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.06%)</title><rect x="80.7188%" y="661" width="0.0606%" height="15" fill="rgb(225,217,29)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="671.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.06%)</title><rect x="80.7188%" y="645" width="0.0606%" height="15" fill="rgb(216,191,38)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="655.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.06%)</title><rect x="80.7188%" y="629" width="0.0606%" height="15" fill="rgb(232,140,52)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.06%)</title><rect x="80.7188%" y="613" width="0.0606%" height="15" fill="rgb(223,158,51)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.06%)</title><rect x="80.7188%" y="597" width="0.0606%" height="15" fill="rgb(235,29,51)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect x="80.7188%" y="581" width="0.0606%" height="15" fill="rgb(215,181,18)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect x="80.7188%" y="565" width="0.0606%" height="15" fill="rgb(227,125,34)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.06%)</title><rect x="80.7188%" y="549" width="0.0606%" height="15" fill="rgb(230,197,49)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="559.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="80.7188%" y="533" width="0.0606%" height="15" fill="rgb(239,141,16)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="543.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="80.7188%" y="517" width="0.0606%" height="15" fill="rgb(225,105,43)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="527.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="80.7188%" y="501" width="0.0606%" height="15" fill="rgb(214,131,14)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="80.7188%" y="485" width="0.0606%" height="15" fill="rgb(229,177,11)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="495.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="80.7188%" y="469" width="0.0606%" height="15" fill="rgb(231,180,14)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="479.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="80.7188%" y="453" width="0.0606%" height="15" fill="rgb(232,88,2)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="463.50"></text></g><g><title>__rust_alloc (3 samples, 0.06%)</title><rect x="80.7188%" y="437" width="0.0606%" height="15" fill="rgb(205,220,8)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="447.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.06%)</title><rect x="80.7188%" y="421" width="0.0606%" height="15" fill="rgb(225,23,53)" fg:x="3998" fg:w="3"/><text x="80.9688%" y="431.50"></text></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect x="80.7389%" y="405" width="0.0404%" height="15" fill="rgb(213,62,29)" fg:x="3999" fg:w="2"/><text x="80.9889%" y="415.50"></text></g><g><title>imalloc_fastpath (2 samples, 0.04%)</title><rect x="80.7389%" y="389" width="0.0404%" height="15" fill="rgb(227,75,7)" fg:x="3999" fg:w="2"/><text x="80.9889%" y="399.50"></text></g><g><title>sz_size2index_usize_fastpath (1 samples, 0.02%)</title><rect x="80.7591%" y="373" width="0.0202%" height="15" fill="rgb(207,105,14)" fg:x="4000" fg:w="1"/><text x="81.0091%" y="383.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect x="80.7591%" y="357" width="0.0202%" height="15" fill="rgb(245,62,29)" fg:x="4000" fg:w="1"/><text x="81.0091%" y="367.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="80.8197%" y="629" width="0.0202%" height="15" fill="rgb(236,202,4)" fg:x="4003" fg:w="1"/><text x="81.0697%" y="639.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="80.8197%" y="613" width="0.0202%" height="15" fill="rgb(250,67,1)" fg:x="4003" fg:w="1"/><text x="81.0697%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="80.8197%" y="597" width="0.0202%" height="15" fill="rgb(253,115,44)" fg:x="4003" fg:w="1"/><text x="81.0697%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="80.8601%" y="597" width="0.0202%" height="15" fill="rgb(251,139,18)" fg:x="4005" fg:w="1"/><text x="81.1101%" y="607.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="80.8601%" y="581" width="0.0202%" height="15" fill="rgb(218,22,32)" fg:x="4005" fg:w="1"/><text x="81.1101%" y="591.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="80.8601%" y="565" width="0.0202%" height="15" fill="rgb(243,53,5)" fg:x="4005" fg:w="1"/><text x="81.1101%" y="575.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="80.8601%" y="549" width="0.0202%" height="15" fill="rgb(227,56,16)" fg:x="4005" fg:w="1"/><text x="81.1101%" y="559.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect x="80.8601%" y="533" width="0.0202%" height="15" fill="rgb(245,53,0)" fg:x="4005" fg:w="1"/><text x="81.1101%" y="543.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="80.8601%" y="517" width="0.0202%" height="15" fill="rgb(216,170,35)" fg:x="4005" fg:w="1"/><text x="81.1101%" y="527.50"></text></g><g><title>emap_alloc_ctx_lookup (1 samples, 0.02%)</title><rect x="80.8601%" y="501" width="0.0202%" height="15" fill="rgb(211,200,8)" fg:x="4005" fg:w="1"/><text x="81.1101%" y="511.50"></text></g><g><title>rtree_metadata_read (1 samples, 0.02%)</title><rect x="80.8601%" y="485" width="0.0202%" height="15" fill="rgb(228,204,44)" fg:x="4005" fg:w="1"/><text x="81.1101%" y="495.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="80.8601%" y="469" width="0.0202%" height="15" fill="rgb(214,121,17)" fg:x="4005" fg:w="1"/><text x="81.1101%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.10%)</title><rect x="80.8197%" y="661" width="0.1009%" height="15" fill="rgb(233,64,38)" fg:x="4003" fg:w="5"/><text x="81.0697%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.10%)</title><rect x="80.8197%" y="645" width="0.1009%" height="15" fill="rgb(253,54,19)" fg:x="4003" fg:w="5"/><text x="81.0697%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect x="80.8399%" y="629" width="0.0808%" height="15" fill="rgb(253,94,18)" fg:x="4004" fg:w="4"/><text x="81.0899%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.08%)</title><rect x="80.8399%" y="613" width="0.0808%" height="15" fill="rgb(227,57,52)" fg:x="4004" fg:w="4"/><text x="81.0899%" y="623.50"></text></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect x="80.8803%" y="597" width="0.0404%" height="15" fill="rgb(230,228,50)" fg:x="4006" fg:w="2"/><text x="81.1303%" y="607.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="80.9005%" y="581" width="0.0202%" height="15" fill="rgb(217,205,27)" fg:x="4007" fg:w="1"/><text x="81.1505%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="80.9005%" y="565" width="0.0202%" height="15" fill="rgb(252,71,50)" fg:x="4007" fg:w="1"/><text x="81.1505%" y="575.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="80.9005%" y="549" width="0.0202%" height="15" fill="rgb(209,86,4)" fg:x="4007" fg:w="1"/><text x="81.1505%" y="559.50"></text></g><g><title>sonic_rs::reader::Reader::next (2 samples, 0.04%)</title><rect x="81.0014%" y="613" width="0.0404%" height="15" fill="rgb(229,94,0)" fg:x="4012" fg:w="2"/><text x="81.2514%" y="623.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="81.0014%" y="597" width="0.0404%" height="15" fill="rgb(252,223,21)" fg:x="4012" fg:w="2"/><text x="81.2514%" y="607.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="81.0014%" y="629" width="0.0606%" height="15" fill="rgb(230,210,4)" fg:x="4012" fg:w="3"/><text x="81.2514%" y="639.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect x="81.0418%" y="613" width="0.0202%" height="15" fill="rgb(240,149,38)" fg:x="4014" fg:w="1"/><text x="81.2918%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="81.0418%" y="597" width="0.0202%" height="15" fill="rgb(254,105,20)" fg:x="4014" fg:w="1"/><text x="81.2918%" y="607.50"></text></g><g><title>serde::de::SeqAccess::next_element (5 samples, 0.10%)</title><rect x="81.0620%" y="629" width="0.1009%" height="15" fill="rgb(253,87,46)" fg:x="4015" fg:w="5"/><text x="81.3120%" y="639.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (1 samples, 0.02%)</title><rect x="81.1629%" y="565" width="0.0202%" height="15" fill="rgb(253,116,33)" fg:x="4020" fg:w="1"/><text x="81.4129%" y="575.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect x="81.1831%" y="565" width="0.0202%" height="15" fill="rgb(229,198,5)" fg:x="4021" fg:w="1"/><text x="81.4331%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect x="81.1831%" y="549" width="0.0202%" height="15" fill="rgb(242,38,37)" fg:x="4021" fg:w="1"/><text x="81.4331%" y="559.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (2 samples, 0.04%)</title><rect x="81.2437%" y="549" width="0.0404%" height="15" fill="rgb(242,69,53)" fg:x="4024" fg:w="2"/><text x="81.4937%" y="559.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (2 samples, 0.04%)</title><rect x="81.2437%" y="533" width="0.0404%" height="15" fill="rgb(249,80,16)" fg:x="4024" fg:w="2"/><text x="81.4937%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (3 samples, 0.06%)</title><rect x="81.2841%" y="549" width="0.0606%" height="15" fill="rgb(206,128,11)" fg:x="4026" fg:w="3"/><text x="81.5341%" y="559.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (29 samples, 0.59%)</title><rect x="80.7793%" y="709" width="0.5855%" height="15" fill="rgb(212,35,20)" fg:x="4001" fg:w="29"/><text x="81.0293%" y="719.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (29 samples, 0.59%)</title><rect x="80.7793%" y="693" width="0.5855%" height="15" fill="rgb(236,79,13)" fg:x="4001" fg:w="29"/><text x="81.0293%" y="703.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (28 samples, 0.57%)</title><rect x="80.7995%" y="677" width="0.5653%" height="15" fill="rgb(233,123,3)" fg:x="4002" fg:w="28"/><text x="81.0495%" y="687.50"></text></g><g><title>serde::de::SeqAccess::next_element (22 samples, 0.44%)</title><rect x="80.9207%" y="661" width="0.4442%" height="15" fill="rgb(214,93,52)" fg:x="4008" fg:w="22"/><text x="81.1707%" y="671.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (20 samples, 0.40%)</title><rect x="80.9610%" y="645" width="0.4038%" height="15" fill="rgb(251,37,40)" fg:x="4010" fg:w="20"/><text x="81.2110%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (10 samples, 0.20%)</title><rect x="81.1629%" y="629" width="0.2019%" height="15" fill="rgb(227,80,54)" fg:x="4020" fg:w="10"/><text x="81.4129%" y="639.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (10 samples, 0.20%)</title><rect x="81.1629%" y="613" width="0.2019%" height="15" fill="rgb(254,48,11)" fg:x="4020" fg:w="10"/><text x="81.4129%" y="623.50"></text></g><g><title>?? (10 samples, 0.20%)</title><rect x="81.1629%" y="597" width="0.2019%" height="15" fill="rgb(235,193,26)" fg:x="4020" fg:w="10"/><text x="81.4129%" y="607.50"></text></g><g><title>?? (10 samples, 0.20%)</title><rect x="81.1629%" y="581" width="0.2019%" height="15" fill="rgb(229,99,21)" fg:x="4020" fg:w="10"/><text x="81.4129%" y="591.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (8 samples, 0.16%)</title><rect x="81.2033%" y="565" width="0.1615%" height="15" fill="rgb(211,140,41)" fg:x="4022" fg:w="8"/><text x="81.4533%" y="575.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (1 samples, 0.02%)</title><rect x="81.3446%" y="549" width="0.0202%" height="15" fill="rgb(240,227,30)" fg:x="4029" fg:w="1"/><text x="81.5946%" y="559.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.02%)</title><rect x="81.3648%" y="677" width="0.0202%" height="15" fill="rgb(215,224,45)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="687.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="81.3648%" y="661" width="0.0202%" height="15" fill="rgb(206,123,31)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="671.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect x="81.3648%" y="645" width="0.0202%" height="15" fill="rgb(210,138,16)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="655.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.02%)</title><rect x="81.3648%" y="629" width="0.0202%" height="15" fill="rgb(228,57,28)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="639.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect x="81.3648%" y="613" width="0.0202%" height="15" fill="rgb(242,170,10)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="623.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="81.3648%" y="597" width="0.0202%" height="15" fill="rgb(228,214,39)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="607.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect x="81.3648%" y="581" width="0.0202%" height="15" fill="rgb(218,179,33)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect x="81.3648%" y="565" width="0.0202%" height="15" fill="rgb(235,193,39)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect x="81.3648%" y="549" width="0.0202%" height="15" fill="rgb(219,221,36)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="81.3648%" y="533" width="0.0202%" height="15" fill="rgb(248,218,19)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="81.3648%" y="517" width="0.0202%" height="15" fill="rgb(205,50,9)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="81.3648%" y="501" width="0.0202%" height="15" fill="rgb(238,81,28)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="511.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="81.3648%" y="485" width="0.0202%" height="15" fill="rgb(235,110,19)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="495.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="81.3648%" y="469" width="0.0202%" height="15" fill="rgb(214,7,14)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="479.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="81.3648%" y="453" width="0.0202%" height="15" fill="rgb(211,77,3)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="81.3648%" y="437" width="0.0202%" height="15" fill="rgb(229,5,9)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="447.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="81.3648%" y="421" width="0.0202%" height="15" fill="rgb(225,90,11)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="81.3648%" y="405" width="0.0202%" height="15" fill="rgb(242,56,8)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="415.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="81.3648%" y="389" width="0.0202%" height="15" fill="rgb(249,212,39)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="399.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="81.3648%" y="373" width="0.0202%" height="15" fill="rgb(236,90,9)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="383.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="81.3648%" y="357" width="0.0202%" height="15" fill="rgb(206,88,35)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="367.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="81.3648%" y="341" width="0.0202%" height="15" fill="rgb(205,126,30)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="351.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="81.3648%" y="325" width="0.0202%" height="15" fill="rgb(230,176,12)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="335.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="81.3648%" y="309" width="0.0202%" height="15" fill="rgb(243,19,9)" fg:x="4030" fg:w="1"/><text x="81.6148%" y="319.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::backward (1 samples, 0.02%)</title><rect x="81.3850%" y="661" width="0.0202%" height="15" fill="rgb(245,171,17)" fg:x="4031" fg:w="1"/><text x="81.6350%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (3 samples, 0.06%)</title><rect x="81.3648%" y="709" width="0.0606%" height="15" fill="rgb(227,52,21)" fg:x="4030" fg:w="3"/><text x="81.6148%" y="719.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (3 samples, 0.06%)</title><rect x="81.3648%" y="693" width="0.0606%" height="15" fill="rgb(238,69,14)" fg:x="4030" fg:w="3"/><text x="81.6148%" y="703.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="81.3850%" y="677" width="0.0404%" height="15" fill="rgb(241,156,39)" fg:x="4031" fg:w="2"/><text x="81.6350%" y="687.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="81.4052%" y="661" width="0.0202%" height="15" fill="rgb(212,227,28)" fg:x="4032" fg:w="1"/><text x="81.6552%" y="671.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="81.4052%" y="645" width="0.0202%" height="15" fill="rgb(209,118,27)" fg:x="4032" fg:w="1"/><text x="81.6552%" y="655.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="81.4052%" y="629" width="0.0202%" height="15" fill="rgb(226,102,5)" fg:x="4032" fg:w="1"/><text x="81.6552%" y="639.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="81.4052%" y="613" width="0.0202%" height="15" fill="rgb(223,34,3)" fg:x="4032" fg:w="1"/><text x="81.6552%" y="623.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="81.4052%" y="597" width="0.0202%" height="15" fill="rgb(221,81,38)" fg:x="4032" fg:w="1"/><text x="81.6552%" y="607.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="81.4456%" y="677" width="0.0202%" height="15" fill="rgb(236,219,28)" fg:x="4034" fg:w="1"/><text x="81.6956%" y="687.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="81.4456%" y="661" width="0.0202%" height="15" fill="rgb(213,200,14)" fg:x="4034" fg:w="1"/><text x="81.6956%" y="671.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (1 samples, 0.02%)</title><rect x="81.4456%" y="645" width="0.0202%" height="15" fill="rgb(240,33,19)" fg:x="4034" fg:w="1"/><text x="81.6956%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.02%)</title><rect x="81.4456%" y="629" width="0.0202%" height="15" fill="rgb(233,113,27)" fg:x="4034" fg:w="1"/><text x="81.6956%" y="639.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (41 samples, 0.83%)</title><rect x="80.6582%" y="757" width="0.8278%" height="15" fill="rgb(220,221,18)" fg:x="3995" fg:w="41"/><text x="80.9082%" y="767.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (41 samples, 0.83%)</title><rect x="80.6582%" y="741" width="0.8278%" height="15" fill="rgb(238,92,8)" fg:x="3995" fg:w="41"/><text x="80.9082%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (41 samples, 0.83%)</title><rect x="80.6582%" y="725" width="0.8278%" height="15" fill="rgb(222,164,16)" fg:x="3995" fg:w="41"/><text x="80.9082%" y="735.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (3 samples, 0.06%)</title><rect x="81.4254%" y="709" width="0.0606%" height="15" fill="rgb(241,119,3)" fg:x="4033" fg:w="3"/><text x="81.6754%" y="719.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (2 samples, 0.04%)</title><rect x="81.4456%" y="693" width="0.0404%" height="15" fill="rgb(241,44,8)" fg:x="4034" fg:w="2"/><text x="81.6956%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="81.4658%" y="677" width="0.0202%" height="15" fill="rgb(230,36,40)" fg:x="4035" fg:w="1"/><text x="81.7158%" y="687.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (4 samples, 0.08%)</title><rect x="81.6273%" y="661" width="0.0808%" height="15" fill="rgb(243,16,36)" fg:x="4043" fg:w="4"/><text x="81.8773%" y="671.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.04%)</title><rect x="81.6677%" y="645" width="0.0404%" height="15" fill="rgb(231,4,26)" fg:x="4045" fg:w="2"/><text x="81.9177%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect x="81.6677%" y="629" width="0.0404%" height="15" fill="rgb(240,9,31)" fg:x="4045" fg:w="2"/><text x="81.9177%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.04%)</title><rect x="81.6677%" y="613" width="0.0404%" height="15" fill="rgb(207,173,15)" fg:x="4045" fg:w="2"/><text x="81.9177%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.04%)</title><rect x="81.6677%" y="597" width="0.0404%" height="15" fill="rgb(224,192,53)" fg:x="4045" fg:w="2"/><text x="81.9177%" y="607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="81.7081%" y="613" width="0.0404%" height="15" fill="rgb(223,67,28)" fg:x="4047" fg:w="2"/><text x="81.9581%" y="623.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (1 samples, 0.02%)</title><rect x="81.7484%" y="613" width="0.0202%" height="15" fill="rgb(211,20,47)" fg:x="4049" fg:w="1"/><text x="81.9984%" y="623.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.02%)</title><rect x="81.7484%" y="597" width="0.0202%" height="15" fill="rgb(240,228,2)" fg:x="4049" fg:w="1"/><text x="81.9984%" y="607.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n::_{{closure}} (1 samples, 0.02%)</title><rect x="81.7484%" y="581" width="0.0202%" height="15" fill="rgb(248,151,12)" fg:x="4049" fg:w="1"/><text x="81.9984%" y="591.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="81.7484%" y="565" width="0.0202%" height="15" fill="rgb(244,8,39)" fg:x="4049" fg:w="1"/><text x="81.9984%" y="575.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="81.7484%" y="549" width="0.0202%" height="15" fill="rgb(222,26,8)" fg:x="4049" fg:w="1"/><text x="81.9984%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.24%)</title><rect x="81.5465%" y="725" width="0.2423%" height="15" fill="rgb(213,106,44)" fg:x="4039" fg:w="12"/><text x="81.7965%" y="735.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (8 samples, 0.16%)</title><rect x="81.6273%" y="709" width="0.1615%" height="15" fill="rgb(214,129,20)" fg:x="4043" fg:w="8"/><text x="81.8773%" y="719.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (8 samples, 0.16%)</title><rect x="81.6273%" y="693" width="0.1615%" height="15" fill="rgb(212,32,13)" fg:x="4043" fg:w="8"/><text x="81.8773%" y="703.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.16%)</title><rect x="81.6273%" y="677" width="0.1615%" height="15" fill="rgb(208,168,33)" fg:x="4043" fg:w="8"/><text x="81.8773%" y="687.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="81.7081%" y="661" width="0.0808%" height="15" fill="rgb(231,207,8)" fg:x="4047" fg:w="4"/><text x="81.9581%" y="671.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="81.7081%" y="645" width="0.0808%" height="15" fill="rgb(235,219,23)" fg:x="4047" fg:w="4"/><text x="81.9581%" y="655.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="81.7081%" y="629" width="0.0808%" height="15" fill="rgb(226,216,26)" fg:x="4047" fg:w="4"/><text x="81.9581%" y="639.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="81.7686%" y="613" width="0.0202%" height="15" fill="rgb(239,137,16)" fg:x="4050" fg:w="1"/><text x="82.0186%" y="623.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="81.7888%" y="709" width="0.0202%" height="15" fill="rgb(207,12,36)" fg:x="4051" fg:w="1"/><text x="82.0388%" y="719.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="81.8090%" y="709" width="0.0202%" height="15" fill="rgb(210,214,24)" fg:x="4052" fg:w="1"/><text x="82.0590%" y="719.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="81.8090%" y="693" width="0.0202%" height="15" fill="rgb(206,56,30)" fg:x="4052" fg:w="1"/><text x="82.0590%" y="703.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize (63 samples, 1.27%)</title><rect x="80.5976%" y="805" width="1.2720%" height="15" fill="rgb(228,143,26)" fg:x="3992" fg:w="63"/><text x="80.8476%" y="815.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (63 samples, 1.27%)</title><rect x="80.5976%" y="789" width="1.2720%" height="15" fill="rgb(216,218,46)" fg:x="3992" fg:w="63"/><text x="80.8476%" y="799.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (63 samples, 1.27%)</title><rect x="80.5976%" y="773" width="1.2720%" height="15" fill="rgb(206,6,19)" fg:x="3992" fg:w="63"/><text x="80.8476%" y="783.50"></text></g><g><title>serde::de::MapAccess::next_key (19 samples, 0.38%)</title><rect x="81.4860%" y="757" width="0.3836%" height="15" fill="rgb(239,177,51)" fg:x="4036" fg:w="19"/><text x="81.7360%" y="767.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (19 samples, 0.38%)</title><rect x="81.4860%" y="741" width="0.3836%" height="15" fill="rgb(216,55,25)" fg:x="4036" fg:w="19"/><text x="81.7360%" y="751.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="81.7888%" y="725" width="0.0808%" height="15" fill="rgb(231,163,29)" fg:x="4051" fg:w="4"/><text x="82.0388%" y="735.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (2 samples, 0.04%)</title><rect x="81.8292%" y="709" width="0.0404%" height="15" fill="rgb(232,149,50)" fg:x="4053" fg:w="2"/><text x="82.0792%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="81.8494%" y="693" width="0.0202%" height="15" fill="rgb(223,142,48)" fg:x="4054" fg:w="1"/><text x="82.0994%" y="703.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="81.8696%" y="757" width="0.0202%" height="15" fill="rgb(245,83,23)" fg:x="4055" fg:w="1"/><text x="82.1196%" y="767.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="81.8696%" y="741" width="0.0202%" height="15" fill="rgb(224,63,2)" fg:x="4055" fg:w="1"/><text x="82.1196%" y="751.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="81.8696%" y="725" width="0.0202%" height="15" fill="rgb(218,65,53)" fg:x="4055" fg:w="1"/><text x="82.1196%" y="735.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="81.8898%" y="501" width="0.0202%" height="15" fill="rgb(221,84,29)" fg:x="4056" fg:w="1"/><text x="82.1398%" y="511.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="81.8898%" y="485" width="0.0202%" height="15" fill="rgb(234,0,32)" fg:x="4056" fg:w="1"/><text x="82.1398%" y="495.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="81.8898%" y="469" width="0.0202%" height="15" fill="rgb(206,20,16)" fg:x="4056" fg:w="1"/><text x="82.1398%" y="479.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="81.8898%" y="453" width="0.0202%" height="15" fill="rgb(244,172,18)" fg:x="4056" fg:w="1"/><text x="82.1398%" y="463.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="81.8898%" y="437" width="0.0202%" height="15" fill="rgb(254,133,1)" fg:x="4056" fg:w="1"/><text x="82.1398%" y="447.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="81.8898%" y="421" width="0.0202%" height="15" fill="rgb(222,206,41)" fg:x="4056" fg:w="1"/><text x="82.1398%" y="431.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="81.8898%" y="405" width="0.0202%" height="15" fill="rgb(212,3,42)" fg:x="4056" fg:w="1"/><text x="82.1398%" y="415.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="81.8898%" y="389" width="0.0202%" height="15" fill="rgb(241,11,4)" fg:x="4056" fg:w="1"/><text x="82.1398%" y="399.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="81.8898%" y="373" width="0.0202%" height="15" fill="rgb(205,19,26)" fg:x="4056" fg:w="1"/><text x="82.1398%" y="383.50"></text></g><g><title>edata_nfree_get (1 samples, 0.02%)</title><rect x="81.8898%" y="357" width="0.0202%" height="15" fill="rgb(210,179,32)" fg:x="4056" fg:w="1"/><text x="82.1398%" y="367.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (4 samples, 0.08%)</title><rect x="81.8696%" y="805" width="0.0808%" height="15" fill="rgb(227,116,49)" fg:x="4055" fg:w="4"/><text x="82.1196%" y="815.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (4 samples, 0.08%)</title><rect x="81.8696%" y="789" width="0.0808%" height="15" fill="rgb(211,146,6)" fg:x="4055" fg:w="4"/><text x="82.1196%" y="799.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.08%)</title><rect x="81.8696%" y="773" width="0.0808%" height="15" fill="rgb(219,44,39)" fg:x="4055" fg:w="4"/><text x="82.1196%" y="783.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.06%)</title><rect x="81.8898%" y="757" width="0.0606%" height="15" fill="rgb(234,128,11)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="767.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.06%)</title><rect x="81.8898%" y="741" width="0.0606%" height="15" fill="rgb(220,183,53)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="751.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.06%)</title><rect x="81.8898%" y="725" width="0.0606%" height="15" fill="rgb(213,219,32)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.06%)</title><rect x="81.8898%" y="709" width="0.0606%" height="15" fill="rgb(232,156,16)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.06%)</title><rect x="81.8898%" y="693" width="0.0606%" height="15" fill="rgb(246,135,34)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect x="81.8898%" y="677" width="0.0606%" height="15" fill="rgb(241,99,0)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect x="81.8898%" y="661" width="0.0606%" height="15" fill="rgb(222,103,45)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.06%)</title><rect x="81.8898%" y="645" width="0.0606%" height="15" fill="rgb(212,57,4)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="655.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="81.8898%" y="629" width="0.0606%" height="15" fill="rgb(215,68,47)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="639.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="81.8898%" y="613" width="0.0606%" height="15" fill="rgb(230,84,2)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="623.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="81.8898%" y="597" width="0.0606%" height="15" fill="rgb(220,102,14)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.06%)</title><rect x="81.8898%" y="581" width="0.0606%" height="15" fill="rgb(240,10,32)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="591.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="81.8898%" y="565" width="0.0606%" height="15" fill="rgb(215,47,27)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="575.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.06%)</title><rect x="81.8898%" y="549" width="0.0606%" height="15" fill="rgb(233,188,43)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="559.50"></text></g><g><title>__rust_alloc (3 samples, 0.06%)</title><rect x="81.8898%" y="533" width="0.0606%" height="15" fill="rgb(253,190,1)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="543.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.06%)</title><rect x="81.8898%" y="517" width="0.0606%" height="15" fill="rgb(206,114,52)" fg:x="4056" fg:w="3"/><text x="82.1398%" y="527.50"></text></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect x="81.9100%" y="501" width="0.0404%" height="15" fill="rgb(233,120,37)" fg:x="4057" fg:w="2"/><text x="82.1600%" y="511.50"></text></g><g><title>imalloc_fastpath (2 samples, 0.04%)</title><rect x="81.9100%" y="485" width="0.0404%" height="15" fill="rgb(214,52,39)" fg:x="4057" fg:w="2"/><text x="82.1600%" y="495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="81.9503%" y="757" width="0.0202%" height="15" fill="rgb(223,80,29)" fg:x="4059" fg:w="1"/><text x="82.2003%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="81.9503%" y="741" width="0.0202%" height="15" fill="rgb(230,101,40)" fg:x="4059" fg:w="1"/><text x="82.2003%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="81.9503%" y="725" width="0.0202%" height="15" fill="rgb(219,211,8)" fg:x="4059" fg:w="1"/><text x="82.2003%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="81.9503%" y="709" width="0.0202%" height="15" fill="rgb(252,126,28)" fg:x="4059" fg:w="1"/><text x="82.2003%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="81.9503%" y="693" width="0.0202%" height="15" fill="rgb(215,56,38)" fg:x="4059" fg:w="1"/><text x="82.2003%" y="703.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="81.9503%" y="677" width="0.0202%" height="15" fill="rgb(249,55,44)" fg:x="4059" fg:w="1"/><text x="82.2003%" y="687.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="81.9503%" y="661" width="0.0202%" height="15" fill="rgb(220,221,32)" fg:x="4059" fg:w="1"/><text x="82.2003%" y="671.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="81.9503%" y="645" width="0.0202%" height="15" fill="rgb(212,216,41)" fg:x="4059" fg:w="1"/><text x="82.2003%" y="655.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect x="81.9503%" y="629" width="0.0202%" height="15" fill="rgb(228,213,43)" fg:x="4059" fg:w="1"/><text x="82.2003%" y="639.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="81.9503%" y="613" width="0.0202%" height="15" fill="rgb(211,31,26)" fg:x="4059" fg:w="1"/><text x="82.2003%" y="623.50"></text></g><g><title>aligned_usize_get (1 samples, 0.02%)</title><rect x="81.9503%" y="597" width="0.0202%" height="15" fill="rgb(229,202,19)" fg:x="4059" fg:w="1"/><text x="82.2003%" y="607.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_entry (89 samples, 1.80%)</title><rect x="80.1938%" y="869" width="1.7969%" height="15" fill="rgb(229,105,46)" fg:x="3972" fg:w="89"/><text x="80.4438%" y="879.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry_seed (89 samples, 1.80%)</title><rect x="80.1938%" y="853" width="1.7969%" height="15" fill="rgb(235,108,1)" fg:x="3972" fg:w="89"/><text x="80.4438%" y="863.50">s..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (69 samples, 1.39%)</title><rect x="80.5976%" y="837" width="1.3931%" height="15" fill="rgb(245,111,35)" fg:x="3992" fg:w="69"/><text x="80.8476%" y="847.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (69 samples, 1.39%)</title><rect x="80.5976%" y="821" width="1.3931%" height="15" fill="rgb(219,185,31)" fg:x="3992" fg:w="69"/><text x="80.8476%" y="831.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2 samples, 0.04%)</title><rect x="81.9503%" y="805" width="0.0404%" height="15" fill="rgb(214,4,43)" fg:x="4059" fg:w="2"/><text x="82.2003%" y="815.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2 samples, 0.04%)</title><rect x="81.9503%" y="789" width="0.0404%" height="15" fill="rgb(235,227,40)" fg:x="4059" fg:w="2"/><text x="82.2003%" y="799.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.04%)</title><rect x="81.9503%" y="773" width="0.0404%" height="15" fill="rgb(230,88,30)" fg:x="4059" fg:w="2"/><text x="82.2003%" y="783.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="81.9705%" y="757" width="0.0202%" height="15" fill="rgb(216,217,1)" fg:x="4060" fg:w="1"/><text x="82.2205%" y="767.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="81.9705%" y="741" width="0.0202%" height="15" fill="rgb(248,139,50)" fg:x="4060" fg:w="1"/><text x="82.2205%" y="751.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="81.9705%" y="725" width="0.0202%" height="15" fill="rgb(233,1,21)" fg:x="4060" fg:w="1"/><text x="82.2205%" y="735.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect x="81.9705%" y="709" width="0.0202%" height="15" fill="rgb(215,183,12)" fg:x="4060" fg:w="1"/><text x="82.2205%" y="719.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="81.9705%" y="693" width="0.0202%" height="15" fill="rgb(229,104,42)" fg:x="4060" fg:w="1"/><text x="82.2205%" y="703.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="81.9705%" y="677" width="0.0202%" height="15" fill="rgb(243,34,48)" fg:x="4060" fg:w="1"/><text x="82.2205%" y="687.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (1 samples, 0.02%)</title><rect x="81.9705%" y="661" width="0.0202%" height="15" fill="rgb(239,11,44)" fg:x="4060" fg:w="1"/><text x="82.2205%" y="671.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.02%)</title><rect x="81.9705%" y="645" width="0.0202%" height="15" fill="rgb(231,98,35)" fg:x="4060" fg:w="1"/><text x="82.2205%" y="655.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="81.9705%" y="629" width="0.0202%" height="15" fill="rgb(233,28,25)" fg:x="4060" fg:w="1"/><text x="82.2205%" y="639.50"></text></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as core::cmp::Ord&gt;::cmp (4 samples, 0.08%)</title><rect x="81.9907%" y="789" width="0.0808%" height="15" fill="rgb(234,123,11)" fg:x="4061" fg:w="4"/><text x="82.2407%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (4 samples, 0.08%)</title><rect x="81.9907%" y="773" width="0.0808%" height="15" fill="rgb(220,69,3)" fg:x="4061" fg:w="4"/><text x="82.2407%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="82.0715%" y="773" width="0.0202%" height="15" fill="rgb(214,64,36)" fg:x="4065" fg:w="1"/><text x="82.3215%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="82.0715%" y="757" width="0.0202%" height="15" fill="rgb(211,138,32)" fg:x="4065" fg:w="1"/><text x="82.3215%" y="767.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="82.0715%" y="741" width="0.0202%" height="15" fill="rgb(213,118,47)" fg:x="4065" fg:w="1"/><text x="82.3215%" y="751.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="82.0917%" y="517" width="0.0202%" height="15" fill="rgb(243,124,49)" fg:x="4066" fg:w="1"/><text x="82.3417%" y="527.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="82.0917%" y="501" width="0.0202%" height="15" fill="rgb(221,30,28)" fg:x="4066" fg:w="1"/><text x="82.3417%" y="511.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="82.0917%" y="485" width="0.0202%" height="15" fill="rgb(246,37,13)" fg:x="4066" fg:w="1"/><text x="82.3417%" y="495.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="82.0917%" y="469" width="0.0202%" height="15" fill="rgb(249,66,14)" fg:x="4066" fg:w="1"/><text x="82.3417%" y="479.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="82.0917%" y="453" width="0.0202%" height="15" fill="rgb(213,166,5)" fg:x="4066" fg:w="1"/><text x="82.3417%" y="463.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect x="82.0917%" y="437" width="0.0202%" height="15" fill="rgb(221,66,24)" fg:x="4066" fg:w="1"/><text x="82.3417%" y="447.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect x="82.0917%" y="421" width="0.0202%" height="15" fill="rgb(210,132,17)" fg:x="4066" fg:w="1"/><text x="82.3417%" y="431.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="82.0917%" y="405" width="0.0202%" height="15" fill="rgb(243,202,5)" fg:x="4066" fg:w="1"/><text x="82.3417%" y="415.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="82.0917%" y="389" width="0.0202%" height="15" fill="rgb(233,70,48)" fg:x="4066" fg:w="1"/><text x="82.3417%" y="399.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="82.0917%" y="373" width="0.0202%" height="15" fill="rgb(238,41,26)" fg:x="4066" fg:w="1"/><text x="82.3417%" y="383.50"></text></g><g><title>_rjem_je_emap_update_edata_state (1 samples, 0.02%)</title><rect x="82.0917%" y="357" width="0.0202%" height="15" fill="rgb(241,19,31)" fg:x="4066" fg:w="1"/><text x="82.3417%" y="367.50"></text></g><g><title>edata_last_get (1 samples, 0.02%)</title><rect x="82.0917%" y="341" width="0.0202%" height="15" fill="rgb(214,76,10)" fg:x="4066" fg:w="1"/><text x="82.3417%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2 samples, 0.04%)</title><rect x="82.0917%" y="773" width="0.0404%" height="15" fill="rgb(254,202,22)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2 samples, 0.04%)</title><rect x="82.0917%" y="757" width="0.0404%" height="15" fill="rgb(214,72,24)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="82.0917%" y="741" width="0.0404%" height="15" fill="rgb(221,92,46)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="751.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="82.0917%" y="725" width="0.0404%" height="15" fill="rgb(246,13,50)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="735.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="82.0917%" y="709" width="0.0404%" height="15" fill="rgb(240,165,38)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="719.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="82.0917%" y="693" width="0.0404%" height="15" fill="rgb(241,24,51)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="703.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.04%)</title><rect x="82.0917%" y="677" width="0.0404%" height="15" fill="rgb(227,51,44)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="687.50"></text></g><g><title>_rjem_je_malloc_default (2 samples, 0.04%)</title><rect x="82.0917%" y="661" width="0.0404%" height="15" fill="rgb(231,121,3)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="671.50"></text></g><g><title>imalloc (2 samples, 0.04%)</title><rect x="82.0917%" y="645" width="0.0404%" height="15" fill="rgb(245,3,41)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="655.50"></text></g><g><title>imalloc_body (2 samples, 0.04%)</title><rect x="82.0917%" y="629" width="0.0404%" height="15" fill="rgb(214,13,26)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="639.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.04%)</title><rect x="82.0917%" y="613" width="0.0404%" height="15" fill="rgb(252,75,11)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="623.50"></text></g><g><title>iallocztm (2 samples, 0.04%)</title><rect x="82.0917%" y="597" width="0.0404%" height="15" fill="rgb(218,226,17)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="607.50"></text></g><g><title>arena_malloc (2 samples, 0.04%)</title><rect x="82.0917%" y="581" width="0.0404%" height="15" fill="rgb(248,89,38)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="591.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.04%)</title><rect x="82.0917%" y="565" width="0.0404%" height="15" fill="rgb(237,73,46)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="575.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.04%)</title><rect x="82.0917%" y="549" width="0.0404%" height="15" fill="rgb(242,78,33)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="559.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.04%)</title><rect x="82.0917%" y="533" width="0.0404%" height="15" fill="rgb(235,60,3)" fg:x="4066" fg:w="2"/><text x="82.3417%" y="543.50"></text></g><g><title>edata_nfree_get (1 samples, 0.02%)</title><rect x="82.1119%" y="517" width="0.0202%" height="15" fill="rgb(216,172,19)" fg:x="4067" fg:w="1"/><text x="82.3619%" y="527.50"></text></g><g><title>?? (6 samples, 0.12%)</title><rect x="82.0715%" y="789" width="0.1211%" height="15" fill="rgb(227,6,42)" fg:x="4065" fg:w="6"/><text x="82.3215%" y="799.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (3 samples, 0.06%)</title><rect x="82.1320%" y="773" width="0.0606%" height="15" fill="rgb(223,207,42)" fg:x="4068" fg:w="3"/><text x="82.3820%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="82.1320%" y="757" width="0.0606%" height="15" fill="rgb(246,138,30)" fg:x="4068" fg:w="3"/><text x="82.3820%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="82.1320%" y="741" width="0.0606%" height="15" fill="rgb(251,199,47)" fg:x="4068" fg:w="3"/><text x="82.3820%" y="751.50"></text></g><g><title>?? (11 samples, 0.22%)</title><rect x="81.9907%" y="805" width="0.2221%" height="15" fill="rgb(228,218,44)" fg:x="4061" fg:w="11"/><text x="82.2407%" y="815.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (1 samples, 0.02%)</title><rect x="82.1926%" y="789" width="0.0202%" height="15" fill="rgb(220,68,6)" fg:x="4071" fg:w="1"/><text x="82.4426%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="82.1926%" y="773" width="0.0202%" height="15" fill="rgb(240,60,26)" fg:x="4071" fg:w="1"/><text x="82.4426%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.02%)</title><rect x="82.2128%" y="805" width="0.0202%" height="15" fill="rgb(211,200,19)" fg:x="4072" fg:w="1"/><text x="82.4628%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.02%)</title><rect x="82.2128%" y="789" width="0.0202%" height="15" fill="rgb(242,145,30)" fg:x="4072" fg:w="1"/><text x="82.4628%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="82.2128%" y="773" width="0.0202%" height="15" fill="rgb(225,64,13)" fg:x="4072" fg:w="1"/><text x="82.4628%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="82.2128%" y="757" width="0.0202%" height="15" fill="rgb(218,103,35)" fg:x="4072" fg:w="1"/><text x="82.4628%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="82.2128%" y="741" width="0.0202%" height="15" fill="rgb(216,93,46)" fg:x="4072" fg:w="1"/><text x="82.4628%" y="751.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="82.2128%" y="725" width="0.0202%" height="15" fill="rgb(225,159,27)" fg:x="4072" fg:w="1"/><text x="82.4628%" y="735.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="82.2128%" y="709" width="0.0202%" height="15" fill="rgb(225,204,11)" fg:x="4072" fg:w="1"/><text x="82.4628%" y="719.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="82.2128%" y="693" width="0.0202%" height="15" fill="rgb(205,56,4)" fg:x="4072" fg:w="1"/><text x="82.4628%" y="703.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="82.2128%" y="677" width="0.0202%" height="15" fill="rgb(206,6,35)" fg:x="4072" fg:w="1"/><text x="82.4628%" y="687.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="82.2128%" y="661" width="0.0202%" height="15" fill="rgb(247,73,52)" fg:x="4072" fg:w="1"/><text x="82.4628%" y="671.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="82.2128%" y="645" width="0.0202%" height="15" fill="rgb(246,97,4)" fg:x="4072" fg:w="1"/><text x="82.4628%" y="655.50"></text></g><g><title>?? (15 samples, 0.30%)</title><rect x="81.9907%" y="821" width="0.3028%" height="15" fill="rgb(212,37,15)" fg:x="4061" fg:w="15"/><text x="82.2407%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.06%)</title><rect x="82.2330%" y="805" width="0.0606%" height="15" fill="rgb(208,130,40)" fg:x="4073" fg:w="3"/><text x="82.4830%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (108 samples, 2.18%)</title><rect x="80.1333%" y="917" width="2.1805%" height="15" fill="rgb(236,55,29)" fg:x="3969" fg:w="108"/><text x="80.3833%" y="927.50">s..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (108 samples, 2.18%)</title><rect x="80.1333%" y="901" width="2.1805%" height="15" fill="rgb(209,156,45)" fg:x="3969" fg:w="108"/><text x="80.3833%" y="911.50">&lt;..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (108 samples, 2.18%)</title><rect x="80.1333%" y="885" width="2.1805%" height="15" fill="rgb(249,107,4)" fg:x="3969" fg:w="108"/><text x="80.3833%" y="895.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (16 samples, 0.32%)</title><rect x="81.9907%" y="869" width="0.3230%" height="15" fill="rgb(227,7,13)" fg:x="4061" fg:w="16"/><text x="82.2407%" y="879.50"></text></g><g><title>?? (16 samples, 0.32%)</title><rect x="81.9907%" y="853" width="0.3230%" height="15" fill="rgb(250,129,14)" fg:x="4061" fg:w="16"/><text x="82.2407%" y="863.50"></text></g><g><title>?? (16 samples, 0.32%)</title><rect x="81.9907%" y="837" width="0.3230%" height="15" fill="rgb(229,92,13)" fg:x="4061" fg:w="16"/><text x="82.2407%" y="847.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert::_{{closure}} (1 samples, 0.02%)</title><rect x="82.2936%" y="821" width="0.0202%" height="15" fill="rgb(245,98,39)" fg:x="4076" fg:w="1"/><text x="82.5436%" y="831.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="82.2936%" y="805" width="0.0202%" height="15" fill="rgb(234,135,48)" fg:x="4076" fg:w="1"/><text x="82.5436%" y="815.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (1 samples, 0.02%)</title><rect x="82.2936%" y="789" width="0.0202%" height="15" fill="rgb(230,98,28)" fg:x="4076" fg:w="1"/><text x="82.5436%" y="799.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="82.2936%" y="773" width="0.0202%" height="15" fill="rgb(223,121,0)" fg:x="4076" fg:w="1"/><text x="82.5436%" y="783.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::_{{closure}} (1 samples, 0.02%)</title><rect x="82.2936%" y="757" width="0.0202%" height="15" fill="rgb(234,173,33)" fg:x="4076" fg:w="1"/><text x="82.5436%" y="767.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::_{{closure}} (1 samples, 0.02%)</title><rect x="82.2936%" y="741" width="0.0202%" height="15" fill="rgb(245,47,8)" fg:x="4076" fg:w="1"/><text x="82.5436%" y="751.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="82.2936%" y="725" width="0.0202%" height="15" fill="rgb(205,17,20)" fg:x="4076" fg:w="1"/><text x="82.5436%" y="735.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="82.2936%" y="709" width="0.0202%" height="15" fill="rgb(232,151,16)" fg:x="4076" fg:w="1"/><text x="82.5436%" y="719.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="82.2936%" y="693" width="0.0202%" height="15" fill="rgb(208,30,32)" fg:x="4076" fg:w="1"/><text x="82.5436%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="82.2936%" y="677" width="0.0202%" height="15" fill="rgb(254,26,3)" fg:x="4076" fg:w="1"/><text x="82.5436%" y="687.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="82.2936%" y="661" width="0.0202%" height="15" fill="rgb(240,177,30)" fg:x="4076" fg:w="1"/><text x="82.5436%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="82.3339%" y="677" width="0.0202%" height="15" fill="rgb(248,76,44)" fg:x="4078" fg:w="1"/><text x="82.5839%" y="687.50"></text></g><g><title>tcache_alloc_large (2 samples, 0.04%)</title><rect x="82.3541%" y="645" width="0.0404%" height="15" fill="rgb(241,186,54)" fg:x="4079" fg:w="2"/><text x="82.6041%" y="655.50"></text></g><g><title>_rjem_je_large_palloc (2 samples, 0.04%)</title><rect x="82.3541%" y="629" width="0.0404%" height="15" fill="rgb(249,171,29)" fg:x="4079" fg:w="2"/><text x="82.6041%" y="639.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (2 samples, 0.04%)</title><rect x="82.3541%" y="613" width="0.0404%" height="15" fill="rgb(237,151,44)" fg:x="4079" fg:w="2"/><text x="82.6041%" y="623.50"></text></g><g><title>_rjem_je_pa_alloc (2 samples, 0.04%)</title><rect x="82.3541%" y="597" width="0.0404%" height="15" fill="rgb(228,174,30)" fg:x="4079" fg:w="2"/><text x="82.6041%" y="607.50"></text></g><g><title>pai_alloc (2 samples, 0.04%)</title><rect x="82.3541%" y="581" width="0.0404%" height="15" fill="rgb(252,14,37)" fg:x="4079" fg:w="2"/><text x="82.6041%" y="591.50"></text></g><g><title>pac_alloc_impl (2 samples, 0.04%)</title><rect x="82.3541%" y="565" width="0.0404%" height="15" fill="rgb(207,111,40)" fg:x="4079" fg:w="2"/><text x="82.6041%" y="575.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="82.3743%" y="549" width="0.0202%" height="15" fill="rgb(248,171,54)" fg:x="4080" fg:w="1"/><text x="82.6243%" y="559.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="82.3743%" y="533" width="0.0202%" height="15" fill="rgb(211,127,2)" fg:x="4080" fg:w="1"/><text x="82.6243%" y="543.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="82.3743%" y="517" width="0.0202%" height="15" fill="rgb(236,87,47)" fg:x="4080" fg:w="1"/><text x="82.6243%" y="527.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="82.3743%" y="501" width="0.0202%" height="15" fill="rgb(223,190,45)" fg:x="4080" fg:w="1"/><text x="82.6243%" y="511.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="82.3743%" y="485" width="0.0202%" height="15" fill="rgb(215,5,16)" fg:x="4080" fg:w="1"/><text x="82.6243%" y="495.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="82.3743%" y="469" width="0.0202%" height="15" fill="rgb(252,82,33)" fg:x="4080" fg:w="1"/><text x="82.6243%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="82.3339%" y="869" width="0.0808%" height="15" fill="rgb(247,213,44)" fg:x="4078" fg:w="4"/><text x="82.5839%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect x="82.3339%" y="853" width="0.0808%" height="15" fill="rgb(205,196,44)" fg:x="4078" fg:w="4"/><text x="82.5839%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect x="82.3339%" y="837" width="0.0808%" height="15" fill="rgb(237,96,54)" fg:x="4078" fg:w="4"/><text x="82.5839%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.08%)</title><rect x="82.3339%" y="821" width="0.0808%" height="15" fill="rgb(230,113,34)" fg:x="4078" fg:w="4"/><text x="82.5839%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.08%)</title><rect x="82.3339%" y="805" width="0.0808%" height="15" fill="rgb(221,224,12)" fg:x="4078" fg:w="4"/><text x="82.5839%" y="815.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="82.3339%" y="789" width="0.0808%" height="15" fill="rgb(219,112,44)" fg:x="4078" fg:w="4"/><text x="82.5839%" y="799.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.08%)</title><rect x="82.3339%" y="773" width="0.0808%" height="15" fill="rgb(210,31,13)" fg:x="4078" fg:w="4"/><text x="82.5839%" y="783.50"></text></g><g><title>__rust_realloc (4 samples, 0.08%)</title><rect x="82.3339%" y="757" width="0.0808%" height="15" fill="rgb(230,25,16)" fg:x="4078" fg:w="4"/><text x="82.5839%" y="767.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (4 samples, 0.08%)</title><rect x="82.3339%" y="741" width="0.0808%" height="15" fill="rgb(246,108,53)" fg:x="4078" fg:w="4"/><text x="82.5839%" y="751.50"></text></g><g><title>do_rallocx (4 samples, 0.08%)</title><rect x="82.3339%" y="725" width="0.0808%" height="15" fill="rgb(241,172,50)" fg:x="4078" fg:w="4"/><text x="82.5839%" y="735.50"></text></g><g><title>iralloct (4 samples, 0.08%)</title><rect x="82.3339%" y="709" width="0.0808%" height="15" fill="rgb(235,141,10)" fg:x="4078" fg:w="4"/><text x="82.5839%" y="719.50"></text></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.08%)</title><rect x="82.3339%" y="693" width="0.0808%" height="15" fill="rgb(220,174,43)" fg:x="4078" fg:w="4"/><text x="82.5839%" y="703.50"></text></g><g><title>arena_ralloc_move_helper (3 samples, 0.06%)</title><rect x="82.3541%" y="677" width="0.0606%" height="15" fill="rgb(215,181,40)" fg:x="4079" fg:w="3"/><text x="82.6041%" y="687.50"></text></g><g><title>arena_malloc (3 samples, 0.06%)</title><rect x="82.3541%" y="661" width="0.0606%" height="15" fill="rgb(230,97,2)" fg:x="4079" fg:w="3"/><text x="82.6041%" y="671.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="82.3945%" y="645" width="0.0202%" height="15" fill="rgb(211,25,27)" fg:x="4081" fg:w="1"/><text x="82.6445%" y="655.50"></text></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect x="82.3945%" y="629" width="0.0202%" height="15" fill="rgb(230,87,26)" fg:x="4081" fg:w="1"/><text x="82.6445%" y="639.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="82.3945%" y="613" width="0.0202%" height="15" fill="rgb(227,160,17)" fg:x="4081" fg:w="1"/><text x="82.6445%" y="623.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="82.4147%" y="869" width="0.0606%" height="15" fill="rgb(244,85,34)" fg:x="4082" fg:w="3"/><text x="82.6647%" y="879.50"></text></g><g><title>core::ptr::write (3 samples, 0.06%)</title><rect x="82.4147%" y="853" width="0.0606%" height="15" fill="rgb(207,70,0)" fg:x="4082" fg:w="3"/><text x="82.6647%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="82.5358%" y="773" width="0.0202%" height="15" fill="rgb(223,129,7)" fg:x="4088" fg:w="1"/><text x="82.7858%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="82.7175%" y="661" width="0.0202%" height="15" fill="rgb(246,105,7)" fg:x="4097" fg:w="1"/><text x="82.9675%" y="671.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="82.7175%" y="645" width="0.0202%" height="15" fill="rgb(215,154,42)" fg:x="4097" fg:w="1"/><text x="82.9675%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="82.7175%" y="629" width="0.0202%" height="15" fill="rgb(220,215,30)" fg:x="4097" fg:w="1"/><text x="82.9675%" y="639.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="82.7175%" y="677" width="0.0404%" height="15" fill="rgb(228,81,51)" fg:x="4097" fg:w="2"/><text x="82.9675%" y="687.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="82.7377%" y="661" width="0.0202%" height="15" fill="rgb(247,71,54)" fg:x="4098" fg:w="1"/><text x="82.9877%" y="671.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="82.7377%" y="645" width="0.0202%" height="15" fill="rgb(234,176,34)" fg:x="4098" fg:w="1"/><text x="82.9877%" y="655.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="82.7377%" y="629" width="0.0202%" height="15" fill="rgb(241,103,54)" fg:x="4098" fg:w="1"/><text x="82.9877%" y="639.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="82.7377%" y="613" width="0.0202%" height="15" fill="rgb(228,22,34)" fg:x="4098" fg:w="1"/><text x="82.9877%" y="623.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="82.7579%" y="421" width="0.0202%" height="15" fill="rgb(241,179,48)" fg:x="4099" fg:w="1"/><text x="83.0079%" y="431.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="82.7579%" y="405" width="0.0202%" height="15" fill="rgb(235,167,37)" fg:x="4099" fg:w="1"/><text x="83.0079%" y="415.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="82.7579%" y="389" width="0.0202%" height="15" fill="rgb(213,109,30)" fg:x="4099" fg:w="1"/><text x="83.0079%" y="399.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="82.7579%" y="373" width="0.0202%" height="15" fill="rgb(222,172,16)" fg:x="4099" fg:w="1"/><text x="83.0079%" y="383.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="82.7579%" y="357" width="0.0202%" height="15" fill="rgb(233,192,5)" fg:x="4099" fg:w="1"/><text x="83.0079%" y="367.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="82.7579%" y="341" width="0.0202%" height="15" fill="rgb(247,189,41)" fg:x="4099" fg:w="1"/><text x="83.0079%" y="351.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="82.7579%" y="325" width="0.0202%" height="15" fill="rgb(218,134,47)" fg:x="4099" fg:w="1"/><text x="83.0079%" y="335.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="82.7579%" y="309" width="0.0202%" height="15" fill="rgb(216,29,3)" fg:x="4099" fg:w="1"/><text x="83.0079%" y="319.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="82.7579%" y="293" width="0.0202%" height="15" fill="rgb(246,140,12)" fg:x="4099" fg:w="1"/><text x="83.0079%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (5 samples, 0.10%)</title><rect x="82.6974%" y="725" width="0.1009%" height="15" fill="rgb(230,136,11)" fg:x="4096" fg:w="5"/><text x="82.9474%" y="735.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (4 samples, 0.08%)</title><rect x="82.7175%" y="709" width="0.0808%" height="15" fill="rgb(247,22,47)" fg:x="4097" fg:w="4"/><text x="82.9675%" y="719.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.08%)</title><rect x="82.7175%" y="693" width="0.0808%" height="15" fill="rgb(218,84,22)" fg:x="4097" fg:w="4"/><text x="82.9675%" y="703.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (2 samples, 0.04%)</title><rect x="82.7579%" y="677" width="0.0404%" height="15" fill="rgb(216,87,39)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="687.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.04%)</title><rect x="82.7579%" y="661" width="0.0404%" height="15" fill="rgb(221,178,8)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="671.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.04%)</title><rect x="82.7579%" y="645" width="0.0404%" height="15" fill="rgb(230,42,11)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.04%)</title><rect x="82.7579%" y="629" width="0.0404%" height="15" fill="rgb(237,229,4)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.04%)</title><rect x="82.7579%" y="613" width="0.0404%" height="15" fill="rgb(222,31,33)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.04%)</title><rect x="82.7579%" y="597" width="0.0404%" height="15" fill="rgb(210,17,39)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.04%)</title><rect x="82.7579%" y="581" width="0.0404%" height="15" fill="rgb(244,93,20)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="82.7579%" y="565" width="0.0404%" height="15" fill="rgb(210,40,47)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="575.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="82.7579%" y="549" width="0.0404%" height="15" fill="rgb(239,211,47)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="559.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="82.7579%" y="533" width="0.0404%" height="15" fill="rgb(251,223,49)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="543.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="82.7579%" y="517" width="0.0404%" height="15" fill="rgb(221,149,5)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="82.7579%" y="501" width="0.0404%" height="15" fill="rgb(219,224,51)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="511.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="82.7579%" y="485" width="0.0404%" height="15" fill="rgb(223,7,8)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="82.7579%" y="469" width="0.0404%" height="15" fill="rgb(241,217,22)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="479.50"></text></g><g><title>__rust_alloc (2 samples, 0.04%)</title><rect x="82.7579%" y="453" width="0.0404%" height="15" fill="rgb(248,209,0)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="463.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.04%)</title><rect x="82.7579%" y="437" width="0.0404%" height="15" fill="rgb(217,205,4)" fg:x="4099" fg:w="2"/><text x="83.0079%" y="447.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="82.7781%" y="421" width="0.0202%" height="15" fill="rgb(228,124,39)" fg:x="4100" fg:w="1"/><text x="83.0281%" y="431.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="82.7781%" y="405" width="0.0202%" height="15" fill="rgb(250,116,42)" fg:x="4100" fg:w="1"/><text x="83.0281%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="83.0002%" y="485" width="0.0202%" height="15" fill="rgb(223,202,9)" fg:x="4111" fg:w="1"/><text x="83.2502%" y="495.50"></text></g><g><title>edata_usize_get (1 samples, 0.02%)</title><rect x="83.0204%" y="469" width="0.0202%" height="15" fill="rgb(242,222,40)" fg:x="4112" fg:w="1"/><text x="83.2704%" y="479.50"></text></g><g><title>sz_index2size (1 samples, 0.02%)</title><rect x="83.0204%" y="453" width="0.0202%" height="15" fill="rgb(229,99,46)" fg:x="4112" fg:w="1"/><text x="83.2704%" y="463.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="83.0204%" y="437" width="0.0202%" height="15" fill="rgb(225,56,46)" fg:x="4112" fg:w="1"/><text x="83.2704%" y="447.50"></text></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect x="83.0204%" y="421" width="0.0202%" height="15" fill="rgb(227,94,5)" fg:x="4112" fg:w="1"/><text x="83.2704%" y="431.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (2 samples, 0.04%)</title><rect x="83.0204%" y="485" width="0.0404%" height="15" fill="rgb(205,112,38)" fg:x="4112" fg:w="2"/><text x="83.2704%" y="495.50"></text></g><g><title>emap_edata_lookup (1 samples, 0.02%)</title><rect x="83.0406%" y="469" width="0.0202%" height="15" fill="rgb(231,133,46)" fg:x="4113" fg:w="1"/><text x="83.2906%" y="479.50"></text></g><g><title>rtree_read (1 samples, 0.02%)</title><rect x="83.0406%" y="453" width="0.0202%" height="15" fill="rgb(217,16,9)" fg:x="4113" fg:w="1"/><text x="83.2906%" y="463.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="83.0406%" y="437" width="0.0202%" height="15" fill="rgb(249,173,9)" fg:x="4113" fg:w="1"/><text x="83.2906%" y="447.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="83.0406%" y="421" width="0.0202%" height="15" fill="rgb(205,163,53)" fg:x="4113" fg:w="1"/><text x="83.2906%" y="431.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="83.0608%" y="405" width="0.0202%" height="15" fill="rgb(217,54,41)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="415.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="83.0608%" y="389" width="0.0202%" height="15" fill="rgb(228,216,12)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="399.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="83.0608%" y="373" width="0.0202%" height="15" fill="rgb(244,228,15)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="383.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="83.0608%" y="357" width="0.0202%" height="15" fill="rgb(221,176,53)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="367.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="83.0608%" y="341" width="0.0202%" height="15" fill="rgb(205,94,34)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="351.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="83.0608%" y="325" width="0.0202%" height="15" fill="rgb(213,110,48)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="335.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="83.0608%" y="309" width="0.0202%" height="15" fill="rgb(236,142,28)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="319.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="83.0608%" y="293" width="0.0202%" height="15" fill="rgb(225,135,29)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="303.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="83.0608%" y="277" width="0.0202%" height="15" fill="rgb(252,45,31)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="287.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="83.0608%" y="261" width="0.0202%" height="15" fill="rgb(211,187,50)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="271.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="83.0608%" y="245" width="0.0202%" height="15" fill="rgb(229,109,7)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="255.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="83.0608%" y="229" width="0.0202%" height="15" fill="rgb(251,131,51)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="239.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="83.0608%" y="213" width="0.0202%" height="15" fill="rgb(251,180,35)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="223.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="83.0608%" y="197" width="0.0202%" height="15" fill="rgb(211,46,32)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="207.50"></text></g><g><title>phn_merge (1 samples, 0.02%)</title><rect x="83.0608%" y="181" width="0.0202%" height="15" fill="rgb(248,123,17)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="191.50"></text></g><g><title>phn_merge_ordered (1 samples, 0.02%)</title><rect x="83.0608%" y="165" width="0.0202%" height="15" fill="rgb(227,141,18)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="175.50"></text></g><g><title>phn_lchild_set (1 samples, 0.02%)</title><rect x="83.0608%" y="149" width="0.0202%" height="15" fill="rgb(216,102,9)" fg:x="4114" fg:w="1"/><text x="83.3108%" y="159.50"></text></g><g><title>arena_ralloc_move_helper (2 samples, 0.04%)</title><rect x="83.0608%" y="485" width="0.0404%" height="15" fill="rgb(253,47,13)" fg:x="4114" fg:w="2"/><text x="83.3108%" y="495.50"></text></g><g><title>arena_malloc (2 samples, 0.04%)</title><rect x="83.0608%" y="469" width="0.0404%" height="15" fill="rgb(226,93,23)" fg:x="4114" fg:w="2"/><text x="83.3108%" y="479.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.04%)</title><rect x="83.0608%" y="453" width="0.0404%" height="15" fill="rgb(247,104,17)" fg:x="4114" fg:w="2"/><text x="83.3108%" y="463.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.04%)</title><rect x="83.0608%" y="437" width="0.0404%" height="15" fill="rgb(233,203,26)" fg:x="4114" fg:w="2"/><text x="83.3108%" y="447.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.04%)</title><rect x="83.0608%" y="421" width="0.0404%" height="15" fill="rgb(244,98,49)" fg:x="4114" fg:w="2"/><text x="83.3108%" y="431.50"></text></g><g><title>edata_nfree_get (1 samples, 0.02%)</title><rect x="83.0810%" y="405" width="0.0202%" height="15" fill="rgb(235,134,22)" fg:x="4115" fg:w="1"/><text x="83.3310%" y="415.50"></text></g><g><title>iralloct (7 samples, 0.14%)</title><rect x="82.9800%" y="517" width="0.1413%" height="15" fill="rgb(221,70,32)" fg:x="4110" fg:w="7"/><text x="83.2300%" y="527.50"></text></g><g><title>_rjem_je_arena_ralloc (6 samples, 0.12%)</title><rect x="83.0002%" y="501" width="0.1211%" height="15" fill="rgb(238,15,50)" fg:x="4111" fg:w="6"/><text x="83.2502%" y="511.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="83.1012%" y="485" width="0.0202%" height="15" fill="rgb(215,221,48)" fg:x="4116" fg:w="1"/><text x="83.3512%" y="495.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="83.1012%" y="469" width="0.0202%" height="15" fill="rgb(236,73,3)" fg:x="4116" fg:w="1"/><text x="83.3512%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.16%)</title><rect x="82.9800%" y="613" width="0.1615%" height="15" fill="rgb(250,107,11)" fg:x="4110" fg:w="8"/><text x="83.2300%" y="623.50"></text></g><g><title>?? (8 samples, 0.16%)</title><rect x="82.9800%" y="597" width="0.1615%" height="15" fill="rgb(242,39,14)" fg:x="4110" fg:w="8"/><text x="83.2300%" y="607.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.16%)</title><rect x="82.9800%" y="581" width="0.1615%" height="15" fill="rgb(248,164,37)" fg:x="4110" fg:w="8"/><text x="83.2300%" y="591.50"></text></g><g><title>__rust_realloc (8 samples, 0.16%)</title><rect x="82.9800%" y="565" width="0.1615%" height="15" fill="rgb(217,60,12)" fg:x="4110" fg:w="8"/><text x="83.2300%" y="575.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (8 samples, 0.16%)</title><rect x="82.9800%" y="549" width="0.1615%" height="15" fill="rgb(240,125,29)" fg:x="4110" fg:w="8"/><text x="83.2300%" y="559.50"></text></g><g><title>do_rallocx (8 samples, 0.16%)</title><rect x="82.9800%" y="533" width="0.1615%" height="15" fill="rgb(208,207,28)" fg:x="4110" fg:w="8"/><text x="83.2300%" y="543.50"></text></g><g><title>sz_index2size (1 samples, 0.02%)</title><rect x="83.1213%" y="517" width="0.0202%" height="15" fill="rgb(209,159,27)" fg:x="4117" fg:w="1"/><text x="83.3713%" y="527.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="83.1213%" y="501" width="0.0202%" height="15" fill="rgb(251,176,53)" fg:x="4117" fg:w="1"/><text x="83.3713%" y="511.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="83.1213%" y="485" width="0.0202%" height="15" fill="rgb(211,85,7)" fg:x="4117" fg:w="1"/><text x="83.3713%" y="495.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="83.1415%" y="501" width="0.0202%" height="15" fill="rgb(216,64,54)" fg:x="4118" fg:w="1"/><text x="83.3915%" y="511.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="83.1415%" y="485" width="0.0202%" height="15" fill="rgb(217,54,24)" fg:x="4118" fg:w="1"/><text x="83.3915%" y="495.50"></text></g><g><title>arena_slab_reg_alloc_batch (1 samples, 0.02%)</title><rect x="83.1415%" y="469" width="0.0202%" height="15" fill="rgb(208,206,53)" fg:x="4118" fg:w="1"/><text x="83.3915%" y="479.50"></text></g><g><title>_rjem_je_malloc_default (3 samples, 0.06%)</title><rect x="83.1415%" y="613" width="0.0606%" height="15" fill="rgb(251,74,39)" fg:x="4118" fg:w="3"/><text x="83.3915%" y="623.50"></text></g><g><title>imalloc (3 samples, 0.06%)</title><rect x="83.1415%" y="597" width="0.0606%" height="15" fill="rgb(226,47,5)" fg:x="4118" fg:w="3"/><text x="83.3915%" y="607.50"></text></g><g><title>imalloc_body (3 samples, 0.06%)</title><rect x="83.1415%" y="581" width="0.0606%" height="15" fill="rgb(234,111,33)" fg:x="4118" fg:w="3"/><text x="83.3915%" y="591.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.06%)</title><rect x="83.1415%" y="565" width="0.0606%" height="15" fill="rgb(251,14,10)" fg:x="4118" fg:w="3"/><text x="83.3915%" y="575.50"></text></g><g><title>iallocztm (3 samples, 0.06%)</title><rect x="83.1415%" y="549" width="0.0606%" height="15" fill="rgb(232,43,0)" fg:x="4118" fg:w="3"/><text x="83.3915%" y="559.50"></text></g><g><title>arena_malloc (3 samples, 0.06%)</title><rect x="83.1415%" y="533" width="0.0606%" height="15" fill="rgb(222,68,43)" fg:x="4118" fg:w="3"/><text x="83.3915%" y="543.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.06%)</title><rect x="83.1415%" y="517" width="0.0606%" height="15" fill="rgb(217,24,23)" fg:x="4118" fg:w="3"/><text x="83.3915%" y="527.50"></text></g><g><title>arena_choose (2 samples, 0.04%)</title><rect x="83.1617%" y="501" width="0.0404%" height="15" fill="rgb(229,209,14)" fg:x="4119" fg:w="2"/><text x="83.4117%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19 samples, 0.38%)</title><rect x="82.8387%" y="677" width="0.3836%" height="15" fill="rgb(250,149,48)" fg:x="4103" fg:w="19"/><text x="83.0887%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 0.30%)</title><rect x="82.9194%" y="661" width="0.3028%" height="15" fill="rgb(210,120,37)" fg:x="4107" fg:w="15"/><text x="83.1694%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 0.30%)</title><rect x="82.9194%" y="645" width="0.3028%" height="15" fill="rgb(210,21,8)" fg:x="4107" fg:w="15"/><text x="83.1694%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.28%)</title><rect x="82.9396%" y="629" width="0.2827%" height="15" fill="rgb(243,145,7)" fg:x="4108" fg:w="14"/><text x="83.1896%" y="639.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="83.2021%" y="613" width="0.0202%" height="15" fill="rgb(238,178,32)" fg:x="4121" fg:w="1"/><text x="83.4521%" y="623.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="83.2021%" y="597" width="0.0202%" height="15" fill="rgb(222,4,10)" fg:x="4121" fg:w="1"/><text x="83.4521%" y="607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="83.2223%" y="661" width="0.0202%" height="15" fill="rgb(239,7,37)" fg:x="4122" fg:w="1"/><text x="83.4723%" y="671.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="83.2223%" y="677" width="0.0404%" height="15" fill="rgb(215,31,37)" fg:x="4122" fg:w="2"/><text x="83.4723%" y="687.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="83.2425%" y="661" width="0.0202%" height="15" fill="rgb(224,83,33)" fg:x="4123" fg:w="1"/><text x="83.4925%" y="671.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (5 samples, 0.10%)</title><rect x="83.6867%" y="453" width="0.1009%" height="15" fill="rgb(239,55,3)" fg:x="4145" fg:w="5"/><text x="83.9367%" y="463.50"></text></g><g><title>sonic_rs::reader::Reader::next (6 samples, 0.12%)</title><rect x="83.6867%" y="469" width="0.1211%" height="15" fill="rgb(247,92,11)" fg:x="4145" fg:w="6"/><text x="83.9367%" y="479.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="83.7876%" y="453" width="0.0202%" height="15" fill="rgb(239,200,7)" fg:x="4150" fg:w="1"/><text x="84.0376%" y="463.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="83.7876%" y="437" width="0.0202%" height="15" fill="rgb(227,115,8)" fg:x="4150" fg:w="1"/><text x="84.0376%" y="447.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="83.7876%" y="421" width="0.0202%" height="15" fill="rgb(215,189,27)" fg:x="4150" fg:w="1"/><text x="84.0376%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (3 samples, 0.06%)</title><rect x="83.9289%" y="453" width="0.0606%" height="15" fill="rgb(251,216,39)" fg:x="4157" fg:w="3"/><text x="84.1789%" y="463.50"></text></g><g><title>?? (21 samples, 0.42%)</title><rect x="83.6867%" y="501" width="0.4240%" height="15" fill="rgb(207,29,47)" fg:x="4145" fg:w="21"/><text x="83.9367%" y="511.50"></text></g><g><title>?? (21 samples, 0.42%)</title><rect x="83.6867%" y="485" width="0.4240%" height="15" fill="rgb(210,71,34)" fg:x="4145" fg:w="21"/><text x="83.9367%" y="495.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (15 samples, 0.30%)</title><rect x="83.8078%" y="469" width="0.3028%" height="15" fill="rgb(253,217,51)" fg:x="4151" fg:w="15"/><text x="84.0578%" y="479.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (6 samples, 0.12%)</title><rect x="83.9895%" y="453" width="0.1211%" height="15" fill="rgb(222,117,46)" fg:x="4160" fg:w="6"/><text x="84.2395%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (31 samples, 0.63%)</title><rect x="83.5251%" y="549" width="0.6259%" height="15" fill="rgb(226,132,6)" fg:x="4137" fg:w="31"/><text x="83.7751%" y="559.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (27 samples, 0.55%)</title><rect x="83.6059%" y="533" width="0.5451%" height="15" fill="rgb(254,145,51)" fg:x="4141" fg:w="27"/><text x="83.8559%" y="543.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (23 samples, 0.46%)</title><rect x="83.6867%" y="517" width="0.4644%" height="15" fill="rgb(231,199,27)" fg:x="4145" fg:w="23"/><text x="83.9367%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect x="84.1106%" y="501" width="0.0404%" height="15" fill="rgb(245,158,14)" fg:x="4166" fg:w="2"/><text x="84.3606%" y="511.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (32 samples, 0.65%)</title><rect x="83.5251%" y="581" width="0.6461%" height="15" fill="rgb(240,113,14)" fg:x="4137" fg:w="32"/><text x="83.7751%" y="591.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (32 samples, 0.65%)</title><rect x="83.5251%" y="565" width="0.6461%" height="15" fill="rgb(210,20,13)" fg:x="4137" fg:w="32"/><text x="83.7751%" y="575.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="84.1510%" y="549" width="0.0202%" height="15" fill="rgb(241,144,13)" fg:x="4168" fg:w="1"/><text x="84.4010%" y="559.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="84.1510%" y="533" width="0.0202%" height="15" fill="rgb(235,43,34)" fg:x="4168" fg:w="1"/><text x="84.4010%" y="543.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="84.1510%" y="517" width="0.0202%" height="15" fill="rgb(208,36,20)" fg:x="4168" fg:w="1"/><text x="84.4010%" y="527.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="84.1510%" y="501" width="0.0202%" height="15" fill="rgb(239,204,10)" fg:x="4168" fg:w="1"/><text x="84.4010%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="84.2520%" y="453" width="0.0202%" height="15" fill="rgb(217,84,43)" fg:x="4173" fg:w="1"/><text x="84.5020%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.10%)</title><rect x="84.2722%" y="437" width="0.1009%" height="15" fill="rgb(241,170,50)" fg:x="4174" fg:w="5"/><text x="84.5222%" y="447.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="84.3731%" y="437" width="0.0404%" height="15" fill="rgb(226,205,29)" fg:x="4179" fg:w="2"/><text x="84.6231%" y="447.50"></text></g><g><title>?? (11 samples, 0.22%)</title><rect x="84.2520%" y="485" width="0.2221%" height="15" fill="rgb(233,113,1)" fg:x="4173" fg:w="11"/><text x="84.5020%" y="495.50"></text></g><g><title>?? (11 samples, 0.22%)</title><rect x="84.2520%" y="469" width="0.2221%" height="15" fill="rgb(253,98,13)" fg:x="4173" fg:w="11"/><text x="84.5020%" y="479.50"></text></g><g><title>?? (10 samples, 0.20%)</title><rect x="84.2722%" y="453" width="0.2019%" height="15" fill="rgb(211,115,12)" fg:x="4174" fg:w="10"/><text x="84.5222%" y="463.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (3 samples, 0.06%)</title><rect x="84.4135%" y="437" width="0.0606%" height="15" fill="rgb(208,12,16)" fg:x="4181" fg:w="3"/><text x="84.6635%" y="447.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15 samples, 0.30%)</title><rect x="84.2116%" y="549" width="0.3028%" height="15" fill="rgb(237,193,54)" fg:x="4171" fg:w="15"/><text x="84.4616%" y="559.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (13 samples, 0.26%)</title><rect x="84.2520%" y="533" width="0.2625%" height="15" fill="rgb(243,22,42)" fg:x="4173" fg:w="13"/><text x="84.5020%" y="543.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (13 samples, 0.26%)</title><rect x="84.2520%" y="517" width="0.2625%" height="15" fill="rgb(233,151,36)" fg:x="4173" fg:w="13"/><text x="84.5020%" y="527.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.26%)</title><rect x="84.2520%" y="501" width="0.2625%" height="15" fill="rgb(237,57,45)" fg:x="4173" fg:w="13"/><text x="84.5020%" y="511.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (2 samples, 0.04%)</title><rect x="84.4741%" y="485" width="0.0404%" height="15" fill="rgb(221,88,17)" fg:x="4184" fg:w="2"/><text x="84.7241%" y="495.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.04%)</title><rect x="84.4741%" y="469" width="0.0404%" height="15" fill="rgb(230,79,15)" fg:x="4184" fg:w="2"/><text x="84.7241%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.04%)</title><rect x="84.4741%" y="453" width="0.0404%" height="15" fill="rgb(213,57,13)" fg:x="4184" fg:w="2"/><text x="84.7241%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect x="84.4741%" y="437" width="0.0404%" height="15" fill="rgb(222,116,39)" fg:x="4184" fg:w="2"/><text x="84.7241%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.04%)</title><rect x="84.4741%" y="421" width="0.0404%" height="15" fill="rgb(245,107,2)" fg:x="4184" fg:w="2"/><text x="84.7241%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.04%)</title><rect x="84.4741%" y="405" width="0.0404%" height="15" fill="rgb(238,1,10)" fg:x="4184" fg:w="2"/><text x="84.7241%" y="415.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="84.5144%" y="533" width="0.0202%" height="15" fill="rgb(249,4,48)" fg:x="4186" fg:w="1"/><text x="84.7644%" y="543.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (6 samples, 0.12%)</title><rect x="84.5346%" y="517" width="0.1211%" height="15" fill="rgb(223,151,18)" fg:x="4187" fg:w="6"/><text x="84.7846%" y="527.50"></text></g><g><title>sonic_rs::reader::Reader::next (7 samples, 0.14%)</title><rect x="84.5346%" y="533" width="0.1413%" height="15" fill="rgb(227,65,43)" fg:x="4187" fg:w="7"/><text x="84.7846%" y="543.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="84.6558%" y="517" width="0.0202%" height="15" fill="rgb(218,40,45)" fg:x="4193" fg:w="1"/><text x="84.9058%" y="527.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="84.6558%" y="501" width="0.0202%" height="15" fill="rgb(252,121,31)" fg:x="4193" fg:w="1"/><text x="84.9058%" y="511.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="84.6558%" y="485" width="0.0202%" height="15" fill="rgb(219,158,43)" fg:x="4193" fg:w="1"/><text x="84.9058%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="84.6760%" y="517" width="0.0202%" height="15" fill="rgb(231,162,42)" fg:x="4194" fg:w="1"/><text x="84.9260%" y="527.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (62 samples, 1.25%)</title><rect x="83.4848%" y="597" width="1.2518%" height="15" fill="rgb(217,179,25)" fg:x="4135" fg:w="62"/><text x="83.7348%" y="607.50"></text></g><g><title>serde::de::MapAccess::next_key (28 samples, 0.57%)</title><rect x="84.1712%" y="581" width="0.5653%" height="15" fill="rgb(206,212,31)" fg:x="4169" fg:w="28"/><text x="84.4212%" y="591.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (28 samples, 0.57%)</title><rect x="84.1712%" y="565" width="0.5653%" height="15" fill="rgb(235,144,12)" fg:x="4169" fg:w="28"/><text x="84.4212%" y="575.50"></text></g><g><title>?? (11 samples, 0.22%)</title><rect x="84.5144%" y="549" width="0.2221%" height="15" fill="rgb(213,51,10)" fg:x="4186" fg:w="11"/><text x="84.7644%" y="559.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (3 samples, 0.06%)</title><rect x="84.6760%" y="533" width="0.0606%" height="15" fill="rgb(231,145,14)" fg:x="4194" fg:w="3"/><text x="84.9260%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (2 samples, 0.04%)</title><rect x="84.6961%" y="517" width="0.0404%" height="15" fill="rgb(235,15,28)" fg:x="4195" fg:w="2"/><text x="84.9461%" y="527.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize (63 samples, 1.27%)</title><rect x="83.4848%" y="629" width="1.2720%" height="15" fill="rgb(237,206,10)" fg:x="4135" fg:w="63"/><text x="83.7348%" y="639.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (63 samples, 1.27%)</title><rect x="83.4848%" y="613" width="1.2720%" height="15" fill="rgb(236,227,27)" fg:x="4135" fg:w="63"/><text x="83.7348%" y="623.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="84.7365%" y="597" width="0.0202%" height="15" fill="rgb(246,83,35)" fg:x="4197" fg:w="1"/><text x="84.9865%" y="607.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect x="84.7365%" y="581" width="0.0202%" height="15" fill="rgb(220,136,24)" fg:x="4197" fg:w="1"/><text x="84.9865%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect x="84.7365%" y="565" width="0.0202%" height="15" fill="rgb(217,3,25)" fg:x="4197" fg:w="1"/><text x="84.9865%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect x="84.7769%" y="597" width="0.0606%" height="15" fill="rgb(239,24,14)" fg:x="4199" fg:w="3"/><text x="85.0269%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="84.8375%" y="581" width="0.0202%" height="15" fill="rgb(244,16,53)" fg:x="4202" fg:w="1"/><text x="85.0875%" y="591.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="85.0999%" y="437" width="0.0202%" height="15" fill="rgb(208,175,44)" fg:x="4215" fg:w="1"/><text x="85.3499%" y="447.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="85.0999%" y="421" width="0.0202%" height="15" fill="rgb(252,18,48)" fg:x="4215" fg:w="1"/><text x="85.3499%" y="431.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="85.0999%" y="405" width="0.0202%" height="15" fill="rgb(234,199,32)" fg:x="4215" fg:w="1"/><text x="85.3499%" y="415.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="85.0999%" y="453" width="0.0808%" height="15" fill="rgb(225,77,54)" fg:x="4215" fg:w="4"/><text x="85.3499%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.06%)</title><rect x="85.1201%" y="437" width="0.0606%" height="15" fill="rgb(225,42,25)" fg:x="4216" fg:w="3"/><text x="85.3701%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.06%)</title><rect x="85.1201%" y="421" width="0.0606%" height="15" fill="rgb(242,227,46)" fg:x="4216" fg:w="3"/><text x="85.3701%" y="431.50"></text></g><g><title>_rjem_realloc (1 samples, 0.02%)</title><rect x="85.2413%" y="341" width="0.0202%" height="15" fill="rgb(246,197,35)" fg:x="4222" fg:w="1"/><text x="85.4913%" y="351.50"></text></g><g><title>aligned_usize_get (3 samples, 0.06%)</title><rect x="85.3624%" y="325" width="0.0606%" height="15" fill="rgb(215,159,26)" fg:x="4228" fg:w="3"/><text x="85.6124%" y="335.50"></text></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect x="85.4028%" y="309" width="0.0202%" height="15" fill="rgb(212,194,50)" fg:x="4230" fg:w="1"/><text x="85.6528%" y="319.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect x="85.4028%" y="293" width="0.0202%" height="15" fill="rgb(246,132,1)" fg:x="4230" fg:w="1"/><text x="85.6528%" y="303.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="85.4028%" y="277" width="0.0202%" height="15" fill="rgb(217,71,7)" fg:x="4230" fg:w="1"/><text x="85.6528%" y="287.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="85.4028%" y="261" width="0.0202%" height="15" fill="rgb(252,59,32)" fg:x="4230" fg:w="1"/><text x="85.6528%" y="271.50"></text></g><g><title>rtree_metadata_read (2 samples, 0.04%)</title><rect x="85.4230%" y="309" width="0.0404%" height="15" fill="rgb(253,204,25)" fg:x="4231" fg:w="2"/><text x="85.6730%" y="319.50"></text></g><g><title>rtree_leaf_elm_lookup (2 samples, 0.04%)</title><rect x="85.4230%" y="293" width="0.0404%" height="15" fill="rgb(232,21,16)" fg:x="4231" fg:w="2"/><text x="85.6730%" y="303.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect x="85.4432%" y="277" width="0.0202%" height="15" fill="rgb(248,90,29)" fg:x="4232" fg:w="1"/><text x="85.6932%" y="287.50"></text></g><g><title>emap_alloc_ctx_lookup (3 samples, 0.06%)</title><rect x="85.4230%" y="325" width="0.0606%" height="15" fill="rgb(249,223,7)" fg:x="4231" fg:w="3"/><text x="85.6730%" y="335.50"></text></g><g><title>tsdn_rtree_ctx (1 samples, 0.02%)</title><rect x="85.4634%" y="309" width="0.0202%" height="15" fill="rgb(231,119,42)" fg:x="4233" fg:w="1"/><text x="85.7134%" y="319.50"></text></g><g><title>tsdn_null (1 samples, 0.02%)</title><rect x="85.4634%" y="293" width="0.0202%" height="15" fill="rgb(215,41,35)" fg:x="4233" fg:w="1"/><text x="85.7134%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.10%)</title><rect x="85.6249%" y="293" width="0.1009%" height="15" fill="rgb(220,44,45)" fg:x="4241" fg:w="5"/><text x="85.8749%" y="303.50"></text></g><g><title>emap_edata_lookup (1 samples, 0.02%)</title><rect x="85.7864%" y="277" width="0.0202%" height="15" fill="rgb(253,197,36)" fg:x="4249" fg:w="1"/><text x="86.0364%" y="287.50"></text></g><g><title>rtree_read (1 samples, 0.02%)</title><rect x="85.7864%" y="261" width="0.0202%" height="15" fill="rgb(245,225,54)" fg:x="4249" fg:w="1"/><text x="86.0364%" y="271.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="85.7864%" y="245" width="0.0202%" height="15" fill="rgb(239,94,37)" fg:x="4249" fg:w="1"/><text x="86.0364%" y="255.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="85.7864%" y="229" width="0.0202%" height="15" fill="rgb(242,217,10)" fg:x="4249" fg:w="1"/><text x="86.0364%" y="239.50"></text></g><g><title>sz_s2u (2 samples, 0.04%)</title><rect x="85.8066%" y="277" width="0.0404%" height="15" fill="rgb(250,193,7)" fg:x="4250" fg:w="2"/><text x="86.0566%" y="287.50"></text></g><g><title>sz_s2u_lookup (2 samples, 0.04%)</title><rect x="85.8066%" y="261" width="0.0404%" height="15" fill="rgb(230,104,19)" fg:x="4250" fg:w="2"/><text x="86.0566%" y="271.50"></text></g><g><title>sz_size2index_lookup (2 samples, 0.04%)</title><rect x="85.8066%" y="245" width="0.0404%" height="15" fill="rgb(230,181,4)" fg:x="4250" fg:w="2"/><text x="86.0566%" y="255.50"></text></g><g><title>sz_size2index_lookup_impl (2 samples, 0.04%)</title><rect x="85.8066%" y="229" width="0.0404%" height="15" fill="rgb(216,219,49)" fg:x="4250" fg:w="2"/><text x="86.0566%" y="239.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (9 samples, 0.18%)</title><rect x="85.7258%" y="293" width="0.1817%" height="15" fill="rgb(254,144,0)" fg:x="4246" fg:w="9"/><text x="85.9758%" y="303.50"></text></g><g><title>sz_size2index (3 samples, 0.06%)</title><rect x="85.8470%" y="277" width="0.0606%" height="15" fill="rgb(205,209,38)" fg:x="4252" fg:w="3"/><text x="86.0970%" y="287.50"></text></g><g><title>sz_size2index_lookup (2 samples, 0.04%)</title><rect x="85.8672%" y="261" width="0.0404%" height="15" fill="rgb(240,21,42)" fg:x="4253" fg:w="2"/><text x="86.1172%" y="271.50"></text></g><g><title>sz_size2index_lookup_impl (2 samples, 0.04%)</title><rect x="85.8672%" y="245" width="0.0404%" height="15" fill="rgb(241,132,3)" fg:x="4253" fg:w="2"/><text x="86.1172%" y="255.50"></text></g><g><title>_rjem_je_hook_invoke_alloc (2 samples, 0.04%)</title><rect x="85.9075%" y="293" width="0.0404%" height="15" fill="rgb(225,14,2)" fg:x="4255" fg:w="2"/><text x="86.1575%" y="303.50"></text></g><g><title>arena_slab_alloc (2 samples, 0.04%)</title><rect x="85.9479%" y="213" width="0.0404%" height="15" fill="rgb(210,141,35)" fg:x="4257" fg:w="2"/><text x="86.1979%" y="223.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="85.9681%" y="197" width="0.0202%" height="15" fill="rgb(251,14,44)" fg:x="4258" fg:w="1"/><text x="86.2181%" y="207.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="85.9681%" y="181" width="0.0202%" height="15" fill="rgb(247,48,18)" fg:x="4258" fg:w="1"/><text x="86.2181%" y="191.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="85.9681%" y="165" width="0.0202%" height="15" fill="rgb(225,0,40)" fg:x="4258" fg:w="1"/><text x="86.2181%" y="175.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="85.9681%" y="149" width="0.0202%" height="15" fill="rgb(221,31,33)" fg:x="4258" fg:w="1"/><text x="86.2181%" y="159.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="85.9681%" y="133" width="0.0202%" height="15" fill="rgb(237,42,40)" fg:x="4258" fg:w="1"/><text x="86.2181%" y="143.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="85.9681%" y="117" width="0.0202%" height="15" fill="rgb(233,51,29)" fg:x="4258" fg:w="1"/><text x="86.2181%" y="127.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="85.9681%" y="101" width="0.0202%" height="15" fill="rgb(226,58,20)" fg:x="4258" fg:w="1"/><text x="86.2181%" y="111.50"></text></g><g><title>atomic_store_b (1 samples, 0.02%)</title><rect x="85.9681%" y="85" width="0.0202%" height="15" fill="rgb(208,98,7)" fg:x="4258" fg:w="1"/><text x="86.2181%" y="95.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (3 samples, 0.06%)</title><rect x="85.9479%" y="245" width="0.0606%" height="15" fill="rgb(228,143,44)" fg:x="4257" fg:w="3"/><text x="86.1979%" y="255.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (3 samples, 0.06%)</title><rect x="85.9479%" y="229" width="0.0606%" height="15" fill="rgb(246,55,38)" fg:x="4257" fg:w="3"/><text x="86.1979%" y="239.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="85.9883%" y="213" width="0.0202%" height="15" fill="rgb(247,87,16)" fg:x="4259" fg:w="1"/><text x="86.2383%" y="223.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="85.9883%" y="197" width="0.0202%" height="15" fill="rgb(234,129,42)" fg:x="4259" fg:w="1"/><text x="86.2383%" y="207.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="85.9883%" y="181" width="0.0202%" height="15" fill="rgb(220,82,16)" fg:x="4259" fg:w="1"/><text x="86.2383%" y="191.50"></text></g><g><title>arena_ralloc_move_helper (4 samples, 0.08%)</title><rect x="85.9479%" y="293" width="0.0808%" height="15" fill="rgb(211,88,4)" fg:x="4257" fg:w="4"/><text x="86.1979%" y="303.50"></text></g><g><title>arena_malloc (4 samples, 0.08%)</title><rect x="85.9479%" y="277" width="0.0808%" height="15" fill="rgb(248,151,21)" fg:x="4257" fg:w="4"/><text x="86.1979%" y="287.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.08%)</title><rect x="85.9479%" y="261" width="0.0808%" height="15" fill="rgb(238,163,6)" fg:x="4257" fg:w="4"/><text x="86.1979%" y="271.50"></text></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect x="86.0085%" y="245" width="0.0202%" height="15" fill="rgb(209,183,11)" fg:x="4260" fg:w="1"/><text x="86.2585%" y="255.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="86.0085%" y="229" width="0.0202%" height="15" fill="rgb(219,37,20)" fg:x="4260" fg:w="1"/><text x="86.2585%" y="239.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="86.0287%" y="261" width="0.0202%" height="15" fill="rgb(210,158,4)" fg:x="4261" fg:w="1"/><text x="86.2787%" y="271.50"></text></g><g><title>isdalloct (5 samples, 0.10%)</title><rect x="86.0287%" y="293" width="0.1009%" height="15" fill="rgb(221,167,53)" fg:x="4261" fg:w="5"/><text x="86.2787%" y="303.50"></text></g><g><title>arena_sdalloc (5 samples, 0.10%)</title><rect x="86.0287%" y="277" width="0.1009%" height="15" fill="rgb(237,151,45)" fg:x="4261" fg:w="5"/><text x="86.2787%" y="287.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.08%)</title><rect x="86.0489%" y="261" width="0.0808%" height="15" fill="rgb(231,39,3)" fg:x="4262" fg:w="4"/><text x="86.2989%" y="271.50"></text></g><g><title>cache_bin_dalloc_easy (4 samples, 0.08%)</title><rect x="86.0489%" y="245" width="0.0808%" height="15" fill="rgb(212,167,28)" fg:x="4262" fg:w="4"/><text x="86.2989%" y="255.50"></text></g><g><title>iralloct (33 samples, 0.67%)</title><rect x="85.4835%" y="325" width="0.6663%" height="15" fill="rgb(232,178,8)" fg:x="4234" fg:w="33"/><text x="85.7335%" y="335.50"></text></g><g><title>_rjem_je_arena_ralloc (32 samples, 0.65%)</title><rect x="85.5037%" y="309" width="0.6461%" height="15" fill="rgb(225,151,20)" fg:x="4235" fg:w="32"/><text x="85.7537%" y="319.50"></text></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect x="86.1296%" y="293" width="0.0202%" height="15" fill="rgb(238,3,37)" fg:x="4266" fg:w="1"/><text x="86.3796%" y="303.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect x="86.1296%" y="277" width="0.0202%" height="15" fill="rgb(251,147,42)" fg:x="4266" fg:w="1"/><text x="86.3796%" y="287.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="86.1296%" y="261" width="0.0202%" height="15" fill="rgb(208,173,10)" fg:x="4266" fg:w="1"/><text x="86.3796%" y="271.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect x="86.1296%" y="245" width="0.0202%" height="15" fill="rgb(246,225,4)" fg:x="4266" fg:w="1"/><text x="86.3796%" y="255.50"></text></g><g><title>sz_index2size (2 samples, 0.04%)</title><rect x="86.1498%" y="325" width="0.0404%" height="15" fill="rgb(248,102,6)" fg:x="4267" fg:w="2"/><text x="86.3998%" y="335.50"></text></g><g><title>sz_index2size_lookup (2 samples, 0.04%)</title><rect x="86.1498%" y="309" width="0.0404%" height="15" fill="rgb(232,6,21)" fg:x="4267" fg:w="2"/><text x="86.3998%" y="319.50"></text></g><g><title>do_rallocx (2 samples, 0.04%)</title><rect x="86.1498%" y="293" width="0.0404%" height="15" fill="rgb(221,179,22)" fg:x="4267" fg:w="2"/><text x="86.3998%" y="303.50"></text></g><g><title>tcache_get_from_ind (1 samples, 0.02%)</title><rect x="86.1902%" y="325" width="0.0202%" height="15" fill="rgb(252,50,20)" fg:x="4269" fg:w="1"/><text x="86.4402%" y="335.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="86.1902%" y="309" width="0.0202%" height="15" fill="rgb(222,56,38)" fg:x="4269" fg:w="1"/><text x="86.4402%" y="319.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="86.2104%" y="309" width="0.0202%" height="15" fill="rgb(206,193,29)" fg:x="4270" fg:w="1"/><text x="86.4604%" y="319.50"></text></g><g><title>?? (51 samples, 1.03%)</title><rect x="85.2413%" y="405" width="1.0297%" height="15" fill="rgb(239,192,45)" fg:x="4222" fg:w="51"/><text x="85.4913%" y="415.50"></text></g><g><title>alloc::alloc::realloc (51 samples, 1.03%)</title><rect x="85.2413%" y="389" width="1.0297%" height="15" fill="rgb(254,18,36)" fg:x="4222" fg:w="51"/><text x="85.4913%" y="399.50"></text></g><g><title>__rust_realloc (51 samples, 1.03%)</title><rect x="85.2413%" y="373" width="1.0297%" height="15" fill="rgb(221,127,11)" fg:x="4222" fg:w="51"/><text x="85.4913%" y="383.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (51 samples, 1.03%)</title><rect x="85.2413%" y="357" width="1.0297%" height="15" fill="rgb(234,146,35)" fg:x="4222" fg:w="51"/><text x="85.4913%" y="367.50"></text></g><g><title>do_rallocx (50 samples, 1.01%)</title><rect x="85.2615%" y="341" width="1.0095%" height="15" fill="rgb(254,201,37)" fg:x="4223" fg:w="50"/><text x="85.5115%" y="351.50"></text></g><g><title>thread_alloc_event (3 samples, 0.06%)</title><rect x="86.2104%" y="325" width="0.0606%" height="15" fill="rgb(211,202,23)" fg:x="4270" fg:w="3"/><text x="86.4604%" y="335.50"></text></g><g><title>te_event_advance (2 samples, 0.04%)</title><rect x="86.2306%" y="309" width="0.0404%" height="15" fill="rgb(237,91,2)" fg:x="4271" fg:w="2"/><text x="86.4806%" y="319.50"></text></g><g><title>te_ctx_get (2 samples, 0.04%)</title><rect x="86.2306%" y="293" width="0.0404%" height="15" fill="rgb(226,228,36)" fg:x="4271" fg:w="2"/><text x="86.4806%" y="303.50"></text></g><g><title>tsd_thread_allocatedp_get (1 samples, 0.02%)</title><rect x="86.2508%" y="277" width="0.0202%" height="15" fill="rgb(213,63,50)" fg:x="4272" fg:w="1"/><text x="86.5008%" y="287.50"></text></g><g><title>tsd_thread_allocatedp_get_unsafe (1 samples, 0.02%)</title><rect x="86.2508%" y="261" width="0.0202%" height="15" fill="rgb(235,194,19)" fg:x="4272" fg:w="1"/><text x="86.5008%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (52 samples, 1.05%)</title><rect x="85.2413%" y="421" width="1.0499%" height="15" fill="rgb(207,204,18)" fg:x="4222" fg:w="52"/><text x="85.4913%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="86.2709%" y="405" width="0.0202%" height="15" fill="rgb(248,8,7)" fg:x="4273" fg:w="1"/><text x="86.5209%" y="415.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="86.2911%" y="421" width="0.0202%" height="15" fill="rgb(223,145,47)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="431.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="86.2911%" y="405" width="0.0202%" height="15" fill="rgb(228,84,11)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="415.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="86.2911%" y="389" width="0.0202%" height="15" fill="rgb(218,76,45)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="399.50"></text></g><g><title>thread_alloc_event (1 samples, 0.02%)</title><rect x="86.2911%" y="373" width="0.0202%" height="15" fill="rgb(223,80,15)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="383.50"></text></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect x="86.2911%" y="357" width="0.0202%" height="15" fill="rgb(219,218,33)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="367.50"></text></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.02%)</title><rect x="86.2911%" y="341" width="0.0202%" height="15" fill="rgb(208,51,11)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="351.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="86.2911%" y="325" width="0.0202%" height="15" fill="rgb(229,165,39)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="335.50"></text></g><g><title>tcache_gc_large (1 samples, 0.02%)</title><rect x="86.2911%" y="309" width="0.0202%" height="15" fill="rgb(241,100,24)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="319.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (1 samples, 0.02%)</title><rect x="86.2911%" y="293" width="0.0202%" height="15" fill="rgb(228,14,23)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="303.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="86.2911%" y="277" width="0.0202%" height="15" fill="rgb(247,116,52)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="287.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="86.2911%" y="261" width="0.0202%" height="15" fill="rgb(216,149,33)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="271.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="86.2911%" y="245" width="0.0202%" height="15" fill="rgb(238,142,29)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="255.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="86.2911%" y="229" width="0.0202%" height="15" fill="rgb(224,83,40)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="239.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="86.2911%" y="213" width="0.0202%" height="15" fill="rgb(234,165,11)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="223.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect x="86.2911%" y="197" width="0.0202%" height="15" fill="rgb(215,96,23)" fg:x="4274" fg:w="1"/><text x="86.5411%" y="207.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (69 samples, 1.39%)</title><rect x="84.9586%" y="485" width="1.3931%" height="15" fill="rgb(233,179,26)" fg:x="4208" fg:w="69"/><text x="85.2086%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (62 samples, 1.25%)</title><rect x="85.0999%" y="469" width="1.2518%" height="15" fill="rgb(225,129,33)" fg:x="4215" fg:w="62"/><text x="85.3499%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (58 samples, 1.17%)</title><rect x="85.1807%" y="453" width="1.1710%" height="15" fill="rgb(237,49,13)" fg:x="4219" fg:w="58"/><text x="85.4307%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (58 samples, 1.17%)</title><rect x="85.1807%" y="437" width="1.1710%" height="15" fill="rgb(211,3,31)" fg:x="4219" fg:w="58"/><text x="85.4307%" y="447.50"></text></g><g><title>_rjem_malloc (2 samples, 0.04%)</title><rect x="86.3113%" y="421" width="0.0404%" height="15" fill="rgb(216,152,19)" fg:x="4275" fg:w="2"/><text x="86.5613%" y="431.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="86.3315%" y="405" width="0.0202%" height="15" fill="rgb(251,121,35)" fg:x="4276" fg:w="1"/><text x="86.5815%" y="415.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="86.3315%" y="389" width="0.0202%" height="15" fill="rgb(210,217,47)" fg:x="4276" fg:w="1"/><text x="86.5815%" y="399.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="86.3315%" y="373" width="0.0202%" height="15" fill="rgb(244,116,22)" fg:x="4276" fg:w="1"/><text x="86.5815%" y="383.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="86.3517%" y="485" width="0.0202%" height="15" fill="rgb(228,17,21)" fg:x="4277" fg:w="1"/><text x="86.6017%" y="495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="86.3517%" y="469" width="0.0202%" height="15" fill="rgb(240,149,34)" fg:x="4277" fg:w="1"/><text x="86.6017%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 0.26%)</title><rect x="87.1189%" y="405" width="0.2625%" height="15" fill="rgb(208,125,47)" fg:x="4315" fg:w="13"/><text x="87.3689%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.08%)</title><rect x="87.5227%" y="389" width="0.0808%" height="15" fill="rgb(249,186,39)" fg:x="4335" fg:w="4"/><text x="87.7727%" y="399.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.12%)</title><rect x="88.0073%" y="293" width="0.1211%" height="15" fill="rgb(240,220,33)" fg:x="4359" fg:w="6"/><text x="88.2573%" y="303.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="88.1284%" y="261" width="0.0404%" height="15" fill="rgb(243,110,23)" fg:x="4365" fg:w="2"/><text x="88.3784%" y="271.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (10 samples, 0.20%)</title><rect x="88.0073%" y="309" width="0.2019%" height="15" fill="rgb(219,163,46)" fg:x="4359" fg:w="10"/><text x="88.2573%" y="319.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="88.1284%" y="293" width="0.0808%" height="15" fill="rgb(216,126,30)" fg:x="4365" fg:w="4"/><text x="88.3784%" y="303.50"></text></g><g><title>sonic_rs::reader::Reader::next (4 samples, 0.08%)</title><rect x="88.1284%" y="277" width="0.0808%" height="15" fill="rgb(208,139,11)" fg:x="4365" fg:w="4"/><text x="88.3784%" y="287.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="88.1688%" y="261" width="0.0404%" height="15" fill="rgb(213,118,36)" fg:x="4367" fg:w="2"/><text x="88.4188%" y="271.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (2 samples, 0.04%)</title><rect x="88.1688%" y="245" width="0.0404%" height="15" fill="rgb(226,43,17)" fg:x="4367" fg:w="2"/><text x="88.4188%" y="255.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="88.1688%" y="229" width="0.0404%" height="15" fill="rgb(254,217,4)" fg:x="4367" fg:w="2"/><text x="88.4188%" y="239.50"></text></g><g><title>&lt;json_benchmark::empty::Array as serde::de::Deserialize&gt;::deserialize (16 samples, 0.32%)</title><rect x="88.0073%" y="341" width="0.3230%" height="15" fill="rgb(210,134,47)" fg:x="4359" fg:w="16"/><text x="88.2573%" y="351.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (16 samples, 0.32%)</title><rect x="88.0073%" y="325" width="0.3230%" height="15" fill="rgb(237,24,49)" fg:x="4359" fg:w="16"/><text x="88.2573%" y="335.50"></text></g><g><title>?? (6 samples, 0.12%)</title><rect x="88.2092%" y="309" width="0.1211%" height="15" fill="rgb(251,39,46)" fg:x="4369" fg:w="6"/><text x="88.4592%" y="319.50"></text></g><g><title>?? (6 samples, 0.12%)</title><rect x="88.2092%" y="293" width="0.1211%" height="15" fill="rgb(251,220,3)" fg:x="4369" fg:w="6"/><text x="88.4592%" y="303.50"></text></g><g><title>sonic_rs::reader::Reader::next (6 samples, 0.12%)</title><rect x="88.2092%" y="277" width="0.1211%" height="15" fill="rgb(228,105,12)" fg:x="4369" fg:w="6"/><text x="88.4592%" y="287.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (6 samples, 0.12%)</title><rect x="88.2092%" y="261" width="0.1211%" height="15" fill="rgb(215,196,1)" fg:x="4369" fg:w="6"/><text x="88.4592%" y="271.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (2 samples, 0.04%)</title><rect x="88.5322%" y="277" width="0.0404%" height="15" fill="rgb(214,33,39)" fg:x="4385" fg:w="2"/><text x="88.7822%" y="287.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="88.5726%" y="261" width="0.0404%" height="15" fill="rgb(220,19,52)" fg:x="4387" fg:w="2"/><text x="88.8226%" y="271.50"></text></g><g><title>sonic_rs::reader::Reader::next (7 samples, 0.14%)</title><rect x="88.5726%" y="277" width="0.1413%" height="15" fill="rgb(221,78,38)" fg:x="4387" fg:w="7"/><text x="88.8226%" y="287.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="88.6130%" y="261" width="0.1009%" height="15" fill="rgb(253,30,16)" fg:x="4389" fg:w="5"/><text x="88.8630%" y="271.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (5 samples, 0.10%)</title><rect x="88.6130%" y="245" width="0.1009%" height="15" fill="rgb(242,65,0)" fg:x="4389" fg:w="5"/><text x="88.8630%" y="255.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (5 samples, 0.10%)</title><rect x="88.6130%" y="229" width="0.1009%" height="15" fill="rgb(235,201,12)" fg:x="4389" fg:w="5"/><text x="88.8630%" y="239.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (4 samples, 0.08%)</title><rect x="89.1177%" y="261" width="0.0808%" height="15" fill="rgb(233,161,9)" fg:x="4414" fg:w="4"/><text x="89.3677%" y="271.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (4 samples, 0.08%)</title><rect x="89.1177%" y="245" width="0.0808%" height="15" fill="rgb(241,207,41)" fg:x="4414" fg:w="4"/><text x="89.3677%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.08%)</title><rect x="89.1985%" y="261" width="0.0808%" height="15" fill="rgb(212,69,46)" fg:x="4418" fg:w="4"/><text x="89.4485%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (8 samples, 0.16%)</title><rect x="89.2792%" y="261" width="0.1615%" height="15" fill="rgb(239,69,45)" fg:x="4422" fg:w="8"/><text x="89.5292%" y="271.50"></text></g><g><title>?? (56 samples, 1.13%)</title><rect x="88.5322%" y="293" width="1.1306%" height="15" fill="rgb(242,117,48)" fg:x="4385" fg:w="56"/><text x="88.7822%" y="303.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (47 samples, 0.95%)</title><rect x="88.7139%" y="277" width="0.9489%" height="15" fill="rgb(228,41,36)" fg:x="4394" fg:w="47"/><text x="88.9639%" y="287.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (11 samples, 0.22%)</title><rect x="89.4407%" y="261" width="0.2221%" height="15" fill="rgb(212,3,32)" fg:x="4430" fg:w="11"/><text x="89.6907%" y="271.50"></text></g><g><title>?? (58 samples, 1.17%)</title><rect x="88.5322%" y="309" width="1.1710%" height="15" fill="rgb(233,41,49)" fg:x="4385" fg:w="58"/><text x="88.7822%" y="319.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.04%)</title><rect x="89.6628%" y="293" width="0.0404%" height="15" fill="rgb(252,170,49)" fg:x="4441" fg:w="2"/><text x="89.9128%" y="303.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (106 samples, 2.14%)</title><rect x="87.6842%" y="357" width="2.1401%" height="15" fill="rgb(229,53,26)" fg:x="4343" fg:w="106"/><text x="87.9342%" y="367.50">&lt;..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (74 samples, 1.49%)</title><rect x="88.3303%" y="341" width="1.4940%" height="15" fill="rgb(217,157,12)" fg:x="4375" fg:w="74"/><text x="88.5803%" y="351.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (64 samples, 1.29%)</title><rect x="88.5322%" y="325" width="1.2921%" height="15" fill="rgb(227,17,9)" fg:x="4385" fg:w="64"/><text x="88.7822%" y="335.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (6 samples, 0.12%)</title><rect x="89.7032%" y="309" width="0.1211%" height="15" fill="rgb(218,84,12)" fg:x="4443" fg:w="6"/><text x="89.9532%" y="319.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (7 samples, 0.14%)</title><rect x="89.8243%" y="309" width="0.1413%" height="15" fill="rgb(212,79,24)" fg:x="4449" fg:w="7"/><text x="90.0743%" y="319.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (124 samples, 2.50%)</title><rect x="87.6035%" y="389" width="2.5035%" height="15" fill="rgb(217,222,37)" fg:x="4339" fg:w="124"/><text x="87.8535%" y="399.50">&lt;s..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (124 samples, 2.50%)</title><rect x="87.6035%" y="373" width="2.5035%" height="15" fill="rgb(246,208,8)" fg:x="4339" fg:w="124"/><text x="87.8535%" y="383.50">&lt;s..</text></g><g><title>?? (14 samples, 0.28%)</title><rect x="89.8243%" y="357" width="0.2827%" height="15" fill="rgb(244,133,10)" fg:x="4449" fg:w="14"/><text x="90.0743%" y="367.50"></text></g><g><title>?? (14 samples, 0.28%)</title><rect x="89.8243%" y="341" width="0.2827%" height="15" fill="rgb(209,219,41)" fg:x="4449" fg:w="14"/><text x="90.0743%" y="351.50"></text></g><g><title>sonic_rs::reader::Reader::next (14 samples, 0.28%)</title><rect x="89.8243%" y="325" width="0.2827%" height="15" fill="rgb(253,175,45)" fg:x="4449" fg:w="14"/><text x="90.0743%" y="335.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="89.9657%" y="309" width="0.1413%" height="15" fill="rgb(235,100,37)" fg:x="4456" fg:w="7"/><text x="90.2157%" y="319.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (7 samples, 0.14%)</title><rect x="89.9657%" y="293" width="0.1413%" height="15" fill="rgb(225,87,19)" fg:x="4456" fg:w="7"/><text x="90.2157%" y="303.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (7 samples, 0.14%)</title><rect x="89.9657%" y="277" width="0.1413%" height="15" fill="rgb(217,152,17)" fg:x="4456" fg:w="7"/><text x="90.2157%" y="287.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.14%)</title><rect x="91.4395%" y="293" width="0.1413%" height="15" fill="rgb(235,72,13)" fg:x="4529" fg:w="7"/><text x="91.6895%" y="303.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.18%)</title><rect x="91.5809%" y="261" width="0.1817%" height="15" fill="rgb(233,140,18)" fg:x="4536" fg:w="9"/><text x="91.8309%" y="271.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (5 samples, 0.10%)</title><rect x="91.7626%" y="261" width="0.1009%" height="15" fill="rgb(207,212,28)" fg:x="4545" fg:w="5"/><text x="92.0126%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.10%)</title><rect x="91.7626%" y="245" width="0.1009%" height="15" fill="rgb(220,130,25)" fg:x="4545" fg:w="5"/><text x="92.0126%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.10%)</title><rect x="91.7626%" y="229" width="0.1009%" height="15" fill="rgb(205,55,34)" fg:x="4545" fg:w="5"/><text x="92.0126%" y="239.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (38 samples, 0.77%)</title><rect x="91.8635%" y="245" width="0.7672%" height="15" fill="rgb(237,54,35)" fg:x="4550" fg:w="38"/><text x="92.1135%" y="255.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (9 samples, 0.18%)</title><rect x="92.6307%" y="245" width="0.1817%" height="15" fill="rgb(208,67,23)" fg:x="4588" fg:w="9"/><text x="92.8807%" y="255.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (5 samples, 0.10%)</title><rect x="92.8124%" y="245" width="0.1009%" height="15" fill="rgb(206,207,50)" fg:x="4597" fg:w="5"/><text x="93.0624%" y="255.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (2 samples, 0.04%)</title><rect x="92.9134%" y="245" width="0.0404%" height="15" fill="rgb(213,211,42)" fg:x="4602" fg:w="2"/><text x="93.1634%" y="255.50"></text></g><g><title>?? (70 samples, 1.41%)</title><rect x="91.5809%" y="293" width="1.4133%" height="15" fill="rgb(252,197,50)" fg:x="4536" fg:w="70"/><text x="91.8309%" y="303.50"></text></g><g><title>?? (70 samples, 1.41%)</title><rect x="91.5809%" y="277" width="1.4133%" height="15" fill="rgb(251,211,41)" fg:x="4536" fg:w="70"/><text x="91.8309%" y="287.50"></text></g><g><title>?? (56 samples, 1.13%)</title><rect x="91.8635%" y="261" width="1.1306%" height="15" fill="rgb(229,211,5)" fg:x="4550" fg:w="56"/><text x="92.1135%" y="271.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (2 samples, 0.04%)</title><rect x="92.9538%" y="245" width="0.0404%" height="15" fill="rgb(239,36,31)" fg:x="4604" fg:w="2"/><text x="93.2038%" y="255.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (138 samples, 2.79%)</title><rect x="90.2685%" y="357" width="2.7862%" height="15" fill="rgb(248,67,31)" fg:x="4471" fg:w="138"/><text x="90.5185%" y="367.50">&lt;c..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (80 samples, 1.62%)</title><rect x="91.4395%" y="341" width="1.6152%" height="15" fill="rgb(249,55,44)" fg:x="4529" fg:w="80"/><text x="91.6895%" y="351.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (80 samples, 1.62%)</title><rect x="91.4395%" y="325" width="1.6152%" height="15" fill="rgb(216,82,12)" fg:x="4529" fg:w="80"/><text x="91.6895%" y="335.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (80 samples, 1.62%)</title><rect x="91.4395%" y="309" width="1.6152%" height="15" fill="rgb(242,174,1)" fg:x="4529" fg:w="80"/><text x="91.6895%" y="319.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.06%)</title><rect x="92.9941%" y="293" width="0.0606%" height="15" fill="rgb(208,120,29)" fg:x="4606" fg:w="3"/><text x="93.2441%" y="303.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.06%)</title><rect x="92.9941%" y="277" width="0.0606%" height="15" fill="rgb(221,105,43)" fg:x="4606" fg:w="3"/><text x="93.2441%" y="287.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.06%)</title><rect x="92.9941%" y="261" width="0.0606%" height="15" fill="rgb(234,124,22)" fg:x="4606" fg:w="3"/><text x="93.2441%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.06%)</title><rect x="92.9941%" y="245" width="0.0606%" height="15" fill="rgb(212,23,30)" fg:x="4606" fg:w="3"/><text x="93.2441%" y="255.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.06%)</title><rect x="92.9941%" y="229" width="0.0606%" height="15" fill="rgb(219,122,53)" fg:x="4606" fg:w="3"/><text x="93.2441%" y="239.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.06%)</title><rect x="92.9941%" y="213" width="0.0606%" height="15" fill="rgb(248,84,24)" fg:x="4606" fg:w="3"/><text x="93.2441%" y="223.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="93.0547%" y="341" width="0.0404%" height="15" fill="rgb(245,115,18)" fg:x="4609" fg:w="2"/><text x="93.3047%" y="351.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek_n (5 samples, 0.10%)</title><rect x="93.0951%" y="341" width="0.1009%" height="15" fill="rgb(227,176,51)" fg:x="4611" fg:w="5"/><text x="93.3451%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="93.1960%" y="341" width="0.0202%" height="15" fill="rgb(229,63,42)" fg:x="4616" fg:w="1"/><text x="93.4460%" y="351.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (9 samples, 0.18%)</title><rect x="93.2162%" y="325" width="0.1817%" height="15" fill="rgb(247,202,24)" fg:x="4617" fg:w="9"/><text x="93.4662%" y="335.50"></text></g><g><title>sonic_rs::reader::Reader::next (21 samples, 0.42%)</title><rect x="93.2162%" y="341" width="0.4240%" height="15" fill="rgb(244,173,20)" fg:x="4617" fg:w="21"/><text x="93.4662%" y="351.50"></text></g><g><title>?? (12 samples, 0.24%)</title><rect x="93.3979%" y="325" width="0.2423%" height="15" fill="rgb(242,81,47)" fg:x="4626" fg:w="12"/><text x="93.6479%" y="335.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (12 samples, 0.24%)</title><rect x="93.3979%" y="309" width="0.2423%" height="15" fill="rgb(231,185,54)" fg:x="4626" fg:w="12"/><text x="93.6479%" y="319.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (12 samples, 0.24%)</title><rect x="93.3979%" y="293" width="0.2423%" height="15" fill="rgb(243,55,32)" fg:x="4626" fg:w="12"/><text x="93.6479%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (6 samples, 0.12%)</title><rect x="93.6402%" y="325" width="0.1211%" height="15" fill="rgb(208,167,19)" fg:x="4638" fg:w="6"/><text x="93.8902%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (6 samples, 0.12%)</title><rect x="93.7614%" y="325" width="0.1211%" height="15" fill="rgb(231,72,35)" fg:x="4644" fg:w="6"/><text x="94.0114%" y="335.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (328 samples, 6.62%)</title><rect x="87.3814%" y="405" width="6.6222%" height="15" fill="rgb(250,173,51)" fg:x="4328" fg:w="328"/><text x="87.6314%" y="415.50">&lt;json_ben..</text></g><g><title>serde::de::MapAccess::next_key (193 samples, 3.90%)</title><rect x="90.1070%" y="389" width="3.8966%" height="15" fill="rgb(209,5,22)" fg:x="4463" fg:w="193"/><text x="90.3570%" y="399.50">serd..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (193 samples, 3.90%)</title><rect x="90.1070%" y="373" width="3.8966%" height="15" fill="rgb(250,174,19)" fg:x="4463" fg:w="193"/><text x="90.3570%" y="383.50">&lt;son..</text></g><g><title>?? (47 samples, 0.95%)</title><rect x="93.0547%" y="357" width="0.9489%" height="15" fill="rgb(217,3,49)" fg:x="4609" fg:w="47"/><text x="93.3047%" y="367.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (18 samples, 0.36%)</title><rect x="93.6402%" y="341" width="0.3634%" height="15" fill="rgb(218,225,5)" fg:x="4638" fg:w="18"/><text x="93.8902%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.12%)</title><rect x="93.8825%" y="325" width="0.1211%" height="15" fill="rgb(236,89,11)" fg:x="4650" fg:w="6"/><text x="94.1325%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="94.0036%" y="389" width="0.0202%" height="15" fill="rgb(206,33,28)" fg:x="4656" fg:w="1"/><text x="94.2536%" y="399.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (8 samples, 0.16%)</title><rect x="94.0238%" y="373" width="0.1615%" height="15" fill="rgb(241,56,42)" fg:x="4657" fg:w="8"/><text x="94.2738%" y="383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (379 samples, 7.65%)</title><rect x="86.5536%" y="453" width="7.6519%" height="15" fill="rgb(222,44,11)" fg:x="4287" fg:w="379"/><text x="86.8036%" y="463.50">&lt;core::mar..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (363 samples, 7.33%)</title><rect x="86.8766%" y="437" width="7.3289%" height="15" fill="rgb(234,111,20)" fg:x="4303" fg:w="363"/><text x="87.1266%" y="447.50">json_bench..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (363 samples, 7.33%)</title><rect x="86.8766%" y="421" width="7.3289%" height="15" fill="rgb(237,77,6)" fg:x="4303" fg:w="363"/><text x="87.1266%" y="431.50">&lt;&amp;mut soni..</text></g><g><title>?? (10 samples, 0.20%)</title><rect x="94.0036%" y="405" width="0.2019%" height="15" fill="rgb(235,111,23)" fg:x="4656" fg:w="10"/><text x="94.2536%" y="415.50"></text></g><g><title>sonic_rs::reader::Reader::next (9 samples, 0.18%)</title><rect x="94.0238%" y="389" width="0.1817%" height="15" fill="rgb(251,135,29)" fg:x="4657" fg:w="9"/><text x="94.2738%" y="399.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="94.1853%" y="373" width="0.0202%" height="15" fill="rgb(217,57,1)" fg:x="4665" fg:w="1"/><text x="94.4353%" y="383.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="94.1853%" y="357" width="0.0202%" height="15" fill="rgb(249,119,31)" fg:x="4665" fg:w="1"/><text x="94.4353%" y="367.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="94.1853%" y="341" width="0.0202%" height="15" fill="rgb(233,164,33)" fg:x="4665" fg:w="1"/><text x="94.4353%" y="351.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (5 samples, 0.10%)</title><rect x="94.2055%" y="421" width="0.1009%" height="15" fill="rgb(250,217,43)" fg:x="4666" fg:w="5"/><text x="94.4555%" y="431.50"></text></g><g><title>sonic_rs::reader::Reader::next (8 samples, 0.16%)</title><rect x="94.2055%" y="437" width="0.1615%" height="15" fill="rgb(232,154,50)" fg:x="4666" fg:w="8"/><text x="94.4555%" y="447.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="94.3065%" y="421" width="0.0606%" height="15" fill="rgb(227,190,8)" fg:x="4671" fg:w="3"/><text x="94.5565%" y="431.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect x="94.3065%" y="405" width="0.0606%" height="15" fill="rgb(209,217,32)" fg:x="4671" fg:w="3"/><text x="94.5565%" y="415.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect x="94.3065%" y="389" width="0.0606%" height="15" fill="rgb(243,203,50)" fg:x="4671" fg:w="3"/><text x="94.5565%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="94.3872%" y="421" width="0.0202%" height="15" fill="rgb(232,152,27)" fg:x="4675" fg:w="1"/><text x="94.6372%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (472 samples, 9.53%)</title><rect x="84.8980%" y="533" width="9.5296%" height="15" fill="rgb(240,34,29)" fg:x="4205" fg:w="472"/><text x="85.1480%" y="543.50">serde::de::imp..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (472 samples, 9.53%)</title><rect x="84.8980%" y="517" width="9.5296%" height="15" fill="rgb(215,185,52)" fg:x="4205" fg:w="472"/><text x="85.1480%" y="527.50">&lt;&amp;mut sonic_rs..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (470 samples, 9.49%)</title><rect x="84.9384%" y="501" width="9.4892%" height="15" fill="rgb(240,89,49)" fg:x="4207" fg:w="470"/><text x="85.1884%" y="511.50">&lt;serde::de::im..</text></g><g><title>serde::de::SeqAccess::next_element (399 samples, 8.06%)</title><rect x="86.3719%" y="485" width="8.0557%" height="15" fill="rgb(225,12,52)" fg:x="4278" fg:w="399"/><text x="86.6219%" y="495.50">serde::de::..</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (399 samples, 8.06%)</title><rect x="86.3719%" y="469" width="8.0557%" height="15" fill="rgb(239,128,45)" fg:x="4278" fg:w="399"/><text x="86.6219%" y="479.50">&lt;sonic_rs::..</text></g><g><title>?? (11 samples, 0.22%)</title><rect x="94.2055%" y="453" width="0.2221%" height="15" fill="rgb(211,78,47)" fg:x="4666" fg:w="11"/><text x="94.4555%" y="463.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (3 samples, 0.06%)</title><rect x="94.3671%" y="437" width="0.0606%" height="15" fill="rgb(232,31,21)" fg:x="4674" fg:w="3"/><text x="94.6171%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect x="94.4074%" y="421" width="0.0202%" height="15" fill="rgb(222,168,14)" fg:x="4676" fg:w="1"/><text x="94.6574%" y="431.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="94.4276%" y="469" width="0.0202%" height="15" fill="rgb(209,128,24)" fg:x="4677" fg:w="1"/><text x="94.6776%" y="479.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="94.4276%" y="453" width="0.0202%" height="15" fill="rgb(249,35,13)" fg:x="4677" fg:w="1"/><text x="94.6776%" y="463.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (2 samples, 0.04%)</title><rect x="94.4478%" y="453" width="0.0404%" height="15" fill="rgb(218,7,2)" fg:x="4678" fg:w="2"/><text x="94.6978%" y="463.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (2 samples, 0.04%)</title><rect x="94.4478%" y="437" width="0.0404%" height="15" fill="rgb(238,107,27)" fg:x="4678" fg:w="2"/><text x="94.6978%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (2 samples, 0.04%)</title><rect x="94.4882%" y="453" width="0.0404%" height="15" fill="rgb(217,88,38)" fg:x="4680" fg:w="2"/><text x="94.7382%" y="463.50"></text></g><g><title>?? (8 samples, 0.16%)</title><rect x="94.4276%" y="501" width="0.1615%" height="15" fill="rgb(230,207,0)" fg:x="4677" fg:w="8"/><text x="94.6776%" y="511.50"></text></g><g><title>?? (8 samples, 0.16%)</title><rect x="94.4276%" y="485" width="0.1615%" height="15" fill="rgb(249,64,54)" fg:x="4677" fg:w="8"/><text x="94.6776%" y="495.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (7 samples, 0.14%)</title><rect x="94.4478%" y="469" width="0.1413%" height="15" fill="rgb(231,7,11)" fg:x="4678" fg:w="7"/><text x="94.6978%" y="479.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (3 samples, 0.06%)</title><rect x="94.5286%" y="453" width="0.0606%" height="15" fill="rgb(205,149,21)" fg:x="4682" fg:w="3"/><text x="94.7786%" y="463.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (483 samples, 9.75%)</title><rect x="84.8577%" y="581" width="9.7517%" height="15" fill="rgb(215,126,34)" fg:x="4203" fg:w="483"/><text x="85.1077%" y="591.50">&lt;sonic_rs::ser..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (483 samples, 9.75%)</title><rect x="84.8577%" y="565" width="9.7517%" height="15" fill="rgb(241,132,45)" fg:x="4203" fg:w="483"/><text x="85.1077%" y="575.50">&lt;sonic_rs::ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (483 samples, 9.75%)</title><rect x="84.8577%" y="549" width="9.7517%" height="15" fill="rgb(252,69,32)" fg:x="4203" fg:w="483"/><text x="85.1077%" y="559.50">&lt;core::marker:..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (9 samples, 0.18%)</title><rect x="94.4276%" y="533" width="0.1817%" height="15" fill="rgb(232,204,19)" fg:x="4677" fg:w="9"/><text x="94.6776%" y="543.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (9 samples, 0.18%)</title><rect x="94.4276%" y="517" width="0.1817%" height="15" fill="rgb(249,15,47)" fg:x="4677" fg:w="9"/><text x="94.6776%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="94.5891%" y="501" width="0.0202%" height="15" fill="rgb(209,227,23)" fg:x="4685" fg:w="1"/><text x="94.8391%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="94.8718%" y="485" width="0.0202%" height="15" fill="rgb(248,92,24)" fg:x="4699" fg:w="1"/><text x="95.1218%" y="495.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (1 samples, 0.02%)</title><rect x="94.8920%" y="453" width="0.0202%" height="15" fill="rgb(247,59,2)" fg:x="4700" fg:w="1"/><text x="95.1420%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="94.8920%" y="437" width="0.0202%" height="15" fill="rgb(221,30,5)" fg:x="4700" fg:w="1"/><text x="95.1420%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="94.8920%" y="421" width="0.0202%" height="15" fill="rgb(208,108,53)" fg:x="4700" fg:w="1"/><text x="95.1420%" y="431.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect x="94.9122%" y="437" width="0.0606%" height="15" fill="rgb(211,183,26)" fg:x="4701" fg:w="3"/><text x="95.1622%" y="447.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="94.9727%" y="437" width="0.0202%" height="15" fill="rgb(232,132,4)" fg:x="4704" fg:w="1"/><text x="95.2227%" y="447.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20 samples, 0.40%)</title><rect x="94.6093%" y="549" width="0.4038%" height="15" fill="rgb(253,128,37)" fg:x="4686" fg:w="20"/><text x="94.8593%" y="559.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (7 samples, 0.14%)</title><rect x="94.8718%" y="533" width="0.1413%" height="15" fill="rgb(221,58,24)" fg:x="4699" fg:w="7"/><text x="95.1218%" y="543.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (7 samples, 0.14%)</title><rect x="94.8718%" y="517" width="0.1413%" height="15" fill="rgb(230,54,45)" fg:x="4699" fg:w="7"/><text x="95.1218%" y="527.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.14%)</title><rect x="94.8718%" y="501" width="0.1413%" height="15" fill="rgb(254,21,18)" fg:x="4699" fg:w="7"/><text x="95.1218%" y="511.50"></text></g><g><title>?? (6 samples, 0.12%)</title><rect x="94.8920%" y="485" width="0.1211%" height="15" fill="rgb(221,108,0)" fg:x="4700" fg:w="6"/><text x="95.1420%" y="495.50"></text></g><g><title>?? (6 samples, 0.12%)</title><rect x="94.8920%" y="469" width="0.1211%" height="15" fill="rgb(206,95,1)" fg:x="4700" fg:w="6"/><text x="95.1420%" y="479.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="94.9122%" y="453" width="0.1009%" height="15" fill="rgb(237,52,5)" fg:x="4701" fg:w="5"/><text x="95.1622%" y="463.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="94.9929%" y="437" width="0.0202%" height="15" fill="rgb(218,150,34)" fg:x="4705" fg:w="1"/><text x="95.2429%" y="447.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (3 samples, 0.06%)</title><rect x="95.0131%" y="533" width="0.0606%" height="15" fill="rgb(235,194,28)" fg:x="4706" fg:w="3"/><text x="95.2631%" y="543.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="95.0737%" y="517" width="0.0404%" height="15" fill="rgb(245,92,18)" fg:x="4709" fg:w="2"/><text x="95.3237%" y="527.50"></text></g><g><title>sonic_rs::reader::Reader::next (3 samples, 0.06%)</title><rect x="95.0737%" y="533" width="0.0606%" height="15" fill="rgb(253,203,53)" fg:x="4709" fg:w="3"/><text x="95.3237%" y="543.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="95.1141%" y="517" width="0.0202%" height="15" fill="rgb(249,185,47)" fg:x="4711" fg:w="1"/><text x="95.3641%" y="527.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="95.1141%" y="501" width="0.0202%" height="15" fill="rgb(252,194,52)" fg:x="4711" fg:w="1"/><text x="95.3641%" y="511.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="95.1141%" y="485" width="0.0202%" height="15" fill="rgb(210,53,36)" fg:x="4711" fg:w="1"/><text x="95.3641%" y="495.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (511 samples, 10.32%)</title><rect x="84.8375%" y="597" width="10.3170%" height="15" fill="rgb(237,37,25)" fg:x="4202" fg:w="511"/><text x="85.0875%" y="607.50">&lt;json_benchmark..</text></g><g><title>serde::de::MapAccess::next_key (27 samples, 0.55%)</title><rect x="94.6093%" y="581" width="0.5451%" height="15" fill="rgb(242,116,27)" fg:x="4686" fg:w="27"/><text x="94.8593%" y="591.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (27 samples, 0.55%)</title><rect x="94.6093%" y="565" width="0.5451%" height="15" fill="rgb(213,185,26)" fg:x="4686" fg:w="27"/><text x="94.8593%" y="575.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="95.0131%" y="549" width="0.1413%" height="15" fill="rgb(225,204,8)" fg:x="4706" fg:w="7"/><text x="95.2631%" y="559.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect x="95.1343%" y="533" width="0.0202%" height="15" fill="rgb(254,111,37)" fg:x="4712" fg:w="1"/><text x="95.3843%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="95.1343%" y="517" width="0.0202%" height="15" fill="rgb(242,35,9)" fg:x="4712" fg:w="1"/><text x="95.3843%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (587 samples, 11.85%)</title><rect x="83.3232%" y="645" width="11.8514%" height="15" fill="rgb(232,138,49)" fg:x="4127" fg:w="587"/><text x="83.5732%" y="655.50">&lt;core::marker::Pha..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (516 samples, 10.42%)</title><rect x="84.7567%" y="629" width="10.4179%" height="15" fill="rgb(247,56,4)" fg:x="4198" fg:w="516"/><text x="85.0067%" y="639.50">json_benchmark:..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (516 samples, 10.42%)</title><rect x="84.7567%" y="613" width="10.4179%" height="15" fill="rgb(226,179,17)" fg:x="4198" fg:w="516"/><text x="85.0067%" y="623.50">&lt;&amp;mut sonic_rs:..</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="95.1545%" y="597" width="0.0202%" height="15" fill="rgb(216,163,45)" fg:x="4713" fg:w="1"/><text x="95.4045%" y="607.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="95.1545%" y="581" width="0.0202%" height="15" fill="rgb(211,157,3)" fg:x="4713" fg:w="1"/><text x="95.4045%" y="591.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="95.1545%" y="565" width="0.0202%" height="15" fill="rgb(234,44,20)" fg:x="4713" fg:w="1"/><text x="95.4045%" y="575.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="95.1746%" y="613" width="0.0404%" height="15" fill="rgb(254,138,23)" fg:x="4714" fg:w="2"/><text x="95.4246%" y="623.50"></text></g><g><title>sonic_rs::reader::Reader::next (3 samples, 0.06%)</title><rect x="95.1746%" y="629" width="0.0606%" height="15" fill="rgb(206,119,39)" fg:x="4714" fg:w="3"/><text x="95.4246%" y="639.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="95.2150%" y="613" width="0.0202%" height="15" fill="rgb(231,105,52)" fg:x="4716" fg:w="1"/><text x="95.4650%" y="623.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="95.2150%" y="597" width="0.0202%" height="15" fill="rgb(250,20,5)" fg:x="4716" fg:w="1"/><text x="95.4650%" y="607.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="95.2150%" y="581" width="0.0202%" height="15" fill="rgb(215,198,30)" fg:x="4716" fg:w="1"/><text x="95.4650%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (617 samples, 12.46%)</title><rect x="82.7983%" y="725" width="12.4571%" height="15" fill="rgb(246,142,8)" fg:x="4101" fg:w="617"/><text x="83.0483%" y="735.50">serde::de::impls::&lt;..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (617 samples, 12.46%)</title><rect x="82.7983%" y="709" width="12.4571%" height="15" fill="rgb(243,26,38)" fg:x="4101" fg:w="617"/><text x="83.0483%" y="719.50">&lt;&amp;mut sonic_rs::ser..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (617 samples, 12.46%)</title><rect x="82.7983%" y="693" width="12.4571%" height="15" fill="rgb(205,133,28)" fg:x="4101" fg:w="617"/><text x="83.0483%" y="703.50">&lt;serde::de::impls::..</text></g><g><title>serde::de::SeqAccess::next_element (594 samples, 11.99%)</title><rect x="83.2627%" y="677" width="11.9927%" height="15" fill="rgb(212,34,0)" fg:x="4124" fg:w="594"/><text x="83.5127%" y="687.50">serde::de::SeqAcce..</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (594 samples, 11.99%)</title><rect x="83.2627%" y="661" width="11.9927%" height="15" fill="rgb(251,226,22)" fg:x="4124" fg:w="594"/><text x="83.5127%" y="671.50">&lt;sonic_rs::serde::..</text></g><g><title>?? (4 samples, 0.08%)</title><rect x="95.1746%" y="645" width="0.0808%" height="15" fill="rgb(252,119,9)" fg:x="4714" fg:w="4"/><text x="95.4246%" y="655.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (1 samples, 0.02%)</title><rect x="95.2352%" y="629" width="0.0202%" height="15" fill="rgb(213,150,50)" fg:x="4717" fg:w="1"/><text x="95.4852%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="95.2352%" y="613" width="0.0202%" height="15" fill="rgb(212,24,39)" fg:x="4717" fg:w="1"/><text x="95.4852%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="95.2554%" y="725" width="0.0202%" height="15" fill="rgb(213,46,39)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="735.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.02%)</title><rect x="95.2554%" y="709" width="0.0202%" height="15" fill="rgb(239,106,12)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="719.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.02%)</title><rect x="95.2554%" y="693" width="0.0202%" height="15" fill="rgb(249,229,21)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="95.2554%" y="677" width="0.0202%" height="15" fill="rgb(212,158,3)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="687.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect x="95.2554%" y="661" width="0.0202%" height="15" fill="rgb(253,26,48)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="671.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.02%)</title><rect x="95.2554%" y="645" width="0.0202%" height="15" fill="rgb(238,178,20)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="655.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect x="95.2554%" y="629" width="0.0202%" height="15" fill="rgb(208,86,15)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="639.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="95.2554%" y="613" width="0.0202%" height="15" fill="rgb(239,42,53)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="623.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect x="95.2554%" y="597" width="0.0202%" height="15" fill="rgb(245,226,8)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect x="95.2554%" y="581" width="0.0202%" height="15" fill="rgb(216,176,32)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect x="95.2554%" y="565" width="0.0202%" height="15" fill="rgb(231,186,21)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="95.2554%" y="549" width="0.0202%" height="15" fill="rgb(205,95,49)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="95.2554%" y="533" width="0.0202%" height="15" fill="rgb(217,145,8)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="95.2554%" y="517" width="0.0202%" height="15" fill="rgb(239,144,48)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="527.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="95.2554%" y="501" width="0.0202%" height="15" fill="rgb(214,189,23)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="511.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="95.2554%" y="485" width="0.0202%" height="15" fill="rgb(229,157,17)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="495.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="95.2554%" y="469" width="0.0202%" height="15" fill="rgb(230,5,48)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="95.2554%" y="453" width="0.0202%" height="15" fill="rgb(224,156,48)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="463.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="95.2554%" y="437" width="0.0202%" height="15" fill="rgb(223,14,29)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="95.2554%" y="421" width="0.0202%" height="15" fill="rgb(229,96,36)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="431.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="95.2554%" y="405" width="0.0202%" height="15" fill="rgb(231,102,53)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="415.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="95.2554%" y="389" width="0.0202%" height="15" fill="rgb(210,77,38)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="399.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="95.2554%" y="373" width="0.0202%" height="15" fill="rgb(235,131,6)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="383.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="95.2554%" y="357" width="0.0202%" height="15" fill="rgb(252,55,38)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="367.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="95.2554%" y="341" width="0.0202%" height="15" fill="rgb(246,38,14)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="351.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="95.2554%" y="325" width="0.0202%" height="15" fill="rgb(242,27,5)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="335.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="95.2554%" y="309" width="0.0202%" height="15" fill="rgb(228,65,35)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="319.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="95.2554%" y="293" width="0.0202%" height="15" fill="rgb(245,93,11)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="303.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="95.2554%" y="277" width="0.0202%" height="15" fill="rgb(213,1,31)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="287.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="95.2554%" y="261" width="0.0202%" height="15" fill="rgb(237,205,14)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="271.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="95.2554%" y="245" width="0.0202%" height="15" fill="rgb(232,118,45)" fg:x="4718" fg:w="1"/><text x="95.5054%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="95.3160%" y="645" width="0.0202%" height="15" fill="rgb(218,5,6)" fg:x="4721" fg:w="1"/><text x="95.5660%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (4 samples, 0.08%)</title><rect x="95.2756%" y="725" width="0.0808%" height="15" fill="rgb(251,87,51)" fg:x="4719" fg:w="4"/><text x="95.5256%" y="735.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (3 samples, 0.06%)</title><rect x="95.2958%" y="709" width="0.0606%" height="15" fill="rgb(207,225,20)" fg:x="4720" fg:w="3"/><text x="95.5458%" y="719.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="95.2958%" y="693" width="0.0606%" height="15" fill="rgb(222,78,54)" fg:x="4720" fg:w="3"/><text x="95.5458%" y="703.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="95.2958%" y="677" width="0.0606%" height="15" fill="rgb(232,85,16)" fg:x="4720" fg:w="3"/><text x="95.5458%" y="687.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (3 samples, 0.06%)</title><rect x="95.2958%" y="661" width="0.0606%" height="15" fill="rgb(244,25,33)" fg:x="4720" fg:w="3"/><text x="95.5458%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.02%)</title><rect x="95.3362%" y="645" width="0.0202%" height="15" fill="rgb(233,24,36)" fg:x="4722" fg:w="1"/><text x="95.5862%" y="655.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.02%)</title><rect x="95.3765%" y="645" width="0.0202%" height="15" fill="rgb(253,49,54)" fg:x="4724" fg:w="1"/><text x="95.6265%" y="655.50"></text></g><g><title>&lt;u8 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="95.3765%" y="629" width="0.0202%" height="15" fill="rgb(245,12,22)" fg:x="4724" fg:w="1"/><text x="95.6265%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (635 samples, 12.82%)</title><rect x="82.5964%" y="741" width="12.8205%" height="15" fill="rgb(253,141,28)" fg:x="4091" fg:w="635"/><text x="82.8464%" y="751.50">&lt;core::marker::Phan..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (3 samples, 0.06%)</title><rect x="95.3563%" y="725" width="0.0606%" height="15" fill="rgb(225,207,27)" fg:x="4723" fg:w="3"/><text x="95.6063%" y="735.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (3 samples, 0.06%)</title><rect x="95.3563%" y="709" width="0.0606%" height="15" fill="rgb(220,84,2)" fg:x="4723" fg:w="3"/><text x="95.6063%" y="719.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="95.3563%" y="693" width="0.0606%" height="15" fill="rgb(224,37,37)" fg:x="4723" fg:w="3"/><text x="95.6063%" y="703.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="95.3563%" y="677" width="0.0606%" height="15" fill="rgb(220,143,18)" fg:x="4723" fg:w="3"/><text x="95.6063%" y="687.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (3 samples, 0.06%)</title><rect x="95.3563%" y="661" width="0.0606%" height="15" fill="rgb(210,88,33)" fg:x="4723" fg:w="3"/><text x="95.6063%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.02%)</title><rect x="95.3967%" y="645" width="0.0202%" height="15" fill="rgb(219,87,51)" fg:x="4725" fg:w="1"/><text x="95.6467%" y="655.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="95.4169%" y="693" width="0.0404%" height="15" fill="rgb(211,7,35)" fg:x="4726" fg:w="2"/><text x="95.6669%" y="703.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (640 samples, 12.92%)</title><rect x="82.5560%" y="773" width="12.9215%" height="15" fill="rgb(232,77,2)" fg:x="4089" fg:w="640"/><text x="82.8060%" y="783.50">&lt;sonic_rs::serde::d..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (640 samples, 12.92%)</title><rect x="82.5560%" y="757" width="12.9215%" height="15" fill="rgb(249,94,25)" fg:x="4089" fg:w="640"/><text x="82.8060%" y="767.50">&lt;sonic_rs::serde::d..</text></g><g><title>?? (3 samples, 0.06%)</title><rect x="95.4169%" y="741" width="0.0606%" height="15" fill="rgb(215,112,2)" fg:x="4726" fg:w="3"/><text x="95.6669%" y="751.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="95.4169%" y="725" width="0.0606%" height="15" fill="rgb(226,115,48)" fg:x="4726" fg:w="3"/><text x="95.6669%" y="735.50"></text></g><g><title>sonic_rs::reader::Reader::next (3 samples, 0.06%)</title><rect x="95.4169%" y="709" width="0.0606%" height="15" fill="rgb(249,196,10)" fg:x="4726" fg:w="3"/><text x="95.6669%" y="719.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="95.4573%" y="693" width="0.0202%" height="15" fill="rgb(237,109,14)" fg:x="4728" fg:w="1"/><text x="95.7073%" y="703.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="95.4573%" y="677" width="0.0202%" height="15" fill="rgb(217,103,53)" fg:x="4728" fg:w="1"/><text x="95.7073%" y="687.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="95.4573%" y="661" width="0.0202%" height="15" fill="rgb(244,137,9)" fg:x="4728" fg:w="1"/><text x="95.7073%" y="671.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (7 samples, 0.14%)</title><rect x="95.5179%" y="741" width="0.1413%" height="15" fill="rgb(227,201,3)" fg:x="4731" fg:w="7"/><text x="95.7679%" y="751.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.08%)</title><rect x="95.6592%" y="645" width="0.0808%" height="15" fill="rgb(243,94,6)" fg:x="4738" fg:w="4"/><text x="95.9092%" y="655.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::slice_unchecked (1 samples, 0.02%)</title><rect x="95.7400%" y="645" width="0.0202%" height="15" fill="rgb(235,118,5)" fg:x="4742" fg:w="1"/><text x="95.9900%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="95.7400%" y="629" width="0.0202%" height="15" fill="rgb(247,10,30)" fg:x="4742" fg:w="1"/><text x="95.9900%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="95.7400%" y="613" width="0.0202%" height="15" fill="rgb(205,26,28)" fg:x="4742" fg:w="1"/><text x="95.9900%" y="623.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.08%)</title><rect x="95.7601%" y="629" width="0.0808%" height="15" fill="rgb(206,99,35)" fg:x="4743" fg:w="4"/><text x="96.0101%" y="639.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (2 samples, 0.04%)</title><rect x="95.8409%" y="629" width="0.0404%" height="15" fill="rgb(238,130,40)" fg:x="4747" fg:w="2"/><text x="96.0909%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.24%)</title><rect x="95.6592%" y="741" width="0.2423%" height="15" fill="rgb(224,126,31)" fg:x="4738" fg:w="12"/><text x="95.9092%" y="751.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (12 samples, 0.24%)</title><rect x="95.6592%" y="725" width="0.2423%" height="15" fill="rgb(254,105,17)" fg:x="4738" fg:w="12"/><text x="95.9092%" y="735.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (12 samples, 0.24%)</title><rect x="95.6592%" y="709" width="0.2423%" height="15" fill="rgb(216,87,36)" fg:x="4738" fg:w="12"/><text x="95.9092%" y="719.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.24%)</title><rect x="95.6592%" y="693" width="0.2423%" height="15" fill="rgb(240,21,12)" fg:x="4738" fg:w="12"/><text x="95.9092%" y="703.50"></text></g><g><title>?? (12 samples, 0.24%)</title><rect x="95.6592%" y="677" width="0.2423%" height="15" fill="rgb(245,192,34)" fg:x="4738" fg:w="12"/><text x="95.9092%" y="687.50"></text></g><g><title>?? (12 samples, 0.24%)</title><rect x="95.6592%" y="661" width="0.2423%" height="15" fill="rgb(226,100,49)" fg:x="4738" fg:w="12"/><text x="95.9092%" y="671.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="95.7601%" y="645" width="0.1413%" height="15" fill="rgb(245,188,27)" fg:x="4743" fg:w="7"/><text x="96.0101%" y="655.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="95.8813%" y="629" width="0.0202%" height="15" fill="rgb(212,170,8)" fg:x="4749" fg:w="1"/><text x="96.1313%" y="639.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="95.9015%" y="725" width="0.0202%" height="15" fill="rgb(217,113,29)" fg:x="4750" fg:w="1"/><text x="96.1515%" y="735.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (2 samples, 0.04%)</title><rect x="95.9217%" y="709" width="0.0404%" height="15" fill="rgb(237,30,3)" fg:x="4751" fg:w="2"/><text x="96.1717%" y="719.50"></text></g><g><title>sonic_rs::reader::Reader::next (5 samples, 0.10%)</title><rect x="95.9217%" y="725" width="0.1009%" height="15" fill="rgb(227,19,28)" fg:x="4751" fg:w="5"/><text x="96.1717%" y="735.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="95.9620%" y="709" width="0.0606%" height="15" fill="rgb(239,172,45)" fg:x="4753" fg:w="3"/><text x="96.2120%" y="719.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (3 samples, 0.06%)</title><rect x="95.9620%" y="693" width="0.0606%" height="15" fill="rgb(254,55,39)" fg:x="4753" fg:w="3"/><text x="96.2120%" y="703.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (3 samples, 0.06%)</title><rect x="95.9620%" y="677" width="0.0606%" height="15" fill="rgb(249,208,12)" fg:x="4753" fg:w="3"/><text x="96.2120%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="96.0428%" y="709" width="0.0202%" height="15" fill="rgb(240,52,13)" fg:x="4757" fg:w="1"/><text x="96.2928%" y="719.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (674 samples, 13.61%)</title><rect x="82.4753%" y="789" width="13.6079%" height="15" fill="rgb(252,149,13)" fg:x="4085" fg:w="674"/><text x="82.7253%" y="799.50">&lt;json_benchmark::copy..</text></g><g><title>serde::de::MapAccess::next_key (30 samples, 0.61%)</title><rect x="95.4775%" y="773" width="0.6057%" height="15" fill="rgb(232,81,48)" fg:x="4729" fg:w="30"/><text x="95.7275%" y="783.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (30 samples, 0.61%)</title><rect x="95.4775%" y="757" width="0.6057%" height="15" fill="rgb(222,144,2)" fg:x="4729" fg:w="30"/><text x="95.7275%" y="767.50"></text></g><g><title>?? (9 samples, 0.18%)</title><rect x="95.9015%" y="741" width="0.1817%" height="15" fill="rgb(216,81,32)" fg:x="4750" fg:w="9"/><text x="96.1515%" y="751.50"></text></g><g><title>sonic_rs::util::arch::x86_64::get_nonspace_bits (3 samples, 0.06%)</title><rect x="96.0226%" y="725" width="0.0606%" height="15" fill="rgb(244,78,51)" fg:x="4756" fg:w="3"/><text x="96.2726%" y="735.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (1 samples, 0.02%)</title><rect x="96.0630%" y="709" width="0.0202%" height="15" fill="rgb(217,66,21)" fg:x="4758" fg:w="1"/><text x="96.3130%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (791 samples, 15.97%)</title><rect x="80.1333%" y="933" width="15.9701%" height="15" fill="rgb(247,101,42)" fg:x="3969" fg:w="791"/><text x="80.3833%" y="943.50">&lt;core::marker::PhantomDat..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (683 samples, 13.79%)</title><rect x="82.3137%" y="917" width="13.7896%" height="15" fill="rgb(227,81,39)" fg:x="4077" fg:w="683"/><text x="82.5637%" y="927.50">serde::de::impls::&lt;im..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (683 samples, 13.79%)</title><rect x="82.3137%" y="901" width="13.7896%" height="15" fill="rgb(220,223,44)" fg:x="4077" fg:w="683"/><text x="82.5637%" y="911.50">&lt;&amp;mut sonic_rs::serde..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (683 samples, 13.79%)</title><rect x="82.3137%" y="885" width="13.7896%" height="15" fill="rgb(205,218,2)" fg:x="4077" fg:w="683"/><text x="82.5637%" y="895.50">&lt;serde::de::impls::&lt;i..</text></g><g><title>serde::de::SeqAccess::next_element (675 samples, 13.63%)</title><rect x="82.4753%" y="869" width="13.6281%" height="15" fill="rgb(212,207,28)" fg:x="4085" fg:w="675"/><text x="82.7253%" y="879.50">serde::de::SeqAccess:..</text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (675 samples, 13.63%)</title><rect x="82.4753%" y="853" width="13.6281%" height="15" fill="rgb(224,12,41)" fg:x="4085" fg:w="675"/><text x="82.7253%" y="863.50">&lt;sonic_rs::serde::de:..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (675 samples, 13.63%)</title><rect x="82.4753%" y="837" width="13.6281%" height="15" fill="rgb(216,118,12)" fg:x="4085" fg:w="675"/><text x="82.7253%" y="847.50">&lt;core::marker::Phanto..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (675 samples, 13.63%)</title><rect x="82.4753%" y="821" width="13.6281%" height="15" fill="rgb(252,97,46)" fg:x="4085" fg:w="675"/><text x="82.7253%" y="831.50">json_benchmark::copy:..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (675 samples, 13.63%)</title><rect x="82.4753%" y="805" width="13.6281%" height="15" fill="rgb(244,206,19)" fg:x="4085" fg:w="675"/><text x="82.7253%" y="815.50">&lt;&amp;mut sonic_rs::serde..</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="96.0832%" y="789" width="0.0202%" height="15" fill="rgb(231,84,31)" fg:x="4759" fg:w="1"/><text x="96.3332%" y="799.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="96.0832%" y="773" width="0.0202%" height="15" fill="rgb(244,133,0)" fg:x="4759" fg:w="1"/><text x="96.3332%" y="783.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::peek (1 samples, 0.02%)</title><rect x="96.0832%" y="757" width="0.0202%" height="15" fill="rgb(223,15,50)" fg:x="4759" fg:w="1"/><text x="96.3332%" y="767.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (792 samples, 15.99%)</title><rect x="80.1333%" y="965" width="15.9903%" height="15" fill="rgb(250,118,49)" fg:x="3969" fg:w="792"/><text x="80.3833%" y="975.50">&lt;sonic_rs::serde::de::Map..</text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (792 samples, 15.99%)</title><rect x="80.1333%" y="949" width="15.9903%" height="15" fill="rgb(248,25,38)" fg:x="3969" fg:w="792"/><text x="80.3833%" y="959.50">&lt;sonic_rs::serde::de::Map..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="96.1034%" y="933" width="0.0202%" height="15" fill="rgb(215,70,14)" fg:x="4760" fg:w="1"/><text x="96.3534%" y="943.50"></text></g><g><title>sonic_rs::serde::de::from_trait (795 samples, 16.05%)</title><rect x="80.0929%" y="1029" width="16.0509%" height="15" fill="rgb(215,28,15)" fg:x="3967" fg:w="795"/><text x="80.3429%" y="1039.50">sonic_rs::serde::de::from..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (794 samples, 16.03%)</title><rect x="80.1131%" y="1013" width="16.0307%" height="15" fill="rgb(243,6,28)" fg:x="3968" fg:w="794"/><text x="80.3631%" y="1023.50">json_benchmark::copy::cit..</text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (794 samples, 16.03%)</title><rect x="80.1131%" y="997" width="16.0307%" height="15" fill="rgb(222,130,1)" fg:x="3968" fg:w="794"/><text x="80.3631%" y="1007.50">&lt;&amp;mut sonic_rs::serde::de..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (794 samples, 16.03%)</title><rect x="80.1131%" y="981" width="16.0307%" height="15" fill="rgb(236,166,44)" fg:x="3968" fg:w="794"/><text x="80.3631%" y="991.50">&lt;json_benchmark::copy::ci..</text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect x="96.1236%" y="965" width="0.0202%" height="15" fill="rgb(221,108,14)" fg:x="4761" fg:w="1"/><text x="96.3736%" y="975.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="96.1236%" y="949" width="0.0202%" height="15" fill="rgb(252,3,45)" fg:x="4761" fg:w="1"/><text x="96.3736%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="96.1236%" y="933" width="0.0202%" height="15" fill="rgb(237,68,30)" fg:x="4761" fg:w="1"/><text x="96.3736%" y="943.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="96.1236%" y="917" width="0.0202%" height="15" fill="rgb(211,79,22)" fg:x="4761" fg:w="1"/><text x="96.3736%" y="927.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect x="96.1236%" y="901" width="0.0202%" height="15" fill="rgb(252,185,21)" fg:x="4761" fg:w="1"/><text x="96.3736%" y="911.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="96.1236%" y="885" width="0.0202%" height="15" fill="rgb(225,189,26)" fg:x="4761" fg:w="1"/><text x="96.3736%" y="895.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="96.1236%" y="869" width="0.0202%" height="15" fill="rgb(241,30,40)" fg:x="4761" fg:w="1"/><text x="96.3736%" y="879.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="96.1236%" y="853" width="0.0202%" height="15" fill="rgb(235,215,44)" fg:x="4761" fg:w="1"/><text x="96.3736%" y="863.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (10 samples, 0.20%)</title><rect x="96.1639%" y="885" width="0.2019%" height="15" fill="rgb(205,8,29)" fg:x="4763" fg:w="10"/><text x="96.4139%" y="895.50"></text></g><g><title>?? (16 samples, 0.32%)</title><rect x="96.1639%" y="901" width="0.3230%" height="15" fill="rgb(241,137,42)" fg:x="4763" fg:w="16"/><text x="96.4139%" y="911.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (6 samples, 0.12%)</title><rect x="96.3658%" y="885" width="0.1211%" height="15" fill="rgb(237,155,2)" fg:x="4773" fg:w="6"/><text x="96.6158%" y="895.50"></text></g><g><title>?? (42 samples, 0.85%)</title><rect x="96.1639%" y="933" width="0.8480%" height="15" fill="rgb(245,29,42)" fg:x="4763" fg:w="42"/><text x="96.4139%" y="943.50"></text></g><g><title>?? (42 samples, 0.85%)</title><rect x="96.1639%" y="917" width="0.8480%" height="15" fill="rgb(234,101,35)" fg:x="4763" fg:w="42"/><text x="96.4139%" y="927.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (26 samples, 0.52%)</title><rect x="96.4870%" y="901" width="0.5249%" height="15" fill="rgb(228,64,37)" fg:x="4779" fg:w="26"/><text x="96.7370%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.52%)</title><rect x="96.4870%" y="885" width="0.5249%" height="15" fill="rgb(217,214,36)" fg:x="4779" fg:w="26"/><text x="96.7370%" y="895.50"></text></g><g><title>simdutf8::implementation::x86::avx2::simd_prefetch (1 samples, 0.02%)</title><rect x="97.0119%" y="933" width="0.0202%" height="15" fill="rgb(243,70,3)" fg:x="4805" fg:w="1"/><text x="97.2619%" y="943.50"></text></g><g><title>core::core_arch::x86::sse::_mm_prefetch (1 samples, 0.02%)</title><rect x="97.0119%" y="917" width="0.0202%" height="15" fill="rgb(253,158,52)" fg:x="4805" fg:w="1"/><text x="97.2619%" y="927.50"></text></g><g><title>simdutf8::implementation::x86::avx2::validate_utf8_basic (48 samples, 0.97%)</title><rect x="96.1438%" y="949" width="0.9691%" height="15" fill="rgb(234,111,54)" fg:x="4762" fg:w="48"/><text x="96.3938%" y="959.50"></text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (4 samples, 0.08%)</title><rect x="97.0321%" y="933" width="0.0808%" height="15" fill="rgb(217,70,32)" fg:x="4806" fg:w="4"/><text x="97.2821%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (850 samples, 17.16%)</title><rect x="80.0929%" y="1205" width="17.1613%" height="15" fill="rgb(234,18,33)" fg:x="3967" fg:w="850"/><text x="80.3429%" y="1215.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (850 samples, 17.16%)</title><rect x="80.0929%" y="1189" width="17.1613%" height="15" fill="rgb(234,12,49)" fg:x="3967" fg:w="850"/><text x="80.3429%" y="1199.50">&lt;alloc::vec::Vec&lt;T,A&gt; as al..</text></g><g><title>?? (850 samples, 17.16%)</title><rect x="80.0929%" y="1173" width="17.1613%" height="15" fill="rgb(236,10,21)" fg:x="3967" fg:w="850"/><text x="80.3429%" y="1183.50">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (850 samples, 17.16%)</title><rect x="80.0929%" y="1157" width="17.1613%" height="15" fill="rgb(248,182,45)" fg:x="3967" fg:w="850"/><text x="80.3429%" y="1167.50">core::iter::traits::iterato..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (850 samples, 17.16%)</title><rect x="80.0929%" y="1141" width="17.1613%" height="15" fill="rgb(217,95,36)" fg:x="3967" fg:w="850"/><text x="80.3429%" y="1151.50">&lt;core::iter::adapters::map:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (850 samples, 17.16%)</title><rect x="80.0929%" y="1125" width="17.1613%" height="15" fill="rgb(212,110,31)" fg:x="3967" fg:w="850"/><text x="80.3429%" y="1135.50">core::iter::traits::iterato..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (850 samples, 17.16%)</title><rect x="80.0929%" y="1109" width="17.1613%" height="15" fill="rgb(206,32,53)" fg:x="3967" fg:w="850"/><text x="80.3429%" y="1119.50">core::iter::adapters::map::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (850 samples, 17.16%)</title><rect x="80.0929%" y="1093" width="17.1613%" height="15" fill="rgb(246,141,37)" fg:x="3967" fg:w="850"/><text x="80.3429%" y="1103.50">core::ops::function::impls:..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (850 samples, 17.16%)</title><rect x="80.0929%" y="1077" width="17.1613%" height="15" fill="rgb(219,16,7)" fg:x="3967" fg:w="850"/><text x="80.3429%" y="1087.50">deserialize_struct::bench_c..</text></g><g><title>deserialize_struct::sonic_rs_parse_struct (850 samples, 17.16%)</title><rect x="80.0929%" y="1061" width="17.1613%" height="15" fill="rgb(230,205,45)" fg:x="3967" fg:w="850"/><text x="80.3429%" y="1071.50">deserialize_struct::sonic_r..</text></g><g><title>sonic_rs::serde::de::from_slice (850 samples, 17.16%)</title><rect x="80.0929%" y="1045" width="17.1613%" height="15" fill="rgb(231,43,49)" fg:x="3967" fg:w="850"/><text x="80.3429%" y="1055.50">sonic_rs::serde::de::from_s..</text></g><g><title>sonic_rs::util::utf8::from_utf8 (55 samples, 1.11%)</title><rect x="96.1438%" y="1029" width="1.1104%" height="15" fill="rgb(212,106,34)" fg:x="4762" fg:w="55"/><text x="96.3938%" y="1039.50"></text></g><g><title>simdutf8::basic::from_utf8 (55 samples, 1.11%)</title><rect x="96.1438%" y="1013" width="1.1104%" height="15" fill="rgb(206,83,17)" fg:x="4762" fg:w="55"/><text x="96.3938%" y="1023.50"></text></g><g><title>simdutf8::implementation::validate_utf8_basic (55 samples, 1.11%)</title><rect x="96.1438%" y="997" width="1.1104%" height="15" fill="rgb(244,154,49)" fg:x="4762" fg:w="55"/><text x="96.3938%" y="1007.50"></text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic (55 samples, 1.11%)</title><rect x="96.1438%" y="981" width="1.1104%" height="15" fill="rgb(244,149,49)" fg:x="4762" fg:w="55"/><text x="96.3938%" y="991.50"></text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (55 samples, 1.11%)</title><rect x="96.1438%" y="965" width="1.1104%" height="15" fill="rgb(227,134,18)" fg:x="4762" fg:w="55"/><text x="96.3938%" y="975.50"></text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (7 samples, 0.14%)</title><rect x="97.1129%" y="949" width="0.1413%" height="15" fill="rgb(237,116,36)" fg:x="4810" fg:w="7"/><text x="97.3629%" y="959.50"></text></g><g><title>&lt;criterion::measurement::WallTime as criterion::measurement::Measurement&gt;::end (1 samples, 0.02%)</title><rect x="97.2542%" y="1205" width="0.0202%" height="15" fill="rgb(205,129,40)" fg:x="4817" fg:w="1"/><text x="97.5042%" y="1215.50"></text></g><g><title>std::time::Instant::elapsed (1 samples, 0.02%)</title><rect x="97.2542%" y="1189" width="0.0202%" height="15" fill="rgb(236,178,4)" fg:x="4817" fg:w="1"/><text x="97.5042%" y="1199.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="97.2542%" y="1173" width="0.0202%" height="15" fill="rgb(251,76,53)" fg:x="4817" fg:w="1"/><text x="97.5042%" y="1183.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.02%)</title><rect x="97.2542%" y="1157" width="0.0202%" height="15" fill="rgb(242,92,40)" fg:x="4817" fg:w="1"/><text x="97.5042%" y="1167.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.02%)</title><rect x="97.2542%" y="1141" width="0.0202%" height="15" fill="rgb(209,45,30)" fg:x="4817" fg:w="1"/><text x="97.5042%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.02%)</title><rect x="97.2542%" y="1125" width="0.0202%" height="15" fill="rgb(218,157,36)" fg:x="4817" fg:w="1"/><text x="97.5042%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.02%)</title><rect x="97.2542%" y="1109" width="0.0202%" height="15" fill="rgb(222,186,16)" fg:x="4817" fg:w="1"/><text x="97.5042%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (3 samples, 0.06%)</title><rect x="97.2744%" y="1125" width="0.0606%" height="15" fill="rgb(254,72,35)" fg:x="4818" fg:w="3"/><text x="97.5244%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="97.2744%" y="1109" width="0.0606%" height="15" fill="rgb(224,25,35)" fg:x="4818" fg:w="3"/><text x="97.5244%" y="1119.50"></text></g><g><title>core::mem::drop (3 samples, 0.06%)</title><rect x="97.2744%" y="1093" width="0.0606%" height="15" fill="rgb(206,135,52)" fg:x="4818" fg:w="3"/><text x="97.5244%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (3 samples, 0.06%)</title><rect x="97.2744%" y="1077" width="0.0606%" height="15" fill="rgb(229,174,47)" fg:x="4818" fg:w="3"/><text x="97.5244%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="97.2744%" y="1061" width="0.0606%" height="15" fill="rgb(242,184,21)" fg:x="4818" fg:w="3"/><text x="97.5244%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.06%)</title><rect x="97.2744%" y="1045" width="0.0606%" height="15" fill="rgb(213,22,45)" fg:x="4818" fg:w="3"/><text x="97.5244%" y="1055.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="97.2946%" y="1029" width="0.0404%" height="15" fill="rgb(237,81,54)" fg:x="4819" fg:w="2"/><text x="97.5446%" y="1039.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="97.2946%" y="1013" width="0.0404%" height="15" fill="rgb(248,177,18)" fg:x="4819" fg:w="2"/><text x="97.5446%" y="1023.50"></text></g><g><title>alloc::collections::btree::mem::replace (2 samples, 0.04%)</title><rect x="97.2946%" y="997" width="0.0404%" height="15" fill="rgb(254,31,16)" fg:x="4819" fg:w="2"/><text x="97.5446%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (2 samples, 0.04%)</title><rect x="97.2946%" y="981" width="0.0404%" height="15" fill="rgb(235,20,31)" fg:x="4819" fg:w="2"/><text x="97.5446%" y="991.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="97.2946%" y="965" width="0.0404%" height="15" fill="rgb(240,56,43)" fg:x="4819" fg:w="2"/><text x="97.5446%" y="975.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.04%)</title><rect x="97.2946%" y="949" width="0.0404%" height="15" fill="rgb(237,197,51)" fg:x="4819" fg:w="2"/><text x="97.5446%" y="959.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="97.3349%" y="1013" width="0.0202%" height="15" fill="rgb(241,162,44)" fg:x="4821" fg:w="1"/><text x="97.5849%" y="1023.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="97.3349%" y="997" width="0.0202%" height="15" fill="rgb(224,23,20)" fg:x="4821" fg:w="1"/><text x="97.5849%" y="1007.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="97.3349%" y="981" width="0.0202%" height="15" fill="rgb(250,109,34)" fg:x="4821" fg:w="1"/><text x="97.5849%" y="991.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="97.3349%" y="965" width="0.0202%" height="15" fill="rgb(214,175,50)" fg:x="4821" fg:w="1"/><text x="97.5849%" y="975.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="97.3349%" y="949" width="0.0202%" height="15" fill="rgb(213,182,5)" fg:x="4821" fg:w="1"/><text x="97.5849%" y="959.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="97.3349%" y="933" width="0.0202%" height="15" fill="rgb(209,199,19)" fg:x="4821" fg:w="1"/><text x="97.5849%" y="943.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="97.3349%" y="917" width="0.0202%" height="15" fill="rgb(236,224,42)" fg:x="4821" fg:w="1"/><text x="97.5849%" y="927.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="97.3349%" y="901" width="0.0202%" height="15" fill="rgb(246,226,29)" fg:x="4821" fg:w="1"/><text x="97.5849%" y="911.50"></text></g><g><title>tcache_bin_flush_match (1 samples, 0.02%)</title><rect x="97.3349%" y="885" width="0.0202%" height="15" fill="rgb(227,223,11)" fg:x="4821" fg:w="1"/><text x="97.5849%" y="895.50"></text></g><g><title>edata_binshard_get (1 samples, 0.02%)</title><rect x="97.3349%" y="869" width="0.0202%" height="15" fill="rgb(219,7,51)" fg:x="4821" fg:w="1"/><text x="97.5849%" y="879.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="97.3551%" y="1013" width="0.0202%" height="15" fill="rgb(245,167,10)" fg:x="4822" fg:w="1"/><text x="97.6051%" y="1023.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="97.3551%" y="997" width="0.0202%" height="15" fill="rgb(237,224,16)" fg:x="4822" fg:w="1"/><text x="97.6051%" y="1007.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="97.3551%" y="981" width="0.0202%" height="15" fill="rgb(226,132,13)" fg:x="4822" fg:w="1"/><text x="97.6051%" y="991.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="97.3753%" y="741" width="0.0202%" height="15" fill="rgb(214,140,3)" fg:x="4823" fg:w="1"/><text x="97.6253%" y="751.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (1 samples, 0.02%)</title><rect x="97.3753%" y="725" width="0.0202%" height="15" fill="rgb(221,177,4)" fg:x="4823" fg:w="1"/><text x="97.6253%" y="735.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.04%)</title><rect x="97.3753%" y="869" width="0.0404%" height="15" fill="rgb(238,139,3)" fg:x="4823" fg:w="2"/><text x="97.6253%" y="879.50"></text></g><g><title>isfree (2 samples, 0.04%)</title><rect x="97.3753%" y="853" width="0.0404%" height="15" fill="rgb(216,17,39)" fg:x="4823" fg:w="2"/><text x="97.6253%" y="863.50"></text></g><g><title>isdalloct (2 samples, 0.04%)</title><rect x="97.3753%" y="837" width="0.0404%" height="15" fill="rgb(238,120,9)" fg:x="4823" fg:w="2"/><text x="97.6253%" y="847.50"></text></g><g><title>arena_sdalloc (2 samples, 0.04%)</title><rect x="97.3753%" y="821" width="0.0404%" height="15" fill="rgb(244,92,53)" fg:x="4823" fg:w="2"/><text x="97.6253%" y="831.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.04%)</title><rect x="97.3753%" y="805" width="0.0404%" height="15" fill="rgb(224,148,33)" fg:x="4823" fg:w="2"/><text x="97.6253%" y="815.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.04%)</title><rect x="97.3753%" y="789" width="0.0404%" height="15" fill="rgb(243,6,36)" fg:x="4823" fg:w="2"/><text x="97.6253%" y="799.50"></text></g><g><title>tcache_bin_flush_bottom (2 samples, 0.04%)</title><rect x="97.3753%" y="773" width="0.0404%" height="15" fill="rgb(230,102,11)" fg:x="4823" fg:w="2"/><text x="97.6253%" y="783.50"></text></g><g><title>tcache_bin_flush_impl (2 samples, 0.04%)</title><rect x="97.3753%" y="757" width="0.0404%" height="15" fill="rgb(234,148,36)" fg:x="4823" fg:w="2"/><text x="97.6253%" y="767.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="97.3955%" y="741" width="0.0202%" height="15" fill="rgb(251,153,25)" fg:x="4824" fg:w="1"/><text x="97.6455%" y="751.50"></text></g><g><title>arena_slab_regind (1 samples, 0.02%)</title><rect x="97.3955%" y="725" width="0.0202%" height="15" fill="rgb(215,129,8)" fg:x="4824" fg:w="1"/><text x="97.6455%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.06%)</title><rect x="97.3753%" y="997" width="0.0606%" height="15" fill="rgb(224,128,35)" fg:x="4823" fg:w="3"/><text x="97.6253%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.06%)</title><rect x="97.3753%" y="981" width="0.0606%" height="15" fill="rgb(237,56,52)" fg:x="4823" fg:w="3"/><text x="97.6253%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.06%)</title><rect x="97.3753%" y="965" width="0.0606%" height="15" fill="rgb(234,213,19)" fg:x="4823" fg:w="3"/><text x="97.6253%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="97.3753%" y="949" width="0.0606%" height="15" fill="rgb(252,82,23)" fg:x="4823" fg:w="3"/><text x="97.6253%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect x="97.3753%" y="933" width="0.0606%" height="15" fill="rgb(254,201,21)" fg:x="4823" fg:w="3"/><text x="97.6253%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect x="97.3753%" y="917" width="0.0606%" height="15" fill="rgb(250,186,11)" fg:x="4823" fg:w="3"/><text x="97.6253%" y="927.50"></text></g><g><title>__rust_dealloc (3 samples, 0.06%)</title><rect x="97.3753%" y="901" width="0.0606%" height="15" fill="rgb(211,174,5)" fg:x="4823" fg:w="3"/><text x="97.6253%" y="911.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.06%)</title><rect x="97.3753%" y="885" width="0.0606%" height="15" fill="rgb(214,121,10)" fg:x="4823" fg:w="3"/><text x="97.6253%" y="895.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="97.4157%" y="869" width="0.0202%" height="15" fill="rgb(241,66,2)" fg:x="4825" fg:w="1"/><text x="97.6657%" y="879.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="97.4157%" y="853" width="0.0202%" height="15" fill="rgb(220,167,19)" fg:x="4825" fg:w="1"/><text x="97.6657%" y="863.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="97.4157%" y="837" width="0.0202%" height="15" fill="rgb(231,54,50)" fg:x="4825" fg:w="1"/><text x="97.6657%" y="847.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect x="97.4157%" y="821" width="0.0202%" height="15" fill="rgb(239,217,53)" fg:x="4825" fg:w="1"/><text x="97.6657%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (3 samples, 0.06%)</title><rect x="97.4359%" y="997" width="0.0606%" height="15" fill="rgb(248,8,0)" fg:x="4826" fg:w="3"/><text x="97.6859%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (3 samples, 0.06%)</title><rect x="97.4359%" y="981" width="0.0606%" height="15" fill="rgb(229,118,37)" fg:x="4826" fg:w="3"/><text x="97.6859%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="97.4359%" y="965" width="0.0606%" height="15" fill="rgb(253,223,43)" fg:x="4826" fg:w="3"/><text x="97.6859%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect x="97.4359%" y="949" width="0.0606%" height="15" fill="rgb(211,77,36)" fg:x="4826" fg:w="3"/><text x="97.6859%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect x="97.4359%" y="933" width="0.0606%" height="15" fill="rgb(219,3,53)" fg:x="4826" fg:w="3"/><text x="97.6859%" y="943.50"></text></g><g><title>__rust_dealloc (3 samples, 0.06%)</title><rect x="97.4359%" y="917" width="0.0606%" height="15" fill="rgb(244,45,42)" fg:x="4826" fg:w="3"/><text x="97.6859%" y="927.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.06%)</title><rect x="97.4359%" y="901" width="0.0606%" height="15" fill="rgb(225,95,27)" fg:x="4826" fg:w="3"/><text x="97.6859%" y="911.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.04%)</title><rect x="97.4561%" y="885" width="0.0404%" height="15" fill="rgb(207,74,8)" fg:x="4827" fg:w="2"/><text x="97.7061%" y="895.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="97.4763%" y="869" width="0.0202%" height="15" fill="rgb(243,63,36)" fg:x="4828" fg:w="1"/><text x="97.7263%" y="879.50"></text></g><g><title>?? (14 samples, 0.28%)</title><rect x="97.3349%" y="1045" width="0.2827%" height="15" fill="rgb(211,180,12)" fg:x="4821" fg:w="14"/><text x="97.5849%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (14 samples, 0.28%)</title><rect x="97.3349%" y="1029" width="0.2827%" height="15" fill="rgb(254,166,49)" fg:x="4821" fg:w="14"/><text x="97.5849%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Event&gt; (12 samples, 0.24%)</title><rect x="97.3753%" y="1013" width="0.2423%" height="15" fill="rgb(205,19,0)" fg:x="4823" fg:w="12"/><text x="97.6253%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (6 samples, 0.12%)</title><rect x="97.4965%" y="997" width="0.1211%" height="15" fill="rgb(224,172,32)" fg:x="4829" fg:w="6"/><text x="97.7465%" y="1007.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="97.6378%" y="949" width="0.0202%" height="15" fill="rgb(254,136,30)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="97.6378%" y="933" width="0.0202%" height="15" fill="rgb(246,19,35)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="97.6378%" y="917" width="0.0202%" height="15" fill="rgb(219,24,36)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="927.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="97.6378%" y="901" width="0.0202%" height="15" fill="rgb(251,55,1)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="911.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="97.6378%" y="885" width="0.0202%" height="15" fill="rgb(218,117,39)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="895.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="97.6378%" y="869" width="0.0202%" height="15" fill="rgb(248,169,11)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="879.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="97.6378%" y="853" width="0.0202%" height="15" fill="rgb(244,40,44)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="863.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="97.6378%" y="837" width="0.0202%" height="15" fill="rgb(234,62,37)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="847.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="97.6378%" y="821" width="0.0202%" height="15" fill="rgb(207,117,42)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="831.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="97.6378%" y="805" width="0.0202%" height="15" fill="rgb(213,43,2)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="815.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="97.6378%" y="789" width="0.0202%" height="15" fill="rgb(244,202,51)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="799.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="97.6378%" y="773" width="0.0202%" height="15" fill="rgb(253,174,46)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="783.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="97.6378%" y="757" width="0.0202%" height="15" fill="rgb(251,23,1)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="767.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="97.6378%" y="741" width="0.0202%" height="15" fill="rgb(253,26,1)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="751.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="97.6378%" y="725" width="0.0202%" height="15" fill="rgb(216,89,31)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="735.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="97.6378%" y="709" width="0.0202%" height="15" fill="rgb(209,109,5)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="719.50"></text></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect x="97.6378%" y="693" width="0.0202%" height="15" fill="rgb(229,63,13)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="703.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect x="97.6378%" y="677" width="0.0202%" height="15" fill="rgb(238,137,54)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="687.50"></text></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect x="97.6378%" y="661" width="0.0202%" height="15" fill="rgb(228,1,9)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="671.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="97.6378%" y="645" width="0.0202%" height="15" fill="rgb(249,120,48)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="655.50"></text></g><g><title>edata_list_inactive_remove (1 samples, 0.02%)</title><rect x="97.6378%" y="629" width="0.0202%" height="15" fill="rgb(209,72,36)" fg:x="4836" fg:w="1"/><text x="97.8878%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (17 samples, 0.34%)</title><rect x="97.3349%" y="1125" width="0.3432%" height="15" fill="rgb(247,98,49)" fg:x="4821" fg:w="17"/><text x="97.5849%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.34%)</title><rect x="97.3349%" y="1109" width="0.3432%" height="15" fill="rgb(233,75,36)" fg:x="4821" fg:w="17"/><text x="97.5849%" y="1119.50"></text></g><g><title>core::mem::drop (17 samples, 0.34%)</title><rect x="97.3349%" y="1093" width="0.3432%" height="15" fill="rgb(225,14,24)" fg:x="4821" fg:w="17"/><text x="97.5849%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (17 samples, 0.34%)</title><rect x="97.3349%" y="1077" width="0.3432%" height="15" fill="rgb(237,193,20)" fg:x="4821" fg:w="17"/><text x="97.5849%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.34%)</title><rect x="97.3349%" y="1061" width="0.3432%" height="15" fill="rgb(239,122,19)" fg:x="4821" fg:w="17"/><text x="97.5849%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.06%)</title><rect x="97.6176%" y="1045" width="0.0606%" height="15" fill="rgb(231,220,10)" fg:x="4835" fg:w="3"/><text x="97.8676%" y="1055.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="97.6378%" y="1029" width="0.0404%" height="15" fill="rgb(220,66,15)" fg:x="4836" fg:w="2"/><text x="97.8878%" y="1039.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="97.6378%" y="1013" width="0.0404%" height="15" fill="rgb(215,171,52)" fg:x="4836" fg:w="2"/><text x="97.8878%" y="1023.50"></text></g><g><title>alloc::collections::btree::mem::replace (2 samples, 0.04%)</title><rect x="97.6378%" y="997" width="0.0404%" height="15" fill="rgb(241,169,50)" fg:x="4836" fg:w="2"/><text x="97.8878%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (2 samples, 0.04%)</title><rect x="97.6378%" y="981" width="0.0404%" height="15" fill="rgb(236,189,0)" fg:x="4836" fg:w="2"/><text x="97.8878%" y="991.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="97.6378%" y="965" width="0.0404%" height="15" fill="rgb(217,147,20)" fg:x="4836" fg:w="2"/><text x="97.8878%" y="975.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect x="97.6580%" y="949" width="0.0202%" height="15" fill="rgb(206,188,39)" fg:x="4837" fg:w="1"/><text x="97.9080%" y="959.50"></text></g><g><title>cache_bin_finish_flush (1 samples, 0.02%)</title><rect x="97.6782%" y="773" width="0.0202%" height="15" fill="rgb(227,118,25)" fg:x="4838" fg:w="1"/><text x="97.9282%" y="783.50"></text></g><g><title>bitmap_unset (1 samples, 0.02%)</title><rect x="97.6984%" y="741" width="0.0202%" height="15" fill="rgb(248,171,40)" fg:x="4839" fg:w="1"/><text x="97.9484%" y="751.50"></text></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.04%)</title><rect x="97.6984%" y="757" width="0.0404%" height="15" fill="rgb(251,90,54)" fg:x="4839" fg:w="2"/><text x="97.9484%" y="767.50"></text></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect x="97.7186%" y="741" width="0.0202%" height="15" fill="rgb(234,11,46)" fg:x="4840" fg:w="1"/><text x="97.9686%" y="751.50"></text></g><g><title>arena_decay_ticks (1 samples, 0.02%)</title><rect x="97.7387%" y="757" width="0.0202%" height="15" fill="rgb(229,134,13)" fg:x="4841" fg:w="1"/><text x="97.9887%" y="767.50"></text></g><g><title>_rjem_je_arena_decay (1 samples, 0.02%)</title><rect x="97.7387%" y="741" width="0.0202%" height="15" fill="rgb(223,129,3)" fg:x="4841" fg:w="1"/><text x="97.9887%" y="751.50"></text></g><g><title>arena_decay_dirty (1 samples, 0.02%)</title><rect x="97.7387%" y="725" width="0.0202%" height="15" fill="rgb(221,124,13)" fg:x="4841" fg:w="1"/><text x="97.9887%" y="735.50"></text></g><g><title>arena_decay_impl (1 samples, 0.02%)</title><rect x="97.7387%" y="709" width="0.0202%" height="15" fill="rgb(234,3,18)" fg:x="4841" fg:w="1"/><text x="97.9887%" y="719.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (1 samples, 0.02%)</title><rect x="97.7387%" y="693" width="0.0202%" height="15" fill="rgb(249,199,20)" fg:x="4841" fg:w="1"/><text x="97.9887%" y="703.50"></text></g><g><title>_rjem_je_decay_maybe_advance_epoch (1 samples, 0.02%)</title><rect x="97.7387%" y="677" width="0.0202%" height="15" fill="rgb(224,134,6)" fg:x="4841" fg:w="1"/><text x="97.9887%" y="687.50"></text></g><g><title>_rjem_je_nstime_imultiply (1 samples, 0.02%)</title><rect x="97.7387%" y="661" width="0.0202%" height="15" fill="rgb(254,83,26)" fg:x="4841" fg:w="1"/><text x="97.9887%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.12%)</title><rect x="97.6782%" y="949" width="0.1211%" height="15" fill="rgb(217,88,9)" fg:x="4838" fg:w="6"/><text x="97.9282%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.12%)</title><rect x="97.6782%" y="933" width="0.1211%" height="15" fill="rgb(225,73,2)" fg:x="4838" fg:w="6"/><text x="97.9282%" y="943.50"></text></g><g><title>__rust_dealloc (6 samples, 0.12%)</title><rect x="97.6782%" y="917" width="0.1211%" height="15" fill="rgb(226,44,39)" fg:x="4838" fg:w="6"/><text x="97.9282%" y="927.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (6 samples, 0.12%)</title><rect x="97.6782%" y="901" width="0.1211%" height="15" fill="rgb(228,53,17)" fg:x="4838" fg:w="6"/><text x="97.9282%" y="911.50"></text></g><g><title>_rjem_je_sdallocx_default (6 samples, 0.12%)</title><rect x="97.6782%" y="885" width="0.1211%" height="15" fill="rgb(212,27,27)" fg:x="4838" fg:w="6"/><text x="97.9282%" y="895.50"></text></g><g><title>isfree (6 samples, 0.12%)</title><rect x="97.6782%" y="869" width="0.1211%" height="15" fill="rgb(241,50,6)" fg:x="4838" fg:w="6"/><text x="97.9282%" y="879.50"></text></g><g><title>isdalloct (6 samples, 0.12%)</title><rect x="97.6782%" y="853" width="0.1211%" height="15" fill="rgb(225,28,51)" fg:x="4838" fg:w="6"/><text x="97.9282%" y="863.50"></text></g><g><title>arena_sdalloc (6 samples, 0.12%)</title><rect x="97.6782%" y="837" width="0.1211%" height="15" fill="rgb(215,33,16)" fg:x="4838" fg:w="6"/><text x="97.9282%" y="847.50"></text></g><g><title>tcache_dalloc_small (6 samples, 0.12%)</title><rect x="97.6782%" y="821" width="0.1211%" height="15" fill="rgb(243,40,39)" fg:x="4838" fg:w="6"/><text x="97.9282%" y="831.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (6 samples, 0.12%)</title><rect x="97.6782%" y="805" width="0.1211%" height="15" fill="rgb(225,11,42)" fg:x="4838" fg:w="6"/><text x="97.9282%" y="815.50"></text></g><g><title>tcache_bin_flush_bottom (6 samples, 0.12%)</title><rect x="97.6782%" y="789" width="0.1211%" height="15" fill="rgb(241,220,38)" fg:x="4838" fg:w="6"/><text x="97.9282%" y="799.50"></text></g><g><title>tcache_bin_flush_impl (5 samples, 0.10%)</title><rect x="97.6984%" y="773" width="0.1009%" height="15" fill="rgb(244,52,35)" fg:x="4839" fg:w="5"/><text x="97.9484%" y="783.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.04%)</title><rect x="97.7589%" y="757" width="0.0404%" height="15" fill="rgb(246,42,46)" fg:x="4842" fg:w="2"/><text x="98.0089%" y="767.50"></text></g><g><title>malloc_mutex_trylock_final (2 samples, 0.04%)</title><rect x="97.7589%" y="741" width="0.0404%" height="15" fill="rgb(205,184,13)" fg:x="4842" fg:w="2"/><text x="98.0089%" y="751.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="97.7589%" y="725" width="0.0404%" height="15" fill="rgb(209,48,36)" fg:x="4842" fg:w="2"/><text x="98.0089%" y="735.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="97.7993%" y="949" width="0.0202%" height="15" fill="rgb(244,34,51)" fg:x="4844" fg:w="1"/><text x="98.0493%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.02%)</title><rect x="97.7993%" y="933" width="0.0202%" height="15" fill="rgb(221,107,33)" fg:x="4844" fg:w="1"/><text x="98.0493%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.20%)</title><rect x="97.6782%" y="1045" width="0.2019%" height="15" fill="rgb(224,203,12)" fg:x="4838" fg:w="10"/><text x="97.9282%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::SeatCategory]&gt; (10 samples, 0.20%)</title><rect x="97.6782%" y="1029" width="0.2019%" height="15" fill="rgb(230,215,18)" fg:x="4838" fg:w="10"/><text x="97.9282%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt; (10 samples, 0.20%)</title><rect x="97.6782%" y="1013" width="0.2019%" height="15" fill="rgb(206,185,35)" fg:x="4838" fg:w="10"/><text x="97.9282%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (10 samples, 0.20%)</title><rect x="97.6782%" y="997" width="0.2019%" height="15" fill="rgb(228,140,34)" fg:x="4838" fg:w="10"/><text x="97.9282%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (10 samples, 0.20%)</title><rect x="97.6782%" y="981" width="0.2019%" height="15" fill="rgb(208,93,13)" fg:x="4838" fg:w="10"/><text x="97.9282%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.20%)</title><rect x="97.6782%" y="965" width="0.2019%" height="15" fill="rgb(221,193,39)" fg:x="4838" fg:w="10"/><text x="97.9282%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (3 samples, 0.06%)</title><rect x="97.8195%" y="949" width="0.0606%" height="15" fill="rgb(241,132,34)" fg:x="4845" fg:w="3"/><text x="98.0695%" y="959.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="97.8801%" y="837" width="0.0202%" height="15" fill="rgb(221,141,10)" fg:x="4848" fg:w="1"/><text x="98.1301%" y="847.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.04%)</title><rect x="97.8801%" y="949" width="0.0404%" height="15" fill="rgb(226,90,31)" fg:x="4848" fg:w="2"/><text x="98.1301%" y="959.50"></text></g><g><title>isfree (2 samples, 0.04%)</title><rect x="97.8801%" y="933" width="0.0404%" height="15" fill="rgb(243,75,5)" fg:x="4848" fg:w="2"/><text x="98.1301%" y="943.50"></text></g><g><title>isdalloct (2 samples, 0.04%)</title><rect x="97.8801%" y="917" width="0.0404%" height="15" fill="rgb(227,156,21)" fg:x="4848" fg:w="2"/><text x="98.1301%" y="927.50"></text></g><g><title>arena_sdalloc (2 samples, 0.04%)</title><rect x="97.8801%" y="901" width="0.0404%" height="15" fill="rgb(250,195,8)" fg:x="4848" fg:w="2"/><text x="98.1301%" y="911.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.04%)</title><rect x="97.8801%" y="885" width="0.0404%" height="15" fill="rgb(220,134,5)" fg:x="4848" fg:w="2"/><text x="98.1301%" y="895.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.04%)</title><rect x="97.8801%" y="869" width="0.0404%" height="15" fill="rgb(246,106,34)" fg:x="4848" fg:w="2"/><text x="98.1301%" y="879.50"></text></g><g><title>tcache_bin_flush_bottom (2 samples, 0.04%)</title><rect x="97.8801%" y="853" width="0.0404%" height="15" fill="rgb(205,1,4)" fg:x="4848" fg:w="2"/><text x="98.1301%" y="863.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="97.9003%" y="837" width="0.0202%" height="15" fill="rgb(224,151,29)" fg:x="4849" fg:w="1"/><text x="98.1503%" y="847.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="97.9003%" y="821" width="0.0202%" height="15" fill="rgb(251,196,0)" fg:x="4849" fg:w="1"/><text x="98.1503%" y="831.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="97.9003%" y="805" width="0.0202%" height="15" fill="rgb(212,127,0)" fg:x="4849" fg:w="1"/><text x="98.1503%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect x="97.8801%" y="1013" width="0.0606%" height="15" fill="rgb(236,71,53)" fg:x="4848" fg:w="3"/><text x="98.1301%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect x="97.8801%" y="997" width="0.0606%" height="15" fill="rgb(227,99,0)" fg:x="4848" fg:w="3"/><text x="98.1301%" y="1007.50"></text></g><g><title>__rust_dealloc (3 samples, 0.06%)</title><rect x="97.8801%" y="981" width="0.0606%" height="15" fill="rgb(239,89,21)" fg:x="4848" fg:w="3"/><text x="98.1301%" y="991.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.06%)</title><rect x="97.8801%" y="965" width="0.0606%" height="15" fill="rgb(243,122,19)" fg:x="4848" fg:w="3"/><text x="98.1301%" y="975.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="97.9205%" y="949" width="0.0202%" height="15" fill="rgb(229,192,45)" fg:x="4850" fg:w="1"/><text x="98.1705%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (15 samples, 0.30%)</title><rect x="97.6782%" y="1061" width="0.3028%" height="15" fill="rgb(235,165,35)" fg:x="4838" fg:w="15"/><text x="97.9282%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (5 samples, 0.10%)</title><rect x="97.8801%" y="1045" width="0.1009%" height="15" fill="rgb(253,202,0)" fg:x="4848" fg:w="5"/><text x="98.1301%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="97.8801%" y="1029" width="0.1009%" height="15" fill="rgb(235,51,20)" fg:x="4848" fg:w="5"/><text x="98.1301%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (2 samples, 0.04%)</title><rect x="97.9406%" y="1013" width="0.0404%" height="15" fill="rgb(218,95,46)" fg:x="4851" fg:w="2"/><text x="98.1906%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;&gt;&gt; (36 samples, 0.73%)</title><rect x="97.2744%" y="1205" width="0.7268%" height="15" fill="rgb(212,81,10)" fg:x="4818" fg:w="36"/><text x="97.5244%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.73%)</title><rect x="97.2744%" y="1189" width="0.7268%" height="15" fill="rgb(240,59,0)" fg:x="4818" fg:w="36"/><text x="97.5244%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;]&gt; (36 samples, 0.73%)</title><rect x="97.2744%" y="1173" width="0.7268%" height="15" fill="rgb(212,191,42)" fg:x="4818" fg:w="36"/><text x="97.5244%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,sonic_rs::error::Error&gt;&gt; (36 samples, 0.73%)</title><rect x="97.2744%" y="1157" width="0.7268%" height="15" fill="rgb(233,140,3)" fg:x="4818" fg:w="36"/><text x="97.5244%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (36 samples, 0.73%)</title><rect x="97.2744%" y="1141" width="0.7268%" height="15" fill="rgb(215,69,23)" fg:x="4818" fg:w="36"/><text x="97.5244%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Performance&gt;&gt; (16 samples, 0.32%)</title><rect x="97.6782%" y="1125" width="0.3230%" height="15" fill="rgb(240,202,20)" fg:x="4838" fg:w="16"/><text x="97.9282%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.32%)</title><rect x="97.6782%" y="1109" width="0.3230%" height="15" fill="rgb(209,146,50)" fg:x="4838" fg:w="16"/><text x="97.9282%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::Performance]&gt; (16 samples, 0.32%)</title><rect x="97.6782%" y="1093" width="0.3230%" height="15" fill="rgb(253,102,54)" fg:x="4838" fg:w="16"/><text x="97.9282%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (16 samples, 0.32%)</title><rect x="97.6782%" y="1077" width="0.3230%" height="15" fill="rgb(250,173,47)" fg:x="4838" fg:w="16"/><text x="97.9282%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.02%)</title><rect x="97.9810%" y="1061" width="0.0202%" height="15" fill="rgb(232,142,7)" fg:x="4853" fg:w="1"/><text x="98.2310%" y="1071.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.0012%" y="1045" width="0.0202%" height="15" fill="rgb(230,157,47)" fg:x="4854" fg:w="1"/><text x="98.2512%" y="1055.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.02%)</title><rect x="98.0012%" y="1029" width="0.0202%" height="15" fill="rgb(214,177,35)" fg:x="4854" fg:w="1"/><text x="98.2512%" y="1039.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="98.0012%" y="1013" width="0.0202%" height="15" fill="rgb(234,119,46)" fg:x="4854" fg:w="1"/><text x="98.2512%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="98.0012%" y="997" width="0.0202%" height="15" fill="rgb(241,180,50)" fg:x="4854" fg:w="1"/><text x="98.2512%" y="1007.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="98.0214%" y="997" width="0.0404%" height="15" fill="rgb(221,54,25)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="98.0214%" y="981" width="0.0404%" height="15" fill="rgb(209,157,44)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="98.0214%" y="965" width="0.0404%" height="15" fill="rgb(246,115,41)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="98.0214%" y="949" width="0.0404%" height="15" fill="rgb(229,86,1)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="98.0214%" y="933" width="0.0404%" height="15" fill="rgb(240,108,53)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="943.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="98.0214%" y="917" width="0.0404%" height="15" fill="rgb(227,134,2)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="927.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="98.0214%" y="901" width="0.0404%" height="15" fill="rgb(213,129,25)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="911.50"></text></g><g><title>__rust_realloc (2 samples, 0.04%)</title><rect x="98.0214%" y="885" width="0.0404%" height="15" fill="rgb(226,35,21)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="895.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (2 samples, 0.04%)</title><rect x="98.0214%" y="869" width="0.0404%" height="15" fill="rgb(208,129,26)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="879.50"></text></g><g><title>do_rallocx (2 samples, 0.04%)</title><rect x="98.0214%" y="853" width="0.0404%" height="15" fill="rgb(224,83,6)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="863.50"></text></g><g><title>iralloct (2 samples, 0.04%)</title><rect x="98.0214%" y="837" width="0.0404%" height="15" fill="rgb(227,52,39)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="847.50"></text></g><g><title>_rjem_je_arena_ralloc (2 samples, 0.04%)</title><rect x="98.0214%" y="821" width="0.0404%" height="15" fill="rgb(241,30,17)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="98.0214%" y="805" width="0.0404%" height="15" fill="rgb(246,186,42)" fg:x="4855" fg:w="2"/><text x="98.2714%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="98.0618%" y="901" width="0.0202%" height="15" fill="rgb(221,169,15)" fg:x="4857" fg:w="1"/><text x="98.3118%" y="911.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect x="98.0820%" y="709" width="0.0202%" height="15" fill="rgb(235,108,21)" fg:x="4858" fg:w="1"/><text x="98.3320%" y="719.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="98.0820%" y="693" width="0.0202%" height="15" fill="rgb(219,148,30)" fg:x="4858" fg:w="1"/><text x="98.3320%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.0820%" y="677" width="0.0202%" height="15" fill="rgb(220,109,5)" fg:x="4858" fg:w="1"/><text x="98.3320%" y="687.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.0820%" y="661" width="0.0202%" height="15" fill="rgb(213,203,48)" fg:x="4858" fg:w="1"/><text x="98.3320%" y="671.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect x="98.0820%" y="645" width="0.0202%" height="15" fill="rgb(244,71,33)" fg:x="4858" fg:w="1"/><text x="98.3320%" y="655.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.0820%" y="629" width="0.0202%" height="15" fill="rgb(209,23,2)" fg:x="4858" fg:w="1"/><text x="98.3320%" y="639.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.0820%" y="613" width="0.0202%" height="15" fill="rgb(219,97,7)" fg:x="4858" fg:w="1"/><text x="98.3320%" y="623.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="98.0820%" y="597" width="0.0202%" height="15" fill="rgb(216,161,23)" fg:x="4858" fg:w="1"/><text x="98.3320%" y="607.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.0820%" y="581" width="0.0202%" height="15" fill="rgb(207,45,42)" fg:x="4858" fg:w="1"/><text x="98.3320%" y="591.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="98.0820%" y="565" width="0.0202%" height="15" fill="rgb(241,61,4)" fg:x="4858" fg:w="1"/><text x="98.3320%" y="575.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="98.0820%" y="549" width="0.0202%" height="15" fill="rgb(236,170,1)" fg:x="4858" fg:w="1"/><text x="98.3320%" y="559.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize (2 samples, 0.04%)</title><rect x="98.0820%" y="757" width="0.0404%" height="15" fill="rgb(239,72,5)" fg:x="4858" fg:w="2"/><text x="98.3320%" y="767.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect x="98.0820%" y="741" width="0.0404%" height="15" fill="rgb(214,13,50)" fg:x="4858" fg:w="2"/><text x="98.3320%" y="751.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.04%)</title><rect x="98.0820%" y="725" width="0.0404%" height="15" fill="rgb(224,88,9)" fg:x="4858" fg:w="2"/><text x="98.3320%" y="735.50"></text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect x="98.1022%" y="709" width="0.0202%" height="15" fill="rgb(238,192,34)" fg:x="4859" fg:w="1"/><text x="98.3522%" y="719.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="98.1022%" y="693" width="0.0202%" height="15" fill="rgb(217,203,50)" fg:x="4859" fg:w="1"/><text x="98.3522%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.1022%" y="677" width="0.0202%" height="15" fill="rgb(241,123,32)" fg:x="4859" fg:w="1"/><text x="98.3522%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="98.1224%" y="613" width="0.0404%" height="15" fill="rgb(248,151,39)" fg:x="4860" fg:w="2"/><text x="98.3724%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="98.1425%" y="597" width="0.0202%" height="15" fill="rgb(208,89,6)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="98.1425%" y="581" width="0.0202%" height="15" fill="rgb(254,43,26)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="98.1425%" y="565" width="0.0202%" height="15" fill="rgb(216,158,13)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="98.1425%" y="549" width="0.0202%" height="15" fill="rgb(212,47,37)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="559.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.1425%" y="533" width="0.0202%" height="15" fill="rgb(254,16,10)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="543.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="98.1425%" y="517" width="0.0202%" height="15" fill="rgb(223,228,16)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="527.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="98.1425%" y="501" width="0.0202%" height="15" fill="rgb(249,108,50)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="511.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect x="98.1425%" y="485" width="0.0202%" height="15" fill="rgb(208,220,5)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="495.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="98.1425%" y="469" width="0.0202%" height="15" fill="rgb(217,89,48)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="479.50"></text></g><g><title>iralloct (1 samples, 0.02%)</title><rect x="98.1425%" y="453" width="0.0202%" height="15" fill="rgb(212,113,41)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="463.50"></text></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.02%)</title><rect x="98.1425%" y="437" width="0.0202%" height="15" fill="rgb(231,127,5)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="447.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (1 samples, 0.02%)</title><rect x="98.1425%" y="421" width="0.0202%" height="15" fill="rgb(217,141,17)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="431.50"></text></g><g><title>emap_edata_lookup (1 samples, 0.02%)</title><rect x="98.1425%" y="405" width="0.0202%" height="15" fill="rgb(245,125,54)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="415.50"></text></g><g><title>rtree_read (1 samples, 0.02%)</title><rect x="98.1425%" y="389" width="0.0202%" height="15" fill="rgb(248,125,3)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="399.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="98.1425%" y="373" width="0.0202%" height="15" fill="rgb(236,119,51)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="383.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="98.1425%" y="357" width="0.0202%" height="15" fill="rgb(239,99,8)" fg:x="4861" fg:w="1"/><text x="98.3925%" y="367.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.1627%" y="533" width="0.0202%" height="15" fill="rgb(224,228,4)" fg:x="4862" fg:w="1"/><text x="98.4127%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="98.1829%" y="517" width="0.0202%" height="15" fill="rgb(220,131,45)" fg:x="4863" fg:w="1"/><text x="98.4329%" y="527.50"></text></g><g><title>?? (3 samples, 0.06%)</title><rect x="98.2233%" y="421" width="0.0606%" height="15" fill="rgb(215,62,5)" fg:x="4865" fg:w="3"/><text x="98.4733%" y="431.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (3 samples, 0.06%)</title><rect x="98.2233%" y="405" width="0.0606%" height="15" fill="rgb(253,12,24)" fg:x="4865" fg:w="3"/><text x="98.4733%" y="415.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (2 samples, 0.04%)</title><rect x="98.2435%" y="389" width="0.0404%" height="15" fill="rgb(248,120,50)" fg:x="4866" fg:w="2"/><text x="98.4935%" y="399.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (5 samples, 0.10%)</title><rect x="98.2031%" y="517" width="0.1009%" height="15" fill="rgb(245,194,10)" fg:x="4864" fg:w="5"/><text x="98.4531%" y="527.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.10%)</title><rect x="98.2031%" y="501" width="0.1009%" height="15" fill="rgb(241,149,38)" fg:x="4864" fg:w="5"/><text x="98.4531%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.10%)</title><rect x="98.2031%" y="485" width="0.1009%" height="15" fill="rgb(219,215,7)" fg:x="4864" fg:w="5"/><text x="98.4531%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (4 samples, 0.08%)</title><rect x="98.2233%" y="469" width="0.0808%" height="15" fill="rgb(208,120,31)" fg:x="4865" fg:w="4"/><text x="98.4733%" y="479.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (4 samples, 0.08%)</title><rect x="98.2233%" y="453" width="0.0808%" height="15" fill="rgb(244,30,8)" fg:x="4865" fg:w="4"/><text x="98.4733%" y="463.50"></text></g><g><title>?? (4 samples, 0.08%)</title><rect x="98.2233%" y="437" width="0.0808%" height="15" fill="rgb(238,35,44)" fg:x="4865" fg:w="4"/><text x="98.4733%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.2839%" y="421" width="0.0202%" height="15" fill="rgb(243,218,37)" fg:x="4868" fg:w="1"/><text x="98.5339%" y="431.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.22%)</title><rect x="98.1627%" y="581" width="0.2221%" height="15" fill="rgb(218,169,10)" fg:x="4862" fg:w="11"/><text x="98.4127%" y="591.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (11 samples, 0.22%)</title><rect x="98.1627%" y="565" width="0.2221%" height="15" fill="rgb(221,144,10)" fg:x="4862" fg:w="11"/><text x="98.4127%" y="575.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (11 samples, 0.22%)</title><rect x="98.1627%" y="549" width="0.2221%" height="15" fill="rgb(226,41,38)" fg:x="4862" fg:w="11"/><text x="98.4127%" y="559.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.20%)</title><rect x="98.1829%" y="533" width="0.2019%" height="15" fill="rgb(228,3,1)" fg:x="4863" fg:w="10"/><text x="98.4329%" y="543.50"></text></g><g><title>serde::de::MapAccess::next_key (4 samples, 0.08%)</title><rect x="98.3041%" y="517" width="0.0808%" height="15" fill="rgb(209,129,12)" fg:x="4869" fg:w="4"/><text x="98.5541%" y="527.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.08%)</title><rect x="98.3041%" y="501" width="0.0808%" height="15" fill="rgb(213,136,33)" fg:x="4869" fg:w="4"/><text x="98.5541%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="98.3041%" y="485" width="0.0808%" height="15" fill="rgb(209,181,29)" fg:x="4869" fg:w="4"/><text x="98.5541%" y="495.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.04%)</title><rect x="98.3444%" y="469" width="0.0404%" height="15" fill="rgb(234,173,18)" fg:x="4871" fg:w="2"/><text x="98.5944%" y="479.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.04%)</title><rect x="98.3444%" y="453" width="0.0404%" height="15" fill="rgb(227,73,47)" fg:x="4871" fg:w="2"/><text x="98.5944%" y="463.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.04%)</title><rect x="98.3444%" y="437" width="0.0404%" height="15" fill="rgb(234,9,34)" fg:x="4871" fg:w="2"/><text x="98.5944%" y="447.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="98.3444%" y="421" width="0.0404%" height="15" fill="rgb(235,172,15)" fg:x="4871" fg:w="2"/><text x="98.5944%" y="431.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="98.3444%" y="405" width="0.0404%" height="15" fill="rgb(245,61,2)" fg:x="4871" fg:w="2"/><text x="98.5944%" y="415.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="98.3444%" y="389" width="0.0404%" height="15" fill="rgb(238,39,47)" fg:x="4871" fg:w="2"/><text x="98.5944%" y="399.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="98.3444%" y="373" width="0.0404%" height="15" fill="rgb(234,37,24)" fg:x="4871" fg:w="2"/><text x="98.5944%" y="383.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (14 samples, 0.28%)</title><rect x="98.1224%" y="661" width="0.2827%" height="15" fill="rgb(248,223,24)" fg:x="4860" fg:w="14"/><text x="98.3724%" y="671.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (14 samples, 0.28%)</title><rect x="98.1224%" y="645" width="0.2827%" height="15" fill="rgb(223,12,15)" fg:x="4860" fg:w="14"/><text x="98.3724%" y="655.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (14 samples, 0.28%)</title><rect x="98.1224%" y="629" width="0.2827%" height="15" fill="rgb(249,6,3)" fg:x="4860" fg:w="14"/><text x="98.3724%" y="639.50"></text></g><g><title>serde::de::SeqAccess::next_element (12 samples, 0.24%)</title><rect x="98.1627%" y="613" width="0.2423%" height="15" fill="rgb(237,105,33)" fg:x="4862" fg:w="12"/><text x="98.4127%" y="623.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.24%)</title><rect x="98.1627%" y="597" width="0.2423%" height="15" fill="rgb(252,208,35)" fg:x="4862" fg:w="12"/><text x="98.4127%" y="607.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.3848%" y="581" width="0.0202%" height="15" fill="rgb(215,181,35)" fg:x="4873" fg:w="1"/><text x="98.6348%" y="591.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="98.3848%" y="565" width="0.0202%" height="15" fill="rgb(246,212,3)" fg:x="4873" fg:w="1"/><text x="98.6348%" y="575.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (15 samples, 0.30%)</title><rect x="98.1224%" y="709" width="0.3028%" height="15" fill="rgb(247,156,24)" fg:x="4860" fg:w="15"/><text x="98.3724%" y="719.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (15 samples, 0.30%)</title><rect x="98.1224%" y="693" width="0.3028%" height="15" fill="rgb(248,9,31)" fg:x="4860" fg:w="15"/><text x="98.3724%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15 samples, 0.30%)</title><rect x="98.1224%" y="677" width="0.3028%" height="15" fill="rgb(234,26,45)" fg:x="4860" fg:w="15"/><text x="98.3724%" y="687.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.4050%" y="661" width="0.0202%" height="15" fill="rgb(249,11,32)" fg:x="4874" fg:w="1"/><text x="98.6550%" y="671.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect x="98.4050%" y="645" width="0.0202%" height="15" fill="rgb(249,162,33)" fg:x="4874" fg:w="1"/><text x="98.6550%" y="655.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.4050%" y="629" width="0.0202%" height="15" fill="rgb(232,4,32)" fg:x="4874" fg:w="1"/><text x="98.6550%" y="639.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.4050%" y="613" width="0.0202%" height="15" fill="rgb(212,5,45)" fg:x="4874" fg:w="1"/><text x="98.6550%" y="623.50"></text></g><g><title>sonic_rs::reader::Reader::next (1 samples, 0.02%)</title><rect x="98.4050%" y="597" width="0.0202%" height="15" fill="rgb(227,95,13)" fg:x="4874" fg:w="1"/><text x="98.6550%" y="607.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.4050%" y="581" width="0.0202%" height="15" fill="rgb(223,205,10)" fg:x="4874" fg:w="1"/><text x="98.6550%" y="591.50"></text></g><g><title>sonic_rs::reader::Reader::next::_{{closure}} (1 samples, 0.02%)</title><rect x="98.4050%" y="565" width="0.0202%" height="15" fill="rgb(222,178,8)" fg:x="4874" fg:w="1"/><text x="98.6550%" y="575.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::eat (1 samples, 0.02%)</title><rect x="98.4050%" y="549" width="0.0202%" height="15" fill="rgb(216,13,22)" fg:x="4874" fg:w="1"/><text x="98.6550%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.4252%" y="677" width="0.0202%" height="15" fill="rgb(240,167,12)" fg:x="4875" fg:w="1"/><text x="98.6752%" y="687.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.4252%" y="661" width="0.0202%" height="15" fill="rgb(235,68,35)" fg:x="4875" fg:w="1"/><text x="98.6752%" y="671.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect x="98.4252%" y="645" width="0.0202%" height="15" fill="rgb(253,40,27)" fg:x="4875" fg:w="1"/><text x="98.6752%" y="655.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.4252%" y="629" width="0.0202%" height="15" fill="rgb(214,19,28)" fg:x="4875" fg:w="1"/><text x="98.6752%" y="639.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.4252%" y="613" width="0.0202%" height="15" fill="rgb(210,167,45)" fg:x="4875" fg:w="1"/><text x="98.6752%" y="623.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.4252%" y="597" width="0.0202%" height="15" fill="rgb(232,97,40)" fg:x="4875" fg:w="1"/><text x="98.6752%" y="607.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.4252%" y="581" width="0.0202%" height="15" fill="rgb(250,35,23)" fg:x="4875" fg:w="1"/><text x="98.6752%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.4252%" y="565" width="0.0202%" height="15" fill="rgb(248,47,53)" fg:x="4875" fg:w="1"/><text x="98.6752%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (19 samples, 0.38%)</title><rect x="98.0820%" y="853" width="0.3836%" height="15" fill="rgb(226,58,50)" fg:x="4858" fg:w="19"/><text x="98.3320%" y="863.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (19 samples, 0.38%)</title><rect x="98.0820%" y="837" width="0.3836%" height="15" fill="rgb(217,105,26)" fg:x="4858" fg:w="19"/><text x="98.3320%" y="847.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (19 samples, 0.38%)</title><rect x="98.0820%" y="821" width="0.3836%" height="15" fill="rgb(208,64,1)" fg:x="4858" fg:w="19"/><text x="98.3320%" y="831.50"></text></g><g><title>serde::de::SeqAccess::next_element (19 samples, 0.38%)</title><rect x="98.0820%" y="805" width="0.3836%" height="15" fill="rgb(214,80,1)" fg:x="4858" fg:w="19"/><text x="98.3320%" y="815.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (19 samples, 0.38%)</title><rect x="98.0820%" y="789" width="0.3836%" height="15" fill="rgb(206,175,26)" fg:x="4858" fg:w="19"/><text x="98.3320%" y="799.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19 samples, 0.38%)</title><rect x="98.0820%" y="773" width="0.3836%" height="15" fill="rgb(235,156,37)" fg:x="4858" fg:w="19"/><text x="98.3320%" y="783.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (17 samples, 0.34%)</title><rect x="98.1224%" y="757" width="0.3432%" height="15" fill="rgb(213,100,9)" fg:x="4860" fg:w="17"/><text x="98.3724%" y="767.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (17 samples, 0.34%)</title><rect x="98.1224%" y="741" width="0.3432%" height="15" fill="rgb(241,15,13)" fg:x="4860" fg:w="17"/><text x="98.3724%" y="751.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (17 samples, 0.34%)</title><rect x="98.1224%" y="725" width="0.3432%" height="15" fill="rgb(205,97,43)" fg:x="4860" fg:w="17"/><text x="98.3724%" y="735.50"></text></g><g><title>serde::de::MapAccess::next_key (2 samples, 0.04%)</title><rect x="98.4252%" y="709" width="0.0404%" height="15" fill="rgb(216,106,32)" fg:x="4875" fg:w="2"/><text x="98.6752%" y="719.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.04%)</title><rect x="98.4252%" y="693" width="0.0404%" height="15" fill="rgb(226,200,8)" fg:x="4875" fg:w="2"/><text x="98.6752%" y="703.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.4454%" y="677" width="0.0202%" height="15" fill="rgb(244,54,29)" fg:x="4876" fg:w="1"/><text x="98.6954%" y="687.50"></text></g><g><title>&lt;sonic_rs::reader::SliceRead as sonic_rs::reader::Reader&gt;::at (1 samples, 0.02%)</title><rect x="98.4454%" y="661" width="0.0202%" height="15" fill="rgb(252,169,12)" fg:x="4876" fg:w="1"/><text x="98.6954%" y="671.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (20 samples, 0.40%)</title><rect x="98.0820%" y="901" width="0.4038%" height="15" fill="rgb(231,199,11)" fg:x="4858" fg:w="20"/><text x="98.3320%" y="911.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (20 samples, 0.40%)</title><rect x="98.0820%" y="885" width="0.4038%" height="15" fill="rgb(233,191,18)" fg:x="4858" fg:w="20"/><text x="98.3320%" y="895.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20 samples, 0.40%)</title><rect x="98.0820%" y="869" width="0.4038%" height="15" fill="rgb(215,83,47)" fg:x="4858" fg:w="20"/><text x="98.3320%" y="879.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.4656%" y="853" width="0.0202%" height="15" fill="rgb(251,67,19)" fg:x="4877" fg:w="1"/><text x="98.7156%" y="863.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect x="98.4656%" y="837" width="0.0202%" height="15" fill="rgb(240,7,20)" fg:x="4877" fg:w="1"/><text x="98.7156%" y="847.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.4656%" y="821" width="0.0202%" height="15" fill="rgb(210,150,26)" fg:x="4877" fg:w="1"/><text x="98.7156%" y="831.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.4656%" y="805" width="0.0202%" height="15" fill="rgb(228,75,42)" fg:x="4877" fg:w="1"/><text x="98.7156%" y="815.50"></text></g><g><title>sonic_rs::util::num::parse_number_unchecked (1 samples, 0.02%)</title><rect x="98.4656%" y="789" width="0.0202%" height="15" fill="rgb(237,134,48)" fg:x="4877" fg:w="1"/><text x="98.7156%" y="799.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (1 samples, 0.02%)</title><rect x="98.4656%" y="773" width="0.0202%" height="15" fill="rgb(205,80,50)" fg:x="4877" fg:w="1"/><text x="98.7156%" y="783.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="98.4858%" y="773" width="0.0202%" height="15" fill="rgb(217,74,48)" fg:x="4878" fg:w="1"/><text x="98.7358%" y="783.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (26 samples, 0.52%)</title><rect x="98.0012%" y="1093" width="0.5249%" height="15" fill="rgb(205,82,50)" fg:x="4854" fg:w="26"/><text x="98.2512%" y="1103.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (26 samples, 0.52%)</title><rect x="98.0012%" y="1077" width="0.5249%" height="15" fill="rgb(228,1,33)" fg:x="4854" fg:w="26"/><text x="98.2512%" y="1087.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (26 samples, 0.52%)</title><rect x="98.0012%" y="1061" width="0.5249%" height="15" fill="rgb(214,50,23)" fg:x="4854" fg:w="26"/><text x="98.2512%" y="1071.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (25 samples, 0.50%)</title><rect x="98.0214%" y="1045" width="0.5047%" height="15" fill="rgb(210,62,9)" fg:x="4855" fg:w="25"/><text x="98.2714%" y="1055.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (25 samples, 0.50%)</title><rect x="98.0214%" y="1029" width="0.5047%" height="15" fill="rgb(210,104,37)" fg:x="4855" fg:w="25"/><text x="98.2714%" y="1039.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (25 samples, 0.50%)</title><rect x="98.0214%" y="1013" width="0.5047%" height="15" fill="rgb(232,104,43)" fg:x="4855" fg:w="25"/><text x="98.2714%" y="1023.50"></text></g><g><title>serde::de::SeqAccess::next_element (23 samples, 0.46%)</title><rect x="98.0618%" y="997" width="0.4644%" height="15" fill="rgb(244,52,6)" fg:x="4857" fg:w="23"/><text x="98.3118%" y="1007.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (23 samples, 0.46%)</title><rect x="98.0618%" y="981" width="0.4644%" height="15" fill="rgb(211,174,52)" fg:x="4857" fg:w="23"/><text x="98.3118%" y="991.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (23 samples, 0.46%)</title><rect x="98.0618%" y="965" width="0.4644%" height="15" fill="rgb(229,48,4)" fg:x="4857" fg:w="23"/><text x="98.3118%" y="975.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (23 samples, 0.46%)</title><rect x="98.0618%" y="949" width="0.4644%" height="15" fill="rgb(205,155,16)" fg:x="4857" fg:w="23"/><text x="98.3118%" y="959.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (23 samples, 0.46%)</title><rect x="98.0618%" y="933" width="0.4644%" height="15" fill="rgb(211,141,53)" fg:x="4857" fg:w="23"/><text x="98.3118%" y="943.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (23 samples, 0.46%)</title><rect x="98.0618%" y="917" width="0.4644%" height="15" fill="rgb(240,148,11)" fg:x="4857" fg:w="23"/><text x="98.3118%" y="927.50"></text></g><g><title>serde::de::MapAccess::next_key (2 samples, 0.04%)</title><rect x="98.4858%" y="901" width="0.0404%" height="15" fill="rgb(214,45,23)" fg:x="4878" fg:w="2"/><text x="98.7358%" y="911.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.04%)</title><rect x="98.4858%" y="885" width="0.0404%" height="15" fill="rgb(248,74,26)" fg:x="4878" fg:w="2"/><text x="98.7358%" y="895.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="98.4858%" y="869" width="0.0404%" height="15" fill="rgb(218,121,16)" fg:x="4878" fg:w="2"/><text x="98.7358%" y="879.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.04%)</title><rect x="98.4858%" y="853" width="0.0404%" height="15" fill="rgb(218,10,47)" fg:x="4878" fg:w="2"/><text x="98.7358%" y="863.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.04%)</title><rect x="98.4858%" y="837" width="0.0404%" height="15" fill="rgb(227,99,14)" fg:x="4878" fg:w="2"/><text x="98.7358%" y="847.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.04%)</title><rect x="98.4858%" y="821" width="0.0404%" height="15" fill="rgb(229,83,46)" fg:x="4878" fg:w="2"/><text x="98.7358%" y="831.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="98.4858%" y="805" width="0.0404%" height="15" fill="rgb(228,25,1)" fg:x="4878" fg:w="2"/><text x="98.7358%" y="815.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="98.4858%" y="789" width="0.0404%" height="15" fill="rgb(252,190,15)" fg:x="4878" fg:w="2"/><text x="98.7358%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.5060%" y="773" width="0.0202%" height="15" fill="rgb(213,103,51)" fg:x="4879" fg:w="1"/><text x="98.7560%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.5060%" y="757" width="0.0202%" height="15" fill="rgb(220,38,44)" fg:x="4879" fg:w="1"/><text x="98.7560%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="98.5060%" y="741" width="0.0202%" height="15" fill="rgb(210,45,26)" fg:x="4879" fg:w="1"/><text x="98.7560%" y="751.50"></text></g><g><title>sonic_rs::serde::de::from_trait (27 samples, 0.55%)</title><rect x="98.0012%" y="1157" width="0.5451%" height="15" fill="rgb(205,95,48)" fg:x="4854" fg:w="27"/><text x="98.2512%" y="1167.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (27 samples, 0.55%)</title><rect x="98.0012%" y="1141" width="0.5451%" height="15" fill="rgb(225,179,37)" fg:x="4854" fg:w="27"/><text x="98.2512%" y="1151.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (27 samples, 0.55%)</title><rect x="98.0012%" y="1125" width="0.5451%" height="15" fill="rgb(230,209,3)" fg:x="4854" fg:w="27"/><text x="98.2512%" y="1135.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (27 samples, 0.55%)</title><rect x="98.0012%" y="1109" width="0.5451%" height="15" fill="rgb(248,12,46)" fg:x="4854" fg:w="27"/><text x="98.2512%" y="1119.50"></text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect x="98.5261%" y="1093" width="0.0202%" height="15" fill="rgb(234,18,0)" fg:x="4880" fg:w="1"/><text x="98.7761%" y="1103.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="98.5261%" y="1077" width="0.0202%" height="15" fill="rgb(238,197,14)" fg:x="4880" fg:w="1"/><text x="98.7761%" y="1087.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.5261%" y="1061" width="0.0202%" height="15" fill="rgb(251,162,48)" fg:x="4880" fg:w="1"/><text x="98.7761%" y="1071.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.5261%" y="1045" width="0.0202%" height="15" fill="rgb(237,73,42)" fg:x="4880" fg:w="1"/><text x="98.7761%" y="1055.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect x="98.5261%" y="1029" width="0.0202%" height="15" fill="rgb(211,108,8)" fg:x="4880" fg:w="1"/><text x="98.7761%" y="1039.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.5261%" y="1013" width="0.0202%" height="15" fill="rgb(213,45,22)" fg:x="4880" fg:w="1"/><text x="98.7761%" y="1023.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="98.5261%" y="997" width="0.0202%" height="15" fill="rgb(252,154,5)" fg:x="4880" fg:w="1"/><text x="98.7761%" y="1007.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="98.5261%" y="981" width="0.0202%" height="15" fill="rgb(221,79,52)" fg:x="4880" fg:w="1"/><text x="98.7761%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="98.5261%" y="965" width="0.0202%" height="15" fill="rgb(229,220,36)" fg:x="4880" fg:w="1"/><text x="98.7761%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="98.5261%" y="949" width="0.0202%" height="15" fill="rgb(211,17,16)" fg:x="4880" fg:w="1"/><text x="98.7761%" y="959.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="98.5261%" y="933" width="0.0202%" height="15" fill="rgb(222,55,31)" fg:x="4880" fg:w="1"/><text x="98.7761%" y="943.50"></text></g><g><title>?? (915 samples, 18.47%)</title><rect x="80.0929%" y="1301" width="18.4737%" height="15" fill="rgb(221,221,31)" fg:x="3967" fg:w="915"/><text x="80.3429%" y="1311.50">??</text></g><g><title>?? (915 samples, 18.47%)</title><rect x="80.0929%" y="1285" width="18.4737%" height="15" fill="rgb(227,168,26)" fg:x="3967" fg:w="915"/><text x="80.3429%" y="1295.50">??</text></g><g><title>criterion::routine::Routine::profile (915 samples, 18.47%)</title><rect x="80.0929%" y="1269" width="18.4737%" height="15" fill="rgb(224,139,9)" fg:x="3967" fg:w="915"/><text x="80.3429%" y="1279.50">criterion::routine::Routine::..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (915 samples, 18.47%)</title><rect x="80.0929%" y="1253" width="18.4737%" height="15" fill="rgb(254,172,0)" fg:x="3967" fg:w="915"/><text x="80.3429%" y="1263.50">&lt;criterion::routine::Function..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}} (915 samples, 18.47%)</title><rect x="80.0929%" y="1237" width="18.4737%" height="15" fill="rgb(235,203,1)" fg:x="3967" fg:w="915"/><text x="80.3429%" y="1247.50">deserialize_struct::bench_cit..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched (915 samples, 18.47%)</title><rect x="80.0929%" y="1221" width="18.4737%" height="15" fill="rgb(216,205,24)" fg:x="3967" fg:w="915"/><text x="80.3429%" y="1231.50">criterion::bencher::Bencher&lt;M..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (28 samples, 0.57%)</title><rect x="98.0012%" y="1205" width="0.5653%" height="15" fill="rgb(233,24,6)" fg:x="4854" fg:w="28"/><text x="98.2512%" y="1215.50"></text></g><g><title>deserialize_struct::sonic_rs_parse_struct (28 samples, 0.57%)</title><rect x="98.0012%" y="1189" width="0.5653%" height="15" fill="rgb(244,110,9)" fg:x="4854" fg:w="28"/><text x="98.2512%" y="1199.50"></text></g><g><title>sonic_rs::serde::de::from_slice (28 samples, 0.57%)</title><rect x="98.0012%" y="1173" width="0.5653%" height="15" fill="rgb(239,222,42)" fg:x="4854" fg:w="28"/><text x="98.2512%" y="1183.50"></text></g><g><title>sonic_rs::util::utf8::from_utf8 (1 samples, 0.02%)</title><rect x="98.5463%" y="1157" width="0.0202%" height="15" fill="rgb(218,145,13)" fg:x="4881" fg:w="1"/><text x="98.7963%" y="1167.50"></text></g><g><title>simdutf8::basic::from_utf8 (1 samples, 0.02%)</title><rect x="98.5463%" y="1141" width="0.0202%" height="15" fill="rgb(207,69,11)" fg:x="4881" fg:w="1"/><text x="98.7963%" y="1151.50"></text></g><g><title>simdutf8::implementation::validate_utf8_basic (1 samples, 0.02%)</title><rect x="98.5463%" y="1125" width="0.0202%" height="15" fill="rgb(220,223,22)" fg:x="4881" fg:w="1"/><text x="98.7963%" y="1135.50"></text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic (1 samples, 0.02%)</title><rect x="98.5463%" y="1109" width="0.0202%" height="15" fill="rgb(245,102,5)" fg:x="4881" fg:w="1"/><text x="98.7963%" y="1119.50"></text></g><g><title>simdutf8::implementation::x86::validate_utf8_basic_avx2 (1 samples, 0.02%)</title><rect x="98.5463%" y="1093" width="0.0202%" height="15" fill="rgb(211,148,2)" fg:x="4881" fg:w="1"/><text x="98.7963%" y="1103.50"></text></g><g><title>simdutf8::implementation::x86::avx2::validate_utf8_basic (1 samples, 0.02%)</title><rect x="98.5463%" y="1077" width="0.0202%" height="15" fill="rgb(241,13,44)" fg:x="4881" fg:w="1"/><text x="98.7963%" y="1087.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.5463%" y="1061" width="0.0202%" height="15" fill="rgb(219,137,21)" fg:x="4881" fg:w="1"/><text x="98.7963%" y="1071.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.5463%" y="1045" width="0.0202%" height="15" fill="rgb(242,206,5)" fg:x="4881" fg:w="1"/><text x="98.7963%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (1 samples, 0.02%)</title><rect x="98.5463%" y="1029" width="0.0202%" height="15" fill="rgb(217,114,22)" fg:x="4881" fg:w="1"/><text x="98.7963%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="98.5463%" y="1013" width="0.0202%" height="15" fill="rgb(253,206,42)" fg:x="4881" fg:w="1"/><text x="98.7963%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.5867%" y="613" width="0.0202%" height="15" fill="rgb(236,102,18)" fg:x="4883" fg:w="1"/><text x="98.8367%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect x="98.5867%" y="597" width="0.0202%" height="15" fill="rgb(208,59,49)" fg:x="4883" fg:w="1"/><text x="98.8367%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.5867%" y="581" width="0.0202%" height="15" fill="rgb(215,194,28)" fg:x="4883" fg:w="1"/><text x="98.8367%" y="591.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.5867%" y="565" width="0.0202%" height="15" fill="rgb(243,207,11)" fg:x="4883" fg:w="1"/><text x="98.8367%" y="575.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.5867%" y="549" width="0.0202%" height="15" fill="rgb(254,179,35)" fg:x="4883" fg:w="1"/><text x="98.8367%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="98.5867%" y="533" width="0.0202%" height="15" fill="rgb(235,97,3)" fg:x="4883" fg:w="1"/><text x="98.8367%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect x="98.5867%" y="517" width="0.0202%" height="15" fill="rgb(215,155,33)" fg:x="4883" fg:w="1"/><text x="98.8367%" y="527.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.5867%" y="501" width="0.0202%" height="15" fill="rgb(223,128,12)" fg:x="4883" fg:w="1"/><text x="98.8367%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.5867%" y="485" width="0.0202%" height="15" fill="rgb(208,157,18)" fg:x="4883" fg:w="1"/><text x="98.8367%" y="495.50"></text></g><g><title>core::cmp::PartialEq::ne (3 samples, 0.06%)</title><rect x="98.5665%" y="1285" width="0.0606%" height="15" fill="rgb(249,70,54)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1295.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="1269" width="0.0606%" height="15" fill="rgb(244,118,24)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1279.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="1253" width="0.0606%" height="15" fill="rgb(211,54,0)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="1237" width="0.0606%" height="15" fill="rgb(245,137,45)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.06%)</title><rect x="98.5665%" y="1221" width="0.0606%" height="15" fill="rgb(232,154,31)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect x="98.5665%" y="1205" width="0.0606%" height="15" fill="rgb(253,6,39)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.06%)</title><rect x="98.5665%" y="1189" width="0.0606%" height="15" fill="rgb(234,183,24)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (3 samples, 0.06%)</title><rect x="98.5665%" y="1173" width="0.0606%" height="15" fill="rgb(252,84,40)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1183.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="1157" width="0.0606%" height="15" fill="rgb(224,65,2)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="1141" width="0.0606%" height="15" fill="rgb(229,38,24)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1151.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="1125" width="0.0606%" height="15" fill="rgb(218,131,50)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1135.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="1109" width="0.0606%" height="15" fill="rgb(233,106,18)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1119.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="1093" width="0.0606%" height="15" fill="rgb(220,216,11)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1103.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.06%)</title><rect x="98.5665%" y="1077" width="0.0606%" height="15" fill="rgb(251,100,45)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.06%)</title><rect x="98.5665%" y="1061" width="0.0606%" height="15" fill="rgb(235,143,32)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect x="98.5665%" y="1045" width="0.0606%" height="15" fill="rgb(248,124,34)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.06%)</title><rect x="98.5665%" y="1029" width="0.0606%" height="15" fill="rgb(225,221,4)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1039.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (3 samples, 0.06%)</title><rect x="98.5665%" y="1013" width="0.0606%" height="15" fill="rgb(242,27,43)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="997" width="0.0606%" height="15" fill="rgb(227,54,8)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="1007.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="981" width="0.0606%" height="15" fill="rgb(253,139,49)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="991.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="965" width="0.0606%" height="15" fill="rgb(231,26,43)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="949" width="0.0606%" height="15" fill="rgb(207,121,39)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.06%)</title><rect x="98.5665%" y="933" width="0.0606%" height="15" fill="rgb(223,101,35)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect x="98.5665%" y="917" width="0.0606%" height="15" fill="rgb(232,87,23)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.06%)</title><rect x="98.5665%" y="901" width="0.0606%" height="15" fill="rgb(225,180,29)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (3 samples, 0.06%)</title><rect x="98.5665%" y="885" width="0.0606%" height="15" fill="rgb(225,25,17)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="895.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="869" width="0.0606%" height="15" fill="rgb(223,8,52)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="853" width="0.0606%" height="15" fill="rgb(246,42,21)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="863.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (3 samples, 0.06%)</title><rect x="98.5665%" y="837" width="0.0606%" height="15" fill="rgb(205,64,43)" fg:x="4882" fg:w="3"/><text x="98.8165%" y="847.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.04%)</title><rect x="98.5867%" y="821" width="0.0404%" height="15" fill="rgb(221,160,13)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.04%)</title><rect x="98.5867%" y="805" width="0.0404%" height="15" fill="rgb(239,58,35)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.04%)</title><rect x="98.5867%" y="789" width="0.0404%" height="15" fill="rgb(251,26,40)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.04%)</title><rect x="98.5867%" y="773" width="0.0404%" height="15" fill="rgb(247,0,4)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="98.5867%" y="757" width="0.0404%" height="15" fill="rgb(218,130,10)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.04%)</title><rect x="98.5867%" y="741" width="0.0404%" height="15" fill="rgb(239,32,7)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (2 samples, 0.04%)</title><rect x="98.5867%" y="725" width="0.0404%" height="15" fill="rgb(210,192,24)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect x="98.5867%" y="709" width="0.0404%" height="15" fill="rgb(226,212,17)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="719.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="98.5867%" y="693" width="0.0404%" height="15" fill="rgb(219,201,28)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="703.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="98.5867%" y="677" width="0.0404%" height="15" fill="rgb(235,207,41)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="98.5867%" y="661" width="0.0404%" height="15" fill="rgb(241,95,54)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.04%)</title><rect x="98.5867%" y="645" width="0.0404%" height="15" fill="rgb(248,12,23)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="98.5867%" y="629" width="0.0404%" height="15" fill="rgb(228,173,4)" fg:x="4883" fg:w="2"/><text x="98.8367%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect x="98.6069%" y="613" width="0.0202%" height="15" fill="rgb(254,99,5)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.02%)</title><rect x="98.6069%" y="597" width="0.0202%" height="15" fill="rgb(212,184,17)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="607.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (1 samples, 0.02%)</title><rect x="98.6069%" y="581" width="0.0202%" height="15" fill="rgb(252,174,1)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="98.6069%" y="565" width="0.0202%" height="15" fill="rgb(241,118,51)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="98.6069%" y="549" width="0.0202%" height="15" fill="rgb(227,94,47)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="559.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.02%)</title><rect x="98.6069%" y="533" width="0.0202%" height="15" fill="rgb(229,104,2)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="98.6069%" y="517" width="0.0202%" height="15" fill="rgb(219,28,31)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="98.6069%" y="501" width="0.0202%" height="15" fill="rgb(233,109,36)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="98.6069%" y="485" width="0.0202%" height="15" fill="rgb(246,88,11)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="98.6069%" y="469" width="0.0202%" height="15" fill="rgb(209,212,17)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect x="98.6069%" y="453" width="0.0202%" height="15" fill="rgb(243,59,29)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.02%)</title><rect x="98.6069%" y="437" width="0.0202%" height="15" fill="rgb(244,205,48)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="98.6069%" y="421" width="0.0202%" height="15" fill="rgb(227,30,6)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="98.6069%" y="405" width="0.0202%" height="15" fill="rgb(220,205,48)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="415.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="98.6069%" y="389" width="0.0202%" height="15" fill="rgb(250,94,14)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="98.6069%" y="373" width="0.0202%" height="15" fill="rgb(216,119,42)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="98.6069%" y="357" width="0.0202%" height="15" fill="rgb(232,155,0)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="98.6069%" y="341" width="0.0202%" height="15" fill="rgb(212,24,32)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect x="98.6069%" y="325" width="0.0202%" height="15" fill="rgb(216,69,20)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.02%)</title><rect x="98.6069%" y="309" width="0.0202%" height="15" fill="rgb(229,73,31)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="319.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (1 samples, 0.02%)</title><rect x="98.6069%" y="293" width="0.0202%" height="15" fill="rgb(224,219,20)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="98.6069%" y="277" width="0.0202%" height="15" fill="rgb(215,146,41)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="287.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="98.6069%" y="261" width="0.0202%" height="15" fill="rgb(244,71,31)" fg:x="4884" fg:w="1"/><text x="98.8569%" y="271.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.6473%" y="741" width="0.0202%" height="15" fill="rgb(224,24,11)" fg:x="4886" fg:w="1"/><text x="98.8973%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="98.6473%" y="725" width="0.0202%" height="15" fill="rgb(229,76,15)" fg:x="4886" fg:w="1"/><text x="98.8973%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="98.6473%" y="709" width="0.0202%" height="15" fill="rgb(209,93,2)" fg:x="4886" fg:w="1"/><text x="98.8973%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="98.6473%" y="693" width="0.0202%" height="15" fill="rgb(216,200,50)" fg:x="4886" fg:w="1"/><text x="98.8973%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.6473%" y="677" width="0.0202%" height="15" fill="rgb(211,67,34)" fg:x="4886" fg:w="1"/><text x="98.8973%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="98.6473%" y="661" width="0.0202%" height="15" fill="rgb(225,87,47)" fg:x="4886" fg:w="1"/><text x="98.8973%" y="671.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="98.6473%" y="757" width="0.0404%" height="15" fill="rgb(217,185,16)" fg:x="4886" fg:w="2"/><text x="98.8973%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="98.6675%" y="741" width="0.0202%" height="15" fill="rgb(205,0,0)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.02%)</title><rect x="98.6675%" y="725" width="0.0202%" height="15" fill="rgb(207,116,45)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="98.6675%" y="709" width="0.0202%" height="15" fill="rgb(221,156,26)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.6675%" y="693" width="0.0202%" height="15" fill="rgb(213,140,4)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.02%)</title><rect x="98.6675%" y="677" width="0.0202%" height="15" fill="rgb(231,224,15)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.02%)</title><rect x="98.6675%" y="661" width="0.0202%" height="15" fill="rgb(244,76,20)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="98.6675%" y="645" width="0.0202%" height="15" fill="rgb(238,117,7)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="98.6675%" y="629" width="0.0202%" height="15" fill="rgb(235,1,10)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.6675%" y="613" width="0.0202%" height="15" fill="rgb(216,165,6)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="623.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="98.6675%" y="597" width="0.0202%" height="15" fill="rgb(246,91,35)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="98.6675%" y="581" width="0.0202%" height="15" fill="rgb(228,96,24)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.6675%" y="565" width="0.0202%" height="15" fill="rgb(254,217,53)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="575.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.6675%" y="549" width="0.0202%" height="15" fill="rgb(209,60,0)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="559.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.6675%" y="533" width="0.0202%" height="15" fill="rgb(250,93,26)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="98.6675%" y="517" width="0.0202%" height="15" fill="rgb(211,9,40)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="98.6675%" y="501" width="0.0202%" height="15" fill="rgb(242,57,20)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="98.6675%" y="485" width="0.0202%" height="15" fill="rgb(248,85,48)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.6675%" y="469" width="0.0202%" height="15" fill="rgb(212,117,2)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="98.6675%" y="453" width="0.0202%" height="15" fill="rgb(243,19,3)" fg:x="4887" fg:w="1"/><text x="98.9175%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5 samples, 0.10%)</title><rect x="98.6271%" y="1125" width="0.1009%" height="15" fill="rgb(232,217,24)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="98.6271%" y="1109" width="0.1009%" height="15" fill="rgb(224,175,40)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5 samples, 0.10%)</title><rect x="98.6271%" y="1093" width="0.1009%" height="15" fill="rgb(212,162,32)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.10%)</title><rect x="98.6271%" y="1077" width="0.1009%" height="15" fill="rgb(215,9,4)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.10%)</title><rect x="98.6271%" y="1061" width="0.1009%" height="15" fill="rgb(242,42,7)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.10%)</title><rect x="98.6271%" y="1045" width="0.1009%" height="15" fill="rgb(242,184,45)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="98.6271%" y="1029" width="0.1009%" height="15" fill="rgb(228,111,51)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="1039.50"></text></g><g><title>core::mem::drop (5 samples, 0.10%)</title><rect x="98.6271%" y="1013" width="0.1009%" height="15" fill="rgb(236,147,17)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.10%)</title><rect x="98.6271%" y="997" width="0.1009%" height="15" fill="rgb(210,75,22)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="98.6271%" y="981" width="0.1009%" height="15" fill="rgb(217,159,45)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="991.50"></text></g><g><title>?? (5 samples, 0.10%)</title><rect x="98.6271%" y="965" width="0.1009%" height="15" fill="rgb(245,165,53)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.10%)</title><rect x="98.6271%" y="949" width="0.1009%" height="15" fill="rgb(251,190,50)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.10%)</title><rect x="98.6271%" y="933" width="0.1009%" height="15" fill="rgb(208,203,29)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5 samples, 0.10%)</title><rect x="98.6271%" y="917" width="0.1009%" height="15" fill="rgb(207,209,35)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="98.6271%" y="901" width="0.1009%" height="15" fill="rgb(230,144,49)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5 samples, 0.10%)</title><rect x="98.6271%" y="885" width="0.1009%" height="15" fill="rgb(229,31,6)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.10%)</title><rect x="98.6271%" y="869" width="0.1009%" height="15" fill="rgb(251,129,24)" fg:x="4885" fg:w="5"/><text x="98.8771%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.08%)</title><rect x="98.6473%" y="853" width="0.0808%" height="15" fill="rgb(235,105,15)" fg:x="4886" fg:w="4"/><text x="98.8973%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.08%)</title><rect x="98.6473%" y="837" width="0.0808%" height="15" fill="rgb(216,52,43)" fg:x="4886" fg:w="4"/><text x="98.8973%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="98.6473%" y="821" width="0.0808%" height="15" fill="rgb(238,144,41)" fg:x="4886" fg:w="4"/><text x="98.8973%" y="831.50"></text></g><g><title>core::mem::drop (4 samples, 0.08%)</title><rect x="98.6473%" y="805" width="0.0808%" height="15" fill="rgb(243,63,9)" fg:x="4886" fg:w="4"/><text x="98.8973%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.08%)</title><rect x="98.6473%" y="789" width="0.0808%" height="15" fill="rgb(246,208,1)" fg:x="4886" fg:w="4"/><text x="98.8973%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="98.6473%" y="773" width="0.0808%" height="15" fill="rgb(233,182,18)" fg:x="4886" fg:w="4"/><text x="98.8973%" y="783.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.04%)</title><rect x="98.6877%" y="757" width="0.0404%" height="15" fill="rgb(242,224,8)" fg:x="4888" fg:w="2"/><text x="98.9377%" y="767.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="98.6877%" y="741" width="0.0404%" height="15" fill="rgb(243,54,37)" fg:x="4888" fg:w="2"/><text x="98.9377%" y="751.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="98.6877%" y="725" width="0.0404%" height="15" fill="rgb(233,192,12)" fg:x="4888" fg:w="2"/><text x="98.9377%" y="735.50"></text></g><g><title>alloc::collections::btree::mem::replace (2 samples, 0.04%)</title><rect x="98.6877%" y="709" width="0.0404%" height="15" fill="rgb(251,192,53)" fg:x="4888" fg:w="2"/><text x="98.9377%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (2 samples, 0.04%)</title><rect x="98.6877%" y="693" width="0.0404%" height="15" fill="rgb(246,141,26)" fg:x="4888" fg:w="2"/><text x="98.9377%" y="703.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="98.6877%" y="677" width="0.0404%" height="15" fill="rgb(239,195,19)" fg:x="4888" fg:w="2"/><text x="98.9377%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.04%)</title><rect x="98.6877%" y="661" width="0.0404%" height="15" fill="rgb(241,16,39)" fg:x="4888" fg:w="2"/><text x="98.9377%" y="671.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.7280%" y="869" width="0.0202%" height="15" fill="rgb(223,13,53)" fg:x="4890" fg:w="1"/><text x="98.9780%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="98.7280%" y="853" width="0.0202%" height="15" fill="rgb(214,227,0)" fg:x="4890" fg:w="1"/><text x="98.9780%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="98.7280%" y="837" width="0.0202%" height="15" fill="rgb(228,103,26)" fg:x="4890" fg:w="1"/><text x="98.9780%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="98.7280%" y="821" width="0.0202%" height="15" fill="rgb(254,177,53)" fg:x="4890" fg:w="1"/><text x="98.9780%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.7280%" y="805" width="0.0202%" height="15" fill="rgb(208,201,34)" fg:x="4890" fg:w="1"/><text x="98.9780%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="98.7280%" y="789" width="0.0202%" height="15" fill="rgb(212,39,5)" fg:x="4890" fg:w="1"/><text x="98.9780%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.14%)</title><rect x="98.6271%" y="1285" width="0.1413%" height="15" fill="rgb(246,117,3)" fg:x="4885" fg:w="7"/><text x="98.8771%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.14%)</title><rect x="98.6271%" y="1269" width="0.1413%" height="15" fill="rgb(244,118,39)" fg:x="4885" fg:w="7"/><text x="98.8771%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.14%)</title><rect x="98.6271%" y="1253" width="0.1413%" height="15" fill="rgb(241,64,10)" fg:x="4885" fg:w="7"/><text x="98.8771%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.14%)</title><rect x="98.6271%" y="1237" width="0.1413%" height="15" fill="rgb(229,39,44)" fg:x="4885" fg:w="7"/><text x="98.8771%" y="1247.50"></text></g><g><title>core::mem::drop (7 samples, 0.14%)</title><rect x="98.6271%" y="1221" width="0.1413%" height="15" fill="rgb(230,226,3)" fg:x="4885" fg:w="7"/><text x="98.8771%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.14%)</title><rect x="98.6271%" y="1205" width="0.1413%" height="15" fill="rgb(222,13,42)" fg:x="4885" fg:w="7"/><text x="98.8771%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.14%)</title><rect x="98.6271%" y="1189" width="0.1413%" height="15" fill="rgb(247,180,54)" fg:x="4885" fg:w="7"/><text x="98.8771%" y="1199.50"></text></g><g><title>?? (7 samples, 0.14%)</title><rect x="98.6271%" y="1173" width="0.1413%" height="15" fill="rgb(205,96,16)" fg:x="4885" fg:w="7"/><text x="98.8771%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.14%)</title><rect x="98.6271%" y="1157" width="0.1413%" height="15" fill="rgb(205,100,21)" fg:x="4885" fg:w="7"/><text x="98.8771%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.14%)</title><rect x="98.6271%" y="1141" width="0.1413%" height="15" fill="rgb(248,51,4)" fg:x="4885" fg:w="7"/><text x="98.8771%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="98.7280%" y="1125" width="0.0404%" height="15" fill="rgb(217,197,30)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="98.7280%" y="1109" width="0.0404%" height="15" fill="rgb(240,179,40)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.7280%" y="1093" width="0.0404%" height="15" fill="rgb(212,185,35)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="1103.50"></text></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect x="98.7280%" y="1077" width="0.0404%" height="15" fill="rgb(251,222,31)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="98.7280%" y="1061" width="0.0404%" height="15" fill="rgb(208,140,36)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.7280%" y="1045" width="0.0404%" height="15" fill="rgb(220,148,1)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="1055.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="98.7280%" y="1029" width="0.0404%" height="15" fill="rgb(254,4,28)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="98.7280%" y="1013" width="0.0404%" height="15" fill="rgb(222,185,44)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.04%)</title><rect x="98.7280%" y="997" width="0.0404%" height="15" fill="rgb(215,74,39)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="98.7280%" y="981" width="0.0404%" height="15" fill="rgb(247,86,4)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="98.7280%" y="965" width="0.0404%" height="15" fill="rgb(231,105,32)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.7280%" y="949" width="0.0404%" height="15" fill="rgb(222,65,35)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="959.50"></text></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect x="98.7280%" y="933" width="0.0404%" height="15" fill="rgb(218,145,35)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="98.7280%" y="917" width="0.0404%" height="15" fill="rgb(208,7,15)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.7280%" y="901" width="0.0404%" height="15" fill="rgb(209,83,13)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="911.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="98.7280%" y="885" width="0.0404%" height="15" fill="rgb(218,3,10)" fg:x="4890" fg:w="2"/><text x="98.9780%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="98.7482%" y="869" width="0.0202%" height="15" fill="rgb(211,219,4)" fg:x="4891" fg:w="1"/><text x="98.9982%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.02%)</title><rect x="98.7482%" y="853" width="0.0202%" height="15" fill="rgb(228,194,12)" fg:x="4891" fg:w="1"/><text x="98.9982%" y="863.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="98.7684%" y="1109" width="0.0202%" height="15" fill="rgb(210,175,7)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="1119.50"></text></g><g><title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect x="98.7684%" y="1093" width="0.0202%" height="15" fill="rgb(243,132,6)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="1103.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect x="98.7684%" y="1077" width="0.0202%" height="15" fill="rgb(207,72,18)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="1087.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="98.7684%" y="1061" width="0.0202%" height="15" fill="rgb(236,1,18)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="1071.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.7684%" y="1045" width="0.0202%" height="15" fill="rgb(227,0,18)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="1055.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.7684%" y="1029" width="0.0202%" height="15" fill="rgb(247,37,5)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="1039.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.7684%" y="1013" width="0.0202%" height="15" fill="rgb(237,179,24)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="1023.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="98.7684%" y="997" width="0.0202%" height="15" fill="rgb(226,53,20)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="1007.50"></text></g><g><title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect x="98.7684%" y="981" width="0.0202%" height="15" fill="rgb(247,75,7)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="991.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect x="98.7684%" y="965" width="0.0202%" height="15" fill="rgb(233,96,12)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="975.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="98.7684%" y="949" width="0.0202%" height="15" fill="rgb(224,125,0)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.7684%" y="933" width="0.0202%" height="15" fill="rgb(224,92,25)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="943.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.7684%" y="917" width="0.0202%" height="15" fill="rgb(224,42,24)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.7684%" y="901" width="0.0202%" height="15" fill="rgb(234,132,49)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="911.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="98.7684%" y="885" width="0.0202%" height="15" fill="rgb(248,100,35)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="895.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.7684%" y="869" width="0.0202%" height="15" fill="rgb(239,94,40)" fg:x="4892" fg:w="1"/><text x="99.0184%" y="879.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="98.7886%" y="789" width="0.0202%" height="15" fill="rgb(235,139,28)" fg:x="4893" fg:w="1"/><text x="99.0386%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.7886%" y="773" width="0.0202%" height="15" fill="rgb(217,144,7)" fg:x="4893" fg:w="1"/><text x="99.0386%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.7886%" y="757" width="0.0202%" height="15" fill="rgb(227,55,4)" fg:x="4893" fg:w="1"/><text x="99.0386%" y="767.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="98.7886%" y="741" width="0.0202%" height="15" fill="rgb(252,82,54)" fg:x="4893" fg:w="1"/><text x="99.0386%" y="751.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="98.7886%" y="725" width="0.0202%" height="15" fill="rgb(245,172,4)" fg:x="4893" fg:w="1"/><text x="99.0386%" y="735.50"></text></g><g><title>serde::de::MapAccess::next_entry (2 samples, 0.04%)</title><rect x="98.8088%" y="789" width="0.0404%" height="15" fill="rgb(207,26,27)" fg:x="4894" fg:w="2"/><text x="99.0588%" y="799.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2 samples, 0.04%)</title><rect x="98.8088%" y="773" width="0.0404%" height="15" fill="rgb(252,98,18)" fg:x="4894" fg:w="2"/><text x="99.0588%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.8492%" y="725" width="0.0202%" height="15" fill="rgb(244,8,26)" fg:x="4896" fg:w="1"/><text x="99.0992%" y="735.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="98.8492%" y="709" width="0.0202%" height="15" fill="rgb(237,173,45)" fg:x="4896" fg:w="1"/><text x="99.0992%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.8694%" y="613" width="0.0202%" height="15" fill="rgb(208,213,49)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.02%)</title><rect x="98.8694%" y="597" width="0.0202%" height="15" fill="rgb(212,122,37)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.8694%" y="581" width="0.0202%" height="15" fill="rgb(213,80,17)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="591.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect x="98.8694%" y="565" width="0.0202%" height="15" fill="rgb(206,210,43)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="98.8694%" y="549" width="0.0202%" height="15" fill="rgb(229,214,3)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect x="98.8694%" y="533" width="0.0202%" height="15" fill="rgb(235,213,29)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect x="98.8694%" y="517" width="0.0202%" height="15" fill="rgb(248,135,26)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect x="98.8694%" y="501" width="0.0202%" height="15" fill="rgb(242,188,12)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="98.8694%" y="485" width="0.0202%" height="15" fill="rgb(245,38,12)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="98.8694%" y="469" width="0.0202%" height="15" fill="rgb(218,42,13)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="98.8694%" y="453" width="0.0202%" height="15" fill="rgb(238,132,49)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="463.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.8694%" y="437" width="0.0202%" height="15" fill="rgb(209,196,19)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="447.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.8694%" y="421" width="0.0202%" height="15" fill="rgb(244,131,22)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="431.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.8694%" y="405" width="0.0202%" height="15" fill="rgb(223,18,34)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="98.8694%" y="389" width="0.0202%" height="15" fill="rgb(252,124,54)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="399.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.8694%" y="373" width="0.0202%" height="15" fill="rgb(229,106,42)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="98.8694%" y="357" width="0.0202%" height="15" fill="rgb(221,129,1)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="367.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="98.8694%" y="341" width="0.0202%" height="15" fill="rgb(229,74,15)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="351.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="98.8694%" y="325" width="0.0202%" height="15" fill="rgb(210,206,50)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="335.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="98.8694%" y="309" width="0.0202%" height="15" fill="rgb(251,114,31)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="319.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="98.8694%" y="293" width="0.0202%" height="15" fill="rgb(215,225,28)" fg:x="4897" fg:w="1"/><text x="99.1194%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.04%)</title><rect x="98.8694%" y="629" width="0.0404%" height="15" fill="rgb(237,109,14)" fg:x="4897" fg:w="2"/><text x="99.1194%" y="639.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.8896%" y="613" width="0.0202%" height="15" fill="rgb(230,13,37)" fg:x="4898" fg:w="1"/><text x="99.1396%" y="623.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.8896%" y="597" width="0.0202%" height="15" fill="rgb(231,40,28)" fg:x="4898" fg:w="1"/><text x="99.1396%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1 samples, 0.02%)</title><rect x="98.8896%" y="581" width="0.0202%" height="15" fill="rgb(231,202,18)" fg:x="4898" fg:w="1"/><text x="99.1396%" y="591.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.02%)</title><rect x="98.8896%" y="565" width="0.0202%" height="15" fill="rgb(225,33,18)" fg:x="4898" fg:w="1"/><text x="99.1396%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="98.9098%" y="597" width="0.0202%" height="15" fill="rgb(223,64,47)" fg:x="4899" fg:w="1"/><text x="99.1598%" y="607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.9098%" y="581" width="0.0202%" height="15" fill="rgb(234,114,13)" fg:x="4899" fg:w="1"/><text x="99.1598%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.9098%" y="565" width="0.0202%" height="15" fill="rgb(248,56,40)" fg:x="4899" fg:w="1"/><text x="99.1598%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect x="98.9098%" y="549" width="0.0202%" height="15" fill="rgb(221,194,21)" fg:x="4899" fg:w="1"/><text x="99.1598%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.9098%" y="533" width="0.0202%" height="15" fill="rgb(242,108,46)" fg:x="4899" fg:w="1"/><text x="99.1598%" y="543.50"></text></g><g><title>serde::de::MapAccess::next_entry (2 samples, 0.04%)</title><rect x="98.9098%" y="629" width="0.0404%" height="15" fill="rgb(220,106,10)" fg:x="4899" fg:w="2"/><text x="99.1598%" y="639.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2 samples, 0.04%)</title><rect x="98.9098%" y="613" width="0.0404%" height="15" fill="rgb(211,88,4)" fg:x="4899" fg:w="2"/><text x="99.1598%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="98.9299%" y="597" width="0.0202%" height="15" fill="rgb(214,95,34)" fg:x="4900" fg:w="1"/><text x="99.1799%" y="607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.9299%" y="581" width="0.0202%" height="15" fill="rgb(250,160,33)" fg:x="4900" fg:w="1"/><text x="99.1799%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.9299%" y="565" width="0.0202%" height="15" fill="rgb(225,29,10)" fg:x="4900" fg:w="1"/><text x="99.1799%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.9299%" y="549" width="0.0202%" height="15" fill="rgb(224,28,30)" fg:x="4900" fg:w="1"/><text x="99.1799%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.10%)</title><rect x="98.8694%" y="693" width="0.1009%" height="15" fill="rgb(231,77,4)" fg:x="4897" fg:w="5"/><text x="99.1194%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.10%)</title><rect x="98.8694%" y="677" width="0.1009%" height="15" fill="rgb(209,63,21)" fg:x="4897" fg:w="5"/><text x="99.1194%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.10%)</title><rect x="98.8694%" y="661" width="0.1009%" height="15" fill="rgb(226,22,11)" fg:x="4897" fg:w="5"/><text x="99.1194%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.10%)</title><rect x="98.8694%" y="645" width="0.1009%" height="15" fill="rgb(216,82,30)" fg:x="4897" fg:w="5"/><text x="99.1194%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.9501%" y="629" width="0.0202%" height="15" fill="rgb(246,227,38)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="98.9501%" y="613" width="0.0202%" height="15" fill="rgb(251,203,53)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="623.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9501%" y="597" width="0.0202%" height="15" fill="rgb(254,101,1)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="607.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9501%" y="581" width="0.0202%" height="15" fill="rgb(241,180,5)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="591.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9501%" y="565" width="0.0202%" height="15" fill="rgb(218,168,4)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.02%)</title><rect x="98.9501%" y="549" width="0.0202%" height="15" fill="rgb(224,223,32)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.02%)</title><rect x="98.9501%" y="533" width="0.0202%" height="15" fill="rgb(236,106,22)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="98.9501%" y="517" width="0.0202%" height="15" fill="rgb(206,121,5)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="527.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9501%" y="501" width="0.0202%" height="15" fill="rgb(233,87,28)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="98.9501%" y="485" width="0.0202%" height="15" fill="rgb(236,137,17)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="495.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="98.9501%" y="469" width="0.0202%" height="15" fill="rgb(209,183,38)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="479.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="98.9501%" y="453" width="0.0202%" height="15" fill="rgb(206,162,44)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="463.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="98.9501%" y="437" width="0.0202%" height="15" fill="rgb(237,70,39)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="447.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="98.9501%" y="421" width="0.0202%" height="15" fill="rgb(212,176,5)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="431.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="98.9501%" y="405" width="0.0202%" height="15" fill="rgb(232,95,16)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="415.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="98.9501%" y="389" width="0.0202%" height="15" fill="rgb(219,115,35)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="399.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="98.9501%" y="373" width="0.0202%" height="15" fill="rgb(251,67,27)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="383.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="98.9501%" y="357" width="0.0202%" height="15" fill="rgb(222,95,40)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="367.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="98.9501%" y="341" width="0.0202%" height="15" fill="rgb(250,35,16)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="351.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="98.9501%" y="325" width="0.0202%" height="15" fill="rgb(224,86,44)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="335.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="98.9501%" y="309" width="0.0202%" height="15" fill="rgb(237,53,53)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="319.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="98.9501%" y="293" width="0.0202%" height="15" fill="rgb(208,171,33)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="303.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="98.9501%" y="277" width="0.0202%" height="15" fill="rgb(222,64,27)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="287.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="98.9501%" y="261" width="0.0202%" height="15" fill="rgb(221,121,35)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="271.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="98.9501%" y="245" width="0.0202%" height="15" fill="rgb(228,137,42)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="255.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="98.9501%" y="229" width="0.0202%" height="15" fill="rgb(227,54,21)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="239.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect x="98.9501%" y="213" width="0.0202%" height="15" fill="rgb(240,168,33)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="223.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect x="98.9501%" y="197" width="0.0202%" height="15" fill="rgb(243,159,6)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="207.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="98.9501%" y="181" width="0.0202%" height="15" fill="rgb(205,211,41)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="191.50"></text></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect x="98.9501%" y="165" width="0.0202%" height="15" fill="rgb(253,30,1)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="175.50"></text></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect x="98.9501%" y="149" width="0.0202%" height="15" fill="rgb(226,80,18)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="159.50"></text></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect x="98.9501%" y="133" width="0.0202%" height="15" fill="rgb(253,156,46)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="143.50"></text></g><g><title>_rjem_je_base_alloc_edata (1 samples, 0.02%)</title><rect x="98.9501%" y="117" width="0.0202%" height="15" fill="rgb(248,87,27)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="127.50"></text></g><g><title>base_alloc_impl (1 samples, 0.02%)</title><rect x="98.9501%" y="101" width="0.0202%" height="15" fill="rgb(227,122,2)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="111.50"></text></g><g><title>_rjem_je_edata_heap_remove_first (1 samples, 0.02%)</title><rect x="98.9501%" y="85" width="0.0202%" height="15" fill="rgb(229,94,39)" fg:x="4901" fg:w="1"/><text x="99.2001%" y="95.50"></text></g><g><title>serde::de::MapAccess::next_value (7 samples, 0.14%)</title><rect x="98.8492%" y="789" width="0.1413%" height="15" fill="rgb(225,173,31)" fg:x="4896" fg:w="7"/><text x="99.0992%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.14%)</title><rect x="98.8492%" y="773" width="0.1413%" height="15" fill="rgb(239,176,30)" fg:x="4896" fg:w="7"/><text x="99.0992%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.14%)</title><rect x="98.8492%" y="757" width="0.1413%" height="15" fill="rgb(212,104,21)" fg:x="4896" fg:w="7"/><text x="99.0992%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7 samples, 0.14%)</title><rect x="98.8492%" y="741" width="0.1413%" height="15" fill="rgb(240,209,40)" fg:x="4896" fg:w="7"/><text x="99.0992%" y="751.50"></text></g><g><title>serde::de::SeqAccess::next_element (6 samples, 0.12%)</title><rect x="98.8694%" y="725" width="0.1211%" height="15" fill="rgb(234,195,5)" fg:x="4897" fg:w="6"/><text x="99.1194%" y="735.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6 samples, 0.12%)</title><rect x="98.8694%" y="709" width="0.1211%" height="15" fill="rgb(238,213,1)" fg:x="4897" fg:w="6"/><text x="99.1194%" y="719.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9703%" y="693" width="0.0202%" height="15" fill="rgb(235,182,54)" fg:x="4902" fg:w="1"/><text x="99.2203%" y="703.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9703%" y="677" width="0.0202%" height="15" fill="rgb(229,50,46)" fg:x="4902" fg:w="1"/><text x="99.2203%" y="687.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="98.9703%" y="661" width="0.0202%" height="15" fill="rgb(219,145,13)" fg:x="4902" fg:w="1"/><text x="99.2203%" y="671.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="98.9703%" y="645" width="0.0202%" height="15" fill="rgb(220,226,10)" fg:x="4902" fg:w="1"/><text x="99.2203%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_entry (11 samples, 0.22%)</title><rect x="98.7886%" y="997" width="0.2221%" height="15" fill="rgb(248,47,30)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="1007.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (11 samples, 0.22%)</title><rect x="98.7886%" y="981" width="0.2221%" height="15" fill="rgb(231,209,44)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="991.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11 samples, 0.22%)</title><rect x="98.7886%" y="965" width="0.2221%" height="15" fill="rgb(209,80,30)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.22%)</title><rect x="98.7886%" y="949" width="0.2221%" height="15" fill="rgb(232,9,14)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="959.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.22%)</title><rect x="98.7886%" y="933" width="0.2221%" height="15" fill="rgb(243,91,43)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="943.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.22%)</title><rect x="98.7886%" y="917" width="0.2221%" height="15" fill="rgb(231,90,52)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="927.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11 samples, 0.22%)</title><rect x="98.7886%" y="901" width="0.2221%" height="15" fill="rgb(253,192,44)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="911.50"></text></g><g><title>serde::de::SeqAccess::next_element (11 samples, 0.22%)</title><rect x="98.7886%" y="885" width="0.2221%" height="15" fill="rgb(241,66,31)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="895.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11 samples, 0.22%)</title><rect x="98.7886%" y="869" width="0.2221%" height="15" fill="rgb(235,81,37)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="879.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.22%)</title><rect x="98.7886%" y="853" width="0.2221%" height="15" fill="rgb(223,221,9)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="863.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.22%)</title><rect x="98.7886%" y="837" width="0.2221%" height="15" fill="rgb(242,180,7)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="847.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.22%)</title><rect x="98.7886%" y="821" width="0.2221%" height="15" fill="rgb(243,78,19)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="831.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.22%)</title><rect x="98.7886%" y="805" width="0.2221%" height="15" fill="rgb(233,23,17)" fg:x="4893" fg:w="11"/><text x="99.0386%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.9905%" y="789" width="0.0202%" height="15" fill="rgb(252,122,45)" fg:x="4903" fg:w="1"/><text x="99.2405%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="98.9905%" y="773" width="0.0202%" height="15" fill="rgb(247,108,20)" fg:x="4903" fg:w="1"/><text x="99.2405%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9905%" y="757" width="0.0202%" height="15" fill="rgb(235,84,21)" fg:x="4903" fg:w="1"/><text x="99.2405%" y="767.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9905%" y="741" width="0.0202%" height="15" fill="rgb(247,129,10)" fg:x="4903" fg:w="1"/><text x="99.2405%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="98.9905%" y="725" width="0.0202%" height="15" fill="rgb(208,173,14)" fg:x="4903" fg:w="1"/><text x="99.2405%" y="735.50"></text></g><g><title>deserialize_struct::diff_json (23 samples, 0.46%)</title><rect x="98.5665%" y="1301" width="0.4644%" height="15" fill="rgb(236,31,38)" fg:x="4882" fg:w="23"/><text x="98.8165%" y="1311.50"></text></g><g><title>serde_json::de::from_str (13 samples, 0.26%)</title><rect x="98.7684%" y="1285" width="0.2625%" height="15" fill="rgb(232,65,17)" fg:x="4892" fg:w="13"/><text x="99.0184%" y="1295.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 0.26%)</title><rect x="98.7684%" y="1269" width="0.2625%" height="15" fill="rgb(224,45,49)" fg:x="4892" fg:w="13"/><text x="99.0184%" y="1279.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 0.26%)</title><rect x="98.7684%" y="1253" width="0.2625%" height="15" fill="rgb(225,2,53)" fg:x="4892" fg:w="13"/><text x="99.0184%" y="1263.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.26%)</title><rect x="98.7684%" y="1237" width="0.2625%" height="15" fill="rgb(248,210,53)" fg:x="4892" fg:w="13"/><text x="99.0184%" y="1247.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 0.26%)</title><rect x="98.7684%" y="1221" width="0.2625%" height="15" fill="rgb(211,1,30)" fg:x="4892" fg:w="13"/><text x="99.0184%" y="1231.50"></text></g><g><title>serde::de::MapAccess::next_entry (13 samples, 0.26%)</title><rect x="98.7684%" y="1205" width="0.2625%" height="15" fill="rgb(224,96,15)" fg:x="4892" fg:w="13"/><text x="99.0184%" y="1215.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (13 samples, 0.26%)</title><rect x="98.7684%" y="1189" width="0.2625%" height="15" fill="rgb(252,45,11)" fg:x="4892" fg:w="13"/><text x="99.0184%" y="1199.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (13 samples, 0.26%)</title><rect x="98.7684%" y="1173" width="0.2625%" height="15" fill="rgb(220,125,38)" fg:x="4892" fg:w="13"/><text x="99.0184%" y="1183.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 0.26%)</title><rect x="98.7684%" y="1157" width="0.2625%" height="15" fill="rgb(243,161,33)" fg:x="4892" fg:w="13"/><text x="99.0184%" y="1167.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 0.26%)</title><rect x="98.7684%" y="1141" width="0.2625%" height="15" fill="rgb(248,197,34)" fg:x="4892" fg:w="13"/><text x="99.0184%" y="1151.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.26%)</title><rect x="98.7684%" y="1125" width="0.2625%" height="15" fill="rgb(228,165,23)" fg:x="4892" fg:w="13"/><text x="99.0184%" y="1135.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12 samples, 0.24%)</title><rect x="98.7886%" y="1109" width="0.2423%" height="15" fill="rgb(236,94,38)" fg:x="4893" fg:w="12"/><text x="99.0386%" y="1119.50"></text></g><g><title>serde::de::SeqAccess::next_element (12 samples, 0.24%)</title><rect x="98.7886%" y="1093" width="0.2423%" height="15" fill="rgb(220,13,23)" fg:x="4893" fg:w="12"/><text x="99.0386%" y="1103.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.24%)</title><rect x="98.7886%" y="1077" width="0.2423%" height="15" fill="rgb(234,26,39)" fg:x="4893" fg:w="12"/><text x="99.0386%" y="1087.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.24%)</title><rect x="98.7886%" y="1061" width="0.2423%" height="15" fill="rgb(205,117,44)" fg:x="4893" fg:w="12"/><text x="99.0386%" y="1071.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.24%)</title><rect x="98.7886%" y="1045" width="0.2423%" height="15" fill="rgb(250,42,2)" fg:x="4893" fg:w="12"/><text x="99.0386%" y="1055.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.24%)</title><rect x="98.7886%" y="1029" width="0.2423%" height="15" fill="rgb(223,83,14)" fg:x="4893" fg:w="12"/><text x="99.0386%" y="1039.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.24%)</title><rect x="98.7886%" y="1013" width="0.2423%" height="15" fill="rgb(241,147,50)" fg:x="4893" fg:w="12"/><text x="99.0386%" y="1023.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.0107%" y="997" width="0.0202%" height="15" fill="rgb(218,90,6)" fg:x="4904" fg:w="1"/><text x="99.2607%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="99.0107%" y="981" width="0.0202%" height="15" fill="rgb(210,191,5)" fg:x="4904" fg:w="1"/><text x="99.2607%" y="991.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.0107%" y="965" width="0.0202%" height="15" fill="rgb(225,139,19)" fg:x="4904" fg:w="1"/><text x="99.2607%" y="975.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.0107%" y="949" width="0.0202%" height="15" fill="rgb(210,1,33)" fg:x="4904" fg:w="1"/><text x="99.2607%" y="959.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.0107%" y="933" width="0.0202%" height="15" fill="rgb(213,50,3)" fg:x="4904" fg:w="1"/><text x="99.2607%" y="943.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.0107%" y="917" width="0.0202%" height="15" fill="rgb(234,227,4)" fg:x="4904" fg:w="1"/><text x="99.2607%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.0107%" y="901" width="0.0202%" height="15" fill="rgb(246,63,5)" fg:x="4904" fg:w="1"/><text x="99.2607%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.0107%" y="885" width="0.0202%" height="15" fill="rgb(245,136,27)" fg:x="4904" fg:w="1"/><text x="99.2607%" y="895.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.0107%" y="869" width="0.0202%" height="15" fill="rgb(247,199,27)" fg:x="4904" fg:w="1"/><text x="99.2607%" y="879.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="99.0511%" y="533" width="0.0202%" height="15" fill="rgb(252,158,49)" fg:x="4906" fg:w="1"/><text x="99.3011%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.0511%" y="613" width="0.0404%" height="15" fill="rgb(254,73,1)" fg:x="4906" fg:w="2"/><text x="99.3011%" y="623.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.0511%" y="597" width="0.0404%" height="15" fill="rgb(248,93,19)" fg:x="4906" fg:w="2"/><text x="99.3011%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.04%)</title><rect x="99.0511%" y="581" width="0.0404%" height="15" fill="rgb(206,67,5)" fg:x="4906" fg:w="2"/><text x="99.3011%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.04%)</title><rect x="99.0511%" y="565" width="0.0404%" height="15" fill="rgb(209,210,4)" fg:x="4906" fg:w="2"/><text x="99.3011%" y="575.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.04%)</title><rect x="99.0511%" y="549" width="0.0404%" height="15" fill="rgb(214,185,36)" fg:x="4906" fg:w="2"/><text x="99.3011%" y="559.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.0713%" y="533" width="0.0202%" height="15" fill="rgb(233,191,26)" fg:x="4907" fg:w="1"/><text x="99.3213%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="99.0713%" y="517" width="0.0202%" height="15" fill="rgb(248,94,17)" fg:x="4907" fg:w="1"/><text x="99.3213%" y="527.50"></text></g><g><title>serde_json::read::as_str (1 samples, 0.02%)</title><rect x="99.0713%" y="501" width="0.0202%" height="15" fill="rgb(250,64,4)" fg:x="4907" fg:w="1"/><text x="99.3213%" y="511.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="99.0713%" y="485" width="0.0202%" height="15" fill="rgb(218,41,53)" fg:x="4907" fg:w="1"/><text x="99.3213%" y="495.50"></text></g><g><title>serde_json::de::from_slice (4 samples, 0.08%)</title><rect x="99.0309%" y="1301" width="0.0808%" height="15" fill="rgb(251,176,28)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1311.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.08%)</title><rect x="99.0309%" y="1285" width="0.0808%" height="15" fill="rgb(247,22,9)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1295.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.0309%" y="1269" width="0.0808%" height="15" fill="rgb(218,201,14)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1279.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.08%)</title><rect x="99.0309%" y="1253" width="0.0808%" height="15" fill="rgb(218,94,10)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1263.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.08%)</title><rect x="99.0309%" y="1237" width="0.0808%" height="15" fill="rgb(222,183,52)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1247.50"></text></g><g><title>serde::de::MapAccess::next_value (4 samples, 0.08%)</title><rect x="99.0309%" y="1221" width="0.0808%" height="15" fill="rgb(242,140,25)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1231.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.08%)</title><rect x="99.0309%" y="1205" width="0.0808%" height="15" fill="rgb(235,197,38)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1215.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.0309%" y="1189" width="0.0808%" height="15" fill="rgb(237,136,15)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1199.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.0309%" y="1173" width="0.0808%" height="15" fill="rgb(223,44,49)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1183.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (4 samples, 0.08%)</title><rect x="99.0309%" y="1157" width="0.0808%" height="15" fill="rgb(227,71,15)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1167.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.08%)</title><rect x="99.0309%" y="1141" width="0.0808%" height="15" fill="rgb(225,153,20)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1151.50"></text></g><g><title>serde::de::SeqAccess::next_element (4 samples, 0.08%)</title><rect x="99.0309%" y="1125" width="0.0808%" height="15" fill="rgb(210,190,26)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1135.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4 samples, 0.08%)</title><rect x="99.0309%" y="1109" width="0.0808%" height="15" fill="rgb(223,147,5)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1119.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.0309%" y="1093" width="0.0808%" height="15" fill="rgb(207,14,23)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1103.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.0309%" y="1077" width="0.0808%" height="15" fill="rgb(211,195,53)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1087.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.08%)</title><rect x="99.0309%" y="1061" width="0.0808%" height="15" fill="rgb(237,75,46)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1071.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.08%)</title><rect x="99.0309%" y="1045" width="0.0808%" height="15" fill="rgb(254,55,14)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1055.50"></text></g><g><title>serde::de::MapAccess::next_value (4 samples, 0.08%)</title><rect x="99.0309%" y="1029" width="0.0808%" height="15" fill="rgb(230,185,30)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1039.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.08%)</title><rect x="99.0309%" y="1013" width="0.0808%" height="15" fill="rgb(220,14,11)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.0309%" y="997" width="0.0808%" height="15" fill="rgb(215,169,44)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="1007.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.0309%" y="981" width="0.0808%" height="15" fill="rgb(253,203,20)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="991.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (4 samples, 0.08%)</title><rect x="99.0309%" y="965" width="0.0808%" height="15" fill="rgb(229,225,17)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="975.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.08%)</title><rect x="99.0309%" y="949" width="0.0808%" height="15" fill="rgb(236,76,26)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="959.50"></text></g><g><title>serde::de::SeqAccess::next_element (4 samples, 0.08%)</title><rect x="99.0309%" y="933" width="0.0808%" height="15" fill="rgb(234,15,30)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="943.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4 samples, 0.08%)</title><rect x="99.0309%" y="917" width="0.0808%" height="15" fill="rgb(211,113,48)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.0309%" y="901" width="0.0808%" height="15" fill="rgb(221,31,36)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="911.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.0309%" y="885" width="0.0808%" height="15" fill="rgb(215,118,52)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="895.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.08%)</title><rect x="99.0309%" y="869" width="0.0808%" height="15" fill="rgb(241,151,27)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="879.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.08%)</title><rect x="99.0309%" y="853" width="0.0808%" height="15" fill="rgb(253,51,3)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="863.50"></text></g><g><title>serde::de::MapAccess::next_value (4 samples, 0.08%)</title><rect x="99.0309%" y="837" width="0.0808%" height="15" fill="rgb(216,201,24)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="847.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.08%)</title><rect x="99.0309%" y="821" width="0.0808%" height="15" fill="rgb(231,107,4)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.0309%" y="805" width="0.0808%" height="15" fill="rgb(243,97,54)" fg:x="4905" fg:w="4"/><text x="99.2809%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (3 samples, 0.06%)</title><rect x="99.0511%" y="789" width="0.0606%" height="15" fill="rgb(221,32,51)" fg:x="4906" fg:w="3"/><text x="99.3011%" y="799.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (3 samples, 0.06%)</title><rect x="99.0511%" y="773" width="0.0606%" height="15" fill="rgb(218,171,35)" fg:x="4906" fg:w="3"/><text x="99.3011%" y="783.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.06%)</title><rect x="99.0511%" y="757" width="0.0606%" height="15" fill="rgb(214,20,53)" fg:x="4906" fg:w="3"/><text x="99.3011%" y="767.50"></text></g><g><title>serde::de::SeqAccess::next_element (3 samples, 0.06%)</title><rect x="99.0511%" y="741" width="0.0606%" height="15" fill="rgb(239,9,52)" fg:x="4906" fg:w="3"/><text x="99.3011%" y="751.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3 samples, 0.06%)</title><rect x="99.0511%" y="725" width="0.0606%" height="15" fill="rgb(215,114,45)" fg:x="4906" fg:w="3"/><text x="99.3011%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect x="99.0511%" y="709" width="0.0606%" height="15" fill="rgb(208,118,9)" fg:x="4906" fg:w="3"/><text x="99.3011%" y="719.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (3 samples, 0.06%)</title><rect x="99.0511%" y="693" width="0.0606%" height="15" fill="rgb(235,7,39)" fg:x="4906" fg:w="3"/><text x="99.3011%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.06%)</title><rect x="99.0511%" y="677" width="0.0606%" height="15" fill="rgb(243,225,15)" fg:x="4906" fg:w="3"/><text x="99.3011%" y="687.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.06%)</title><rect x="99.0511%" y="661" width="0.0606%" height="15" fill="rgb(225,216,18)" fg:x="4906" fg:w="3"/><text x="99.3011%" y="671.50"></text></g><g><title>serde::de::MapAccess::next_key (3 samples, 0.06%)</title><rect x="99.0511%" y="645" width="0.0606%" height="15" fill="rgb(233,36,38)" fg:x="4906" fg:w="3"/><text x="99.3011%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.06%)</title><rect x="99.0511%" y="629" width="0.0606%" height="15" fill="rgb(239,88,23)" fg:x="4906" fg:w="3"/><text x="99.3011%" y="639.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.0915%" y="613" width="0.0202%" height="15" fill="rgb(219,181,35)" fg:x="4908" fg:w="1"/><text x="99.3415%" y="623.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.0915%" y="597" width="0.0202%" height="15" fill="rgb(215,18,46)" fg:x="4908" fg:w="1"/><text x="99.3415%" y="607.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="99.0915%" y="581" width="0.0202%" height="15" fill="rgb(241,38,11)" fg:x="4908" fg:w="1"/><text x="99.3415%" y="591.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Price&gt;::serialize (1 samples, 0.02%)</title><rect x="99.1116%" y="869" width="0.0202%" height="15" fill="rgb(248,169,45)" fg:x="4909" fg:w="1"/><text x="99.3616%" y="879.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.1116%" y="853" width="0.0202%" height="15" fill="rgb(239,50,49)" fg:x="4909" fg:w="1"/><text x="99.3616%" y="863.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.1116%" y="837" width="0.0202%" height="15" fill="rgb(231,96,31)" fg:x="4909" fg:w="1"/><text x="99.3616%" y="847.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="99.1116%" y="821" width="0.0202%" height="15" fill="rgb(224,193,37)" fg:x="4909" fg:w="1"/><text x="99.3616%" y="831.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="99.1116%" y="805" width="0.0202%" height="15" fill="rgb(227,153,50)" fg:x="4909" fg:w="1"/><text x="99.3616%" y="815.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="99.1116%" y="789" width="0.0202%" height="15" fill="rgb(249,228,3)" fg:x="4909" fg:w="1"/><text x="99.3616%" y="799.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="99.1116%" y="773" width="0.0202%" height="15" fill="rgb(219,164,43)" fg:x="4909" fg:w="1"/><text x="99.3616%" y="783.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="99.1116%" y="757" width="0.0202%" height="15" fill="rgb(216,45,41)" fg:x="4909" fg:w="1"/><text x="99.3616%" y="767.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.02%)</title><rect x="99.1116%" y="741" width="0.0202%" height="15" fill="rgb(210,226,51)" fg:x="4909" fg:w="1"/><text x="99.3616%" y="751.50"></text></g><g><title>serde_json::ser::to_string_pretty (3 samples, 0.06%)</title><rect x="99.1116%" y="1301" width="0.0606%" height="15" fill="rgb(209,117,49)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1311.50"></text></g><g><title>serde_json::ser::to_vec_pretty (3 samples, 0.06%)</title><rect x="99.1116%" y="1285" width="0.0606%" height="15" fill="rgb(206,196,24)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1295.50"></text></g><g><title>serde_json::ser::to_writer_pretty (3 samples, 0.06%)</title><rect x="99.1116%" y="1269" width="0.0606%" height="15" fill="rgb(253,218,3)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1279.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::serialize (3 samples, 0.06%)</title><rect x="99.1116%" y="1253" width="0.0606%" height="15" fill="rgb(252,166,2)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1263.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.06%)</title><rect x="99.1116%" y="1237" width="0.0606%" height="15" fill="rgb(236,218,26)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1247.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.06%)</title><rect x="99.1116%" y="1221" width="0.0606%" height="15" fill="rgb(254,84,19)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1231.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.06%)</title><rect x="99.1116%" y="1205" width="0.0606%" height="15" fill="rgb(219,137,29)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1215.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (3 samples, 0.06%)</title><rect x="99.1116%" y="1189" width="0.0606%" height="15" fill="rgb(227,47,52)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1199.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.06%)</title><rect x="99.1116%" y="1173" width="0.0606%" height="15" fill="rgb(229,167,24)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.06%)</title><rect x="99.1116%" y="1157" width="0.0606%" height="15" fill="rgb(233,164,1)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect x="99.1116%" y="1141" width="0.0606%" height="15" fill="rgb(218,88,48)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (3 samples, 0.06%)</title><rect x="99.1116%" y="1125" width="0.0606%" height="15" fill="rgb(226,214,24)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1135.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (3 samples, 0.06%)</title><rect x="99.1116%" y="1109" width="0.0606%" height="15" fill="rgb(233,29,12)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1119.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (3 samples, 0.06%)</title><rect x="99.1116%" y="1093" width="0.0606%" height="15" fill="rgb(219,120,34)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1103.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.06%)</title><rect x="99.1116%" y="1077" width="0.0606%" height="15" fill="rgb(226,78,44)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1087.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Performance&gt;::serialize (3 samples, 0.06%)</title><rect x="99.1116%" y="1061" width="0.0606%" height="15" fill="rgb(240,15,48)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1071.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.06%)</title><rect x="99.1116%" y="1045" width="0.0606%" height="15" fill="rgb(253,176,7)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1055.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.06%)</title><rect x="99.1116%" y="1029" width="0.0606%" height="15" fill="rgb(206,166,28)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1039.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.06%)</title><rect x="99.1116%" y="1013" width="0.0606%" height="15" fill="rgb(241,53,51)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1023.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (3 samples, 0.06%)</title><rect x="99.1116%" y="997" width="0.0606%" height="15" fill="rgb(249,112,30)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="1007.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.06%)</title><rect x="99.1116%" y="981" width="0.0606%" height="15" fill="rgb(217,85,30)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.06%)</title><rect x="99.1116%" y="965" width="0.0606%" height="15" fill="rgb(233,49,7)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect x="99.1116%" y="949" width="0.0606%" height="15" fill="rgb(234,109,9)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (3 samples, 0.06%)</title><rect x="99.1116%" y="933" width="0.0606%" height="15" fill="rgb(253,95,22)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="943.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (3 samples, 0.06%)</title><rect x="99.1116%" y="917" width="0.0606%" height="15" fill="rgb(233,176,25)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="927.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (3 samples, 0.06%)</title><rect x="99.1116%" y="901" width="0.0606%" height="15" fill="rgb(236,33,39)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="911.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.06%)</title><rect x="99.1116%" y="885" width="0.0606%" height="15" fill="rgb(223,226,42)" fg:x="4909" fg:w="3"/><text x="99.3616%" y="895.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::serialize (2 samples, 0.04%)</title><rect x="99.1318%" y="869" width="0.0404%" height="15" fill="rgb(216,99,33)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="879.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect x="99.1318%" y="853" width="0.0404%" height="15" fill="rgb(235,84,23)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="863.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="99.1318%" y="837" width="0.0404%" height="15" fill="rgb(232,2,27)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="847.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect x="99.1318%" y="821" width="0.0404%" height="15" fill="rgb(241,23,22)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="831.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2 samples, 0.04%)</title><rect x="99.1318%" y="805" width="0.0404%" height="15" fill="rgb(211,73,27)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="815.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.04%)</title><rect x="99.1318%" y="789" width="0.0404%" height="15" fill="rgb(235,109,49)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.04%)</title><rect x="99.1318%" y="773" width="0.0404%" height="15" fill="rgb(230,99,29)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="99.1318%" y="757" width="0.0404%" height="15" fill="rgb(245,199,7)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.04%)</title><rect x="99.1318%" y="741" width="0.0404%" height="15" fill="rgb(217,179,10)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.04%)</title><rect x="99.1318%" y="725" width="0.0404%" height="15" fill="rgb(254,99,47)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="735.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.04%)</title><rect x="99.1318%" y="709" width="0.0404%" height="15" fill="rgb(251,121,7)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="719.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect x="99.1318%" y="693" width="0.0404%" height="15" fill="rgb(250,177,26)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="703.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Area&gt;::serialize (2 samples, 0.04%)</title><rect x="99.1318%" y="677" width="0.0404%" height="15" fill="rgb(232,88,15)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="687.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect x="99.1318%" y="661" width="0.0404%" height="15" fill="rgb(251,54,54)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="99.1318%" y="645" width="0.0404%" height="15" fill="rgb(208,177,15)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="655.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.04%)</title><rect x="99.1318%" y="629" width="0.0404%" height="15" fill="rgb(205,97,32)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="639.50"></text></g><g><title>&lt;serde_json::ser::PrettyFormatter as serde_json::ser::Formatter&gt;::begin_object_key (2 samples, 0.04%)</title><rect x="99.1318%" y="613" width="0.0404%" height="15" fill="rgb(217,192,13)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="623.50"></text></g><g><title>serde_json::ser::indent (2 samples, 0.04%)</title><rect x="99.1318%" y="597" width="0.0404%" height="15" fill="rgb(215,163,41)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="607.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.04%)</title><rect x="99.1318%" y="581" width="0.0404%" height="15" fill="rgb(246,83,29)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="591.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.04%)</title><rect x="99.1318%" y="565" width="0.0404%" height="15" fill="rgb(219,2,45)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="575.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="99.1318%" y="549" width="0.0404%" height="15" fill="rgb(242,215,33)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="99.1318%" y="533" width="0.0404%" height="15" fill="rgb(217,1,6)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="543.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="99.1318%" y="517" width="0.0404%" height="15" fill="rgb(207,85,52)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="99.1318%" y="501" width="0.0404%" height="15" fill="rgb(231,171,19)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="99.1318%" y="485" width="0.0404%" height="15" fill="rgb(207,128,4)" fg:x="4910" fg:w="2"/><text x="99.3818%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1722%" y="1173" width="0.0202%" height="15" fill="rgb(219,208,4)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="1183.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.02%)</title><rect x="99.1722%" y="1157" width="0.0202%" height="15" fill="rgb(235,161,42)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="1167.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.1722%" y="1141" width="0.0202%" height="15" fill="rgb(247,218,18)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="1151.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_entry (1 samples, 0.02%)</title><rect x="99.1722%" y="1125" width="0.0202%" height="15" fill="rgb(232,114,51)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="1135.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect x="99.1722%" y="1109" width="0.0202%" height="15" fill="rgb(222,95,3)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="1119.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="99.1722%" y="1093" width="0.0202%" height="15" fill="rgb(240,65,29)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="1103.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1722%" y="1077" width="0.0202%" height="15" fill="rgb(249,209,20)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="1087.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1722%" y="1061" width="0.0202%" height="15" fill="rgb(241,48,37)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="1071.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.1722%" y="1045" width="0.0202%" height="15" fill="rgb(230,140,42)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="1055.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.1722%" y="1029" width="0.0202%" height="15" fill="rgb(230,176,45)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="1039.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect x="99.1722%" y="1013" width="0.0202%" height="15" fill="rgb(245,112,21)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="1023.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="99.1722%" y="997" width="0.0202%" height="15" fill="rgb(207,183,35)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="1007.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1722%" y="981" width="0.0202%" height="15" fill="rgb(227,44,33)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="991.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1722%" y="965" width="0.0202%" height="15" fill="rgb(246,120,21)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="975.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect x="99.1722%" y="949" width="0.0202%" height="15" fill="rgb(235,57,52)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="959.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="99.1722%" y="933" width="0.0202%" height="15" fill="rgb(238,84,10)" fg:x="4912" fg:w="1"/><text x="99.4222%" y="943.50"></text></g><g><title>sonic_rs::serde::de::from_slice (2 samples, 0.04%)</title><rect x="99.1722%" y="1301" width="0.0404%" height="15" fill="rgb(251,200,32)" fg:x="4912" fg:w="2"/><text x="99.4222%" y="1311.50"></text></g><g><title>sonic_rs::serde::de::from_trait (2 samples, 0.04%)</title><rect x="99.1722%" y="1285" width="0.0404%" height="15" fill="rgb(247,159,13)" fg:x="4912" fg:w="2"/><text x="99.4222%" y="1295.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.1722%" y="1269" width="0.0404%" height="15" fill="rgb(238,64,4)" fg:x="4912" fg:w="2"/><text x="99.4222%" y="1279.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect x="99.1722%" y="1253" width="0.0404%" height="15" fill="rgb(221,131,51)" fg:x="4912" fg:w="2"/><text x="99.4222%" y="1263.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.04%)</title><rect x="99.1722%" y="1237" width="0.0404%" height="15" fill="rgb(242,5,29)" fg:x="4912" fg:w="2"/><text x="99.4222%" y="1247.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (2 samples, 0.04%)</title><rect x="99.1722%" y="1221" width="0.0404%" height="15" fill="rgb(214,130,32)" fg:x="4912" fg:w="2"/><text x="99.4222%" y="1231.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.04%)</title><rect x="99.1722%" y="1205" width="0.0404%" height="15" fill="rgb(244,210,16)" fg:x="4912" fg:w="2"/><text x="99.4222%" y="1215.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.1722%" y="1189" width="0.0404%" height="15" fill="rgb(234,48,26)" fg:x="4912" fg:w="2"/><text x="99.4222%" y="1199.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="1173" width="0.0202%" height="15" fill="rgb(231,82,38)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="1183.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect x="99.1924%" y="1157" width="0.0202%" height="15" fill="rgb(254,128,41)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="1167.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="99.1924%" y="1141" width="0.0202%" height="15" fill="rgb(212,73,49)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="1151.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="99.1924%" y="1125" width="0.0202%" height="15" fill="rgb(205,62,54)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="1135.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="99.1924%" y="1109" width="0.0202%" height="15" fill="rgb(228,0,8)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="1119.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="1093" width="0.0202%" height="15" fill="rgb(251,28,17)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="1103.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="1077" width="0.0202%" height="15" fill="rgb(238,105,27)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="1087.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.1924%" y="1061" width="0.0202%" height="15" fill="rgb(237,216,33)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="1071.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.1924%" y="1045" width="0.0202%" height="15" fill="rgb(229,228,25)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="1055.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect x="99.1924%" y="1029" width="0.0202%" height="15" fill="rgb(233,75,23)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="1039.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="99.1924%" y="1013" width="0.0202%" height="15" fill="rgb(231,207,16)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="997" width="0.0202%" height="15" fill="rgb(231,191,45)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="1007.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="981" width="0.0202%" height="15" fill="rgb(224,133,17)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="991.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect x="99.1924%" y="965" width="0.0202%" height="15" fill="rgb(209,178,27)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="975.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="99.1924%" y="949" width="0.0202%" height="15" fill="rgb(218,37,11)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="959.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="99.1924%" y="933" width="0.0202%" height="15" fill="rgb(251,226,25)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="943.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="99.1924%" y="917" width="0.0202%" height="15" fill="rgb(209,222,27)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="901" width="0.0202%" height="15" fill="rgb(238,22,21)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="911.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="885" width="0.0202%" height="15" fill="rgb(233,161,25)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="895.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.1924%" y="869" width="0.0202%" height="15" fill="rgb(226,122,53)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="879.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.1924%" y="853" width="0.0202%" height="15" fill="rgb(220,123,17)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="863.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect x="99.1924%" y="837" width="0.0202%" height="15" fill="rgb(230,224,35)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="847.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="99.1924%" y="821" width="0.0202%" height="15" fill="rgb(246,83,8)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="805" width="0.0202%" height="15" fill="rgb(230,214,17)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="789" width="0.0202%" height="15" fill="rgb(222,97,18)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="799.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect x="99.1924%" y="773" width="0.0202%" height="15" fill="rgb(206,79,1)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="783.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="99.1924%" y="757" width="0.0202%" height="15" fill="rgb(214,121,34)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="767.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="99.1924%" y="741" width="0.0202%" height="15" fill="rgb(249,199,46)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="751.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="99.1924%" y="725" width="0.0202%" height="15" fill="rgb(214,222,46)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="709" width="0.0202%" height="15" fill="rgb(248,168,30)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="719.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="693" width="0.0202%" height="15" fill="rgb(226,14,28)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="703.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.1924%" y="677" width="0.0202%" height="15" fill="rgb(253,123,1)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="687.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.1924%" y="661" width="0.0202%" height="15" fill="rgb(225,24,42)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="671.50"></text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect x="99.1924%" y="645" width="0.0202%" height="15" fill="rgb(216,161,37)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="655.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="99.1924%" y="629" width="0.0202%" height="15" fill="rgb(251,164,26)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="613" width="0.0202%" height="15" fill="rgb(219,177,3)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="623.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.1924%" y="597" width="0.0202%" height="15" fill="rgb(222,65,0)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="607.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect x="99.1924%" y="581" width="0.0202%" height="15" fill="rgb(223,69,54)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="591.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="99.1924%" y="565" width="0.0202%" height="15" fill="rgb(235,30,27)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="575.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.1924%" y="549" width="0.0202%" height="15" fill="rgb(220,183,50)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="559.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.1924%" y="533" width="0.0202%" height="15" fill="rgb(248,198,15)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="543.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.1924%" y="517" width="0.0202%" height="15" fill="rgb(222,211,4)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="527.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="99.1924%" y="501" width="0.0202%" height="15" fill="rgb(214,102,34)" fg:x="4913" fg:w="1"/><text x="99.4424%" y="511.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="99.2126%" y="1013" width="0.0202%" height="15" fill="rgb(245,92,5)" fg:x="4914" fg:w="1"/><text x="99.4626%" y="1023.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="99.2126%" y="997" width="0.0202%" height="15" fill="rgb(252,72,51)" fg:x="4914" fg:w="1"/><text x="99.4626%" y="1007.50"></text></g><g><title>&lt;sonic_rs::serde::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="99.2126%" y="981" width="0.0202%" height="15" fill="rgb(252,208,19)" fg:x="4914" fg:w="1"/><text x="99.4626%" y="991.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="99.2126%" y="965" width="0.0202%" height="15" fill="rgb(211,69,7)" fg:x="4914" fg:w="1"/><text x="99.4626%" y="975.50"></text></g><g><title>sonic_rs::format::Formatter::write_string_fast (1 samples, 0.02%)</title><rect x="99.2126%" y="949" width="0.0202%" height="15" fill="rgb(211,27,16)" fg:x="4914" fg:w="1"/><text x="99.4626%" y="959.50"></text></g><g><title>&lt;sonic_rs::format::PrettyFormatter as sonic_rs::format::Formatter&gt;::begin_object_key (1 samples, 0.02%)</title><rect x="99.2328%" y="613" width="0.0202%" height="15" fill="rgb(219,216,14)" fg:x="4915" fg:w="1"/><text x="99.4828%" y="623.50"></text></g><g><title>sonic_rs::format::indent (1 samples, 0.02%)</title><rect x="99.2328%" y="597" width="0.0202%" height="15" fill="rgb(219,71,8)" fg:x="4915" fg:w="1"/><text x="99.4828%" y="607.50"></text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog (950 samples, 19.18%)</title><rect x="80.0929%" y="1317" width="19.1803%" height="15" fill="rgb(223,170,53)" fg:x="3967" fg:w="950"/><text x="80.3429%" y="1327.50">deserialize_struct::bench_citm..</text></g><g><title>sonic_rs::serde::ser::to_string_pretty (3 samples, 0.06%)</title><rect x="99.2126%" y="1301" width="0.0606%" height="15" fill="rgb(246,21,26)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1311.50"></text></g><g><title>sonic_rs::serde::ser::to_vec_pretty (3 samples, 0.06%)</title><rect x="99.2126%" y="1285" width="0.0606%" height="15" fill="rgb(248,20,46)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1295.50"></text></g><g><title>sonic_rs::serde::ser::to_writer_pretty (3 samples, 0.06%)</title><rect x="99.2126%" y="1269" width="0.0606%" height="15" fill="rgb(252,94,11)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1279.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::serialize (3 samples, 0.06%)</title><rect x="99.2126%" y="1253" width="0.0606%" height="15" fill="rgb(236,163,8)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1263.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.06%)</title><rect x="99.2126%" y="1237" width="0.0606%" height="15" fill="rgb(217,221,45)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1247.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.06%)</title><rect x="99.2126%" y="1221" width="0.0606%" height="15" fill="rgb(238,38,17)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1231.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.06%)</title><rect x="99.2126%" y="1205" width="0.0606%" height="15" fill="rgb(242,210,23)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1215.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (3 samples, 0.06%)</title><rect x="99.2126%" y="1189" width="0.0606%" height="15" fill="rgb(250,86,53)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1199.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.06%)</title><rect x="99.2126%" y="1173" width="0.0606%" height="15" fill="rgb(223,168,25)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.06%)</title><rect x="99.2126%" y="1157" width="0.0606%" height="15" fill="rgb(251,189,4)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.06%)</title><rect x="99.2126%" y="1141" width="0.0606%" height="15" fill="rgb(245,19,28)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (3 samples, 0.06%)</title><rect x="99.2126%" y="1125" width="0.0606%" height="15" fill="rgb(207,10,34)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1135.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (3 samples, 0.06%)</title><rect x="99.2126%" y="1109" width="0.0606%" height="15" fill="rgb(235,153,31)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1119.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (3 samples, 0.06%)</title><rect x="99.2126%" y="1093" width="0.0606%" height="15" fill="rgb(228,72,37)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1103.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.06%)</title><rect x="99.2126%" y="1077" width="0.0606%" height="15" fill="rgb(215,15,16)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1087.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Performance&gt;::serialize (3 samples, 0.06%)</title><rect x="99.2126%" y="1061" width="0.0606%" height="15" fill="rgb(250,119,29)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1071.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.06%)</title><rect x="99.2126%" y="1045" width="0.0606%" height="15" fill="rgb(214,59,1)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1055.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.06%)</title><rect x="99.2126%" y="1029" width="0.0606%" height="15" fill="rgb(223,109,25)" fg:x="4914" fg:w="3"/><text x="99.4626%" y="1039.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect x="99.2328%" y="1013" width="0.0404%" height="15" fill="rgb(230,198,22)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="1023.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2 samples, 0.04%)</title><rect x="99.2328%" y="997" width="0.0404%" height="15" fill="rgb(245,184,46)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="1007.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.04%)</title><rect x="99.2328%" y="981" width="0.0404%" height="15" fill="rgb(253,73,16)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.04%)</title><rect x="99.2328%" y="965" width="0.0404%" height="15" fill="rgb(206,94,45)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="99.2328%" y="949" width="0.0404%" height="15" fill="rgb(236,83,27)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.04%)</title><rect x="99.2328%" y="933" width="0.0404%" height="15" fill="rgb(220,196,8)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="943.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.04%)</title><rect x="99.2328%" y="917" width="0.0404%" height="15" fill="rgb(254,185,14)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="927.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.04%)</title><rect x="99.2328%" y="901" width="0.0404%" height="15" fill="rgb(226,50,22)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="911.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect x="99.2328%" y="885" width="0.0404%" height="15" fill="rgb(253,147,0)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="895.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::serialize (2 samples, 0.04%)</title><rect x="99.2328%" y="869" width="0.0404%" height="15" fill="rgb(252,46,33)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="879.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect x="99.2328%" y="853" width="0.0404%" height="15" fill="rgb(242,22,54)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="863.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="99.2328%" y="837" width="0.0404%" height="15" fill="rgb(223,178,32)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="847.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect x="99.2328%" y="821" width="0.0404%" height="15" fill="rgb(214,106,53)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="831.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2 samples, 0.04%)</title><rect x="99.2328%" y="805" width="0.0404%" height="15" fill="rgb(232,65,50)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="815.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.04%)</title><rect x="99.2328%" y="789" width="0.0404%" height="15" fill="rgb(231,110,28)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.04%)</title><rect x="99.2328%" y="773" width="0.0404%" height="15" fill="rgb(216,71,40)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="99.2328%" y="757" width="0.0404%" height="15" fill="rgb(229,89,53)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.04%)</title><rect x="99.2328%" y="741" width="0.0404%" height="15" fill="rgb(210,124,14)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.04%)</title><rect x="99.2328%" y="725" width="0.0404%" height="15" fill="rgb(236,213,6)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="735.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.04%)</title><rect x="99.2328%" y="709" width="0.0404%" height="15" fill="rgb(228,41,5)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="719.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect x="99.2328%" y="693" width="0.0404%" height="15" fill="rgb(221,167,25)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="703.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Area&gt;::serialize (2 samples, 0.04%)</title><rect x="99.2328%" y="677" width="0.0404%" height="15" fill="rgb(228,144,37)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="687.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect x="99.2328%" y="661" width="0.0404%" height="15" fill="rgb(227,189,38)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="99.2328%" y="645" width="0.0404%" height="15" fill="rgb(218,8,2)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="655.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.04%)</title><rect x="99.2328%" y="629" width="0.0404%" height="15" fill="rgb(209,61,28)" fg:x="4915" fg:w="2"/><text x="99.4828%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="99.2530%" y="613" width="0.0202%" height="15" fill="rgb(233,140,39)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="623.50"></text></g><g><title>&lt;sonic_rs::serde::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="99.2530%" y="597" width="0.0202%" height="15" fill="rgb(251,66,48)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="607.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="99.2530%" y="581" width="0.0202%" height="15" fill="rgb(210,44,45)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="591.50"></text></g><g><title>sonic_rs::format::Formatter::write_string_fast (1 samples, 0.02%)</title><rect x="99.2530%" y="565" width="0.0202%" height="15" fill="rgb(214,136,46)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="575.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;u8&gt; as sonic_rs::writer::WriterExt&gt;::reserve_with (1 samples, 0.02%)</title><rect x="99.2530%" y="549" width="0.0202%" height="15" fill="rgb(207,130,50)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="559.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.2530%" y="533" width="0.0202%" height="15" fill="rgb(228,102,49)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="543.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="99.2530%" y="517" width="0.0202%" height="15" fill="rgb(253,55,1)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="99.2530%" y="501" width="0.0202%" height="15" fill="rgb(238,222,9)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="99.2530%" y="485" width="0.0202%" height="15" fill="rgb(246,99,6)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="99.2530%" y="469" width="0.0202%" height="15" fill="rgb(219,110,26)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="99.2530%" y="453" width="0.0202%" height="15" fill="rgb(239,160,33)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="463.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.2530%" y="437" width="0.0202%" height="15" fill="rgb(220,202,23)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="99.2530%" y="421" width="0.0202%" height="15" fill="rgb(208,80,26)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="431.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="99.2530%" y="405" width="0.0202%" height="15" fill="rgb(243,85,7)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="415.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect x="99.2530%" y="389" width="0.0202%" height="15" fill="rgb(228,77,47)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="399.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="99.2530%" y="373" width="0.0202%" height="15" fill="rgb(212,226,8)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="383.50"></text></g><g><title>iralloct (1 samples, 0.02%)</title><rect x="99.2530%" y="357" width="0.0202%" height="15" fill="rgb(241,120,54)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="367.50"></text></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.02%)</title><rect x="99.2530%" y="341" width="0.0202%" height="15" fill="rgb(226,80,16)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="351.50"></text></g><g><title>_rjem_je_large_ralloc (1 samples, 0.02%)</title><rect x="99.2530%" y="325" width="0.0202%" height="15" fill="rgb(240,76,13)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="99.2530%" y="309" width="0.0202%" height="15" fill="rgb(252,74,8)" fg:x="4916" fg:w="1"/><text x="99.5030%" y="319.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.2732%" y="1301" width="0.0202%" height="15" fill="rgb(244,155,2)" fg:x="4917" fg:w="1"/><text x="99.5232%" y="1311.50"></text></g><g><title>deserialize_struct::bench_twitter_Twitter (1 samples, 0.02%)</title><rect x="99.2732%" y="1285" width="0.0202%" height="15" fill="rgb(215,81,35)" fg:x="4917" fg:w="1"/><text x="99.5232%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.2934%" y="757" width="0.0202%" height="15" fill="rgb(206,55,2)" fg:x="4918" fg:w="1"/><text x="99.5434%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect x="99.2934%" y="741" width="0.0202%" height="15" fill="rgb(231,2,34)" fg:x="4918" fg:w="1"/><text x="99.5434%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.2934%" y="725" width="0.0202%" height="15" fill="rgb(242,176,48)" fg:x="4918" fg:w="1"/><text x="99.5434%" y="735.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.2934%" y="709" width="0.0202%" height="15" fill="rgb(249,31,36)" fg:x="4918" fg:w="1"/><text x="99.5434%" y="719.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.2934%" y="693" width="0.0202%" height="15" fill="rgb(205,18,17)" fg:x="4918" fg:w="1"/><text x="99.5434%" y="703.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="99.2934%" y="677" width="0.0202%" height="15" fill="rgb(254,130,5)" fg:x="4918" fg:w="1"/><text x="99.5434%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect x="99.2934%" y="661" width="0.0202%" height="15" fill="rgb(229,42,45)" fg:x="4918" fg:w="1"/><text x="99.5434%" y="671.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.2934%" y="645" width="0.0202%" height="15" fill="rgb(245,95,25)" fg:x="4918" fg:w="1"/><text x="99.5434%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.2934%" y="629" width="0.0202%" height="15" fill="rgb(249,193,38)" fg:x="4918" fg:w="1"/><text x="99.5434%" y="639.50"></text></g><g><title>core::cmp::PartialEq::ne (2 samples, 0.04%)</title><rect x="99.2934%" y="1285" width="0.0404%" height="15" fill="rgb(241,140,43)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1295.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="1269" width="0.0404%" height="15" fill="rgb(245,78,48)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1279.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="1253" width="0.0404%" height="15" fill="rgb(214,92,39)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="1237" width="0.0404%" height="15" fill="rgb(211,189,14)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.04%)</title><rect x="99.2934%" y="1221" width="0.0404%" height="15" fill="rgb(218,7,24)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="99.2934%" y="1205" width="0.0404%" height="15" fill="rgb(224,200,49)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.04%)</title><rect x="99.2934%" y="1189" width="0.0404%" height="15" fill="rgb(218,210,14)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (2 samples, 0.04%)</title><rect x="99.2934%" y="1173" width="0.0404%" height="15" fill="rgb(234,142,31)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1183.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="1157" width="0.0404%" height="15" fill="rgb(227,165,2)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="1141" width="0.0404%" height="15" fill="rgb(232,44,46)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1151.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="1125" width="0.0404%" height="15" fill="rgb(236,149,47)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1135.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="1109" width="0.0404%" height="15" fill="rgb(227,45,31)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1119.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="1093" width="0.0404%" height="15" fill="rgb(240,176,51)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1103.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.04%)</title><rect x="99.2934%" y="1077" width="0.0404%" height="15" fill="rgb(249,146,41)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.04%)</title><rect x="99.2934%" y="1061" width="0.0404%" height="15" fill="rgb(213,208,4)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="99.2934%" y="1045" width="0.0404%" height="15" fill="rgb(245,84,36)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.04%)</title><rect x="99.2934%" y="1029" width="0.0404%" height="15" fill="rgb(254,84,18)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1039.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (2 samples, 0.04%)</title><rect x="99.2934%" y="1013" width="0.0404%" height="15" fill="rgb(225,38,54)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="997" width="0.0404%" height="15" fill="rgb(246,50,30)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="1007.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="981" width="0.0404%" height="15" fill="rgb(246,148,9)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="991.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="965" width="0.0404%" height="15" fill="rgb(223,75,4)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="949" width="0.0404%" height="15" fill="rgb(239,148,41)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.04%)</title><rect x="99.2934%" y="933" width="0.0404%" height="15" fill="rgb(205,195,3)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="99.2934%" y="917" width="0.0404%" height="15" fill="rgb(254,161,1)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.04%)</title><rect x="99.2934%" y="901" width="0.0404%" height="15" fill="rgb(211,229,8)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (2 samples, 0.04%)</title><rect x="99.2934%" y="885" width="0.0404%" height="15" fill="rgb(220,97,9)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="895.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="869" width="0.0404%" height="15" fill="rgb(240,218,8)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="853" width="0.0404%" height="15" fill="rgb(250,44,0)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="863.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="837" width="0.0404%" height="15" fill="rgb(236,41,53)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="847.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="821" width="0.0404%" height="15" fill="rgb(218,227,13)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="99.2934%" y="805" width="0.0404%" height="15" fill="rgb(217,94,32)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.04%)</title><rect x="99.2934%" y="789" width="0.0404%" height="15" fill="rgb(213,217,12)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="99.2934%" y="773" width="0.0404%" height="15" fill="rgb(229,13,46)" fg:x="4918" fg:w="2"/><text x="99.5434%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect x="99.3135%" y="757" width="0.0202%" height="15" fill="rgb(243,139,5)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.02%)</title><rect x="99.3135%" y="741" width="0.0202%" height="15" fill="rgb(249,38,45)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="751.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (1 samples, 0.02%)</title><rect x="99.3135%" y="725" width="0.0202%" height="15" fill="rgb(216,70,11)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="99.3135%" y="709" width="0.0202%" height="15" fill="rgb(253,101,25)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="719.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.3135%" y="693" width="0.0202%" height="15" fill="rgb(207,197,30)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="703.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.3135%" y="677" width="0.0202%" height="15" fill="rgb(238,87,13)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.3135%" y="661" width="0.0202%" height="15" fill="rgb(215,155,8)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="99.3135%" y="645" width="0.0202%" height="15" fill="rgb(239,166,38)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="99.3135%" y="629" width="0.0202%" height="15" fill="rgb(240,194,35)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.3135%" y="613" width="0.0202%" height="15" fill="rgb(219,10,44)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect x="99.3135%" y="597" width="0.0202%" height="15" fill="rgb(251,220,35)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.3135%" y="581" width="0.0202%" height="15" fill="rgb(218,117,13)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="591.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3135%" y="565" width="0.0202%" height="15" fill="rgb(221,213,40)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="575.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3135%" y="549" width="0.0202%" height="15" fill="rgb(251,224,35)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="99.3135%" y="533" width="0.0202%" height="15" fill="rgb(241,33,39)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect x="99.3135%" y="517" width="0.0202%" height="15" fill="rgb(222,74,17)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="527.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3135%" y="501" width="0.0202%" height="15" fill="rgb(225,103,0)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.3135%" y="485" width="0.0202%" height="15" fill="rgb(240,0,12)" fg:x="4919" fg:w="1"/><text x="99.5635%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="1285" width="0.0404%" height="15" fill="rgb(233,213,37)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="1269" width="0.0404%" height="15" fill="rgb(225,84,52)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="1253" width="0.0404%" height="15" fill="rgb(247,160,51)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="99.3337%" y="1237" width="0.0404%" height="15" fill="rgb(244,60,51)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1247.50"></text></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect x="99.3337%" y="1221" width="0.0404%" height="15" fill="rgb(233,114,7)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="1205" width="0.0404%" height="15" fill="rgb(246,136,16)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="99.3337%" y="1189" width="0.0404%" height="15" fill="rgb(243,114,45)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1199.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="99.3337%" y="1173" width="0.0404%" height="15" fill="rgb(247,183,43)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="1157" width="0.0404%" height="15" fill="rgb(251,210,42)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="1141" width="0.0404%" height="15" fill="rgb(221,88,35)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="1125" width="0.0404%" height="15" fill="rgb(242,21,20)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="99.3337%" y="1109" width="0.0404%" height="15" fill="rgb(233,226,36)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="1093" width="0.0404%" height="15" fill="rgb(243,189,34)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="1077" width="0.0404%" height="15" fill="rgb(207,145,50)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="1061" width="0.0404%" height="15" fill="rgb(242,1,50)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="1045" width="0.0404%" height="15" fill="rgb(231,65,32)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="99.3337%" y="1029" width="0.0404%" height="15" fill="rgb(208,68,49)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1039.50"></text></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect x="99.3337%" y="1013" width="0.0404%" height="15" fill="rgb(253,54,49)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="997" width="0.0404%" height="15" fill="rgb(245,186,24)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="99.3337%" y="981" width="0.0404%" height="15" fill="rgb(209,2,41)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="991.50"></text></g><g><title>?? (2 samples, 0.04%)</title><rect x="99.3337%" y="965" width="0.0404%" height="15" fill="rgb(242,208,54)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="949" width="0.0404%" height="15" fill="rgb(225,9,51)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.04%)</title><rect x="99.3337%" y="933" width="0.0404%" height="15" fill="rgb(207,207,25)" fg:x="4920" fg:w="2"/><text x="99.5837%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3539%" y="917" width="0.0202%" height="15" fill="rgb(253,96,18)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3539%" y="901" width="0.0202%" height="15" fill="rgb(252,215,20)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.3539%" y="885" width="0.0202%" height="15" fill="rgb(245,227,26)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="895.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="99.3539%" y="869" width="0.0202%" height="15" fill="rgb(241,208,0)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3539%" y="853" width="0.0202%" height="15" fill="rgb(224,130,10)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.3539%" y="837" width="0.0202%" height="15" fill="rgb(237,29,0)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="847.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3539%" y="821" width="0.0202%" height="15" fill="rgb(219,27,41)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3539%" y="805" width="0.0202%" height="15" fill="rgb(245,101,19)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.02%)</title><rect x="99.3539%" y="789" width="0.0202%" height="15" fill="rgb(243,44,37)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3539%" y="773" width="0.0202%" height="15" fill="rgb(228,213,43)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3539%" y="757" width="0.0202%" height="15" fill="rgb(219,163,21)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.3539%" y="741" width="0.0202%" height="15" fill="rgb(234,86,24)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="751.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="99.3539%" y="725" width="0.0202%" height="15" fill="rgb(225,10,24)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3539%" y="709" width="0.0202%" height="15" fill="rgb(218,109,7)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.3539%" y="693" width="0.0202%" height="15" fill="rgb(210,20,26)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="703.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3539%" y="677" width="0.0202%" height="15" fill="rgb(216,18,1)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="687.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3539%" y="661" width="0.0202%" height="15" fill="rgb(206,163,23)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="99.3539%" y="645" width="0.0202%" height="15" fill="rgb(229,150,31)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3539%" y="629" width="0.0202%" height="15" fill="rgb(231,10,5)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="99.3539%" y="613" width="0.0202%" height="15" fill="rgb(250,40,50)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.3539%" y="597" width="0.0202%" height="15" fill="rgb(217,119,7)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="99.3539%" y="581" width="0.0202%" height="15" fill="rgb(245,214,40)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="99.3539%" y="565" width="0.0202%" height="15" fill="rgb(216,187,1)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="575.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="99.3539%" y="549" width="0.0202%" height="15" fill="rgb(237,146,21)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="559.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="99.3539%" y="533" width="0.0202%" height="15" fill="rgb(210,174,47)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="543.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="99.3539%" y="517" width="0.0202%" height="15" fill="rgb(218,111,39)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="527.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="99.3539%" y="501" width="0.0202%" height="15" fill="rgb(224,95,19)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="511.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="99.3539%" y="485" width="0.0202%" height="15" fill="rgb(234,15,38)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="495.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="99.3539%" y="469" width="0.0202%" height="15" fill="rgb(246,56,12)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="479.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="99.3539%" y="453" width="0.0202%" height="15" fill="rgb(247,16,17)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="463.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="99.3539%" y="437" width="0.0202%" height="15" fill="rgb(215,151,11)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="447.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="99.3539%" y="421" width="0.0202%" height="15" fill="rgb(225,16,24)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="431.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="99.3539%" y="405" width="0.0202%" height="15" fill="rgb(217,117,5)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="415.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="99.3539%" y="389" width="0.0202%" height="15" fill="rgb(246,187,53)" fg:x="4921" fg:w="1"/><text x="99.6039%" y="399.50"></text></g><g><title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect x="99.3741%" y="821" width="0.0202%" height="15" fill="rgb(241,71,40)" fg:x="4922" fg:w="1"/><text x="99.6241%" y="831.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect x="99.3741%" y="805" width="0.0202%" height="15" fill="rgb(231,67,39)" fg:x="4922" fg:w="1"/><text x="99.6241%" y="815.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="99.3741%" y="789" width="0.0202%" height="15" fill="rgb(222,120,24)" fg:x="4922" fg:w="1"/><text x="99.6241%" y="799.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.3741%" y="773" width="0.0202%" height="15" fill="rgb(248,3,3)" fg:x="4922" fg:w="1"/><text x="99.6241%" y="783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.3741%" y="757" width="0.0202%" height="15" fill="rgb(228,218,5)" fg:x="4922" fg:w="1"/><text x="99.6241%" y="767.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect x="99.3741%" y="741" width="0.0202%" height="15" fill="rgb(212,202,43)" fg:x="4922" fg:w="1"/><text x="99.6241%" y="751.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="99.3741%" y="725" width="0.0202%" height="15" fill="rgb(235,183,2)" fg:x="4922" fg:w="1"/><text x="99.6241%" y="735.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="99.3741%" y="709" width="0.0202%" height="15" fill="rgb(230,165,10)" fg:x="4922" fg:w="1"/><text x="99.6241%" y="719.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="99.3741%" y="693" width="0.0202%" height="15" fill="rgb(219,54,40)" fg:x="4922" fg:w="1"/><text x="99.6241%" y="703.50"></text></g><g><title>serde::de::MapAccess::next_entry (2 samples, 0.04%)</title><rect x="99.3741%" y="933" width="0.0404%" height="15" fill="rgb(244,73,9)" fg:x="4922" fg:w="2"/><text x="99.6241%" y="943.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2 samples, 0.04%)</title><rect x="99.3741%" y="917" width="0.0404%" height="15" fill="rgb(212,32,45)" fg:x="4922" fg:w="2"/><text x="99.6241%" y="927.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.04%)</title><rect x="99.3741%" y="901" width="0.0404%" height="15" fill="rgb(205,58,31)" fg:x="4922" fg:w="2"/><text x="99.6241%" y="911.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.3741%" y="885" width="0.0404%" height="15" fill="rgb(250,120,43)" fg:x="4922" fg:w="2"/><text x="99.6241%" y="895.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.3741%" y="869" width="0.0404%" height="15" fill="rgb(235,13,10)" fg:x="4922" fg:w="2"/><text x="99.6241%" y="879.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.04%)</title><rect x="99.3741%" y="853" width="0.0404%" height="15" fill="rgb(232,219,31)" fg:x="4922" fg:w="2"/><text x="99.6241%" y="863.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.04%)</title><rect x="99.3741%" y="837" width="0.0404%" height="15" fill="rgb(218,157,51)" fg:x="4922" fg:w="2"/><text x="99.6241%" y="847.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.3943%" y="821" width="0.0202%" height="15" fill="rgb(211,91,52)" fg:x="4923" fg:w="1"/><text x="99.6443%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="99.3943%" y="805" width="0.0202%" height="15" fill="rgb(240,173,1)" fg:x="4923" fg:w="1"/><text x="99.6443%" y="815.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3943%" y="789" width="0.0202%" height="15" fill="rgb(248,20,47)" fg:x="4923" fg:w="1"/><text x="99.6443%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3943%" y="773" width="0.0202%" height="15" fill="rgb(217,221,40)" fg:x="4923" fg:w="1"/><text x="99.6443%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3943%" y="757" width="0.0202%" height="15" fill="rgb(226,149,51)" fg:x="4923" fg:w="1"/><text x="99.6443%" y="767.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3943%" y="741" width="0.0202%" height="15" fill="rgb(252,193,7)" fg:x="4923" fg:w="1"/><text x="99.6443%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="99.3943%" y="725" width="0.0202%" height="15" fill="rgb(205,123,0)" fg:x="4923" fg:w="1"/><text x="99.6443%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="99.3943%" y="709" width="0.0202%" height="15" fill="rgb(233,173,25)" fg:x="4923" fg:w="1"/><text x="99.6443%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1 samples, 0.02%)</title><rect x="99.3943%" y="693" width="0.0202%" height="15" fill="rgb(216,63,32)" fg:x="4923" fg:w="1"/><text x="99.6443%" y="703.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (1 samples, 0.02%)</title><rect x="99.3943%" y="677" width="0.0202%" height="15" fill="rgb(209,56,45)" fg:x="4923" fg:w="1"/><text x="99.6443%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="99.3943%" y="661" width="0.0202%" height="15" fill="rgb(226,111,49)" fg:x="4923" fg:w="1"/><text x="99.6443%" y="671.50"></text></g><g><title>serde::de::MapAccess::next_entry (3 samples, 0.06%)</title><rect x="99.3741%" y="1045" width="0.0606%" height="15" fill="rgb(244,181,21)" fg:x="4922" fg:w="3"/><text x="99.6241%" y="1055.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3 samples, 0.06%)</title><rect x="99.3741%" y="1029" width="0.0606%" height="15" fill="rgb(222,126,15)" fg:x="4922" fg:w="3"/><text x="99.6241%" y="1039.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.06%)</title><rect x="99.3741%" y="1013" width="0.0606%" height="15" fill="rgb(222,95,17)" fg:x="4922" fg:w="3"/><text x="99.6241%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.06%)</title><rect x="99.3741%" y="997" width="0.0606%" height="15" fill="rgb(254,46,5)" fg:x="4922" fg:w="3"/><text x="99.6241%" y="1007.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.06%)</title><rect x="99.3741%" y="981" width="0.0606%" height="15" fill="rgb(236,216,35)" fg:x="4922" fg:w="3"/><text x="99.6241%" y="991.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.06%)</title><rect x="99.3741%" y="965" width="0.0606%" height="15" fill="rgb(217,187,26)" fg:x="4922" fg:w="3"/><text x="99.6241%" y="975.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.06%)</title><rect x="99.3741%" y="949" width="0.0606%" height="15" fill="rgb(207,192,25)" fg:x="4922" fg:w="3"/><text x="99.6241%" y="959.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4145%" y="933" width="0.0202%" height="15" fill="rgb(253,135,27)" fg:x="4924" fg:w="1"/><text x="99.6645%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="99.4145%" y="917" width="0.0202%" height="15" fill="rgb(211,122,29)" fg:x="4924" fg:w="1"/><text x="99.6645%" y="927.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4145%" y="901" width="0.0202%" height="15" fill="rgb(233,162,40)" fg:x="4924" fg:w="1"/><text x="99.6645%" y="911.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4145%" y="885" width="0.0202%" height="15" fill="rgb(222,184,47)" fg:x="4924" fg:w="1"/><text x="99.6645%" y="895.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4145%" y="869" width="0.0202%" height="15" fill="rgb(249,99,23)" fg:x="4924" fg:w="1"/><text x="99.6645%" y="879.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4145%" y="853" width="0.0202%" height="15" fill="rgb(214,60,12)" fg:x="4924" fg:w="1"/><text x="99.6645%" y="863.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (1 samples, 0.02%)</title><rect x="99.4145%" y="837" width="0.0202%" height="15" fill="rgb(250,229,36)" fg:x="4924" fg:w="1"/><text x="99.6645%" y="847.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.02%)</title><rect x="99.4145%" y="821" width="0.0202%" height="15" fill="rgb(232,195,10)" fg:x="4924" fg:w="1"/><text x="99.6645%" y="831.50"></text></g><g><title>deserialize_struct::diff_json (8 samples, 0.16%)</title><rect x="99.2934%" y="1301" width="0.1615%" height="15" fill="rgb(205,213,31)" fg:x="4918" fg:w="8"/><text x="99.5434%" y="1311.50"></text></g><g><title>serde_json::de::from_str (4 samples, 0.08%)</title><rect x="99.3741%" y="1285" width="0.0808%" height="15" fill="rgb(237,43,8)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1295.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.08%)</title><rect x="99.3741%" y="1269" width="0.0808%" height="15" fill="rgb(216,208,3)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1279.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.3741%" y="1253" width="0.0808%" height="15" fill="rgb(228,179,44)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1263.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.08%)</title><rect x="99.3741%" y="1237" width="0.0808%" height="15" fill="rgb(230,192,27)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1247.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.08%)</title><rect x="99.3741%" y="1221" width="0.0808%" height="15" fill="rgb(251,30,38)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1231.50"></text></g><g><title>serde::de::MapAccess::next_value (4 samples, 0.08%)</title><rect x="99.3741%" y="1205" width="0.0808%" height="15" fill="rgb(246,55,52)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1215.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.3741%" y="1189" width="0.0808%" height="15" fill="rgb(249,79,26)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1199.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.08%)</title><rect x="99.3741%" y="1173" width="0.0808%" height="15" fill="rgb(220,202,16)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1183.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4 samples, 0.08%)</title><rect x="99.3741%" y="1157" width="0.0808%" height="15" fill="rgb(250,170,23)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1167.50"></text></g><g><title>serde::de::SeqAccess::next_element (4 samples, 0.08%)</title><rect x="99.3741%" y="1141" width="0.0808%" height="15" fill="rgb(230,7,37)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1151.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4 samples, 0.08%)</title><rect x="99.3741%" y="1125" width="0.0808%" height="15" fill="rgb(213,71,1)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1135.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.3741%" y="1109" width="0.0808%" height="15" fill="rgb(227,87,39)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1119.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.08%)</title><rect x="99.3741%" y="1093" width="0.0808%" height="15" fill="rgb(210,41,29)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1103.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.08%)</title><rect x="99.3741%" y="1077" width="0.0808%" height="15" fill="rgb(206,191,31)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1087.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.08%)</title><rect x="99.3741%" y="1061" width="0.0808%" height="15" fill="rgb(247,75,54)" fg:x="4922" fg:w="4"/><text x="99.6241%" y="1071.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4347%" y="1045" width="0.0202%" height="15" fill="rgb(208,54,50)" fg:x="4925" fg:w="1"/><text x="99.6847%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="99.4347%" y="1029" width="0.0202%" height="15" fill="rgb(214,90,37)" fg:x="4925" fg:w="1"/><text x="99.6847%" y="1039.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4347%" y="1013" width="0.0202%" height="15" fill="rgb(220,132,6)" fg:x="4925" fg:w="1"/><text x="99.6847%" y="1023.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4347%" y="997" width="0.0202%" height="15" fill="rgb(213,167,7)" fg:x="4925" fg:w="1"/><text x="99.6847%" y="1007.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4347%" y="981" width="0.0202%" height="15" fill="rgb(243,36,27)" fg:x="4925" fg:w="1"/><text x="99.6847%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="99.4347%" y="965" width="0.0202%" height="15" fill="rgb(235,147,12)" fg:x="4925" fg:w="1"/><text x="99.6847%" y="975.50"></text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect x="99.4549%" y="1029" width="0.0202%" height="15" fill="rgb(212,198,44)" fg:x="4926" fg:w="1"/><text x="99.7049%" y="1039.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="99.4549%" y="1013" width="0.0202%" height="15" fill="rgb(218,68,50)" fg:x="4926" fg:w="1"/><text x="99.7049%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4549%" y="997" width="0.0202%" height="15" fill="rgb(224,79,48)" fg:x="4926" fg:w="1"/><text x="99.7049%" y="1007.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4549%" y="981" width="0.0202%" height="15" fill="rgb(213,191,50)" fg:x="4926" fg:w="1"/><text x="99.7049%" y="991.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect x="99.4549%" y="965" width="0.0202%" height="15" fill="rgb(254,146,10)" fg:x="4926" fg:w="1"/><text x="99.7049%" y="975.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="99.4549%" y="949" width="0.0202%" height="15" fill="rgb(215,175,11)" fg:x="4926" fg:w="1"/><text x="99.7049%" y="959.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="99.4549%" y="933" width="0.0202%" height="15" fill="rgb(207,49,7)" fg:x="4926" fg:w="1"/><text x="99.7049%" y="943.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4549%" y="917" width="0.0202%" height="15" fill="rgb(234,144,29)" fg:x="4926" fg:w="1"/><text x="99.7049%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="99.4549%" y="901" width="0.0202%" height="15" fill="rgb(213,222,48)" fg:x="4926" fg:w="1"/><text x="99.7049%" y="911.50"></text></g><g><title>serde_json::read::as_str (1 samples, 0.02%)</title><rect x="99.4549%" y="885" width="0.0202%" height="15" fill="rgb(222,8,6)" fg:x="4926" fg:w="1"/><text x="99.7049%" y="895.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.02%)</title><rect x="99.4549%" y="869" width="0.0202%" height="15" fill="rgb(221,114,49)" fg:x="4926" fg:w="1"/><text x="99.7049%" y="879.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.02%)</title><rect x="99.4549%" y="853" width="0.0202%" height="15" fill="rgb(250,140,42)" fg:x="4926" fg:w="1"/><text x="99.7049%" y="863.50"></text></g><g><title>serde_json::de::from_slice (2 samples, 0.04%)</title><rect x="99.4549%" y="1301" width="0.0404%" height="15" fill="rgb(250,150,27)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1311.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.04%)</title><rect x="99.4549%" y="1285" width="0.0404%" height="15" fill="rgb(252,159,3)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1295.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.4549%" y="1269" width="0.0404%" height="15" fill="rgb(241,182,3)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1279.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect x="99.4549%" y="1253" width="0.0404%" height="15" fill="rgb(236,3,9)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1263.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.04%)</title><rect x="99.4549%" y="1237" width="0.0404%" height="15" fill="rgb(223,227,51)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1247.50"></text></g><g><title>serde::de::MapAccess::next_value (2 samples, 0.04%)</title><rect x="99.4549%" y="1221" width="0.0404%" height="15" fill="rgb(232,133,30)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1231.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.04%)</title><rect x="99.4549%" y="1205" width="0.0404%" height="15" fill="rgb(209,93,27)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1215.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.4549%" y="1189" width="0.0404%" height="15" fill="rgb(208,108,34)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1199.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.4549%" y="1173" width="0.0404%" height="15" fill="rgb(215,189,13)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1183.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2 samples, 0.04%)</title><rect x="99.4549%" y="1157" width="0.0404%" height="15" fill="rgb(206,88,23)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1167.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.04%)</title><rect x="99.4549%" y="1141" width="0.0404%" height="15" fill="rgb(240,173,0)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1151.50"></text></g><g><title>serde::de::SeqAccess::next_element (2 samples, 0.04%)</title><rect x="99.4549%" y="1125" width="0.0404%" height="15" fill="rgb(223,106,52)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1135.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.04%)</title><rect x="99.4549%" y="1109" width="0.0404%" height="15" fill="rgb(206,130,16)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1119.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.4549%" y="1093" width="0.0404%" height="15" fill="rgb(220,54,25)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1103.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.4549%" y="1077" width="0.0404%" height="15" fill="rgb(210,4,38)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1087.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect x="99.4549%" y="1061" width="0.0404%" height="15" fill="rgb(238,94,39)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1071.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.04%)</title><rect x="99.4549%" y="1045" width="0.0404%" height="15" fill="rgb(234,124,34)" fg:x="4926" fg:w="2"/><text x="99.7049%" y="1055.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="99.4751%" y="1029" width="0.0202%" height="15" fill="rgb(221,91,40)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="1039.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="99.4751%" y="1013" width="0.0202%" height="15" fill="rgb(246,53,28)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4751%" y="997" width="0.0202%" height="15" fill="rgb(229,109,7)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="1007.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4751%" y="981" width="0.0202%" height="15" fill="rgb(249,117,8)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="991.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.02%)</title><rect x="99.4751%" y="965" width="0.0202%" height="15" fill="rgb(210,181,1)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="975.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.02%)</title><rect x="99.4751%" y="949" width="0.0202%" height="15" fill="rgb(211,66,1)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="959.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4751%" y="933" width="0.0202%" height="15" fill="rgb(221,90,14)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="943.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4751%" y="917" width="0.0202%" height="15" fill="rgb(219,222,44)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.4751%" y="901" width="0.0202%" height="15" fill="rgb(246,34,33)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="911.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.4751%" y="885" width="0.0202%" height="15" fill="rgb(227,135,41)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="895.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="99.4751%" y="869" width="0.0202%" height="15" fill="rgb(226,15,14)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="879.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="99.4751%" y="853" width="0.0202%" height="15" fill="rgb(236,148,47)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4751%" y="837" width="0.0202%" height="15" fill="rgb(233,162,52)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="847.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4751%" y="821" width="0.0202%" height="15" fill="rgb(244,35,28)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="831.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.4751%" y="805" width="0.0202%" height="15" fill="rgb(205,121,10)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="815.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.4751%" y="789" width="0.0202%" height="15" fill="rgb(250,58,18)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="799.50"></text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect x="99.4751%" y="773" width="0.0202%" height="15" fill="rgb(216,37,13)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="783.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="99.4751%" y="757" width="0.0202%" height="15" fill="rgb(221,215,42)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="767.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4751%" y="741" width="0.0202%" height="15" fill="rgb(217,214,19)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="751.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4751%" y="725" width="0.0202%" height="15" fill="rgb(233,139,13)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="735.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="99.4751%" y="709" width="0.0202%" height="15" fill="rgb(247,168,23)" fg:x="4927" fg:w="1"/><text x="99.7251%" y="719.50"></text></g><g><title>serde_json::ser::to_string_pretty (1 samples, 0.02%)</title><rect x="99.4953%" y="1301" width="0.0202%" height="15" fill="rgb(207,202,1)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1311.50"></text></g><g><title>serde_json::ser::to_vec_pretty (1 samples, 0.02%)</title><rect x="99.4953%" y="1285" width="0.0202%" height="15" fill="rgb(220,155,48)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1295.50"></text></g><g><title>serde_json::ser::to_writer_pretty (1 samples, 0.02%)</title><rect x="99.4953%" y="1269" width="0.0202%" height="15" fill="rgb(250,43,26)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1279.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Twitter&gt;::serialize (1 samples, 0.02%)</title><rect x="99.4953%" y="1253" width="0.0202%" height="15" fill="rgb(212,190,23)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1263.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.4953%" y="1237" width="0.0202%" height="15" fill="rgb(216,39,24)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1247.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.4953%" y="1221" width="0.0202%" height="15" fill="rgb(252,113,16)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1231.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="99.4953%" y="1205" width="0.0202%" height="15" fill="rgb(208,113,19)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1215.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="99.4953%" y="1189" width="0.0202%" height="15" fill="rgb(234,107,25)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1199.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.02%)</title><rect x="99.4953%" y="1173" width="0.0202%" height="15" fill="rgb(234,217,51)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect x="99.4953%" y="1157" width="0.0202%" height="15" fill="rgb(251,29,42)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="99.4953%" y="1141" width="0.0202%" height="15" fill="rgb(221,62,51)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (1 samples, 0.02%)</title><rect x="99.4953%" y="1125" width="0.0202%" height="15" fill="rgb(240,192,43)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1135.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (1 samples, 0.02%)</title><rect x="99.4953%" y="1109" width="0.0202%" height="15" fill="rgb(224,157,47)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1119.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.02%)</title><rect x="99.4953%" y="1093" width="0.0202%" height="15" fill="rgb(226,84,45)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1103.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="99.4953%" y="1077" width="0.0202%" height="15" fill="rgb(208,207,23)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1087.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Status&gt;::serialize (1 samples, 0.02%)</title><rect x="99.4953%" y="1061" width="0.0202%" height="15" fill="rgb(253,34,51)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1071.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.4953%" y="1045" width="0.0202%" height="15" fill="rgb(227,26,34)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1055.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.4953%" y="1029" width="0.0202%" height="15" fill="rgb(245,75,19)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1039.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="99.4953%" y="1013" width="0.0202%" height="15" fill="rgb(250,191,31)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1023.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::User&gt;::serialize (1 samples, 0.02%)</title><rect x="99.4953%" y="997" width="0.0202%" height="15" fill="rgb(224,11,50)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="1007.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.4953%" y="981" width="0.0202%" height="15" fill="rgb(231,171,7)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="991.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.4953%" y="965" width="0.0202%" height="15" fill="rgb(252,214,10)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="975.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="99.4953%" y="949" width="0.0202%" height="15" fill="rgb(249,45,46)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="959.50"></text></g><g><title>&lt;serde_json::ser::PrettyFormatter as serde_json::ser::Formatter&gt;::begin_object_value (1 samples, 0.02%)</title><rect x="99.4953%" y="933" width="0.0202%" height="15" fill="rgb(240,173,7)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="99.4953%" y="917" width="0.0202%" height="15" fill="rgb(235,214,13)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="99.4953%" y="901" width="0.0202%" height="15" fill="rgb(245,156,8)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="911.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4953%" y="885" width="0.0202%" height="15" fill="rgb(235,46,12)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="99.4953%" y="869" width="0.0202%" height="15" fill="rgb(221,81,14)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="879.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4953%" y="853" width="0.0202%" height="15" fill="rgb(238,207,9)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="863.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4953%" y="837" width="0.0202%" height="15" fill="rgb(224,129,35)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="847.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4953%" y="821" width="0.0202%" height="15" fill="rgb(243,218,34)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="831.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Status&gt;::serialize (1 samples, 0.02%)</title><rect x="99.4953%" y="805" width="0.0202%" height="15" fill="rgb(220,166,13)" fg:x="4928" fg:w="1"/><text x="99.7453%" y="815.50"></text></g><g><title>sonic_rs::serde::de::from_slice (1 samples, 0.02%)</title><rect x="99.5154%" y="1301" width="0.0202%" height="15" fill="rgb(227,167,49)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1311.50"></text></g><g><title>sonic_rs::serde::de::from_trait (1 samples, 0.02%)</title><rect x="99.5154%" y="1285" width="0.0202%" height="15" fill="rgb(234,142,12)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1295.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5154%" y="1269" width="0.0202%" height="15" fill="rgb(207,100,48)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1279.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.5154%" y="1253" width="0.0202%" height="15" fill="rgb(210,25,14)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1263.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.5154%" y="1237" width="0.0202%" height="15" fill="rgb(246,116,27)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1247.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect x="99.5154%" y="1221" width="0.0202%" height="15" fill="rgb(214,193,42)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1231.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="99.5154%" y="1205" width="0.0202%" height="15" fill="rgb(214,122,8)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1215.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5154%" y="1189" width="0.0202%" height="15" fill="rgb(244,173,18)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1199.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5154%" y="1173" width="0.0202%" height="15" fill="rgb(232,68,19)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1183.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect x="99.5154%" y="1157" width="0.0202%" height="15" fill="rgb(236,224,1)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1167.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="99.5154%" y="1141" width="0.0202%" height="15" fill="rgb(240,11,8)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1151.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="99.5154%" y="1125" width="0.0202%" height="15" fill="rgb(244,159,20)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1135.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="99.5154%" y="1109" width="0.0202%" height="15" fill="rgb(240,223,54)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1119.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5154%" y="1093" width="0.0202%" height="15" fill="rgb(237,146,5)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1103.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5154%" y="1077" width="0.0202%" height="15" fill="rgb(218,221,32)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1087.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.5154%" y="1061" width="0.0202%" height="15" fill="rgb(244,96,26)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1071.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.5154%" y="1045" width="0.0202%" height="15" fill="rgb(245,184,37)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1055.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect x="99.5154%" y="1029" width="0.0202%" height="15" fill="rgb(248,91,47)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1039.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="99.5154%" y="1013" width="0.0202%" height="15" fill="rgb(243,199,8)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5154%" y="997" width="0.0202%" height="15" fill="rgb(249,12,15)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="1007.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5154%" y="981" width="0.0202%" height="15" fill="rgb(245,97,12)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="991.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.5154%" y="965" width="0.0202%" height="15" fill="rgb(244,61,1)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="975.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.5154%" y="949" width="0.0202%" height="15" fill="rgb(222,194,10)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="959.50"></text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect x="99.5154%" y="933" width="0.0202%" height="15" fill="rgb(226,178,8)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="943.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="99.5154%" y="917" width="0.0202%" height="15" fill="rgb(241,32,34)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="927.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.5154%" y="901" width="0.0202%" height="15" fill="rgb(254,26,6)" fg:x="4929" fg:w="1"/><text x="99.7654%" y="911.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::StatusEntities&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5356%" y="997" width="0.0202%" height="15" fill="rgb(249,71,11)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="1007.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.5356%" y="981" width="0.0202%" height="15" fill="rgb(232,170,27)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="991.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.5356%" y="965" width="0.0202%" height="15" fill="rgb(214,223,17)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="975.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="99.5356%" y="949" width="0.0202%" height="15" fill="rgb(250,18,15)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="959.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5356%" y="933" width="0.0202%" height="15" fill="rgb(212,153,51)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="943.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.02%)</title><rect x="99.5356%" y="917" width="0.0202%" height="15" fill="rgb(219,194,12)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect x="99.5356%" y="901" width="0.0202%" height="15" fill="rgb(212,58,17)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="99.5356%" y="885" width="0.0202%" height="15" fill="rgb(254,5,10)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (1 samples, 0.02%)</title><rect x="99.5356%" y="869" width="0.0202%" height="15" fill="rgb(246,91,7)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="879.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (1 samples, 0.02%)</title><rect x="99.5356%" y="853" width="0.0202%" height="15" fill="rgb(218,108,49)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="863.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.02%)</title><rect x="99.5356%" y="837" width="0.0202%" height="15" fill="rgb(238,123,20)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5356%" y="821" width="0.0202%" height="15" fill="rgb(231,69,23)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="831.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::UserMention&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5356%" y="805" width="0.0202%" height="15" fill="rgb(230,209,3)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="815.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.5356%" y="789" width="0.0202%" height="15" fill="rgb(231,19,0)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="799.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.5356%" y="773" width="0.0202%" height="15" fill="rgb(226,192,25)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="783.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="99.5356%" y="757" width="0.0202%" height="15" fill="rgb(223,175,53)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="767.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5356%" y="741" width="0.0202%" height="15" fill="rgb(248,35,51)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="751.50"></text></g><g><title>&lt;sonic_rs::serde::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="99.5356%" y="725" width="0.0202%" height="15" fill="rgb(230,37,26)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="735.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="99.5356%" y="709" width="0.0202%" height="15" fill="rgb(206,120,22)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="719.50"></text></g><g><title>sonic_rs::format::Formatter::write_string_fast (1 samples, 0.02%)</title><rect x="99.5356%" y="693" width="0.0202%" height="15" fill="rgb(207,165,28)" fg:x="4930" fg:w="1"/><text x="99.7856%" y="703.50"></text></g><g><title>__libc_start_main (968 samples, 19.54%)</title><rect x="80.0323%" y="1573" width="19.5437%" height="15" fill="rgb(226,23,46)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1583.50">__libc_start_main</text></g><g><title>main (968 samples, 19.54%)</title><rect x="80.0323%" y="1557" width="19.5437%" height="15" fill="rgb(208,130,44)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1567.50">main</text></g><g><title>std::rt::lang_start_internal (968 samples, 19.54%)</title><rect x="80.0323%" y="1541" width="19.5437%" height="15" fill="rgb(231,67,8)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1551.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (968 samples, 19.54%)</title><rect x="80.0323%" y="1525" width="19.5437%" height="15" fill="rgb(205,183,22)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1535.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (968 samples, 19.54%)</title><rect x="80.0323%" y="1509" width="19.5437%" height="15" fill="rgb(224,47,9)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1519.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (968 samples, 19.54%)</title><rect x="80.0323%" y="1493" width="19.5437%" height="15" fill="rgb(250,183,49)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1503.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (968 samples, 19.54%)</title><rect x="80.0323%" y="1477" width="19.5437%" height="15" fill="rgb(220,151,39)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1487.50">std::rt::lang_start_internal::_..</text></g><g><title>std::panic::catch_unwind (968 samples, 19.54%)</title><rect x="80.0323%" y="1461" width="19.5437%" height="15" fill="rgb(220,118,20)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1471.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (968 samples, 19.54%)</title><rect x="80.0323%" y="1445" width="19.5437%" height="15" fill="rgb(231,65,51)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1455.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (968 samples, 19.54%)</title><rect x="80.0323%" y="1429" width="19.5437%" height="15" fill="rgb(253,125,37)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1439.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (968 samples, 19.54%)</title><rect x="80.0323%" y="1413" width="19.5437%" height="15" fill="rgb(232,102,6)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1423.50">core::ops::function::impls::&lt;im..</text></g><g><title>std::rt::lang_start::_{{closure}} (968 samples, 19.54%)</title><rect x="80.0323%" y="1397" width="19.5437%" height="15" fill="rgb(251,105,13)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1407.50">std::rt::lang_start::_{{closure..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (968 samples, 19.54%)</title><rect x="80.0323%" y="1381" width="19.5437%" height="15" fill="rgb(222,179,29)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1391.50">std::sys_common::backtrace::__r..</text></g><g><title>core::ops::function::FnOnce::call_once (968 samples, 19.54%)</title><rect x="80.0323%" y="1365" width="19.5437%" height="15" fill="rgb(229,180,53)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1375.50">core::ops::function::FnOnce::ca..</text></g><g><title>deserialize_struct::main (968 samples, 19.54%)</title><rect x="80.0323%" y="1349" width="19.5437%" height="15" fill="rgb(238,104,13)" fg:x="3964" fg:w="968"/><text x="80.2823%" y="1359.50">deserialize_struct::main</text></g><g><title>deserialize_struct::benches (967 samples, 19.52%)</title><rect x="80.0525%" y="1333" width="19.5235%" height="15" fill="rgb(210,130,5)" fg:x="3965" fg:w="967"/><text x="80.3025%" y="1343.50">deserialize_struct::benches</text></g><g><title>deserialize_struct::bench_twitter_Twitter (15 samples, 0.30%)</title><rect x="99.2732%" y="1317" width="0.3028%" height="15" fill="rgb(233,87,49)" fg:x="4917" fg:w="15"/><text x="99.5232%" y="1327.50"></text></g><g><title>sonic_rs::serde::ser::to_string_pretty (2 samples, 0.04%)</title><rect x="99.5356%" y="1301" width="0.0404%" height="15" fill="rgb(243,34,9)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1311.50"></text></g><g><title>sonic_rs::serde::ser::to_vec_pretty (2 samples, 0.04%)</title><rect x="99.5356%" y="1285" width="0.0404%" height="15" fill="rgb(235,225,10)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1295.50"></text></g><g><title>sonic_rs::serde::ser::to_writer_pretty (2 samples, 0.04%)</title><rect x="99.5356%" y="1269" width="0.0404%" height="15" fill="rgb(212,0,30)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1279.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Twitter&gt;::serialize (2 samples, 0.04%)</title><rect x="99.5356%" y="1253" width="0.0404%" height="15" fill="rgb(211,177,0)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1263.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect x="99.5356%" y="1237" width="0.0404%" height="15" fill="rgb(225,220,11)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1247.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="99.5356%" y="1221" width="0.0404%" height="15" fill="rgb(215,10,13)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1231.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect x="99.5356%" y="1205" width="0.0404%" height="15" fill="rgb(240,177,14)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1215.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2 samples, 0.04%)</title><rect x="99.5356%" y="1189" width="0.0404%" height="15" fill="rgb(243,7,39)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1199.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.04%)</title><rect x="99.5356%" y="1173" width="0.0404%" height="15" fill="rgb(212,99,0)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.04%)</title><rect x="99.5356%" y="1157" width="0.0404%" height="15" fill="rgb(225,162,48)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.04%)</title><rect x="99.5356%" y="1141" width="0.0404%" height="15" fill="rgb(246,16,25)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.04%)</title><rect x="99.5356%" y="1125" width="0.0404%" height="15" fill="rgb(220,150,2)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1135.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.04%)</title><rect x="99.5356%" y="1109" width="0.0404%" height="15" fill="rgb(237,113,11)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1119.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.04%)</title><rect x="99.5356%" y="1093" width="0.0404%" height="15" fill="rgb(236,70,20)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1103.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.04%)</title><rect x="99.5356%" y="1077" width="0.0404%" height="15" fill="rgb(234,94,7)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1087.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Status&gt;::serialize (2 samples, 0.04%)</title><rect x="99.5356%" y="1061" width="0.0404%" height="15" fill="rgb(250,221,0)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1071.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.04%)</title><rect x="99.5356%" y="1045" width="0.0404%" height="15" fill="rgb(245,149,46)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1055.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.04%)</title><rect x="99.5356%" y="1029" width="0.0404%" height="15" fill="rgb(215,37,27)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1039.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.04%)</title><rect x="99.5356%" y="1013" width="0.0404%" height="15" fill="rgb(232,65,3)" fg:x="4930" fg:w="2"/><text x="99.7856%" y="1023.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5558%" y="997" width="0.0202%" height="15" fill="rgb(214,2,16)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="1007.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.02%)</title><rect x="99.5558%" y="981" width="0.0202%" height="15" fill="rgb(227,131,50)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="991.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5558%" y="965" width="0.0202%" height="15" fill="rgb(247,131,45)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="975.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Status&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5558%" y="949" width="0.0202%" height="15" fill="rgb(215,97,47)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="959.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.5558%" y="933" width="0.0202%" height="15" fill="rgb(233,143,12)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="943.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.5558%" y="917" width="0.0202%" height="15" fill="rgb(222,57,17)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="927.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="99.5558%" y="901" width="0.0202%" height="15" fill="rgb(214,119,38)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="911.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::StatusEntities&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5558%" y="885" width="0.0202%" height="15" fill="rgb(217,28,47)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="895.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.5558%" y="869" width="0.0202%" height="15" fill="rgb(231,14,52)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="879.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.5558%" y="853" width="0.0202%" height="15" fill="rgb(220,158,18)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="863.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="99.5558%" y="837" width="0.0202%" height="15" fill="rgb(222,143,46)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5558%" y="821" width="0.0202%" height="15" fill="rgb(227,165,5)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="831.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.02%)</title><rect x="99.5558%" y="805" width="0.0202%" height="15" fill="rgb(216,222,49)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="815.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5558%" y="789" width="0.0202%" height="15" fill="rgb(238,73,39)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="799.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.02%)</title><rect x="99.5558%" y="773" width="0.0202%" height="15" fill="rgb(252,115,9)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect x="99.5558%" y="757" width="0.0202%" height="15" fill="rgb(238,202,4)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="99.5558%" y="741" width="0.0202%" height="15" fill="rgb(252,153,44)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (1 samples, 0.02%)</title><rect x="99.5558%" y="725" width="0.0202%" height="15" fill="rgb(235,128,27)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (1 samples, 0.02%)</title><rect x="99.5558%" y="709" width="0.0202%" height="15" fill="rgb(221,121,47)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="719.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.02%)</title><rect x="99.5558%" y="693" width="0.0202%" height="15" fill="rgb(247,211,47)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5558%" y="677" width="0.0202%" height="15" fill="rgb(252,47,49)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="687.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Media&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5558%" y="661" width="0.0202%" height="15" fill="rgb(219,119,53)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="671.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.5558%" y="645" width="0.0202%" height="15" fill="rgb(243,165,53)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.5558%" y="629" width="0.0202%" height="15" fill="rgb(230,12,35)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="639.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="99.5558%" y="613" width="0.0202%" height="15" fill="rgb(239,57,49)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="99.5558%" y="597" width="0.0202%" height="15" fill="rgb(231,154,7)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="607.50"></text></g><g><title>&lt;sonic_rs::serde::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="99.5558%" y="581" width="0.0202%" height="15" fill="rgb(248,81,34)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="591.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="99.5558%" y="565" width="0.0202%" height="15" fill="rgb(247,9,5)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="575.50"></text></g><g><title>sonic_rs::format::Formatter::write_string_fast (1 samples, 0.02%)</title><rect x="99.5558%" y="549" width="0.0202%" height="15" fill="rgb(228,172,27)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="559.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;u8&gt; as sonic_rs::writer::WriterExt&gt;::reserve_with (1 samples, 0.02%)</title><rect x="99.5558%" y="533" width="0.0202%" height="15" fill="rgb(230,57,44)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="543.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.5558%" y="517" width="0.0202%" height="15" fill="rgb(249,35,22)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="527.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="99.5558%" y="501" width="0.0202%" height="15" fill="rgb(250,137,27)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="99.5558%" y="485" width="0.0202%" height="15" fill="rgb(251,57,31)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="99.5558%" y="469" width="0.0202%" height="15" fill="rgb(238,60,0)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="99.5558%" y="453" width="0.0202%" height="15" fill="rgb(242,185,39)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="99.5558%" y="437" width="0.0202%" height="15" fill="rgb(240,63,43)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="447.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.5558%" y="421" width="0.0202%" height="15" fill="rgb(236,155,6)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="431.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="99.5558%" y="405" width="0.0202%" height="15" fill="rgb(215,11,29)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="415.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="99.5558%" y="389" width="0.0202%" height="15" fill="rgb(228,180,48)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="399.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect x="99.5558%" y="373" width="0.0202%" height="15" fill="rgb(241,102,12)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="383.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="99.5558%" y="357" width="0.0202%" height="15" fill="rgb(246,213,4)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="367.50"></text></g><g><title>iralloct (1 samples, 0.02%)</title><rect x="99.5558%" y="341" width="0.0202%" height="15" fill="rgb(218,134,35)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="351.50"></text></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.02%)</title><rect x="99.5558%" y="325" width="0.0202%" height="15" fill="rgb(251,117,35)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="335.50"></text></g><g><title>_rjem_je_large_ralloc (1 samples, 0.02%)</title><rect x="99.5558%" y="309" width="0.0202%" height="15" fill="rgb(206,156,45)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="319.50"></text></g><g><title>_rjem_je_large_ralloc (1 samples, 0.02%)</title><rect x="99.5558%" y="293" width="0.0202%" height="15" fill="rgb(218,52,27)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="303.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.02%)</title><rect x="99.5558%" y="277" width="0.0202%" height="15" fill="rgb(238,83,36)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="287.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.02%)</title><rect x="99.5558%" y="261" width="0.0202%" height="15" fill="rgb(218,53,43)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="271.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="99.5558%" y="245" width="0.0202%" height="15" fill="rgb(239,54,39)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="255.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="99.5558%" y="229" width="0.0202%" height="15" fill="rgb(212,198,13)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="239.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="99.5558%" y="213" width="0.0202%" height="15" fill="rgb(234,54,46)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="223.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="99.5558%" y="197" width="0.0202%" height="15" fill="rgb(217,120,7)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="207.50"></text></g><g><title>atomic_fetch_add_zu (1 samples, 0.02%)</title><rect x="99.5558%" y="181" width="0.0202%" height="15" fill="rgb(246,39,15)" fg:x="4931" fg:w="1"/><text x="99.8058%" y="191.50"></text></g><g><title>_start (969 samples, 19.56%)</title><rect x="80.0323%" y="1589" width="19.5639%" height="15" fill="rgb(242,143,31)" fg:x="3964" fg:w="969"/><text x="80.2823%" y="1599.50">_start</text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect x="99.5760%" y="1573" width="0.0202%" height="15" fill="rgb(252,60,24)" fg:x="4932" fg:w="1"/><text x="99.8260%" y="1583.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="99.5760%" y="1557" width="0.0202%" height="15" fill="rgb(249,220,7)" fg:x="4932" fg:w="1"/><text x="99.8260%" y="1567.50"></text></g><g><title>dl_main (1 samples, 0.02%)</title><rect x="99.5760%" y="1541" width="0.0202%" height="15" fill="rgb(236,67,13)" fg:x="4932" fg:w="1"/><text x="99.8260%" y="1551.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="99.5760%" y="1525" width="0.0202%" height="15" fill="rgb(210,62,39)" fg:x="4932" fg:w="1"/><text x="99.8260%" y="1535.50"></text></g><g><title>base_alloc_impl (1 samples, 0.02%)</title><rect x="99.5962%" y="1589" width="0.0202%" height="15" fill="rgb(219,122,53)" fg:x="4933" fg:w="1"/><text x="99.8462%" y="1599.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="99.5962%" y="1573" width="0.0202%" height="15" fill="rgb(218,87,25)" fg:x="4933" fg:w="1"/><text x="99.8462%" y="1583.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="99.5962%" y="1557" width="0.0202%" height="15" fill="rgb(234,179,48)" fg:x="4933" fg:w="1"/><text x="99.8462%" y="1567.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="99.5962%" y="1541" width="0.0202%" height="15" fill="rgb(248,90,0)" fg:x="4933" fg:w="1"/><text x="99.8462%" y="1551.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="99.6164%" y="1589" width="0.0202%" height="15" fill="rgb(207,228,37)" fg:x="4934" fg:w="1"/><text x="99.8664%" y="1599.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="99.6164%" y="1573" width="0.0202%" height="15" fill="rgb(235,214,15)" fg:x="4934" fg:w="1"/><text x="99.8664%" y="1583.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.02%)</title><rect x="99.6164%" y="1557" width="0.0202%" height="15" fill="rgb(210,144,39)" fg:x="4934" fg:w="1"/><text x="99.8664%" y="1567.50"></text></g><g><title>deserialize_str (4,836 samples, 97.64%)</title><rect x="2.0190%" y="1605" width="97.6378%" height="15" fill="rgb(222,67,41)" fg:x="100" fg:w="4836"/><text x="2.2690%" y="1615.50">deserialize_str</text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="99.6366%" y="1589" width="0.0202%" height="15" fill="rgb(205,35,37)" fg:x="4935" fg:w="1"/><text x="99.8866%" y="1599.50"></text></g><g><title>pac_ehooks_get (1 samples, 0.02%)</title><rect x="99.6366%" y="1573" width="0.0202%" height="15" fill="rgb(216,125,40)" fg:x="4935" fg:w="1"/><text x="99.8866%" y="1583.50"></text></g><g><title>_rjem_je_base_ehooks_get (1 samples, 0.02%)</title><rect x="99.6366%" y="1557" width="0.0202%" height="15" fill="rgb(228,227,20)" fg:x="4935" fg:w="1"/><text x="99.8866%" y="1567.50"></text></g><g><title>_dl_start_user (1 samples, 0.02%)</title><rect x="99.6568%" y="1589" width="0.0202%" height="15" fill="rgb(242,173,45)" fg:x="4936" fg:w="1"/><text x="99.9068%" y="1599.50"></text></g><g><title>_dl_init (1 samples, 0.02%)</title><rect x="99.6568%" y="1573" width="0.0202%" height="15" fill="rgb(215,79,24)" fg:x="4936" fg:w="1"/><text x="99.9068%" y="1583.50"></text></g><g><title>call_init.part.0 (1 samples, 0.02%)</title><rect x="99.6568%" y="1557" width="0.0202%" height="15" fill="rgb(238,164,38)" fg:x="4936" fg:w="1"/><text x="99.9068%" y="1567.50"></text></g><g><title>[libselinux.so.1] (1 samples, 0.02%)</title><rect x="99.6568%" y="1541" width="0.0202%" height="15" fill="rgb(245,196,38)" fg:x="4936" fg:w="1"/><text x="99.9068%" y="1551.50"></text></g><g><title>selinuxfs_exists (1 samples, 0.02%)</title><rect x="99.6568%" y="1525" width="0.0202%" height="15" fill="rgb(231,217,29)" fg:x="4936" fg:w="1"/><text x="99.9068%" y="1535.50"></text></g><g><title>__fopen_internal (1 samples, 0.02%)</title><rect x="99.6568%" y="1509" width="0.0202%" height="15" fill="rgb(245,6,4)" fg:x="4936" fg:w="1"/><text x="99.9068%" y="1519.50"></text></g><g><title>malloc_hook_ini (1 samples, 0.02%)</title><rect x="99.6568%" y="1493" width="0.0202%" height="15" fill="rgb(214,76,49)" fg:x="4936" fg:w="1"/><text x="99.9068%" y="1503.50"></text></g><g><title>ptmalloc_init.part.0 (1 samples, 0.02%)</title><rect x="99.6568%" y="1477" width="0.0202%" height="15" fill="rgb(205,96,12)" fg:x="4936" fg:w="1"/><text x="99.9068%" y="1487.50"></text></g><g><title>__GI__dl_addr (1 samples, 0.02%)</title><rect x="99.6568%" y="1461" width="0.0202%" height="15" fill="rgb(243,131,4)" fg:x="4936" fg:w="1"/><text x="99.9068%" y="1471.50"></text></g><g><title>_dl_runtime_resolve_xsavec (1 samples, 0.02%)</title><rect x="99.6568%" y="1445" width="0.0202%" height="15" fill="rgb(214,114,4)" fg:x="4936" fg:w="1"/><text x="99.9068%" y="1455.50"></text></g><g><title>_dl_fixup (1 samples, 0.02%)</title><rect x="99.6568%" y="1429" width="0.0202%" height="15" fill="rgb(234,215,15)" fg:x="4936" fg:w="1"/><text x="99.9068%" y="1439.50"></text></g><g><title>open_path (1 samples, 0.02%)</title><rect x="99.6972%" y="1461" width="0.0202%" height="15" fill="rgb(250,216,45)" fg:x="4938" fg:w="1"/><text x="99.9472%" y="1471.50"></text></g><g><title>open_verify.constprop.12 (1 samples, 0.02%)</title><rect x="99.6972%" y="1445" width="0.0202%" height="15" fill="rgb(236,128,4)" fg:x="4938" fg:w="1"/><text x="99.9472%" y="1455.50"></text></g><g><title>__GI___open_nocancel (1 samples, 0.02%)</title><rect x="99.6972%" y="1429" width="0.0202%" height="15" fill="rgb(234,50,33)" fg:x="4938" fg:w="1"/><text x="99.9472%" y="1439.50"></text></g><g><title>_dl_map_object_deps (3 samples, 0.06%)</title><rect x="99.6770%" y="1525" width="0.0606%" height="15" fill="rgb(253,131,37)" fg:x="4937" fg:w="3"/><text x="99.9270%" y="1535.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.06%)</title><rect x="99.6770%" y="1509" width="0.0606%" height="15" fill="rgb(218,55,27)" fg:x="4937" fg:w="3"/><text x="99.9270%" y="1519.50"></text></g><g><title>openaux (3 samples, 0.06%)</title><rect x="99.6770%" y="1493" width="0.0606%" height="15" fill="rgb(241,220,28)" fg:x="4937" fg:w="3"/><text x="99.9270%" y="1503.50"></text></g><g><title>_dl_map_object (3 samples, 0.06%)</title><rect x="99.6770%" y="1477" width="0.0606%" height="15" fill="rgb(241,90,48)" fg:x="4937" fg:w="3"/><text x="99.9270%" y="1487.50"></text></g><g><title>strcmp (1 samples, 0.02%)</title><rect x="99.7173%" y="1461" width="0.0202%" height="15" fill="rgb(216,43,37)" fg:x="4939" fg:w="1"/><text x="99.9673%" y="1471.50"></text></g><g><title>_dl_receive_error (1 samples, 0.02%)</title><rect x="99.7375%" y="1525" width="0.0202%" height="15" fill="rgb(207,173,9)" fg:x="4940" fg:w="1"/><text x="99.9875%" y="1535.50"></text></g><g><title>version_check_doit (1 samples, 0.02%)</title><rect x="99.7375%" y="1509" width="0.0202%" height="15" fill="rgb(240,126,30)" fg:x="4940" fg:w="1"/><text x="99.9875%" y="1519.50"></text></g><g><title>_dl_check_all_versions (1 samples, 0.02%)</title><rect x="99.7375%" y="1493" width="0.0202%" height="15" fill="rgb(228,178,53)" fg:x="4940" fg:w="1"/><text x="99.9875%" y="1503.50"></text></g><g><title>_dl_check_map_versions (1 samples, 0.02%)</title><rect x="99.7375%" y="1477" width="0.0202%" height="15" fill="rgb(217,33,4)" fg:x="4940" fg:w="1"/><text x="99.9875%" y="1487.50"></text></g><g><title>_dl_name_match_p (1 samples, 0.02%)</title><rect x="99.7375%" y="1461" width="0.0202%" height="15" fill="rgb(206,124,34)" fg:x="4940" fg:w="1"/><text x="99.9875%" y="1471.50"></text></g><g><title>strcmp (1 samples, 0.02%)</title><rect x="99.7375%" y="1445" width="0.0202%" height="15" fill="rgb(208,122,53)" fg:x="4940" fg:w="1"/><text x="99.9875%" y="1455.50"></text></g><g><title>all (4,953 samples, 100%)</title><rect x="0.0000%" y="1621" width="100.0000%" height="15" fill="rgb(215,202,26)" fg:x="0" fg:w="4953"/><text x="0.2500%" y="1631.50"></text></g><g><title>gnuplot (17 samples, 0.34%)</title><rect x="99.6568%" y="1605" width="0.3432%" height="15" fill="rgb(232,198,31)" fg:x="4936" fg:w="17"/><text x="99.9068%" y="1615.50"></text></g><g><title>_start (16 samples, 0.32%)</title><rect x="99.6770%" y="1589" width="0.3230%" height="15" fill="rgb(222,23,35)" fg:x="4937" fg:w="16"/><text x="99.9270%" y="1599.50"></text></g><g><title>_dl_start (16 samples, 0.32%)</title><rect x="99.6770%" y="1573" width="0.3230%" height="15" fill="rgb(242,27,53)" fg:x="4937" fg:w="16"/><text x="99.9270%" y="1583.50"></text></g><g><title>_dl_sysdep_start (16 samples, 0.32%)</title><rect x="99.6770%" y="1557" width="0.3230%" height="15" fill="rgb(210,216,42)" fg:x="4937" fg:w="16"/><text x="99.9270%" y="1567.50"></text></g><g><title>dl_main (16 samples, 0.32%)</title><rect x="99.6770%" y="1541" width="0.3230%" height="15" fill="rgb(234,39,38)" fg:x="4937" fg:w="16"/><text x="99.9270%" y="1551.50"></text></g><g><title>_dl_relocate_object (12 samples, 0.24%)</title><rect x="99.7577%" y="1525" width="0.2423%" height="15" fill="rgb(235,126,54)" fg:x="4941" fg:w="12"/><text x="100.0077%" y="1535.50"></text></g><g><title>_dl_lookup_symbol_x (10 samples, 0.20%)</title><rect x="99.7981%" y="1509" width="0.2019%" height="15" fill="rgb(235,150,33)" fg:x="4943" fg:w="10"/><text x="100.0481%" y="1519.50"></text></g><g><title>do_lookup_x (9 samples, 0.18%)</title><rect x="99.8183%" y="1493" width="0.1817%" height="15" fill="rgb(249,49,53)" fg:x="4944" fg:w="9"/><text x="100.0683%" y="1503.50"></text></g><g><title>check_match (2 samples, 0.04%)</title><rect x="99.9596%" y="1477" width="0.0404%" height="15" fill="rgb(238,60,50)" fg:x="4951" fg:w="2"/><text x="100.2096%" y="1487.50"></text></g><g><title>strcmp (1 samples, 0.02%)</title><rect x="99.9798%" y="1461" width="0.0202%" height="15" fill="rgb(210,5,2)" fg:x="4952" fg:w="1"/><text x="100.2298%" y="1471.50"></text></g></svg></svg>