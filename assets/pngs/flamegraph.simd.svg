<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1910" onload="init(evt)" viewBox="0 0 1200 1910" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1910" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1893.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1893.00"> </text><svg id="frames" x="10" width="1180" total_samples="4340"><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.0000%" y="1749" width="0.0230%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.0000%" y="1733" width="0.0230%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="0.0000%" y="1717" width="0.0230%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="0.0000%" y="1701" width="0.0230%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="0.0000%" y="1685" width="0.0230%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="0.0000%" y="1669" width="0.0230%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1679.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.0000%" y="1653" width="0.0230%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1663.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.07%)</title><rect x="0.0000%" y="1829" width="0.0691%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.07%)</title><rect x="0.0000%" y="1813" width="0.0691%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.07%)</title><rect x="0.0000%" y="1797" width="0.0691%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1807.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.07%)</title><rect x="0.0000%" y="1781" width="0.0691%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.07%)</title><rect x="0.0000%" y="1765" width="0.0691%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1775.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.05%)</title><rect x="0.0230%" y="1749" width="0.0461%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="2"/><text x="0.2730%" y="1759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="0.0230%" y="1733" width="0.0461%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="2"/><text x="0.2730%" y="1743.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="0.0230%" y="1717" width="0.0461%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="2"/><text x="0.2730%" y="1727.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="0.0691%" y="1829" width="0.0230%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="0.3191%" y="1839.50"></text></g><g><title>ASN1_mbstring_ncopy (1 samples, 0.02%)</title><rect x="0.0922%" y="1829" width="0.0230%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="1"/><text x="0.3422%" y="1839.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.02%)</title><rect x="0.1152%" y="1829" width="0.0230%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="0.3652%" y="1839.50"></text></g><g><title>OBJ_NAME_remove (1 samples, 0.02%)</title><rect x="0.1382%" y="1829" width="0.0230%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="1"/><text x="0.3882%" y="1839.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="0.1382%" y="1813" width="0.0230%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="0.3882%" y="1823.50"></text></g><g><title>OBJ_obj2nid (1 samples, 0.02%)</title><rect x="0.1613%" y="1829" width="0.0230%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="0.4113%" y="1839.50"></text></g><g><title>OPENSSL_sk_new_null (1 samples, 0.02%)</title><rect x="0.1843%" y="1829" width="0.0230%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="1"/><text x="0.4343%" y="1839.50"></text></g><g><title>PEM_read_bio_ex (1 samples, 0.02%)</title><rect x="0.2074%" y="1829" width="0.0230%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="1"/><text x="0.4574%" y="1839.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.2304%" y="1829" width="0.0230%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="1"/><text x="0.4804%" y="1839.50"></text></g><g><title>_RINvXNvXsh_NtNtCs4tzRlw4u1YC_5serde2de5implsINtNtCsgVEU3eNk0wn_5alloc3vec3VecpENtBb_11Deserialize11deserializeINtB3_10VecVisitorNtNtNtCs91RHfw1kJHZ_5cargo4util9interning14InternedStringENtBb_7Visitor9visit_seqINtCs5VGRQ9yd1Sa_13serde_ignored9SeqAccessQNtNtCsd54lCtrCTyZ_4toml5value15SeqDeserializerNCNvNtB26_4toml22read_manifest_from_strs_0EEB28_ (1 samples, 0.02%)</title><rect x="0.2304%" y="1813" width="0.0230%" height="15" fill="rgb(241,131,45)" fg:x="10" fg:w="1"/><text x="0.4804%" y="1823.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.2304%" y="1797" width="0.0230%" height="15" fill="rgb(249,31,29)" fg:x="10" fg:w="1"/><text x="0.4804%" y="1807.50"></text></g><g><title>_RINvMNtCsd54lCtrCTyZ_4toml3mapINtB3_3MapNtNtCsgVEU3eNk0wn_5alloc6string6StringNtNtB5_5value5ValueE5entryRBC_EB5_ (1 samples, 0.02%)</title><rect x="0.2535%" y="1829" width="0.0230%" height="15" fill="rgb(225,111,53)" fg:x="11" fg:w="1"/><text x="0.5035%" y="1839.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="0.2535%" y="1813" width="0.0230%" height="15" fill="rgb(238,160,17)" fg:x="11" fg:w="1"/><text x="0.5035%" y="1823.50"></text></g><g><title>_RINvMs5_NtCs5u79KavszpI_9hashbrown3rawINtB6_8RawTableTReuEE14reserve_rehashNCINvNtB8_3map11make_hasherBQ_uNtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3map11RandomStateE0ECs91RHfw1kJHZ_5cargo.llvm.17241685589328308574 (1 samples, 0.02%)</title><rect x="0.2765%" y="1829" width="0.0230%" height="15" fill="rgb(214,148,48)" fg:x="12" fg:w="1"/><text x="0.5265%" y="1839.50"></text></g><g><title>_RINvMs5_NtNtCsaYwJY09qFLB_9hashbrown3raw5innerINtB6_8RawTablejE14reserve_rehashNCINvNtNtCsbXkKDtJpnLc_8indexmap3map4core8get_hashNtNtCsjXfa599Qfro_9toml_edit15internal_string14InternalStringNtNtB27_5table13TableKeyValueE0EB27_ (2 samples, 0.05%)</title><rect x="0.2995%" y="1829" width="0.0461%" height="15" fill="rgb(232,36,49)" fg:x="13" fg:w="2"/><text x="0.5495%" y="1839.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.3226%" y="1813" width="0.0230%" height="15" fill="rgb(209,103,24)" fg:x="14" fg:w="1"/><text x="0.5726%" y="1823.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="0.3226%" y="1797" width="0.0230%" height="15" fill="rgb(229,88,8)" fg:x="14" fg:w="1"/><text x="0.5726%" y="1807.50"></text></g><g><title>_RINvMs_NtNtNtCsgVEU3eNk0wn_5alloc11collections5btree6searchINtNtB7_4node7NodeRefNtNtBY_6marker3MutNtNtNtCs91RHfw1kJHZ_5cargo4core10package_id9PackageIdNtNtB1C_10dependency10DependencyNtB1i_14LeafOrInternalE11search_treeB1y_EB1E_ (1 samples, 0.02%)</title><rect x="0.3456%" y="1829" width="0.0230%" height="15" fill="rgb(213,181,19)" fg:x="15" fg:w="1"/><text x="0.5956%" y="1839.50"></text></g><g><title>_RINvNtCs341v5OBXvdv_10serde_json3ser27format_escaped_str_contentsQINtNtCsgVEU3eNk0wn_5alloc3vec3VechENtB2_16CompactFormatterECsjoxAk7uGzBK_5cargo.llvm.17432363443719017836 (1 samples, 0.02%)</title><rect x="0.3687%" y="1829" width="0.0230%" height="15" fill="rgb(254,191,54)" fg:x="16" fg:w="1"/><text x="0.6187%" y="1839.50"></text></g><g><title>_RINvNtCs5SG5FiVtMak_4core3ptr13drop_in_placeNtNtCsaBmMM8Aev1H_14cargo_platform3cfg7CfgExprECs91RHfw1kJHZ_5cargo.llvm.7281415397597749530 (1 samples, 0.02%)</title><rect x="0.3917%" y="1829" width="0.0230%" height="15" fill="rgb(241,83,37)" fg:x="17" fg:w="1"/><text x="0.6417%" y="1839.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="0.3917%" y="1813" width="0.0230%" height="15" fill="rgb(233,36,39)" fg:x="17" fg:w="1"/><text x="0.6417%" y="1823.50"></text></g><g><title>_RINvNtCs5SG5FiVtMak_4core3ptr13drop_in_placeNtNtNtCs91RHfw1kJHZ_5cargo3ops21cargo_output_metadata10ExportInfoECsjoxAk7uGzBK_5cargo (1 samples, 0.02%)</title><rect x="0.4147%" y="1829" width="0.0230%" height="15" fill="rgb(226,3,54)" fg:x="18" fg:w="1"/><text x="0.6647%" y="1839.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="0.4147%" y="1813" width="0.0230%" height="15" fill="rgb(245,192,40)" fg:x="18" fg:w="1"/><text x="0.6647%" y="1823.50"></text></g><g><title>_RINvNtCs5SG5FiVtMak_4core3ptr13drop_in_placeNtNtNtCs91RHfw1kJHZ_5cargo4util4toml14TomlDependencyEBM_.llvm.11294386640889789425 (1 samples, 0.02%)</title><rect x="0.4378%" y="1829" width="0.0230%" height="15" fill="rgb(238,167,29)" fg:x="19" fg:w="1"/><text x="0.6878%" y="1839.50"></text></g><g><title>_RINvNtCs5SG5FiVtMak_4core3ptr13drop_in_placeNtNtNtNtCs91RHfw1kJHZ_5cargo4core8resolver6encode16EncodableResolveEBO_ (1 samples, 0.02%)</title><rect x="0.4608%" y="1829" width="0.0230%" height="15" fill="rgb(232,182,51)" fg:x="20" fg:w="1"/><text x="0.7108%" y="1839.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="0.4608%" y="1813" width="0.0230%" height="15" fill="rgb(231,60,39)" fg:x="20" fg:w="1"/><text x="0.7108%" y="1823.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.4839%" y="1813" width="0.0230%" height="15" fill="rgb(208,69,12)" fg:x="21" fg:w="1"/><text x="0.7339%" y="1823.50"></text></g><g><title>_RINvNtCsgVEU3eNk0wn_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECsjXfa599Qfro_9toml_edit.llvm.9746813815476944100 (2 samples, 0.05%)</title><rect x="0.4839%" y="1829" width="0.0461%" height="15" fill="rgb(235,93,37)" fg:x="21" fg:w="2"/><text x="0.7339%" y="1839.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="0.5069%" y="1813" width="0.0230%" height="15" fill="rgb(213,116,39)" fg:x="22" fg:w="1"/><text x="0.7569%" y="1823.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="0.5069%" y="1797" width="0.0230%" height="15" fill="rgb(222,207,29)" fg:x="22" fg:w="1"/><text x="0.7569%" y="1807.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="0.5069%" y="1781" width="0.0230%" height="15" fill="rgb(206,96,30)" fg:x="22" fg:w="1"/><text x="0.7569%" y="1791.50"></text></g><g><title>_RINvNtCsgVEU3eNk0wn_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECsjoxAk7uGzBK_5cargo.llvm.2525401338274485303 (1 samples, 0.02%)</title><rect x="0.5300%" y="1829" width="0.0230%" height="15" fill="rgb(218,138,4)" fg:x="23" fg:w="1"/><text x="0.7800%" y="1839.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="0.5300%" y="1813" width="0.0230%" height="15" fill="rgb(250,191,14)" fg:x="23" fg:w="1"/><text x="0.7800%" y="1823.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="0.5300%" y="1797" width="0.0230%" height="15" fill="rgb(239,60,40)" fg:x="23" fg:w="1"/><text x="0.7800%" y="1807.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="0.5300%" y="1781" width="0.0230%" height="15" fill="rgb(206,27,48)" fg:x="23" fg:w="1"/><text x="0.7800%" y="1791.50"></text></g><g><title>_RINvNtCslAJt4rsqvXy_6winnow5token12take_while1_TINtNtNtCs5SG5FiVtMak_4core3ops5range14RangeInclusivehEBK_BK_hhEINtNtB4_6stream7LocatedRNtB1O_4BStrENtNtB4_5error12ContextErrorKb0_ECsjXfa599Qfro_9toml_edit (1 samples, 0.02%)</title><rect x="0.5530%" y="1829" width="0.0230%" height="15" fill="rgb(225,35,8)" fg:x="24" fg:w="1"/><text x="0.8030%" y="1839.50"></text></g><g><title>_RINvNtNtCs5SG5FiVtMak_4core5slice4sort10merge_sortTNtNtNtCs91RHfw1kJHZ_5cargo4util9interning14InternedStringINtNtCsgVEU3eNk0wn_5alloc3vec3VecBN_EENCINvMNtB1N_5sliceSBM_7sort_byNCINvXs1e_NtNtNtB1N_11collections5btree3mapINtB2Y_8BTreeMapBN_B1I_EINtNtNtNtB6_4iter6traits7collect12FromIteratorBM_E9from_iterINtNtNtB40_8adapters3map3MapINtB2Y_4IterBN_IB1J_NtNtNtBT_4core7summary12FeatureValueEENCNvMs0_NtB5H_7packageNtB6n_7Package10serializeds_0EE0E0NCINvB2q_11stable_sortBM_B2k_E0NCB7b_s_0NCB7b_s0_0NCB7b_s1_0EBT_ (1 samples, 0.02%)</title><rect x="0.5760%" y="1829" width="0.0230%" height="15" fill="rgb(250,213,24)" fg:x="25" fg:w="1"/><text x="0.8260%" y="1839.50"></text></g><g><title>_RINvXs0_NtNtCsjXfa599Qfro_9toml_edit2de3keyNtB6_15KeyDeserializerNtNtCs4tzRlw4u1YC_5serde2de12Deserializer15deserialize_anyNtNtB13_5impls13StringVisitorECsd54lCtrCTyZ_4toml (1 samples, 0.02%)</title><rect x="0.5991%" y="1829" width="0.0230%" height="15" fill="rgb(247,123,22)" fg:x="26" fg:w="1"/><text x="0.8491%" y="1839.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="0.5991%" y="1813" width="0.0230%" height="15" fill="rgb(231,138,38)" fg:x="26" fg:w="1"/><text x="0.8491%" y="1823.50"></text></g><g><title>_RINvXs15_NtCsbGDwpR2ddnS_3std4pathNtB7_4PathNtNtCs5SG5FiVtMak_4core4hash4Hash4hashNtNtNtNtB9_11collections4hash3map13DefaultHasherECs91RHfw1kJHZ_5cargo (1 samples, 0.02%)</title><rect x="0.6221%" y="1829" width="0.0230%" height="15" fill="rgb(231,145,46)" fg:x="27" fg:w="1"/><text x="0.8721%" y="1839.50"></text></g><g><title>_RINvXs2_Cs5VGRQ9yd1Sa_13serde_ignoredINtB6_4WrapINtNvXs31_NtNtCs4tzRlw4u1YC_5serde2de5implsINtNtNtNtCsgVEU3eNk0wn_5alloc11collections5btree3map8BTreeMapppENtBW_11Deserialize11deserialize10MapVisitorNtNtNtCs91RHfw1kJHZ_5cargo4util9interning14InternedStringINtNtB1A_3vec3VecB3a_EENCNvNtB3e_4toml22read_manifest_from_strs_0ENtBW_7Visitor9visit_mapQNtNtCsd54lCtrCTyZ_4toml5value15MapDeserializerEB3g_ (1 samples, 0.02%)</title><rect x="0.6452%" y="1829" width="0.0230%" height="15" fill="rgb(251,118,11)" fg:x="28" fg:w="1"/><text x="0.8952%" y="1839.50"></text></g><g><title>_RINvXsb_NtCsaBmMM8Aev1H_14cargo_platform3cfgNtB6_7CfgExprNtNtCs5SG5FiVtMak_4core4hash4Hash4hashNtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3map13DefaultHasherECs91RHfw1kJHZ_5cargo (1 samples, 0.02%)</title><rect x="0.6682%" y="1829" width="0.0230%" height="15" fill="rgb(217,147,25)" fg:x="29" fg:w="1"/><text x="0.9182%" y="1839.50"></text></g><g><title>_RINvXsc_NtNtCs91RHfw1kJHZ_5cargo4core10dependencyNtB6_10DependencyNtNtCs5SG5FiVtMak_4core4hash4Hash4hashNtNtNtNtCsbGDwpR2ddnS_3std11collections4hash3map13DefaultHasherEBa_.llvm.14666074212130275466 (1 samples, 0.02%)</title><rect x="0.6912%" y="1829" width="0.0230%" height="15" fill="rgb(247,81,37)" fg:x="30" fg:w="1"/><text x="0.9412%" y="1839.50"></text></g><g><title>_RINvXsh_NtCsd54lCtrCTyZ_4toml5valueNtB6_5ValueNtNtCs4tzRlw4u1YC_5serde2de12Deserializer15deserialize_anyINtCs5VGRQ9yd1Sa_13serde_ignored4WrapNtNvNtNtCs91RHfw1kJHZ_5cargo4util4toml23version_trim_whitespace7VisitorNCNvB2j_22read_manifest_from_strs_0EEB2n_ (1 samples, 0.02%)</title><rect x="0.7143%" y="1829" width="0.0230%" height="15" fill="rgb(209,12,38)" fg:x="31" fg:w="1"/><text x="0.9643%" y="1839.50"></text></g><g><title>_RNCNvNtNtCsjXfa599Qfro_9toml_edit6parser5array11array_value0B7_ (1 samples, 0.02%)</title><rect x="0.7373%" y="1829" width="0.0230%" height="15" fill="rgb(227,1,9)" fg:x="32" fg:w="1"/><text x="0.9873%" y="1839.50"></text></g><g><title>_RNCNvNtNtCsjXfa599Qfro_9toml_edit6parser5value5value0B7_ (1 samples, 0.02%)</title><rect x="0.7604%" y="1829" width="0.0230%" height="15" fill="rgb(248,47,43)" fg:x="33" fg:w="1"/><text x="1.0104%" y="1839.50"></text></g><g><title>_RNvMNtNtNtCs91RHfw1kJHZ_5cargo4core8resolver9dep_cacheNtB2_15RegistryQueryer10build_deps (1 samples, 0.02%)</title><rect x="0.7834%" y="1829" width="0.0230%" height="15" fill="rgb(221,10,30)" fg:x="34" fg:w="1"/><text x="1.0334%" y="1839.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="0.7834%" y="1813" width="0.0230%" height="15" fill="rgb(210,229,1)" fg:x="34" fg:w="1"/><text x="1.0334%" y="1823.50"></text></g><g><title>_RNvMs5_NtNtCs91RHfw1kJHZ_5cargo4util9interningNtB5_14InternedString3new (1 samples, 0.02%)</title><rect x="0.8065%" y="1829" width="0.0230%" height="15" fill="rgb(222,148,37)" fg:x="35" fg:w="1"/><text x="1.0565%" y="1839.50"></text></g><g><title>_RNvMs_NtCsjXfa599Qfro_9toml_edit4itemNtB4_4Item4span (1 samples, 0.02%)</title><rect x="0.8295%" y="1829" width="0.0230%" height="15" fill="rgb(234,67,33)" fg:x="36" fg:w="1"/><text x="1.0795%" y="1839.50"></text></g><g><title>_RNvMsu_NtNtCs91RHfw1kJHZ_5cargo4util4tomlNtB5_12TomlManifest16to_real_manifest (1 samples, 0.02%)</title><rect x="0.8525%" y="1829" width="0.0230%" height="15" fill="rgb(247,98,35)" fg:x="37" fg:w="1"/><text x="1.1025%" y="1839.50"></text></g><g><title>_RNvMsx_NtNtNtCsgVEU3eNk0wn_5alloc11collections5btree3mapINtB5_8IntoIterNtNtBb_6string6StringNtNtCsd54lCtrCTyZ_4toml5value5ValueE10dying_nextCs91RHfw1kJHZ_5cargo.llvm.11294386640889789425 (1 samples, 0.02%)</title><rect x="0.8756%" y="1829" width="0.0230%" height="15" fill="rgb(247,138,52)" fg:x="38" fg:w="1"/><text x="1.1256%" y="1839.50"></text></g><g><title>_RNvNtNtCs91RHfw1kJHZ_5cargo4core7summary17build_feature_map (1 samples, 0.02%)</title><rect x="0.8986%" y="1829" width="0.0230%" height="15" fill="rgb(213,79,30)" fg:x="39" fg:w="1"/><text x="1.1486%" y="1839.50"></text></g><g><title>_RNvNtNtCs91RHfw1kJHZ_5cargo4core8resolver7resolve (1 samples, 0.02%)</title><rect x="0.9217%" y="1829" width="0.0230%" height="15" fill="rgb(246,177,23)" fg:x="40" fg:w="1"/><text x="1.1717%" y="1839.50"></text></g><g><title>_RNvNtNtCsjXfa599Qfro_9toml_edit6parser5value9apply_raw (2 samples, 0.05%)</title><rect x="0.9447%" y="1829" width="0.0461%" height="15" fill="rgb(230,62,27)" fg:x="41" fg:w="2"/><text x="1.1947%" y="1839.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="0.9677%" y="1813" width="0.0230%" height="15" fill="rgb(216,154,8)" fg:x="42" fg:w="1"/><text x="1.2177%" y="1823.50"></text></g><g><title>_RNvNtNtCsjXfa599Qfro_9toml_edit6parser7strings12basic_string (1 samples, 0.02%)</title><rect x="0.9908%" y="1829" width="0.0230%" height="15" fill="rgb(244,35,45)" fg:x="43" fg:w="1"/><text x="1.2408%" y="1839.50"></text></g><g><title>_RNvNtNtNtCs91RHfw1kJHZ_5cargo4core8resolver6encode20encodable_package_id (1 samples, 0.02%)</title><rect x="1.0138%" y="1829" width="0.0230%" height="15" fill="rgb(251,115,12)" fg:x="44" fg:w="1"/><text x="1.2638%" y="1839.50"></text></g><g><title>_RNvNtNtNtCsbiWzh4JGXYx_6memchr6memchr3x863avx6memchr (2 samples, 0.05%)</title><rect x="1.0369%" y="1829" width="0.0461%" height="15" fill="rgb(240,54,50)" fg:x="45" fg:w="2"/><text x="1.2869%" y="1839.50"></text></g><g><title>_RNvXs3_NtNtCs5SG5FiVtMak_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs91RHfw1kJHZ_5cargo.llvm.11294386640889789425 (1 samples, 0.02%)</title><rect x="1.0829%" y="1829" width="0.0230%" height="15" fill="rgb(233,84,52)" fg:x="47" fg:w="1"/><text x="1.3329%" y="1839.50"></text></g><g><title>_RNvXs3_NtNtCs5SG5FiVtMak_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs91RHfw1kJHZ_5cargo.llvm.14666074212130275466 (1 samples, 0.02%)</title><rect x="1.1060%" y="1829" width="0.0230%" height="15" fill="rgb(207,117,47)" fg:x="48" fg:w="1"/><text x="1.3560%" y="1839.50"></text></g><g><title>_RNvXs3_NtNtCs5SG5FiVtMak_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs91RHfw1kJHZ_5cargo.llvm.6137529569853853886 (1 samples, 0.02%)</title><rect x="1.1290%" y="1829" width="0.0230%" height="15" fill="rgb(249,43,39)" fg:x="49" fg:w="1"/><text x="1.3790%" y="1839.50"></text></g><g><title>_RNvXs8_NtCsgVEU3eNk0wn_5alloc3vecINtB5_3VecNtCs7eLoBKV2qX3_6semver10ComparatorENtNtCs5SG5FiVtMak_4core5clone5Clone5cloneCs91RHfw1kJHZ_5cargo (1 samples, 0.02%)</title><rect x="1.1521%" y="1829" width="0.0230%" height="15" fill="rgb(209,38,44)" fg:x="50" fg:w="1"/><text x="1.4021%" y="1839.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="1.1521%" y="1813" width="0.0230%" height="15" fill="rgb(236,212,23)" fg:x="50" fg:w="1"/><text x="1.4021%" y="1823.50"></text></g><g><title>_RNvXs8_NtCsgVEU3eNk0wn_5alloc3vecINtB5_3VecNtNtB7_6string6StringENtNtCs5SG5FiVtMak_4core5clone5Clone5cloneCs91RHfw1kJHZ_5cargo (1 samples, 0.02%)</title><rect x="1.1751%" y="1829" width="0.0230%" height="15" fill="rgb(242,79,21)" fg:x="51" fg:w="1"/><text x="1.4251%" y="1839.50"></text></g><g><title>_RNvXsd_NtNtCs91RHfw1kJHZ_5cargo4core8manifestNtB5_8ManifestNtNtCs5SG5FiVtMak_4core5clone5Clone5clone.llvm.17410322496986008596 (1 samples, 0.02%)</title><rect x="1.1982%" y="1829" width="0.0230%" height="15" fill="rgb(211,96,35)" fg:x="52" fg:w="1"/><text x="1.4482%" y="1839.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1.1982%" y="1813" width="0.0230%" height="15" fill="rgb(253,215,40)" fg:x="52" fg:w="1"/><text x="1.4482%" y="1823.50"></text></g><g><title>_RNvXsk_NtNtNtCsgVEU3eNk0wn_5alloc11collections5btree3mapINtB5_4IterNtNtBb_6string6StringINtNtNtCs91RHfw1kJHZ_5cargo4util4toml14MaybeWorkspaceNtB1r_14TomlDependencyNtB1r_23TomlWorkspaceDependencyEENtNtNtNtCs5SG5FiVtMak_4core4iter6traits8iterator8Iterator4nextB1v_ (1 samples, 0.02%)</title><rect x="1.2212%" y="1829" width="0.0230%" height="15" fill="rgb(211,81,21)" fg:x="53" fg:w="1"/><text x="1.4712%" y="1839.50"></text></g><g><title>_RNvXsm_NtCsgVEU3eNk0wn_5alloc3vecINtB5_3VecTNtNtNtCs91RHfw1kJHZ_5cargo4core10dependency10DependencyINtNtB7_2rc2RcIBw_NtNtBK_7summary7SummaryEEIB1A_INtNtNtNtB7_11collections5btree3set8BTreeSetNtNtNtBM_4util9interning14InternedStringEEEENtNtNtCs5SG5FiVtMak_4core3ops4drop4Drop4dropBM_ (1 samples, 0.02%)</title><rect x="1.2442%" y="1829" width="0.0230%" height="15" fill="rgb(208,190,38)" fg:x="54" fg:w="1"/><text x="1.4942%" y="1839.50"></text></g><g><title>_start (1 samples, 0.02%)</title><rect x="1.2673%" y="1829" width="0.0230%" height="15" fill="rgb(235,213,38)" fg:x="55" fg:w="1"/><text x="1.5173%" y="1839.50"></text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect x="1.2673%" y="1813" width="0.0230%" height="15" fill="rgb(237,122,38)" fg:x="55" fg:w="1"/><text x="1.5173%" y="1823.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="1.2673%" y="1797" width="0.0230%" height="15" fill="rgb(244,218,35)" fg:x="55" fg:w="1"/><text x="1.5173%" y="1807.50"></text></g><g><title>dl_main (1 samples, 0.02%)</title><rect x="1.2673%" y="1781" width="0.0230%" height="15" fill="rgb(240,68,47)" fg:x="55" fg:w="1"/><text x="1.5173%" y="1791.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="1.2673%" y="1765" width="0.0230%" height="15" fill="rgb(210,16,53)" fg:x="55" fg:w="1"/><text x="1.5173%" y="1775.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="1.2903%" y="1829" width="0.0230%" height="15" fill="rgb(235,124,12)" fg:x="56" fg:w="1"/><text x="1.5403%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="1.2903%" y="1813" width="0.0230%" height="15" fill="rgb(224,169,11)" fg:x="56" fg:w="1"/><text x="1.5403%" y="1823.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="1.2903%" y="1797" width="0.0230%" height="15" fill="rgb(250,166,2)" fg:x="56" fg:w="1"/><text x="1.5403%" y="1807.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="1.2903%" y="1781" width="0.0230%" height="15" fill="rgb(242,216,29)" fg:x="56" fg:w="1"/><text x="1.5403%" y="1791.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="1.2903%" y="1765" width="0.0230%" height="15" fill="rgb(230,116,27)" fg:x="56" fg:w="1"/><text x="1.5403%" y="1775.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="1.2903%" y="1749" width="0.0230%" height="15" fill="rgb(228,99,48)" fg:x="56" fg:w="1"/><text x="1.5403%" y="1759.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="1.2903%" y="1733" width="0.0230%" height="15" fill="rgb(253,11,6)" fg:x="56" fg:w="1"/><text x="1.5403%" y="1743.50"></text></g><g><title>asn1_item_embed_free (1 samples, 0.02%)</title><rect x="1.3134%" y="1829" width="0.0230%" height="15" fill="rgb(247,143,39)" fg:x="57" fg:w="1"/><text x="1.5634%" y="1839.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="1.3134%" y="1813" width="0.0230%" height="15" fill="rgb(236,97,10)" fg:x="57" fg:w="1"/><text x="1.5634%" y="1823.50"></text></g><g><title>curl_mvsnprintf (1 samples, 0.02%)</title><rect x="1.3364%" y="1829" width="0.0230%" height="15" fill="rgb(233,208,19)" fg:x="58" fg:w="1"/><text x="1.5864%" y="1839.50"></text></g><g><title>git__strntol64 (3 samples, 0.07%)</title><rect x="1.3594%" y="1829" width="0.0691%" height="15" fill="rgb(216,164,2)" fg:x="59" fg:w="3"/><text x="1.6094%" y="1839.50"></text></g><g><title>git_packfile_free (1 samples, 0.02%)</title><rect x="1.4286%" y="1829" width="0.0230%" height="15" fill="rgb(220,129,5)" fg:x="62" fg:w="1"/><text x="1.6786%" y="1839.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="1.4286%" y="1813" width="0.0230%" height="15" fill="rgb(242,17,10)" fg:x="62" fg:w="1"/><text x="1.6786%" y="1823.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="1.4286%" y="1797" width="0.0230%" height="15" fill="rgb(242,107,0)" fg:x="62" fg:w="1"/><text x="1.6786%" y="1807.50"></text></g><g><title>git_tree__parse_raw (1 samples, 0.02%)</title><rect x="1.4516%" y="1829" width="0.0230%" height="15" fill="rgb(251,28,31)" fg:x="63" fg:w="1"/><text x="1.7016%" y="1839.50"></text></g><g><title>inflateInit_ (2 samples, 0.05%)</title><rect x="1.4747%" y="1829" width="0.0461%" height="15" fill="rgb(233,223,10)" fg:x="64" fg:w="2"/><text x="1.7247%" y="1839.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="1.4977%" y="1813" width="0.0230%" height="15" fill="rgb(215,21,27)" fg:x="65" fg:w="1"/><text x="1.7477%" y="1823.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="1.4977%" y="1797" width="0.0230%" height="15" fill="rgb(232,23,21)" fg:x="65" fg:w="1"/><text x="1.7477%" y="1807.50"></text></g><g><title>inflate_fast (2 samples, 0.05%)</title><rect x="1.5207%" y="1829" width="0.0461%" height="15" fill="rgb(244,5,23)" fg:x="66" fg:w="2"/><text x="1.7707%" y="1839.50"></text></g><g><title>pack_entry_find_offset (2 samples, 0.05%)</title><rect x="1.5668%" y="1829" width="0.0461%" height="15" fill="rgb(226,81,46)" fg:x="68" fg:w="2"/><text x="1.8168%" y="1839.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="1.5668%" y="1813" width="0.0461%" height="15" fill="rgb(247,70,30)" fg:x="68" fg:w="2"/><text x="1.8168%" y="1823.50"></text></g><g><title>sha1_compression_states (2 samples, 0.05%)</title><rect x="1.6129%" y="1829" width="0.0461%" height="15" fill="rgb(212,68,19)" fg:x="70" fg:w="2"/><text x="1.8629%" y="1839.50"></text></g><g><title>std::path::Components::parse_next_component_back (1 samples, 0.02%)</title><rect x="1.6590%" y="1829" width="0.0230%" height="15" fill="rgb(240,187,13)" fg:x="72" fg:w="1"/><text x="1.9090%" y="1839.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (1 samples, 0.02%)</title><rect x="1.6590%" y="1813" width="0.0230%" height="15" fill="rgb(223,113,26)" fg:x="72" fg:w="1"/><text x="1.9090%" y="1823.50"></text></g><g><title>stdalloc__malloc (1 samples, 0.02%)</title><rect x="1.6820%" y="1829" width="0.0230%" height="15" fill="rgb(206,192,2)" fg:x="73" fg:w="1"/><text x="1.9320%" y="1839.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="1.6820%" y="1813" width="0.0230%" height="15" fill="rgb(241,108,4)" fg:x="73" fg:w="1"/><text x="1.9320%" y="1823.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="1.6820%" y="1797" width="0.0230%" height="15" fill="rgb(247,173,49)" fg:x="73" fg:w="1"/><text x="1.9320%" y="1807.50"></text></g><g><title>cargo (76 samples, 1.75%)</title><rect x="0.0000%" y="1845" width="1.7512%" height="15" fill="rgb(224,114,35)" fg:x="0" fg:w="76"/><text x="0.2500%" y="1855.50"></text></g><g><title>ubc_check (2 samples, 0.05%)</title><rect x="1.7051%" y="1829" width="0.0461%" height="15" fill="rgb(245,159,27)" fg:x="74" fg:w="2"/><text x="1.9551%" y="1839.50"></text></g><g><title>__libc_start_main (1 samples, 0.02%)</title><rect x="1.7512%" y="1813" width="0.0230%" height="15" fill="rgb(245,172,44)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1823.50"></text></g><g><title>main (1 samples, 0.02%)</title><rect x="1.7512%" y="1797" width="0.0230%" height="15" fill="rgb(236,23,11)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1807.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.02%)</title><rect x="1.7512%" y="1781" width="0.0230%" height="15" fill="rgb(205,117,38)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1791.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.02%)</title><rect x="1.7512%" y="1765" width="0.0230%" height="15" fill="rgb(237,72,25)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1775.50"></text></g><g><title>std::panicking::try (1 samples, 0.02%)</title><rect x="1.7512%" y="1749" width="0.0230%" height="15" fill="rgb(244,70,9)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1759.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.02%)</title><rect x="1.7512%" y="1733" width="0.0230%" height="15" fill="rgb(217,125,39)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1743.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (1 samples, 0.02%)</title><rect x="1.7512%" y="1717" width="0.0230%" height="15" fill="rgb(235,36,10)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1727.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.02%)</title><rect x="1.7512%" y="1701" width="0.0230%" height="15" fill="rgb(251,123,47)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1711.50"></text></g><g><title>std::panicking::try (1 samples, 0.02%)</title><rect x="1.7512%" y="1685" width="0.0230%" height="15" fill="rgb(221,13,13)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1695.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.02%)</title><rect x="1.7512%" y="1669" width="0.0230%" height="15" fill="rgb(238,131,9)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1679.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.02%)</title><rect x="1.7512%" y="1653" width="0.0230%" height="15" fill="rgb(211,50,8)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1663.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.02%)</title><rect x="1.7512%" y="1637" width="0.0230%" height="15" fill="rgb(245,182,24)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1647.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.02%)</title><rect x="1.7512%" y="1621" width="0.0230%" height="15" fill="rgb(242,14,37)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1631.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="1.7512%" y="1605" width="0.0230%" height="15" fill="rgb(246,228,12)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1615.50"></text></g><g><title>deserialize_struct::main (1 samples, 0.02%)</title><rect x="1.7512%" y="1589" width="0.0230%" height="15" fill="rgb(213,55,15)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1599.50"></text></g><g><title>deserialize_struct::benches (1 samples, 0.02%)</title><rect x="1.7512%" y="1573" width="0.0230%" height="15" fill="rgb(209,9,3)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1583.50"></text></g><g><title>deserialize_struct::bench_twitter_Twitter (1 samples, 0.02%)</title><rect x="1.7512%" y="1557" width="0.0230%" height="15" fill="rgb(230,59,30)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1567.50"></text></g><g><title>serde_json::de::from_slice (1 samples, 0.02%)</title><rect x="1.7512%" y="1541" width="0.0230%" height="15" fill="rgb(209,121,21)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1551.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.02%)</title><rect x="1.7512%" y="1525" width="0.0230%" height="15" fill="rgb(220,109,13)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1535.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="1509" width="0.0230%" height="15" fill="rgb(232,18,1)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1519.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="1.7512%" y="1493" width="0.0230%" height="15" fill="rgb(215,41,42)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1503.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="1.7512%" y="1477" width="0.0230%" height="15" fill="rgb(224,123,36)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1487.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="1.7512%" y="1461" width="0.0230%" height="15" fill="rgb(240,125,3)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1471.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="1.7512%" y="1445" width="0.0230%" height="15" fill="rgb(205,98,50)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1455.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="1429" width="0.0230%" height="15" fill="rgb(205,185,37)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1439.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="1413" width="0.0230%" height="15" fill="rgb(238,207,15)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1423.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect x="1.7512%" y="1397" width="0.0230%" height="15" fill="rgb(213,199,42)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1407.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="1.7512%" y="1381" width="0.0230%" height="15" fill="rgb(235,201,11)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1391.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="1.7512%" y="1365" width="0.0230%" height="15" fill="rgb(207,46,11)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1375.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="1.7512%" y="1349" width="0.0230%" height="15" fill="rgb(241,35,35)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="1333" width="0.0230%" height="15" fill="rgb(243,32,47)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1343.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="1317" width="0.0230%" height="15" fill="rgb(247,202,23)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1327.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="1.7512%" y="1301" width="0.0230%" height="15" fill="rgb(219,102,11)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1311.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="1.7512%" y="1285" width="0.0230%" height="15" fill="rgb(243,110,44)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1295.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="1.7512%" y="1269" width="0.0230%" height="15" fill="rgb(222,74,54)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1279.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="1.7512%" y="1253" width="0.0230%" height="15" fill="rgb(216,99,12)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="1237" width="0.0230%" height="15" fill="rgb(226,22,26)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1247.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="1221" width="0.0230%" height="15" fill="rgb(217,163,10)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1231.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.02%)</title><rect x="1.7512%" y="1205" width="0.0230%" height="15" fill="rgb(213,25,53)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1215.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.02%)</title><rect x="1.7512%" y="1189" width="0.0230%" height="15" fill="rgb(252,105,26)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1199.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="1173" width="0.0230%" height="15" fill="rgb(220,39,43)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1183.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="1157" width="0.0230%" height="15" fill="rgb(229,68,48)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1167.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="1.7512%" y="1141" width="0.0230%" height="15" fill="rgb(252,8,32)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1151.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="1.7512%" y="1125" width="0.0230%" height="15" fill="rgb(223,20,43)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1135.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="1.7512%" y="1109" width="0.0230%" height="15" fill="rgb(229,81,49)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1119.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="1.7512%" y="1093" width="0.0230%" height="15" fill="rgb(236,28,36)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1103.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="1077" width="0.0230%" height="15" fill="rgb(249,185,26)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1087.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="1061" width="0.0230%" height="15" fill="rgb(249,174,33)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1071.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="1.7512%" y="1045" width="0.0230%" height="15" fill="rgb(233,201,37)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1055.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="1.7512%" y="1029" width="0.0230%" height="15" fill="rgb(221,78,26)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1039.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="1.7512%" y="1013" width="0.0230%" height="15" fill="rgb(250,127,30)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1023.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="1.7512%" y="997" width="0.0230%" height="15" fill="rgb(230,49,44)" fg:x="76" fg:w="1"/><text x="2.0012%" y="1007.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="981" width="0.0230%" height="15" fill="rgb(229,67,23)" fg:x="76" fg:w="1"/><text x="2.0012%" y="991.50"></text></g><g><title>&lt;json_benchmark::color::Color as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="1.7512%" y="965" width="0.0230%" height="15" fill="rgb(249,83,47)" fg:x="76" fg:w="1"/><text x="2.0012%" y="975.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.02%)</title><rect x="1.7512%" y="949" width="0.0230%" height="15" fill="rgb(215,43,3)" fg:x="76" fg:w="1"/><text x="2.0012%" y="959.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="1.7512%" y="933" width="0.0230%" height="15" fill="rgb(238,154,13)" fg:x="76" fg:w="1"/><text x="2.0012%" y="943.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="1.7512%" y="917" width="0.0230%" height="15" fill="rgb(219,56,2)" fg:x="76" fg:w="1"/><text x="2.0012%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.05%)</title><rect x="1.7512%" y="1829" width="0.0461%" height="15" fill="rgb(233,0,4)" fg:x="76" fg:w="2"/><text x="2.0012%" y="1839.50"></text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched (1 samples, 0.02%)</title><rect x="1.7742%" y="1813" width="0.0230%" height="15" fill="rgb(235,30,7)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="1.7742%" y="1797" width="0.0230%" height="15" fill="rgb(250,79,13)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.7742%" y="1781" width="0.0230%" height="15" fill="rgb(211,146,34)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1791.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="1.7742%" y="1765" width="0.0230%" height="15" fill="rgb(228,22,38)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="1.7742%" y="1749" width="0.0230%" height="15" fill="rgb(235,168,5)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="1.7742%" y="1733" width="0.0230%" height="15" fill="rgb(221,155,16)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="1.7742%" y="1717" width="0.0230%" height="15" fill="rgb(215,215,53)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1727.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.02%)</title><rect x="1.7742%" y="1701" width="0.0230%" height="15" fill="rgb(223,4,10)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1711.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="1.7742%" y="1685" width="0.0230%" height="15" fill="rgb(234,103,6)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1695.50"></text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (1 samples, 0.02%)</title><rect x="1.7742%" y="1669" width="0.0230%" height="15" fill="rgb(227,97,0)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1679.50"></text></g><g><title>deserialize_struct::simd_json_parse_struct (1 samples, 0.02%)</title><rect x="1.7742%" y="1653" width="0.0230%" height="15" fill="rgb(234,150,53)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1663.50"></text></g><g><title>simd_json::serde::from_slice (1 samples, 0.02%)</title><rect x="1.7742%" y="1637" width="0.0230%" height="15" fill="rgb(228,201,54)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1647.50"></text></g><g><title>simd_json::Deserializer::from_slice (1 samples, 0.02%)</title><rect x="1.7742%" y="1621" width="0.0230%" height="15" fill="rgb(222,22,37)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1631.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="1.7742%" y="1605" width="0.0230%" height="15" fill="rgb(237,53,32)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1615.50"></text></g><g><title>simd_json::Deserializer::from_slice (1 samples, 0.02%)</title><rect x="1.7742%" y="1589" width="0.0230%" height="15" fill="rgb(233,25,53)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1599.50"></text></g><g><title>simd_json::numberparse::correct::&lt;impl simd_json::Deserializer&gt;::parse_number (1 samples, 0.02%)</title><rect x="1.7742%" y="1573" width="0.0230%" height="15" fill="rgb(210,40,34)" fg:x="77" fg:w="1"/><text x="2.0242%" y="1583.50"></text></g><g><title>&lt;criterion::Criterion as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="1.7972%" y="1557" width="0.0230%" height="15" fill="rgb(241,220,44)" fg:x="78" fg:w="1"/><text x="2.0472%" y="1567.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="1.7972%" y="1541" width="0.0230%" height="15" fill="rgb(235,28,35)" fg:x="78" fg:w="1"/><text x="2.0472%" y="1551.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="1.7972%" y="1525" width="0.0230%" height="15" fill="rgb(210,56,17)" fg:x="78" fg:w="1"/><text x="2.0472%" y="1535.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="1.7972%" y="1509" width="0.0230%" height="15" fill="rgb(224,130,29)" fg:x="78" fg:w="1"/><text x="2.0472%" y="1519.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.02%)</title><rect x="1.7972%" y="1493" width="0.0230%" height="15" fill="rgb(235,212,8)" fg:x="78" fg:w="1"/><text x="2.0472%" y="1503.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="1.7972%" y="1477" width="0.0230%" height="15" fill="rgb(223,33,50)" fg:x="78" fg:w="1"/><text x="2.0472%" y="1487.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (1 samples, 0.02%)</title><rect x="1.7972%" y="1461" width="0.0230%" height="15" fill="rgb(219,149,13)" fg:x="78" fg:w="1"/><text x="2.0472%" y="1471.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="1.8433%" y="885" width="0.0230%" height="15" fill="rgb(250,156,29)" fg:x="80" fg:w="1"/><text x="2.0933%" y="895.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="1.8433%" y="869" width="0.0230%" height="15" fill="rgb(216,193,19)" fg:x="80" fg:w="1"/><text x="2.0933%" y="879.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="1.8433%" y="853" width="0.0230%" height="15" fill="rgb(216,135,14)" fg:x="80" fg:w="1"/><text x="2.0933%" y="863.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="1.8433%" y="837" width="0.0230%" height="15" fill="rgb(241,47,5)" fg:x="80" fg:w="1"/><text x="2.0933%" y="847.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="1.8433%" y="821" width="0.0230%" height="15" fill="rgb(233,42,35)" fg:x="80" fg:w="1"/><text x="2.0933%" y="831.50"></text></g><g><title>phn_merge (1 samples, 0.02%)</title><rect x="1.8433%" y="805" width="0.0230%" height="15" fill="rgb(231,13,6)" fg:x="80" fg:w="1"/><text x="2.0933%" y="815.50"></text></g><g><title>phn_merge_ordered (1 samples, 0.02%)</title><rect x="1.8433%" y="789" width="0.0230%" height="15" fill="rgb(207,181,40)" fg:x="80" fg:w="1"/><text x="2.0933%" y="799.50"></text></g><g><title>phn_prev_set (1 samples, 0.02%)</title><rect x="1.8433%" y="773" width="0.0230%" height="15" fill="rgb(254,173,49)" fg:x="80" fg:w="1"/><text x="2.0933%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="1.8203%" y="1077" width="0.0691%" height="15" fill="rgb(221,1,38)" fg:x="79" fg:w="3"/><text x="2.0703%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="1.8203%" y="1061" width="0.0691%" height="15" fill="rgb(206,124,46)" fg:x="79" fg:w="3"/><text x="2.0703%" y="1071.50"></text></g><g><title>__rust_dealloc (3 samples, 0.07%)</title><rect x="1.8203%" y="1045" width="0.0691%" height="15" fill="rgb(249,21,11)" fg:x="79" fg:w="3"/><text x="2.0703%" y="1055.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.07%)</title><rect x="1.8203%" y="1029" width="0.0691%" height="15" fill="rgb(222,201,40)" fg:x="79" fg:w="3"/><text x="2.0703%" y="1039.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.05%)</title><rect x="1.8433%" y="1013" width="0.0461%" height="15" fill="rgb(235,61,29)" fg:x="80" fg:w="2"/><text x="2.0933%" y="1023.50"></text></g><g><title>_rjem_je_large_dalloc (2 samples, 0.05%)</title><rect x="1.8433%" y="997" width="0.0461%" height="15" fill="rgb(219,207,3)" fg:x="80" fg:w="2"/><text x="2.0933%" y="1007.50"></text></g><g><title>large_dalloc_finish_impl (2 samples, 0.05%)</title><rect x="1.8433%" y="981" width="0.0461%" height="15" fill="rgb(222,56,46)" fg:x="80" fg:w="2"/><text x="2.0933%" y="991.50"></text></g><g><title>pac_dalloc_impl (2 samples, 0.05%)</title><rect x="1.8433%" y="965" width="0.0461%" height="15" fill="rgb(239,76,54)" fg:x="80" fg:w="2"/><text x="2.0933%" y="975.50"></text></g><g><title>_rjem_je_extent_record (2 samples, 0.05%)</title><rect x="1.8433%" y="949" width="0.0461%" height="15" fill="rgb(231,124,27)" fg:x="80" fg:w="2"/><text x="2.0933%" y="959.50"></text></g><g><title>extent_try_coalesce_large (2 samples, 0.05%)</title><rect x="1.8433%" y="933" width="0.0461%" height="15" fill="rgb(249,195,6)" fg:x="80" fg:w="2"/><text x="2.0933%" y="943.50"></text></g><g><title>extent_try_coalesce_impl (2 samples, 0.05%)</title><rect x="1.8433%" y="917" width="0.0461%" height="15" fill="rgb(237,174,47)" fg:x="80" fg:w="2"/><text x="2.0933%" y="927.50"></text></g><g><title>extent_coalesce (2 samples, 0.05%)</title><rect x="1.8433%" y="901" width="0.0461%" height="15" fill="rgb(206,201,31)" fg:x="80" fg:w="2"/><text x="2.0933%" y="911.50"></text></g><g><title>extent_merge_impl (1 samples, 0.02%)</title><rect x="1.8664%" y="885" width="0.0230%" height="15" fill="rgb(231,57,52)" fg:x="81" fg:w="1"/><text x="2.1164%" y="895.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="1.8664%" y="869" width="0.0230%" height="15" fill="rgb(248,177,22)" fg:x="81" fg:w="1"/><text x="2.1164%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.09%)</title><rect x="1.8203%" y="1125" width="0.0922%" height="15" fill="rgb(215,211,37)" fg:x="79" fg:w="4"/><text x="2.0703%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.09%)</title><rect x="1.8203%" y="1109" width="0.0922%" height="15" fill="rgb(241,128,51)" fg:x="79" fg:w="4"/><text x="2.0703%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="1.8203%" y="1093" width="0.0922%" height="15" fill="rgb(227,165,31)" fg:x="79" fg:w="4"/><text x="2.0703%" y="1103.50"></text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched (1 samples, 0.02%)</title><rect x="1.8894%" y="1077" width="0.0230%" height="15" fill="rgb(228,167,24)" fg:x="82" fg:w="1"/><text x="2.1394%" y="1087.50"></text></g><g><title>_rjem_je_large_dalloc (2 samples, 0.05%)</title><rect x="1.9124%" y="949" width="0.0461%" height="15" fill="rgb(228,143,12)" fg:x="83" fg:w="2"/><text x="2.1624%" y="959.50"></text></g><g><title>large_dalloc_finish_impl (2 samples, 0.05%)</title><rect x="1.9124%" y="933" width="0.0461%" height="15" fill="rgb(249,149,8)" fg:x="83" fg:w="2"/><text x="2.1624%" y="943.50"></text></g><g><title>pac_dalloc_impl (2 samples, 0.05%)</title><rect x="1.9124%" y="917" width="0.0461%" height="15" fill="rgb(243,35,44)" fg:x="83" fg:w="2"/><text x="2.1624%" y="927.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="1.9355%" y="901" width="0.0230%" height="15" fill="rgb(246,89,9)" fg:x="84" fg:w="1"/><text x="2.1855%" y="911.50"></text></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect x="1.9355%" y="885" width="0.0230%" height="15" fill="rgb(233,213,13)" fg:x="84" fg:w="1"/><text x="2.1855%" y="895.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect x="1.9355%" y="869" width="0.0230%" height="15" fill="rgb(233,141,41)" fg:x="84" fg:w="1"/><text x="2.1855%" y="879.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (1 samples, 0.02%)</title><rect x="1.9355%" y="853" width="0.0230%" height="15" fill="rgb(239,167,4)" fg:x="84" fg:w="1"/><text x="2.1855%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;simd_json::Deserializer&gt; (3 samples, 0.07%)</title><rect x="1.9124%" y="1093" width="0.0691%" height="15" fill="rgb(209,217,16)" fg:x="83" fg:w="3"/><text x="2.1624%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;simd_json::value::tape::Node&gt;&gt; (3 samples, 0.07%)</title><rect x="1.9124%" y="1077" width="0.0691%" height="15" fill="rgb(219,88,35)" fg:x="83" fg:w="3"/><text x="2.1624%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;simd_json::value::tape::Node&gt;&gt; (3 samples, 0.07%)</title><rect x="1.9124%" y="1061" width="0.0691%" height="15" fill="rgb(220,193,23)" fg:x="83" fg:w="3"/><text x="2.1624%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="1.9124%" y="1045" width="0.0691%" height="15" fill="rgb(230,90,52)" fg:x="83" fg:w="3"/><text x="2.1624%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="1.9124%" y="1029" width="0.0691%" height="15" fill="rgb(252,106,19)" fg:x="83" fg:w="3"/><text x="2.1624%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="1.9124%" y="1013" width="0.0691%" height="15" fill="rgb(206,74,20)" fg:x="83" fg:w="3"/><text x="2.1624%" y="1023.50"></text></g><g><title>__rust_dealloc (3 samples, 0.07%)</title><rect x="1.9124%" y="997" width="0.0691%" height="15" fill="rgb(230,138,44)" fg:x="83" fg:w="3"/><text x="2.1624%" y="1007.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.07%)</title><rect x="1.9124%" y="981" width="0.0691%" height="15" fill="rgb(235,182,43)" fg:x="83" fg:w="3"/><text x="2.1624%" y="991.50"></text></g><g><title>_rjem_je_sdallocx_default (3 samples, 0.07%)</title><rect x="1.9124%" y="965" width="0.0691%" height="15" fill="rgb(242,16,51)" fg:x="83" fg:w="3"/><text x="2.1624%" y="975.50"></text></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.02%)</title><rect x="1.9585%" y="949" width="0.0230%" height="15" fill="rgb(248,9,4)" fg:x="85" fg:w="1"/><text x="2.2085%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="1.9816%" y="1045" width="0.0230%" height="15" fill="rgb(210,31,22)" fg:x="86" fg:w="1"/><text x="2.2316%" y="1055.50"></text></g><g><title>serde::de::MapAccess::next_key (2 samples, 0.05%)</title><rect x="2.0046%" y="1045" width="0.0461%" height="15" fill="rgb(239,54,39)" fg:x="87" fg:w="2"/><text x="2.2546%" y="1055.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.05%)</title><rect x="2.0046%" y="1029" width="0.0461%" height="15" fill="rgb(230,99,41)" fg:x="87" fg:w="2"/><text x="2.2546%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="2.0046%" y="1013" width="0.0461%" height="15" fill="rgb(253,106,12)" fg:x="87" fg:w="2"/><text x="2.2546%" y="1023.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.05%)</title><rect x="2.0046%" y="997" width="0.0461%" height="15" fill="rgb(213,46,41)" fg:x="87" fg:w="2"/><text x="2.2546%" y="1007.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.05%)</title><rect x="2.0046%" y="981" width="0.0461%" height="15" fill="rgb(215,133,35)" fg:x="87" fg:w="2"/><text x="2.2546%" y="991.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.05%)</title><rect x="2.0046%" y="965" width="0.0461%" height="15" fill="rgb(213,28,5)" fg:x="87" fg:w="2"/><text x="2.2546%" y="975.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (2 samples, 0.05%)</title><rect x="2.0046%" y="949" width="0.0461%" height="15" fill="rgb(215,77,49)" fg:x="87" fg:w="2"/><text x="2.2546%" y="959.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.05%)</title><rect x="2.0046%" y="933" width="0.0461%" height="15" fill="rgb(248,100,22)" fg:x="87" fg:w="2"/><text x="2.2546%" y="943.50"></text></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as core::cmp::Ord&gt;::cmp (5 samples, 0.12%)</title><rect x="2.1198%" y="869" width="0.1152%" height="15" fill="rgb(208,67,9)" fg:x="92" fg:w="5"/><text x="2.3698%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (5 samples, 0.12%)</title><rect x="2.1198%" y="853" width="0.1152%" height="15" fill="rgb(219,133,21)" fg:x="92" fg:w="5"/><text x="2.3698%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.02%)</title><rect x="2.2350%" y="837" width="0.0230%" height="15" fill="rgb(246,46,29)" fg:x="97" fg:w="1"/><text x="2.4850%" y="847.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="2.2350%" y="821" width="0.0230%" height="15" fill="rgb(246,185,52)" fg:x="97" fg:w="1"/><text x="2.4850%" y="831.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="2.2350%" y="853" width="0.0461%" height="15" fill="rgb(252,136,11)" fg:x="97" fg:w="2"/><text x="2.4850%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="2.2581%" y="837" width="0.0230%" height="15" fill="rgb(219,138,53)" fg:x="98" fg:w="1"/><text x="2.5081%" y="847.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="2.2581%" y="821" width="0.0230%" height="15" fill="rgb(211,51,23)" fg:x="98" fg:w="1"/><text x="2.5081%" y="831.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="2.2811%" y="741" width="0.0230%" height="15" fill="rgb(247,221,28)" fg:x="99" fg:w="1"/><text x="2.5311%" y="751.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="2.2811%" y="725" width="0.0230%" height="15" fill="rgb(251,222,45)" fg:x="99" fg:w="1"/><text x="2.5311%" y="735.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="2.2811%" y="709" width="0.0230%" height="15" fill="rgb(217,162,53)" fg:x="99" fg:w="1"/><text x="2.5311%" y="719.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="2.2811%" y="693" width="0.0230%" height="15" fill="rgb(229,93,14)" fg:x="99" fg:w="1"/><text x="2.5311%" y="703.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="2.2811%" y="677" width="0.0230%" height="15" fill="rgb(209,67,49)" fg:x="99" fg:w="1"/><text x="2.5311%" y="687.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="2.2811%" y="661" width="0.0230%" height="15" fill="rgb(213,87,29)" fg:x="99" fg:w="1"/><text x="2.5311%" y="671.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="2.2811%" y="645" width="0.0230%" height="15" fill="rgb(205,151,52)" fg:x="99" fg:w="1"/><text x="2.5311%" y="655.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="2.2811%" y="629" width="0.0230%" height="15" fill="rgb(253,215,39)" fg:x="99" fg:w="1"/><text x="2.5311%" y="639.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="2.2811%" y="613" width="0.0230%" height="15" fill="rgb(221,220,41)" fg:x="99" fg:w="1"/><text x="2.5311%" y="623.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="2.2811%" y="597" width="0.0230%" height="15" fill="rgb(218,133,21)" fg:x="99" fg:w="1"/><text x="2.5311%" y="607.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="2.2811%" y="581" width="0.0230%" height="15" fill="rgb(221,193,43)" fg:x="99" fg:w="1"/><text x="2.5311%" y="591.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="2.2811%" y="565" width="0.0230%" height="15" fill="rgb(240,128,52)" fg:x="99" fg:w="1"/><text x="2.5311%" y="575.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="2.2811%" y="549" width="0.0230%" height="15" fill="rgb(253,114,12)" fg:x="99" fg:w="1"/><text x="2.5311%" y="559.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="2.2811%" y="533" width="0.0230%" height="15" fill="rgb(215,223,47)" fg:x="99" fg:w="1"/><text x="2.5311%" y="543.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect x="2.2811%" y="517" width="0.0230%" height="15" fill="rgb(248,225,23)" fg:x="99" fg:w="1"/><text x="2.5311%" y="527.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect x="2.2811%" y="501" width="0.0230%" height="15" fill="rgb(250,108,0)" fg:x="99" fg:w="1"/><text x="2.5311%" y="511.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="2.2811%" y="485" width="0.0230%" height="15" fill="rgb(228,208,7)" fg:x="99" fg:w="1"/><text x="2.5311%" y="495.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="2.2811%" y="469" width="0.0230%" height="15" fill="rgb(244,45,10)" fg:x="99" fg:w="1"/><text x="2.5311%" y="479.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.02%)</title><rect x="2.2811%" y="453" width="0.0230%" height="15" fill="rgb(207,125,25)" fg:x="99" fg:w="1"/><text x="2.5311%" y="463.50"></text></g><g><title>eset_first_fit (1 samples, 0.02%)</title><rect x="2.2811%" y="437" width="0.0230%" height="15" fill="rgb(210,195,18)" fg:x="99" fg:w="1"/><text x="2.5311%" y="447.50"></text></g><g><title>_rjem_je_edata_heap_first (1 samples, 0.02%)</title><rect x="2.2811%" y="421" width="0.0230%" height="15" fill="rgb(249,80,12)" fg:x="99" fg:w="1"/><text x="2.5311%" y="431.50"></text></g><g><title>ph_first (1 samples, 0.02%)</title><rect x="2.2811%" y="405" width="0.0230%" height="15" fill="rgb(221,65,9)" fg:x="99" fg:w="1"/><text x="2.5311%" y="415.50"></text></g><g><title>ph_merge_aux (1 samples, 0.02%)</title><rect x="2.2811%" y="389" width="0.0230%" height="15" fill="rgb(235,49,36)" fg:x="99" fg:w="1"/><text x="2.5311%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2 samples, 0.05%)</title><rect x="2.2811%" y="853" width="0.0461%" height="15" fill="rgb(225,32,20)" fg:x="99" fg:w="2"/><text x="2.5311%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2 samples, 0.05%)</title><rect x="2.2811%" y="837" width="0.0461%" height="15" fill="rgb(215,141,46)" fg:x="99" fg:w="2"/><text x="2.5311%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.05%)</title><rect x="2.2811%" y="821" width="0.0461%" height="15" fill="rgb(250,160,47)" fg:x="99" fg:w="2"/><text x="2.5311%" y="831.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="2.2811%" y="805" width="0.0461%" height="15" fill="rgb(216,222,40)" fg:x="99" fg:w="2"/><text x="2.5311%" y="815.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.05%)</title><rect x="2.2811%" y="789" width="0.0461%" height="15" fill="rgb(234,217,39)" fg:x="99" fg:w="2"/><text x="2.5311%" y="799.50"></text></g><g><title>__rust_alloc (2 samples, 0.05%)</title><rect x="2.2811%" y="773" width="0.0461%" height="15" fill="rgb(207,178,40)" fg:x="99" fg:w="2"/><text x="2.5311%" y="783.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.05%)</title><rect x="2.2811%" y="757" width="0.0461%" height="15" fill="rgb(221,136,13)" fg:x="99" fg:w="2"/><text x="2.5311%" y="767.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="2.3041%" y="741" width="0.0230%" height="15" fill="rgb(249,199,10)" fg:x="100" fg:w="1"/><text x="2.5541%" y="751.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="2.3041%" y="725" width="0.0230%" height="15" fill="rgb(249,222,13)" fg:x="100" fg:w="1"/><text x="2.5541%" y="735.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="2.3041%" y="709" width="0.0230%" height="15" fill="rgb(244,185,38)" fg:x="100" fg:w="1"/><text x="2.5541%" y="719.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="2.3041%" y="693" width="0.0230%" height="15" fill="rgb(236,202,9)" fg:x="100" fg:w="1"/><text x="2.5541%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.05%)</title><rect x="2.3272%" y="853" width="0.0461%" height="15" fill="rgb(250,229,37)" fg:x="101" fg:w="2"/><text x="2.5772%" y="863.50"></text></g><g><title>?? (13 samples, 0.30%)</title><rect x="2.1198%" y="885" width="0.2995%" height="15" fill="rgb(206,174,23)" fg:x="92" fg:w="13"/><text x="2.3698%" y="895.50"></text></g><g><title>?? (8 samples, 0.18%)</title><rect x="2.2350%" y="869" width="0.1843%" height="15" fill="rgb(211,33,43)" fg:x="97" fg:w="8"/><text x="2.4850%" y="879.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (2 samples, 0.05%)</title><rect x="2.3733%" y="853" width="0.0461%" height="15" fill="rgb(245,58,50)" fg:x="103" fg:w="2"/><text x="2.6233%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="2.3733%" y="837" width="0.0461%" height="15" fill="rgb(244,68,36)" fg:x="103" fg:w="2"/><text x="2.6233%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="2.3733%" y="821" width="0.0461%" height="15" fill="rgb(232,229,15)" fg:x="103" fg:w="2"/><text x="2.6233%" y="831.50"></text></g><g><title>_rjem_je_bitmap_init (1 samples, 0.02%)</title><rect x="2.4194%" y="613" width="0.0230%" height="15" fill="rgb(254,30,23)" fg:x="105" fg:w="1"/><text x="2.6694%" y="623.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.05%)</title><rect x="2.4194%" y="661" width="0.0461%" height="15" fill="rgb(235,160,14)" fg:x="105" fg:w="2"/><text x="2.6694%" y="671.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.05%)</title><rect x="2.4194%" y="645" width="0.0461%" height="15" fill="rgb(212,155,44)" fg:x="105" fg:w="2"/><text x="2.6694%" y="655.50"></text></g><g><title>arena_slab_alloc (2 samples, 0.05%)</title><rect x="2.4194%" y="629" width="0.0461%" height="15" fill="rgb(226,2,50)" fg:x="105" fg:w="2"/><text x="2.6694%" y="639.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="2.4424%" y="613" width="0.0230%" height="15" fill="rgb(234,177,6)" fg:x="106" fg:w="1"/><text x="2.6924%" y="623.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="2.4424%" y="597" width="0.0230%" height="15" fill="rgb(217,24,9)" fg:x="106" fg:w="1"/><text x="2.6924%" y="607.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="2.4424%" y="581" width="0.0230%" height="15" fill="rgb(220,13,46)" fg:x="106" fg:w="1"/><text x="2.6924%" y="591.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="2.4424%" y="565" width="0.0230%" height="15" fill="rgb(239,221,27)" fg:x="106" fg:w="1"/><text x="2.6924%" y="575.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect x="2.4424%" y="549" width="0.0230%" height="15" fill="rgb(222,198,25)" fg:x="106" fg:w="1"/><text x="2.6924%" y="559.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect x="2.4424%" y="533" width="0.0230%" height="15" fill="rgb(211,99,13)" fg:x="106" fg:w="1"/><text x="2.6924%" y="543.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="2.4424%" y="517" width="0.0230%" height="15" fill="rgb(232,111,31)" fg:x="106" fg:w="1"/><text x="2.6924%" y="527.50"></text></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect x="2.4424%" y="501" width="0.0230%" height="15" fill="rgb(245,82,37)" fg:x="106" fg:w="1"/><text x="2.6924%" y="511.50"></text></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect x="2.4424%" y="485" width="0.0230%" height="15" fill="rgb(227,149,46)" fg:x="106" fg:w="1"/><text x="2.6924%" y="495.50"></text></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect x="2.4424%" y="469" width="0.0230%" height="15" fill="rgb(218,36,50)" fg:x="106" fg:w="1"/><text x="2.6924%" y="479.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect x="2.4424%" y="453" width="0.0230%" height="15" fill="rgb(226,80,48)" fg:x="106" fg:w="1"/><text x="2.6924%" y="463.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="2.4424%" y="437" width="0.0230%" height="15" fill="rgb(238,224,15)" fg:x="106" fg:w="1"/><text x="2.6924%" y="447.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="2.4424%" y="421" width="0.0230%" height="15" fill="rgb(241,136,10)" fg:x="106" fg:w="1"/><text x="2.6924%" y="431.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="2.4424%" y="405" width="0.0230%" height="15" fill="rgb(208,32,45)" fg:x="106" fg:w="1"/><text x="2.6924%" y="415.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="2.4424%" y="389" width="0.0230%" height="15" fill="rgb(207,135,9)" fg:x="106" fg:w="1"/><text x="2.6924%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (3 samples, 0.07%)</title><rect x="2.4194%" y="885" width="0.0691%" height="15" fill="rgb(206,86,44)" fg:x="105" fg:w="3"/><text x="2.6694%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (3 samples, 0.07%)</title><rect x="2.4194%" y="869" width="0.0691%" height="15" fill="rgb(245,177,15)" fg:x="105" fg:w="3"/><text x="2.6694%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.07%)</title><rect x="2.4194%" y="853" width="0.0691%" height="15" fill="rgb(206,64,50)" fg:x="105" fg:w="3"/><text x="2.6694%" y="863.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="2.4194%" y="837" width="0.0691%" height="15" fill="rgb(234,36,40)" fg:x="105" fg:w="3"/><text x="2.6694%" y="847.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.07%)</title><rect x="2.4194%" y="821" width="0.0691%" height="15" fill="rgb(213,64,8)" fg:x="105" fg:w="3"/><text x="2.6694%" y="831.50"></text></g><g><title>__rust_alloc (3 samples, 0.07%)</title><rect x="2.4194%" y="805" width="0.0691%" height="15" fill="rgb(210,75,36)" fg:x="105" fg:w="3"/><text x="2.6694%" y="815.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.07%)</title><rect x="2.4194%" y="789" width="0.0691%" height="15" fill="rgb(229,88,21)" fg:x="105" fg:w="3"/><text x="2.6694%" y="799.50"></text></g><g><title>_rjem_je_malloc_default (3 samples, 0.07%)</title><rect x="2.4194%" y="773" width="0.0691%" height="15" fill="rgb(252,204,47)" fg:x="105" fg:w="3"/><text x="2.6694%" y="783.50"></text></g><g><title>imalloc (3 samples, 0.07%)</title><rect x="2.4194%" y="757" width="0.0691%" height="15" fill="rgb(208,77,27)" fg:x="105" fg:w="3"/><text x="2.6694%" y="767.50"></text></g><g><title>imalloc_body (3 samples, 0.07%)</title><rect x="2.4194%" y="741" width="0.0691%" height="15" fill="rgb(221,76,26)" fg:x="105" fg:w="3"/><text x="2.6694%" y="751.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.07%)</title><rect x="2.4194%" y="725" width="0.0691%" height="15" fill="rgb(225,139,18)" fg:x="105" fg:w="3"/><text x="2.6694%" y="735.50"></text></g><g><title>iallocztm (3 samples, 0.07%)</title><rect x="2.4194%" y="709" width="0.0691%" height="15" fill="rgb(230,137,11)" fg:x="105" fg:w="3"/><text x="2.6694%" y="719.50"></text></g><g><title>arena_malloc (3 samples, 0.07%)</title><rect x="2.4194%" y="693" width="0.0691%" height="15" fill="rgb(212,28,1)" fg:x="105" fg:w="3"/><text x="2.6694%" y="703.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.07%)</title><rect x="2.4194%" y="677" width="0.0691%" height="15" fill="rgb(248,164,17)" fg:x="105" fg:w="3"/><text x="2.6694%" y="687.50"></text></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect x="2.4654%" y="661" width="0.0230%" height="15" fill="rgb(222,171,42)" fg:x="107" fg:w="1"/><text x="2.7154%" y="671.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="2.4654%" y="645" width="0.0230%" height="15" fill="rgb(243,84,45)" fg:x="107" fg:w="1"/><text x="2.7154%" y="655.50"></text></g><g><title>?? (19 samples, 0.44%)</title><rect x="2.1198%" y="901" width="0.4378%" height="15" fill="rgb(252,49,23)" fg:x="92" fg:w="19"/><text x="2.3698%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.07%)</title><rect x="2.4885%" y="885" width="0.0691%" height="15" fill="rgb(215,19,7)" fg:x="108" fg:w="3"/><text x="2.7385%" y="895.50"></text></g><g><title>?? (20 samples, 0.46%)</title><rect x="2.1198%" y="917" width="0.4608%" height="15" fill="rgb(238,81,41)" fg:x="92" fg:w="20"/><text x="2.3698%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert::_{{closure}} (1 samples, 0.02%)</title><rect x="2.5576%" y="901" width="0.0230%" height="15" fill="rgb(210,199,37)" fg:x="111" fg:w="1"/><text x="2.8076%" y="911.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="2.5576%" y="885" width="0.0230%" height="15" fill="rgb(244,192,49)" fg:x="111" fg:w="1"/><text x="2.8076%" y="895.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (1 samples, 0.02%)</title><rect x="2.5576%" y="869" width="0.0230%" height="15" fill="rgb(226,211,11)" fg:x="111" fg:w="1"/><text x="2.8076%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="2.5576%" y="853" width="0.0230%" height="15" fill="rgb(236,162,54)" fg:x="111" fg:w="1"/><text x="2.8076%" y="863.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::_{{closure}} (1 samples, 0.02%)</title><rect x="2.5576%" y="837" width="0.0230%" height="15" fill="rgb(220,229,9)" fg:x="111" fg:w="1"/><text x="2.8076%" y="847.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::_{{closure}} (1 samples, 0.02%)</title><rect x="2.5576%" y="821" width="0.0230%" height="15" fill="rgb(250,87,22)" fg:x="111" fg:w="1"/><text x="2.8076%" y="831.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="2.5576%" y="805" width="0.0230%" height="15" fill="rgb(239,43,17)" fg:x="111" fg:w="1"/><text x="2.8076%" y="815.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="2.5576%" y="789" width="0.0230%" height="15" fill="rgb(231,177,25)" fg:x="111" fg:w="1"/><text x="2.8076%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="2.5576%" y="773" width="0.0230%" height="15" fill="rgb(219,179,1)" fg:x="111" fg:w="1"/><text x="2.8076%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="2.5576%" y="757" width="0.0230%" height="15" fill="rgb(238,219,53)" fg:x="111" fg:w="1"/><text x="2.8076%" y="767.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="2.5576%" y="741" width="0.0230%" height="15" fill="rgb(232,167,36)" fg:x="111" fg:w="1"/><text x="2.8076%" y="751.50"></text></g><g><title>?? (22 samples, 0.51%)</title><rect x="2.1198%" y="933" width="0.5069%" height="15" fill="rgb(244,19,51)" fg:x="92" fg:w="22"/><text x="2.3698%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.05%)</title><rect x="2.5806%" y="917" width="0.0461%" height="15" fill="rgb(224,6,22)" fg:x="112" fg:w="2"/><text x="2.8306%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (25 samples, 0.58%)</title><rect x="2.0737%" y="949" width="0.5760%" height="15" fill="rgb(224,145,5)" fg:x="90" fg:w="25"/><text x="2.3237%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="2.6267%" y="933" width="0.0230%" height="15" fill="rgb(234,130,49)" fg:x="114" fg:w="1"/><text x="2.8767%" y="943.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="2.7419%" y="837" width="0.0230%" height="15" fill="rgb(254,6,2)" fg:x="119" fg:w="1"/><text x="2.9919%" y="847.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="2.7419%" y="821" width="0.0230%" height="15" fill="rgb(208,96,46)" fg:x="119" fg:w="1"/><text x="2.9919%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="2.8571%" y="773" width="0.0230%" height="15" fill="rgb(239,3,39)" fg:x="124" fg:w="1"/><text x="3.1071%" y="783.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="2.8571%" y="757" width="0.0230%" height="15" fill="rgb(233,210,1)" fg:x="124" fg:w="1"/><text x="3.1071%" y="767.50"></text></g><g><title>&lt;u32 as core::num::FromStrRadixHelper&gt;::checked_add (1 samples, 0.02%)</title><rect x="2.8802%" y="773" width="0.0230%" height="15" fill="rgb(244,137,37)" fg:x="125" fg:w="1"/><text x="3.1302%" y="783.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_add (1 samples, 0.02%)</title><rect x="2.8802%" y="757" width="0.0230%" height="15" fill="rgb(240,136,2)" fg:x="125" fg:w="1"/><text x="3.1302%" y="767.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="2.8802%" y="741" width="0.0230%" height="15" fill="rgb(239,18,37)" fg:x="125" fg:w="1"/><text x="3.1302%" y="751.50"></text></g><g><title>&lt;u32 as core::num::FromStrRadixHelper&gt;::checked_mul (1 samples, 0.02%)</title><rect x="2.9032%" y="773" width="0.0230%" height="15" fill="rgb(218,185,22)" fg:x="126" fg:w="1"/><text x="3.1532%" y="783.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_mul (1 samples, 0.02%)</title><rect x="2.9032%" y="757" width="0.0230%" height="15" fill="rgb(225,218,4)" fg:x="126" fg:w="1"/><text x="3.1532%" y="767.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="2.9032%" y="741" width="0.0230%" height="15" fill="rgb(230,182,32)" fg:x="126" fg:w="1"/><text x="3.1532%" y="751.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (9 samples, 0.21%)</title><rect x="2.7419%" y="917" width="0.2074%" height="15" fill="rgb(242,56,43)" fg:x="119" fg:w="9"/><text x="2.9919%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.21%)</title><rect x="2.7419%" y="901" width="0.2074%" height="15" fill="rgb(233,99,24)" fg:x="119" fg:w="9"/><text x="2.9919%" y="911.50"></text></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize (9 samples, 0.21%)</title><rect x="2.7419%" y="885" width="0.2074%" height="15" fill="rgb(234,209,42)" fg:x="119" fg:w="9"/><text x="2.9919%" y="895.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_str (9 samples, 0.21%)</title><rect x="2.7419%" y="869" width="0.2074%" height="15" fill="rgb(227,7,12)" fg:x="119" fg:w="9"/><text x="2.9919%" y="879.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.21%)</title><rect x="2.7419%" y="853" width="0.2074%" height="15" fill="rgb(245,203,43)" fg:x="119" fg:w="9"/><text x="2.9919%" y="863.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (8 samples, 0.18%)</title><rect x="2.7650%" y="837" width="0.1843%" height="15" fill="rgb(238,205,33)" fg:x="120" fg:w="8"/><text x="3.0150%" y="847.50"></text></g><g><title>&lt;&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize::Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_str (8 samples, 0.18%)</title><rect x="2.7650%" y="821" width="0.1843%" height="15" fill="rgb(231,56,7)" fg:x="120" fg:w="8"/><text x="3.0150%" y="831.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (8 samples, 0.18%)</title><rect x="2.7650%" y="805" width="0.1843%" height="15" fill="rgb(244,186,29)" fg:x="120" fg:w="8"/><text x="3.0150%" y="815.50"></text></g><g><title>core::num::from_str_radix (8 samples, 0.18%)</title><rect x="2.7650%" y="789" width="0.1843%" height="15" fill="rgb(234,111,31)" fg:x="120" fg:w="8"/><text x="3.0150%" y="799.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (1 samples, 0.02%)</title><rect x="2.9263%" y="773" width="0.0230%" height="15" fill="rgb(241,149,10)" fg:x="127" fg:w="1"/><text x="3.1763%" y="783.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="2.9263%" y="757" width="0.0230%" height="15" fill="rgb(249,206,44)" fg:x="127" fg:w="1"/><text x="3.1763%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.14%)</title><rect x="3.1797%" y="837" width="0.1382%" height="15" fill="rgb(251,153,30)" fg:x="138" fg:w="6"/><text x="3.4297%" y="847.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="3.3641%" y="741" width="0.0461%" height="15" fill="rgb(239,152,38)" fg:x="146" fg:w="2"/><text x="3.6141%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="3.4101%" y="725" width="0.0230%" height="15" fill="rgb(249,139,47)" fg:x="148" fg:w="1"/><text x="3.6601%" y="735.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="3.4101%" y="741" width="0.0461%" height="15" fill="rgb(244,64,35)" fg:x="148" fg:w="2"/><text x="3.6601%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="3.4332%" y="725" width="0.0230%" height="15" fill="rgb(216,46,15)" fg:x="149" fg:w="1"/><text x="3.6832%" y="735.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="3.4332%" y="709" width="0.0230%" height="15" fill="rgb(250,74,19)" fg:x="149" fg:w="1"/><text x="3.6832%" y="719.50"></text></g><g><title>serde::de::MapAccess::next_key (16 samples, 0.37%)</title><rect x="3.3180%" y="837" width="0.3687%" height="15" fill="rgb(249,42,33)" fg:x="144" fg:w="16"/><text x="3.5680%" y="847.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (16 samples, 0.37%)</title><rect x="3.3180%" y="821" width="0.3687%" height="15" fill="rgb(242,149,17)" fg:x="144" fg:w="16"/><text x="3.5680%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 0.37%)</title><rect x="3.3180%" y="805" width="0.3687%" height="15" fill="rgb(244,29,21)" fg:x="144" fg:w="16"/><text x="3.5680%" y="815.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (16 samples, 0.37%)</title><rect x="3.3180%" y="789" width="0.3687%" height="15" fill="rgb(220,130,37)" fg:x="144" fg:w="16"/><text x="3.5680%" y="799.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_identifier (16 samples, 0.37%)</title><rect x="3.3180%" y="773" width="0.3687%" height="15" fill="rgb(211,67,2)" fg:x="144" fg:w="16"/><text x="3.5680%" y="783.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (16 samples, 0.37%)</title><rect x="3.3180%" y="757" width="0.3687%" height="15" fill="rgb(235,68,52)" fg:x="144" fg:w="16"/><text x="3.5680%" y="767.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (10 samples, 0.23%)</title><rect x="3.4562%" y="741" width="0.2304%" height="15" fill="rgb(246,142,3)" fg:x="150" fg:w="10"/><text x="3.7062%" y="751.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (10 samples, 0.23%)</title><rect x="3.4562%" y="725" width="0.2304%" height="15" fill="rgb(241,25,7)" fg:x="150" fg:w="10"/><text x="3.7062%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (8 samples, 0.18%)</title><rect x="3.5023%" y="709" width="0.1843%" height="15" fill="rgb(242,119,39)" fg:x="152" fg:w="8"/><text x="3.7523%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.18%)</title><rect x="3.5023%" y="693" width="0.1843%" height="15" fill="rgb(241,98,45)" fg:x="152" fg:w="8"/><text x="3.7523%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (8 samples, 0.18%)</title><rect x="3.5023%" y="677" width="0.1843%" height="15" fill="rgb(254,28,30)" fg:x="152" fg:w="8"/><text x="3.7523%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8 samples, 0.18%)</title><rect x="3.5023%" y="661" width="0.1843%" height="15" fill="rgb(241,142,54)" fg:x="152" fg:w="8"/><text x="3.7523%" y="671.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.05%)</title><rect x="3.7327%" y="405" width="0.0461%" height="15" fill="rgb(222,85,15)" fg:x="162" fg:w="2"/><text x="3.9827%" y="415.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.05%)</title><rect x="3.7327%" y="389" width="0.0461%" height="15" fill="rgb(210,85,47)" fg:x="162" fg:w="2"/><text x="3.9827%" y="399.50"></text></g><g><title>arena_slab_reg_alloc_batch (2 samples, 0.05%)</title><rect x="3.7327%" y="373" width="0.0461%" height="15" fill="rgb(224,206,25)" fg:x="162" fg:w="2"/><text x="3.9827%" y="383.50"></text></g><g><title>_rjem_je_malloc_default (3 samples, 0.07%)</title><rect x="3.7327%" y="517" width="0.0691%" height="15" fill="rgb(243,201,19)" fg:x="162" fg:w="3"/><text x="3.9827%" y="527.50"></text></g><g><title>imalloc (3 samples, 0.07%)</title><rect x="3.7327%" y="501" width="0.0691%" height="15" fill="rgb(236,59,4)" fg:x="162" fg:w="3"/><text x="3.9827%" y="511.50"></text></g><g><title>imalloc_body (3 samples, 0.07%)</title><rect x="3.7327%" y="485" width="0.0691%" height="15" fill="rgb(254,179,45)" fg:x="162" fg:w="3"/><text x="3.9827%" y="495.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.07%)</title><rect x="3.7327%" y="469" width="0.0691%" height="15" fill="rgb(226,14,10)" fg:x="162" fg:w="3"/><text x="3.9827%" y="479.50"></text></g><g><title>iallocztm (3 samples, 0.07%)</title><rect x="3.7327%" y="453" width="0.0691%" height="15" fill="rgb(244,27,41)" fg:x="162" fg:w="3"/><text x="3.9827%" y="463.50"></text></g><g><title>arena_malloc (3 samples, 0.07%)</title><rect x="3.7327%" y="437" width="0.0691%" height="15" fill="rgb(235,35,32)" fg:x="162" fg:w="3"/><text x="3.9827%" y="447.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.07%)</title><rect x="3.7327%" y="421" width="0.0691%" height="15" fill="rgb(218,68,31)" fg:x="162" fg:w="3"/><text x="3.9827%" y="431.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (1 samples, 0.02%)</title><rect x="3.7788%" y="405" width="0.0230%" height="15" fill="rgb(207,120,37)" fg:x="164" fg:w="1"/><text x="4.0288%" y="415.50"></text></g><g><title>_rjem_malloc (2 samples, 0.05%)</title><rect x="3.8018%" y="501" width="0.0461%" height="15" fill="rgb(227,98,0)" fg:x="165" fg:w="2"/><text x="4.0518%" y="511.50"></text></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect x="3.8479%" y="485" width="0.0230%" height="15" fill="rgb(207,7,3)" fg:x="167" fg:w="1"/><text x="4.0979%" y="495.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="3.8479%" y="469" width="0.0230%" height="15" fill="rgb(206,98,19)" fg:x="167" fg:w="1"/><text x="4.0979%" y="479.50"></text></g><g><title>?? (7 samples, 0.16%)</title><rect x="3.7327%" y="645" width="0.1613%" height="15" fill="rgb(217,5,26)" fg:x="162" fg:w="7"/><text x="3.9827%" y="655.50"></text></g><g><title>?? (7 samples, 0.16%)</title><rect x="3.7327%" y="629" width="0.1613%" height="15" fill="rgb(235,190,38)" fg:x="162" fg:w="7"/><text x="3.9827%" y="639.50"></text></g><g><title>?? (7 samples, 0.16%)</title><rect x="3.7327%" y="613" width="0.1613%" height="15" fill="rgb(247,86,24)" fg:x="162" fg:w="7"/><text x="3.9827%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.16%)</title><rect x="3.7327%" y="597" width="0.1613%" height="15" fill="rgb(205,101,16)" fg:x="162" fg:w="7"/><text x="3.9827%" y="607.50"></text></g><g><title>?? (7 samples, 0.16%)</title><rect x="3.7327%" y="581" width="0.1613%" height="15" fill="rgb(246,168,33)" fg:x="162" fg:w="7"/><text x="3.9827%" y="591.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.16%)</title><rect x="3.7327%" y="565" width="0.1613%" height="15" fill="rgb(231,114,1)" fg:x="162" fg:w="7"/><text x="3.9827%" y="575.50"></text></g><g><title>__rust_alloc (7 samples, 0.16%)</title><rect x="3.7327%" y="549" width="0.1613%" height="15" fill="rgb(207,184,53)" fg:x="162" fg:w="7"/><text x="3.9827%" y="559.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.16%)</title><rect x="3.7327%" y="533" width="0.1613%" height="15" fill="rgb(224,95,51)" fg:x="162" fg:w="7"/><text x="3.9827%" y="543.50"></text></g><g><title>_rjem_malloc (4 samples, 0.09%)</title><rect x="3.8018%" y="517" width="0.0922%" height="15" fill="rgb(212,188,45)" fg:x="165" fg:w="4"/><text x="4.0518%" y="527.50"></text></g><g><title>imalloc_fastpath (2 samples, 0.05%)</title><rect x="3.8479%" y="501" width="0.0461%" height="15" fill="rgb(223,154,38)" fg:x="167" fg:w="2"/><text x="4.0979%" y="511.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="3.8710%" y="485" width="0.0230%" height="15" fill="rgb(251,22,52)" fg:x="168" fg:w="1"/><text x="4.1210%" y="495.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="3.8710%" y="469" width="0.0230%" height="15" fill="rgb(229,209,22)" fg:x="168" fg:w="1"/><text x="4.1210%" y="479.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (9 samples, 0.21%)</title><rect x="3.7327%" y="757" width="0.2074%" height="15" fill="rgb(234,138,34)" fg:x="162" fg:w="9"/><text x="3.9827%" y="767.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (9 samples, 0.21%)</title><rect x="3.7327%" y="741" width="0.2074%" height="15" fill="rgb(212,95,11)" fg:x="162" fg:w="9"/><text x="3.9827%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (9 samples, 0.21%)</title><rect x="3.7327%" y="725" width="0.2074%" height="15" fill="rgb(240,179,47)" fg:x="162" fg:w="9"/><text x="3.9827%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.21%)</title><rect x="3.7327%" y="709" width="0.2074%" height="15" fill="rgb(240,163,11)" fg:x="162" fg:w="9"/><text x="3.9827%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.21%)</title><rect x="3.7327%" y="693" width="0.2074%" height="15" fill="rgb(236,37,12)" fg:x="162" fg:w="9"/><text x="3.9827%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.21%)</title><rect x="3.7327%" y="677" width="0.2074%" height="15" fill="rgb(232,164,16)" fg:x="162" fg:w="9"/><text x="3.9827%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.21%)</title><rect x="3.7327%" y="661" width="0.2074%" height="15" fill="rgb(244,205,15)" fg:x="162" fg:w="9"/><text x="3.9827%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.05%)</title><rect x="3.8940%" y="645" width="0.0461%" height="15" fill="rgb(223,117,47)" fg:x="169" fg:w="2"/><text x="4.1440%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="3.8940%" y="629" width="0.0461%" height="15" fill="rgb(244,107,35)" fg:x="169" fg:w="2"/><text x="4.1440%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="3.8940%" y="613" width="0.0461%" height="15" fill="rgb(205,140,8)" fg:x="169" fg:w="2"/><text x="4.1440%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (10 samples, 0.23%)</title><rect x="3.7327%" y="789" width="0.2304%" height="15" fill="rgb(228,84,46)" fg:x="162" fg:w="10"/><text x="3.9827%" y="799.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_string (10 samples, 0.23%)</title><rect x="3.7327%" y="773" width="0.2304%" height="15" fill="rgb(254,188,9)" fg:x="162" fg:w="10"/><text x="3.9827%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="3.9401%" y="757" width="0.0230%" height="15" fill="rgb(206,112,54)" fg:x="171" fg:w="1"/><text x="4.1901%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="3.9401%" y="741" width="0.0230%" height="15" fill="rgb(216,84,49)" fg:x="171" fg:w="1"/><text x="4.1901%" y="751.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="3.9401%" y="725" width="0.0230%" height="15" fill="rgb(214,194,35)" fg:x="171" fg:w="1"/><text x="4.1901%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="4.0092%" y="741" width="0.0230%" height="15" fill="rgb(249,28,3)" fg:x="174" fg:w="1"/><text x="4.2592%" y="751.50"></text></g><g><title>arena_slab_reg_alloc_batch (2 samples, 0.05%)</title><rect x="4.0323%" y="453" width="0.0461%" height="15" fill="rgb(222,56,52)" fg:x="175" fg:w="2"/><text x="4.2823%" y="463.50"></text></g><g><title>_rjem_je_malloc_default (3 samples, 0.07%)</title><rect x="4.0323%" y="597" width="0.0691%" height="15" fill="rgb(245,217,50)" fg:x="175" fg:w="3"/><text x="4.2823%" y="607.50"></text></g><g><title>imalloc (3 samples, 0.07%)</title><rect x="4.0323%" y="581" width="0.0691%" height="15" fill="rgb(213,201,24)" fg:x="175" fg:w="3"/><text x="4.2823%" y="591.50"></text></g><g><title>imalloc_body (3 samples, 0.07%)</title><rect x="4.0323%" y="565" width="0.0691%" height="15" fill="rgb(248,116,28)" fg:x="175" fg:w="3"/><text x="4.2823%" y="575.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.07%)</title><rect x="4.0323%" y="549" width="0.0691%" height="15" fill="rgb(219,72,43)" fg:x="175" fg:w="3"/><text x="4.2823%" y="559.50"></text></g><g><title>iallocztm (3 samples, 0.07%)</title><rect x="4.0323%" y="533" width="0.0691%" height="15" fill="rgb(209,138,14)" fg:x="175" fg:w="3"/><text x="4.2823%" y="543.50"></text></g><g><title>arena_malloc (3 samples, 0.07%)</title><rect x="4.0323%" y="517" width="0.0691%" height="15" fill="rgb(222,18,33)" fg:x="175" fg:w="3"/><text x="4.2823%" y="527.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.07%)</title><rect x="4.0323%" y="501" width="0.0691%" height="15" fill="rgb(213,199,7)" fg:x="175" fg:w="3"/><text x="4.2823%" y="511.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (3 samples, 0.07%)</title><rect x="4.0323%" y="485" width="0.0691%" height="15" fill="rgb(250,110,10)" fg:x="175" fg:w="3"/><text x="4.2823%" y="495.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (3 samples, 0.07%)</title><rect x="4.0323%" y="469" width="0.0691%" height="15" fill="rgb(248,123,6)" fg:x="175" fg:w="3"/><text x="4.2823%" y="479.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="4.0783%" y="453" width="0.0230%" height="15" fill="rgb(206,91,31)" fg:x="177" fg:w="1"/><text x="4.3283%" y="463.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="4.0783%" y="437" width="0.0230%" height="15" fill="rgb(211,154,13)" fg:x="177" fg:w="1"/><text x="4.3283%" y="447.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="4.0783%" y="421" width="0.0230%" height="15" fill="rgb(225,148,7)" fg:x="177" fg:w="1"/><text x="4.3283%" y="431.50"></text></g><g><title>?? (6 samples, 0.14%)</title><rect x="4.0323%" y="741" width="0.1382%" height="15" fill="rgb(220,160,43)" fg:x="175" fg:w="6"/><text x="4.2823%" y="751.50"></text></g><g><title>?? (6 samples, 0.14%)</title><rect x="4.0323%" y="725" width="0.1382%" height="15" fill="rgb(213,52,39)" fg:x="175" fg:w="6"/><text x="4.2823%" y="735.50"></text></g><g><title>?? (6 samples, 0.14%)</title><rect x="4.0323%" y="709" width="0.1382%" height="15" fill="rgb(243,137,7)" fg:x="175" fg:w="6"/><text x="4.2823%" y="719.50"></text></g><g><title>?? (6 samples, 0.14%)</title><rect x="4.0323%" y="693" width="0.1382%" height="15" fill="rgb(230,79,13)" fg:x="175" fg:w="6"/><text x="4.2823%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.14%)</title><rect x="4.0323%" y="677" width="0.1382%" height="15" fill="rgb(247,105,23)" fg:x="175" fg:w="6"/><text x="4.2823%" y="687.50"></text></g><g><title>?? (6 samples, 0.14%)</title><rect x="4.0323%" y="661" width="0.1382%" height="15" fill="rgb(223,179,41)" fg:x="175" fg:w="6"/><text x="4.2823%" y="671.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.14%)</title><rect x="4.0323%" y="645" width="0.1382%" height="15" fill="rgb(218,9,34)" fg:x="175" fg:w="6"/><text x="4.2823%" y="655.50"></text></g><g><title>__rust_alloc (6 samples, 0.14%)</title><rect x="4.0323%" y="629" width="0.1382%" height="15" fill="rgb(222,106,8)" fg:x="175" fg:w="6"/><text x="4.2823%" y="639.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.14%)</title><rect x="4.0323%" y="613" width="0.1382%" height="15" fill="rgb(211,220,0)" fg:x="175" fg:w="6"/><text x="4.2823%" y="623.50"></text></g><g><title>_rjem_malloc (3 samples, 0.07%)</title><rect x="4.1014%" y="597" width="0.0691%" height="15" fill="rgb(229,52,16)" fg:x="178" fg:w="3"/><text x="4.3514%" y="607.50"></text></g><g><title>imalloc_fastpath (3 samples, 0.07%)</title><rect x="4.1014%" y="581" width="0.0691%" height="15" fill="rgb(212,155,18)" fg:x="178" fg:w="3"/><text x="4.3514%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="4.1475%" y="565" width="0.0230%" height="15" fill="rgb(242,21,14)" fg:x="180" fg:w="1"/><text x="4.3975%" y="575.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="4.1475%" y="549" width="0.0230%" height="15" fill="rgb(222,19,48)" fg:x="180" fg:w="1"/><text x="4.3975%" y="559.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (10 samples, 0.23%)</title><rect x="3.9631%" y="757" width="0.2304%" height="15" fill="rgb(232,45,27)" fg:x="172" fg:w="10"/><text x="4.2131%" y="767.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="4.1705%" y="741" width="0.0230%" height="15" fill="rgb(249,103,42)" fg:x="181" fg:w="1"/><text x="4.4205%" y="751.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="4.1705%" y="725" width="0.0230%" height="15" fill="rgb(246,81,33)" fg:x="181" fg:w="1"/><text x="4.4205%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="4.1705%" y="709" width="0.0230%" height="15" fill="rgb(252,33,42)" fg:x="181" fg:w="1"/><text x="4.4205%" y="719.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="4.1705%" y="693" width="0.0230%" height="15" fill="rgb(209,212,41)" fg:x="181" fg:w="1"/><text x="4.4205%" y="703.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect x="4.1705%" y="677" width="0.0230%" height="15" fill="rgb(207,154,6)" fg:x="181" fg:w="1"/><text x="4.4205%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="4.1705%" y="661" width="0.0230%" height="15" fill="rgb(223,64,47)" fg:x="181" fg:w="1"/><text x="4.4205%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (11 samples, 0.25%)</title><rect x="3.9631%" y="789" width="0.2535%" height="15" fill="rgb(211,161,38)" fg:x="172" fg:w="11"/><text x="4.2131%" y="799.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (11 samples, 0.25%)</title><rect x="3.9631%" y="773" width="0.2535%" height="15" fill="rgb(219,138,40)" fg:x="172" fg:w="11"/><text x="4.2131%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="4.1935%" y="757" width="0.0230%" height="15" fill="rgb(241,228,46)" fg:x="182" fg:w="1"/><text x="4.4435%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="4.1935%" y="741" width="0.0230%" height="15" fill="rgb(223,209,38)" fg:x="182" fg:w="1"/><text x="4.4435%" y="751.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="4.1935%" y="725" width="0.0230%" height="15" fill="rgb(236,164,45)" fg:x="182" fg:w="1"/><text x="4.4435%" y="735.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.05%)</title><rect x="4.2627%" y="357" width="0.0461%" height="15" fill="rgb(231,15,5)" fg:x="185" fg:w="2"/><text x="4.5127%" y="367.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.05%)</title><rect x="4.2627%" y="341" width="0.0461%" height="15" fill="rgb(252,35,15)" fg:x="185" fg:w="2"/><text x="4.5127%" y="351.50"></text></g><g><title>_rjem_je_arena_bin_choose (1 samples, 0.02%)</title><rect x="4.2857%" y="325" width="0.0230%" height="15" fill="rgb(248,181,18)" fg:x="186" fg:w="1"/><text x="4.5357%" y="335.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="4.2627%" y="597" width="0.0691%" height="15" fill="rgb(233,39,42)" fg:x="185" fg:w="3"/><text x="4.5127%" y="607.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="4.2627%" y="581" width="0.0691%" height="15" fill="rgb(238,110,33)" fg:x="185" fg:w="3"/><text x="4.5127%" y="591.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="4.2627%" y="565" width="0.0691%" height="15" fill="rgb(233,195,10)" fg:x="185" fg:w="3"/><text x="4.5127%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.07%)</title><rect x="4.2627%" y="549" width="0.0691%" height="15" fill="rgb(254,105,3)" fg:x="185" fg:w="3"/><text x="4.5127%" y="559.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="4.2627%" y="533" width="0.0691%" height="15" fill="rgb(221,225,9)" fg:x="185" fg:w="3"/><text x="4.5127%" y="543.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.07%)</title><rect x="4.2627%" y="517" width="0.0691%" height="15" fill="rgb(224,227,45)" fg:x="185" fg:w="3"/><text x="4.5127%" y="527.50"></text></g><g><title>__rust_alloc (3 samples, 0.07%)</title><rect x="4.2627%" y="501" width="0.0691%" height="15" fill="rgb(229,198,43)" fg:x="185" fg:w="3"/><text x="4.5127%" y="511.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.07%)</title><rect x="4.2627%" y="485" width="0.0691%" height="15" fill="rgb(206,209,35)" fg:x="185" fg:w="3"/><text x="4.5127%" y="495.50"></text></g><g><title>_rjem_je_malloc_default (3 samples, 0.07%)</title><rect x="4.2627%" y="469" width="0.0691%" height="15" fill="rgb(245,195,53)" fg:x="185" fg:w="3"/><text x="4.5127%" y="479.50"></text></g><g><title>imalloc (3 samples, 0.07%)</title><rect x="4.2627%" y="453" width="0.0691%" height="15" fill="rgb(240,92,26)" fg:x="185" fg:w="3"/><text x="4.5127%" y="463.50"></text></g><g><title>imalloc_body (3 samples, 0.07%)</title><rect x="4.2627%" y="437" width="0.0691%" height="15" fill="rgb(207,40,23)" fg:x="185" fg:w="3"/><text x="4.5127%" y="447.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.07%)</title><rect x="4.2627%" y="421" width="0.0691%" height="15" fill="rgb(223,111,35)" fg:x="185" fg:w="3"/><text x="4.5127%" y="431.50"></text></g><g><title>iallocztm (3 samples, 0.07%)</title><rect x="4.2627%" y="405" width="0.0691%" height="15" fill="rgb(229,147,28)" fg:x="185" fg:w="3"/><text x="4.5127%" y="415.50"></text></g><g><title>arena_malloc (3 samples, 0.07%)</title><rect x="4.2627%" y="389" width="0.0691%" height="15" fill="rgb(211,29,28)" fg:x="185" fg:w="3"/><text x="4.5127%" y="399.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.07%)</title><rect x="4.2627%" y="373" width="0.0691%" height="15" fill="rgb(228,72,33)" fg:x="185" fg:w="3"/><text x="4.5127%" y="383.50"></text></g><g><title>arena_choose (1 samples, 0.02%)</title><rect x="4.3088%" y="357" width="0.0230%" height="15" fill="rgb(205,214,31)" fg:x="187" fg:w="1"/><text x="4.5588%" y="367.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (60 samples, 1.38%)</title><rect x="2.9954%" y="853" width="1.3825%" height="15" fill="rgb(224,111,15)" fg:x="130" fg:w="60"/><text x="3.2454%" y="863.50"></text></g><g><title>serde::de::MapAccess::next_value (30 samples, 0.69%)</title><rect x="3.6866%" y="837" width="0.6912%" height="15" fill="rgb(253,21,26)" fg:x="160" fg:w="30"/><text x="3.9366%" y="847.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (30 samples, 0.69%)</title><rect x="3.6866%" y="821" width="0.6912%" height="15" fill="rgb(245,139,43)" fg:x="160" fg:w="30"/><text x="3.9366%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (29 samples, 0.67%)</title><rect x="3.7097%" y="805" width="0.6682%" height="15" fill="rgb(252,170,7)" fg:x="161" fg:w="29"/><text x="3.9597%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (7 samples, 0.16%)</title><rect x="4.2166%" y="789" width="0.1613%" height="15" fill="rgb(231,118,14)" fg:x="183" fg:w="7"/><text x="4.4666%" y="799.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_option (7 samples, 0.16%)</title><rect x="4.2166%" y="773" width="0.1613%" height="15" fill="rgb(238,83,0)" fg:x="183" fg:w="7"/><text x="4.4666%" y="783.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (6 samples, 0.14%)</title><rect x="4.2396%" y="757" width="0.1382%" height="15" fill="rgb(221,39,39)" fg:x="184" fg:w="6"/><text x="4.4896%" y="767.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (6 samples, 0.14%)</title><rect x="4.2396%" y="741" width="0.1382%" height="15" fill="rgb(222,119,46)" fg:x="184" fg:w="6"/><text x="4.4896%" y="751.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_string (6 samples, 0.14%)</title><rect x="4.2396%" y="725" width="0.1382%" height="15" fill="rgb(222,165,49)" fg:x="184" fg:w="6"/><text x="4.4896%" y="735.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (6 samples, 0.14%)</title><rect x="4.2396%" y="709" width="0.1382%" height="15" fill="rgb(219,113,52)" fg:x="184" fg:w="6"/><text x="4.4896%" y="719.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5 samples, 0.12%)</title><rect x="4.2627%" y="693" width="0.1152%" height="15" fill="rgb(214,7,15)" fg:x="185" fg:w="5"/><text x="4.5127%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (5 samples, 0.12%)</title><rect x="4.2627%" y="677" width="0.1152%" height="15" fill="rgb(235,32,4)" fg:x="185" fg:w="5"/><text x="4.5127%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.12%)</title><rect x="4.2627%" y="661" width="0.1152%" height="15" fill="rgb(238,90,54)" fg:x="185" fg:w="5"/><text x="4.5127%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.12%)</title><rect x="4.2627%" y="645" width="0.1152%" height="15" fill="rgb(213,208,19)" fg:x="185" fg:w="5"/><text x="4.5127%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.12%)</title><rect x="4.2627%" y="629" width="0.1152%" height="15" fill="rgb(233,156,4)" fg:x="185" fg:w="5"/><text x="4.5127%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.12%)</title><rect x="4.2627%" y="613" width="0.1152%" height="15" fill="rgb(207,194,5)" fg:x="185" fg:w="5"/><text x="4.5127%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.05%)</title><rect x="4.3318%" y="597" width="0.0461%" height="15" fill="rgb(206,111,30)" fg:x="188" fg:w="2"/><text x="4.5818%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="4.3318%" y="581" width="0.0461%" height="15" fill="rgb(243,70,54)" fg:x="188" fg:w="2"/><text x="4.5818%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="4.3318%" y="565" width="0.0461%" height="15" fill="rgb(242,28,8)" fg:x="188" fg:w="2"/><text x="4.5818%" y="575.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize (63 samples, 1.45%)</title><rect x="2.9493%" y="885" width="1.4516%" height="15" fill="rgb(219,106,18)" fg:x="128" fg:w="63"/><text x="3.1993%" y="895.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (63 samples, 1.45%)</title><rect x="2.9493%" y="869" width="1.4516%" height="15" fill="rgb(244,222,10)" fg:x="128" fg:w="63"/><text x="3.1993%" y="879.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="4.3779%" y="853" width="0.0230%" height="15" fill="rgb(236,179,52)" fg:x="190" fg:w="1"/><text x="4.6279%" y="863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="4.3779%" y="837" width="0.0230%" height="15" fill="rgb(213,23,39)" fg:x="190" fg:w="1"/><text x="4.6279%" y="847.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="4.4240%" y="741" width="0.0230%" height="15" fill="rgb(238,48,10)" fg:x="192" fg:w="1"/><text x="4.6740%" y="751.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="4.4240%" y="725" width="0.0230%" height="15" fill="rgb(251,196,23)" fg:x="192" fg:w="1"/><text x="4.6740%" y="735.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="4.4240%" y="709" width="0.0230%" height="15" fill="rgb(250,152,24)" fg:x="192" fg:w="1"/><text x="4.6740%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="4.4240%" y="693" width="0.0230%" height="15" fill="rgb(209,150,17)" fg:x="192" fg:w="1"/><text x="4.6740%" y="703.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="4.4240%" y="677" width="0.0230%" height="15" fill="rgb(234,202,34)" fg:x="192" fg:w="1"/><text x="4.6740%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="4.4240%" y="661" width="0.0230%" height="15" fill="rgb(253,148,53)" fg:x="192" fg:w="1"/><text x="4.6740%" y="671.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="4.4240%" y="645" width="0.0230%" height="15" fill="rgb(218,129,16)" fg:x="192" fg:w="1"/><text x="4.6740%" y="655.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="4.4240%" y="629" width="0.0230%" height="15" fill="rgb(216,85,19)" fg:x="192" fg:w="1"/><text x="4.6740%" y="639.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="4.4240%" y="613" width="0.0230%" height="15" fill="rgb(235,228,7)" fg:x="192" fg:w="1"/><text x="4.6740%" y="623.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="4.4240%" y="597" width="0.0230%" height="15" fill="rgb(245,175,0)" fg:x="192" fg:w="1"/><text x="4.6740%" y="607.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="4.4240%" y="581" width="0.0230%" height="15" fill="rgb(208,168,36)" fg:x="192" fg:w="1"/><text x="4.6740%" y="591.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="4.4240%" y="565" width="0.0230%" height="15" fill="rgb(246,171,24)" fg:x="192" fg:w="1"/><text x="4.6740%" y="575.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="4.4240%" y="549" width="0.0230%" height="15" fill="rgb(215,142,24)" fg:x="192" fg:w="1"/><text x="4.6740%" y="559.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="4.4240%" y="533" width="0.0230%" height="15" fill="rgb(250,187,7)" fg:x="192" fg:w="1"/><text x="4.6740%" y="543.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="4.4240%" y="517" width="0.0230%" height="15" fill="rgb(228,66,33)" fg:x="192" fg:w="1"/><text x="4.6740%" y="527.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="4.4240%" y="501" width="0.0230%" height="15" fill="rgb(234,215,21)" fg:x="192" fg:w="1"/><text x="4.6740%" y="511.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="4.4240%" y="485" width="0.0230%" height="15" fill="rgb(222,191,20)" fg:x="192" fg:w="1"/><text x="4.6740%" y="495.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="4.4240%" y="469" width="0.0230%" height="15" fill="rgb(245,79,54)" fg:x="192" fg:w="1"/><text x="4.6740%" y="479.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="4.4240%" y="453" width="0.0230%" height="15" fill="rgb(240,10,37)" fg:x="192" fg:w="1"/><text x="4.6740%" y="463.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="4.4240%" y="437" width="0.0230%" height="15" fill="rgb(214,192,32)" fg:x="192" fg:w="1"/><text x="4.6740%" y="447.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="4.4240%" y="421" width="0.0230%" height="15" fill="rgb(209,36,54)" fg:x="192" fg:w="1"/><text x="4.6740%" y="431.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="4.4240%" y="405" width="0.0230%" height="15" fill="rgb(220,10,11)" fg:x="192" fg:w="1"/><text x="4.6740%" y="415.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect x="4.4240%" y="389" width="0.0230%" height="15" fill="rgb(221,106,17)" fg:x="192" fg:w="1"/><text x="4.6740%" y="399.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect x="4.4240%" y="373" width="0.0230%" height="15" fill="rgb(251,142,44)" fg:x="192" fg:w="1"/><text x="4.6740%" y="383.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="4.4240%" y="357" width="0.0230%" height="15" fill="rgb(238,13,15)" fg:x="192" fg:w="1"/><text x="4.6740%" y="367.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="4.4240%" y="341" width="0.0230%" height="15" fill="rgb(208,107,27)" fg:x="192" fg:w="1"/><text x="4.6740%" y="351.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.02%)</title><rect x="4.4240%" y="325" width="0.0230%" height="15" fill="rgb(205,136,37)" fg:x="192" fg:w="1"/><text x="4.6740%" y="335.50"></text></g><g><title>eset_first_fit (1 samples, 0.02%)</title><rect x="4.4240%" y="309" width="0.0230%" height="15" fill="rgb(250,205,27)" fg:x="192" fg:w="1"/><text x="4.6740%" y="319.50"></text></g><g><title>sz_pind2sz (1 samples, 0.02%)</title><rect x="4.4240%" y="293" width="0.0230%" height="15" fill="rgb(210,80,43)" fg:x="192" fg:w="1"/><text x="4.6740%" y="303.50"></text></g><g><title>sz_pind2sz_lookup (1 samples, 0.02%)</title><rect x="4.4240%" y="277" width="0.0230%" height="15" fill="rgb(247,160,36)" fg:x="192" fg:w="1"/><text x="4.6740%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (108 samples, 2.49%)</title><rect x="2.0507%" y="965" width="2.4885%" height="15" fill="rgb(234,13,49)" fg:x="89" fg:w="108"/><text x="2.3007%" y="975.50">&lt;s..</text></g><g><title>serde::de::MapAccess::next_entry (82 samples, 1.89%)</title><rect x="2.6498%" y="949" width="1.8894%" height="15" fill="rgb(234,122,0)" fg:x="115" fg:w="82"/><text x="2.8998%" y="959.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (82 samples, 1.89%)</title><rect x="2.6498%" y="933" width="1.8894%" height="15" fill="rgb(207,146,38)" fg:x="115" fg:w="82"/><text x="2.8998%" y="943.50">s..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (69 samples, 1.59%)</title><rect x="2.9493%" y="917" width="1.5899%" height="15" fill="rgb(207,177,25)" fg:x="128" fg:w="69"/><text x="3.1993%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (69 samples, 1.59%)</title><rect x="2.9493%" y="901" width="1.5899%" height="15" fill="rgb(211,178,42)" fg:x="128" fg:w="69"/><text x="3.1993%" y="911.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (6 samples, 0.14%)</title><rect x="4.4009%" y="885" width="0.1382%" height="15" fill="rgb(230,69,54)" fg:x="191" fg:w="6"/><text x="4.6509%" y="895.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_string (5 samples, 0.12%)</title><rect x="4.4240%" y="869" width="0.1152%" height="15" fill="rgb(214,135,41)" fg:x="192" fg:w="5"/><text x="4.6740%" y="879.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (5 samples, 0.12%)</title><rect x="4.4240%" y="853" width="0.1152%" height="15" fill="rgb(237,67,25)" fg:x="192" fg:w="5"/><text x="4.6740%" y="863.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5 samples, 0.12%)</title><rect x="4.4240%" y="837" width="0.1152%" height="15" fill="rgb(222,189,50)" fg:x="192" fg:w="5"/><text x="4.6740%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (5 samples, 0.12%)</title><rect x="4.4240%" y="821" width="0.1152%" height="15" fill="rgb(245,148,34)" fg:x="192" fg:w="5"/><text x="4.6740%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.12%)</title><rect x="4.4240%" y="805" width="0.1152%" height="15" fill="rgb(222,29,6)" fg:x="192" fg:w="5"/><text x="4.6740%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.12%)</title><rect x="4.4240%" y="789" width="0.1152%" height="15" fill="rgb(221,189,43)" fg:x="192" fg:w="5"/><text x="4.6740%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.12%)</title><rect x="4.4240%" y="773" width="0.1152%" height="15" fill="rgb(207,36,27)" fg:x="192" fg:w="5"/><text x="4.6740%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.12%)</title><rect x="4.4240%" y="757" width="0.1152%" height="15" fill="rgb(217,90,24)" fg:x="192" fg:w="5"/><text x="4.6740%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.09%)</title><rect x="4.4470%" y="741" width="0.0922%" height="15" fill="rgb(224,66,35)" fg:x="193" fg:w="4"/><text x="4.6970%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.09%)</title><rect x="4.4470%" y="725" width="0.0922%" height="15" fill="rgb(221,13,50)" fg:x="193" fg:w="4"/><text x="4.6970%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.09%)</title><rect x="4.4470%" y="709" width="0.0922%" height="15" fill="rgb(236,68,49)" fg:x="193" fg:w="4"/><text x="4.6970%" y="719.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (109 samples, 2.51%)</title><rect x="2.0507%" y="997" width="2.5115%" height="15" fill="rgb(229,146,28)" fg:x="89" fg:w="109"/><text x="2.3007%" y="1007.50">se..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_map (109 samples, 2.51%)</title><rect x="2.0507%" y="981" width="2.5115%" height="15" fill="rgb(225,31,38)" fg:x="89" fg:w="109"/><text x="2.3007%" y="991.50">si..</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="4.5392%" y="965" width="0.0230%" height="15" fill="rgb(250,208,3)" fg:x="197" fg:w="1"/><text x="4.7892%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="4.5392%" y="949" width="0.0230%" height="15" fill="rgb(246,54,23)" fg:x="197" fg:w="1"/><text x="4.7892%" y="959.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="4.5392%" y="933" width="0.0230%" height="15" fill="rgb(243,76,11)" fg:x="197" fg:w="1"/><text x="4.7892%" y="943.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="4.5622%" y="933" width="0.0230%" height="15" fill="rgb(245,21,50)" fg:x="198" fg:w="1"/><text x="4.8122%" y="943.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="4.5622%" y="917" width="0.0230%" height="15" fill="rgb(228,9,43)" fg:x="198" fg:w="1"/><text x="4.8122%" y="927.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="4.5622%" y="901" width="0.0230%" height="15" fill="rgb(208,100,47)" fg:x="198" fg:w="1"/><text x="4.8122%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="4.5622%" y="885" width="0.0230%" height="15" fill="rgb(232,26,8)" fg:x="198" fg:w="1"/><text x="4.8122%" y="895.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="4.5622%" y="869" width="0.0230%" height="15" fill="rgb(216,166,38)" fg:x="198" fg:w="1"/><text x="4.8122%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="4.5622%" y="853" width="0.0230%" height="15" fill="rgb(251,202,51)" fg:x="198" fg:w="1"/><text x="4.8122%" y="863.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="4.5622%" y="837" width="0.0230%" height="15" fill="rgb(254,216,34)" fg:x="198" fg:w="1"/><text x="4.8122%" y="847.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="4.5622%" y="821" width="0.0230%" height="15" fill="rgb(251,32,27)" fg:x="198" fg:w="1"/><text x="4.8122%" y="831.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="4.5622%" y="805" width="0.0230%" height="15" fill="rgb(208,127,28)" fg:x="198" fg:w="1"/><text x="4.8122%" y="815.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="4.5622%" y="789" width="0.0230%" height="15" fill="rgb(224,137,22)" fg:x="198" fg:w="1"/><text x="4.8122%" y="799.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="4.5622%" y="773" width="0.0230%" height="15" fill="rgb(254,70,32)" fg:x="198" fg:w="1"/><text x="4.8122%" y="783.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="4.5622%" y="757" width="0.0230%" height="15" fill="rgb(229,75,37)" fg:x="198" fg:w="1"/><text x="4.8122%" y="767.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="4.5622%" y="741" width="0.0230%" height="15" fill="rgb(252,64,23)" fg:x="198" fg:w="1"/><text x="4.8122%" y="751.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="4.5622%" y="725" width="0.0230%" height="15" fill="rgb(232,162,48)" fg:x="198" fg:w="1"/><text x="4.8122%" y="735.50"></text></g><g><title>tcache_alloc_large (1 samples, 0.02%)</title><rect x="4.5622%" y="709" width="0.0230%" height="15" fill="rgb(246,160,12)" fg:x="198" fg:w="1"/><text x="4.8122%" y="719.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.02%)</title><rect x="4.5622%" y="693" width="0.0230%" height="15" fill="rgb(247,166,0)" fg:x="198" fg:w="1"/><text x="4.8122%" y="703.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.02%)</title><rect x="4.5622%" y="677" width="0.0230%" height="15" fill="rgb(249,219,21)" fg:x="198" fg:w="1"/><text x="4.8122%" y="687.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="4.5622%" y="661" width="0.0230%" height="15" fill="rgb(205,209,3)" fg:x="198" fg:w="1"/><text x="4.8122%" y="671.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="4.5622%" y="645" width="0.0230%" height="15" fill="rgb(243,44,1)" fg:x="198" fg:w="1"/><text x="4.8122%" y="655.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="4.5622%" y="629" width="0.0230%" height="15" fill="rgb(206,159,16)" fg:x="198" fg:w="1"/><text x="4.8122%" y="639.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="4.5622%" y="613" width="0.0230%" height="15" fill="rgb(244,77,30)" fg:x="198" fg:w="1"/><text x="4.8122%" y="623.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="4.5622%" y="597" width="0.0230%" height="15" fill="rgb(218,69,12)" fg:x="198" fg:w="1"/><text x="4.8122%" y="607.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="4.5622%" y="581" width="0.0230%" height="15" fill="rgb(212,87,7)" fg:x="198" fg:w="1"/><text x="4.8122%" y="591.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="4.5622%" y="565" width="0.0230%" height="15" fill="rgb(245,114,25)" fg:x="198" fg:w="1"/><text x="4.8122%" y="575.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="4.5622%" y="549" width="0.0230%" height="15" fill="rgb(210,61,42)" fg:x="198" fg:w="1"/><text x="4.8122%" y="559.50"></text></g><g><title>_rjem_je_emap_update_edata_state (1 samples, 0.02%)</title><rect x="4.5622%" y="533" width="0.0230%" height="15" fill="rgb(211,52,33)" fg:x="198" fg:w="1"/><text x="4.8122%" y="543.50"></text></g><g><title>rtree_leaf_elm_state_update (1 samples, 0.02%)</title><rect x="4.5622%" y="517" width="0.0230%" height="15" fill="rgb(234,58,33)" fg:x="198" fg:w="1"/><text x="4.8122%" y="527.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="4.5622%" y="949" width="0.0922%" height="15" fill="rgb(220,115,36)" fg:x="198" fg:w="4"/><text x="4.8122%" y="959.50"></text></g><g><title>core::ptr::write (3 samples, 0.07%)</title><rect x="4.5853%" y="933" width="0.0691%" height="15" fill="rgb(243,153,54)" fg:x="199" fg:w="3"/><text x="4.8353%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.14%)</title><rect x="4.8157%" y="853" width="0.1382%" height="15" fill="rgb(251,47,18)" fg:x="209" fg:w="6"/><text x="5.0657%" y="863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="5.0000%" y="757" width="0.0461%" height="15" fill="rgb(242,102,42)" fg:x="217" fg:w="2"/><text x="5.2500%" y="767.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="5.0461%" y="757" width="0.0461%" height="15" fill="rgb(234,31,38)" fg:x="219" fg:w="2"/><text x="5.2961%" y="767.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="5.0461%" y="741" width="0.0461%" height="15" fill="rgb(221,117,51)" fg:x="219" fg:w="2"/><text x="5.2961%" y="751.50"></text></g><g><title>serde::de::MapAccess::next_key (14 samples, 0.32%)</title><rect x="4.9539%" y="853" width="0.3226%" height="15" fill="rgb(212,20,18)" fg:x="215" fg:w="14"/><text x="5.2039%" y="863.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (14 samples, 0.32%)</title><rect x="4.9539%" y="837" width="0.3226%" height="15" fill="rgb(245,133,36)" fg:x="215" fg:w="14"/><text x="5.2039%" y="847.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.32%)</title><rect x="4.9539%" y="821" width="0.3226%" height="15" fill="rgb(212,6,19)" fg:x="215" fg:w="14"/><text x="5.2039%" y="831.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (14 samples, 0.32%)</title><rect x="4.9539%" y="805" width="0.3226%" height="15" fill="rgb(218,1,36)" fg:x="215" fg:w="14"/><text x="5.2039%" y="815.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_identifier (14 samples, 0.32%)</title><rect x="4.9539%" y="789" width="0.3226%" height="15" fill="rgb(246,84,54)" fg:x="215" fg:w="14"/><text x="5.2039%" y="799.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (14 samples, 0.32%)</title><rect x="4.9539%" y="773" width="0.3226%" height="15" fill="rgb(242,110,6)" fg:x="215" fg:w="14"/><text x="5.2039%" y="783.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (8 samples, 0.18%)</title><rect x="5.0922%" y="757" width="0.1843%" height="15" fill="rgb(214,47,5)" fg:x="221" fg:w="8"/><text x="5.3422%" y="767.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (8 samples, 0.18%)</title><rect x="5.0922%" y="741" width="0.1843%" height="15" fill="rgb(218,159,25)" fg:x="221" fg:w="8"/><text x="5.3422%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.12%)</title><rect x="5.1613%" y="725" width="0.1152%" height="15" fill="rgb(215,211,28)" fg:x="224" fg:w="5"/><text x="5.4113%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.12%)</title><rect x="5.1613%" y="709" width="0.1152%" height="15" fill="rgb(238,59,32)" fg:x="224" fg:w="5"/><text x="5.4113%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.12%)</title><rect x="5.1613%" y="693" width="0.1152%" height="15" fill="rgb(226,82,3)" fg:x="224" fg:w="5"/><text x="5.4113%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.12%)</title><rect x="5.1613%" y="677" width="0.1152%" height="15" fill="rgb(240,164,32)" fg:x="224" fg:w="5"/><text x="5.4113%" y="687.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for ()&gt;::deserialize (1 samples, 0.02%)</title><rect x="5.2995%" y="805" width="0.0230%" height="15" fill="rgb(232,46,7)" fg:x="230" fg:w="1"/><text x="5.5495%" y="815.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_unit (1 samples, 0.02%)</title><rect x="5.2995%" y="789" width="0.0230%" height="15" fill="rgb(229,129,53)" fg:x="230" fg:w="1"/><text x="5.5495%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="5.2995%" y="773" width="0.0230%" height="15" fill="rgb(234,188,29)" fg:x="230" fg:w="1"/><text x="5.5495%" y="783.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="5.2995%" y="757" width="0.0230%" height="15" fill="rgb(246,141,4)" fg:x="230" fg:w="1"/><text x="5.5495%" y="767.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="5.3687%" y="389" width="0.0230%" height="15" fill="rgb(229,23,39)" fg:x="233" fg:w="1"/><text x="5.6187%" y="399.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="5.3687%" y="373" width="0.0230%" height="15" fill="rgb(206,12,3)" fg:x="233" fg:w="1"/><text x="5.6187%" y="383.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="5.3687%" y="357" width="0.0230%" height="15" fill="rgb(252,226,20)" fg:x="233" fg:w="1"/><text x="5.6187%" y="367.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="5.3687%" y="341" width="0.0230%" height="15" fill="rgb(216,123,35)" fg:x="233" fg:w="1"/><text x="5.6187%" y="351.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="5.3687%" y="325" width="0.0230%" height="15" fill="rgb(212,68,40)" fg:x="233" fg:w="1"/><text x="5.6187%" y="335.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect x="5.3687%" y="309" width="0.0230%" height="15" fill="rgb(254,125,32)" fg:x="233" fg:w="1"/><text x="5.6187%" y="319.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect x="5.3687%" y="293" width="0.0230%" height="15" fill="rgb(253,97,22)" fg:x="233" fg:w="1"/><text x="5.6187%" y="303.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="5.3687%" y="277" width="0.0230%" height="15" fill="rgb(241,101,14)" fg:x="233" fg:w="1"/><text x="5.6187%" y="287.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="5.3687%" y="261" width="0.0230%" height="15" fill="rgb(238,103,29)" fg:x="233" fg:w="1"/><text x="5.6187%" y="271.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.02%)</title><rect x="5.3687%" y="245" width="0.0230%" height="15" fill="rgb(233,195,47)" fg:x="233" fg:w="1"/><text x="5.6187%" y="255.50"></text></g><g><title>eset_first_fit (1 samples, 0.02%)</title><rect x="5.3687%" y="229" width="0.0230%" height="15" fill="rgb(246,218,30)" fg:x="233" fg:w="1"/><text x="5.6187%" y="239.50"></text></g><g><title>edata_cmp_summary_comp (1 samples, 0.02%)</title><rect x="5.3687%" y="213" width="0.0230%" height="15" fill="rgb(219,145,47)" fg:x="233" fg:w="1"/><text x="5.6187%" y="223.50"></text></g><g><title>_rjem_je_malloc_default (2 samples, 0.05%)</title><rect x="5.3687%" y="533" width="0.0461%" height="15" fill="rgb(243,12,26)" fg:x="233" fg:w="2"/><text x="5.6187%" y="543.50"></text></g><g><title>imalloc (2 samples, 0.05%)</title><rect x="5.3687%" y="517" width="0.0461%" height="15" fill="rgb(214,87,16)" fg:x="233" fg:w="2"/><text x="5.6187%" y="527.50"></text></g><g><title>imalloc_body (2 samples, 0.05%)</title><rect x="5.3687%" y="501" width="0.0461%" height="15" fill="rgb(208,99,42)" fg:x="233" fg:w="2"/><text x="5.6187%" y="511.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.05%)</title><rect x="5.3687%" y="485" width="0.0461%" height="15" fill="rgb(253,99,2)" fg:x="233" fg:w="2"/><text x="5.6187%" y="495.50"></text></g><g><title>iallocztm (2 samples, 0.05%)</title><rect x="5.3687%" y="469" width="0.0461%" height="15" fill="rgb(220,168,23)" fg:x="233" fg:w="2"/><text x="5.6187%" y="479.50"></text></g><g><title>arena_malloc (2 samples, 0.05%)</title><rect x="5.3687%" y="453" width="0.0461%" height="15" fill="rgb(242,38,24)" fg:x="233" fg:w="2"/><text x="5.6187%" y="463.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.05%)</title><rect x="5.3687%" y="437" width="0.0461%" height="15" fill="rgb(225,182,9)" fg:x="233" fg:w="2"/><text x="5.6187%" y="447.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.05%)</title><rect x="5.3687%" y="421" width="0.0461%" height="15" fill="rgb(243,178,37)" fg:x="233" fg:w="2"/><text x="5.6187%" y="431.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.05%)</title><rect x="5.3687%" y="405" width="0.0461%" height="15" fill="rgb(232,139,19)" fg:x="233" fg:w="2"/><text x="5.6187%" y="415.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="5.3917%" y="389" width="0.0230%" height="15" fill="rgb(225,201,24)" fg:x="234" fg:w="1"/><text x="5.6417%" y="399.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="5.3917%" y="373" width="0.0230%" height="15" fill="rgb(221,47,46)" fg:x="234" fg:w="1"/><text x="5.6417%" y="383.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="5.3917%" y="357" width="0.0230%" height="15" fill="rgb(249,23,13)" fg:x="234" fg:w="1"/><text x="5.6417%" y="367.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (5 samples, 0.12%)</title><rect x="5.3226%" y="805" width="0.1152%" height="15" fill="rgb(219,9,5)" fg:x="231" fg:w="5"/><text x="5.5726%" y="815.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_string (5 samples, 0.12%)</title><rect x="5.3226%" y="789" width="0.1152%" height="15" fill="rgb(254,171,16)" fg:x="231" fg:w="5"/><text x="5.5726%" y="799.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (5 samples, 0.12%)</title><rect x="5.3226%" y="773" width="0.1152%" height="15" fill="rgb(230,171,20)" fg:x="231" fg:w="5"/><text x="5.5726%" y="783.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.09%)</title><rect x="5.3456%" y="757" width="0.0922%" height="15" fill="rgb(210,71,41)" fg:x="232" fg:w="4"/><text x="5.5956%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.09%)</title><rect x="5.3456%" y="741" width="0.0922%" height="15" fill="rgb(206,173,20)" fg:x="232" fg:w="4"/><text x="5.5956%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.09%)</title><rect x="5.3456%" y="725" width="0.0922%" height="15" fill="rgb(233,88,34)" fg:x="232" fg:w="4"/><text x="5.5956%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.09%)</title><rect x="5.3456%" y="709" width="0.0922%" height="15" fill="rgb(223,209,46)" fg:x="232" fg:w="4"/><text x="5.5956%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.09%)</title><rect x="5.3456%" y="693" width="0.0922%" height="15" fill="rgb(250,43,18)" fg:x="232" fg:w="4"/><text x="5.5956%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.09%)</title><rect x="5.3456%" y="677" width="0.0922%" height="15" fill="rgb(208,13,10)" fg:x="232" fg:w="4"/><text x="5.5956%" y="687.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="5.3456%" y="661" width="0.0922%" height="15" fill="rgb(212,200,36)" fg:x="232" fg:w="4"/><text x="5.5956%" y="671.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="5.3456%" y="645" width="0.0922%" height="15" fill="rgb(225,90,30)" fg:x="232" fg:w="4"/><text x="5.5956%" y="655.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="5.3456%" y="629" width="0.0922%" height="15" fill="rgb(236,182,39)" fg:x="232" fg:w="4"/><text x="5.5956%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.09%)</title><rect x="5.3456%" y="613" width="0.0922%" height="15" fill="rgb(212,144,35)" fg:x="232" fg:w="4"/><text x="5.5956%" y="623.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="5.3456%" y="597" width="0.0922%" height="15" fill="rgb(228,63,44)" fg:x="232" fg:w="4"/><text x="5.5956%" y="607.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.09%)</title><rect x="5.3456%" y="581" width="0.0922%" height="15" fill="rgb(228,109,6)" fg:x="232" fg:w="4"/><text x="5.5956%" y="591.50"></text></g><g><title>__rust_alloc (4 samples, 0.09%)</title><rect x="5.3456%" y="565" width="0.0922%" height="15" fill="rgb(238,117,24)" fg:x="232" fg:w="4"/><text x="5.5956%" y="575.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.09%)</title><rect x="5.3456%" y="549" width="0.0922%" height="15" fill="rgb(242,26,26)" fg:x="232" fg:w="4"/><text x="5.5956%" y="559.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="5.4147%" y="533" width="0.0230%" height="15" fill="rgb(221,92,48)" fg:x="235" fg:w="1"/><text x="5.6647%" y="543.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="5.4147%" y="517" width="0.0230%" height="15" fill="rgb(209,209,32)" fg:x="235" fg:w="1"/><text x="5.6647%" y="527.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="5.4147%" y="501" width="0.0230%" height="15" fill="rgb(221,70,22)" fg:x="235" fg:w="1"/><text x="5.6647%" y="511.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="5.4147%" y="485" width="0.0230%" height="15" fill="rgb(248,145,5)" fg:x="235" fg:w="1"/><text x="5.6647%" y="495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="5.5069%" y="757" width="0.0230%" height="15" fill="rgb(226,116,26)" fg:x="239" fg:w="1"/><text x="5.7569%" y="767.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="5.5300%" y="709" width="0.0230%" height="15" fill="rgb(244,5,17)" fg:x="240" fg:w="1"/><text x="5.7800%" y="719.50"></text></g><g><title>_rjem_je_emap_remap (1 samples, 0.02%)</title><rect x="5.5530%" y="437" width="0.0230%" height="15" fill="rgb(252,159,33)" fg:x="241" fg:w="1"/><text x="5.8030%" y="447.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="5.5760%" y="389" width="0.0230%" height="15" fill="rgb(206,71,0)" fg:x="242" fg:w="1"/><text x="5.8260%" y="399.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="5.5760%" y="373" width="0.0230%" height="15" fill="rgb(233,118,54)" fg:x="242" fg:w="1"/><text x="5.8260%" y="383.50"></text></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect x="5.5760%" y="357" width="0.0230%" height="15" fill="rgb(234,83,48)" fg:x="242" fg:w="1"/><text x="5.8260%" y="367.50"></text></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect x="5.5760%" y="341" width="0.0230%" height="15" fill="rgb(228,3,54)" fg:x="242" fg:w="1"/><text x="5.8260%" y="351.50"></text></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect x="5.5760%" y="325" width="0.0230%" height="15" fill="rgb(226,155,13)" fg:x="242" fg:w="1"/><text x="5.8260%" y="335.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect x="5.5760%" y="309" width="0.0230%" height="15" fill="rgb(241,28,37)" fg:x="242" fg:w="1"/><text x="5.8260%" y="319.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="5.5760%" y="293" width="0.0230%" height="15" fill="rgb(233,93,10)" fg:x="242" fg:w="1"/><text x="5.8260%" y="303.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="5.5760%" y="277" width="0.0230%" height="15" fill="rgb(225,113,19)" fg:x="242" fg:w="1"/><text x="5.8260%" y="287.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="5.5760%" y="261" width="0.0230%" height="15" fill="rgb(241,2,18)" fg:x="242" fg:w="1"/><text x="5.8260%" y="271.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="5.5760%" y="245" width="0.0230%" height="15" fill="rgb(228,207,21)" fg:x="242" fg:w="1"/><text x="5.8260%" y="255.50"></text></g><g><title>phn_next_set (1 samples, 0.02%)</title><rect x="5.5760%" y="229" width="0.0230%" height="15" fill="rgb(213,211,35)" fg:x="242" fg:w="1"/><text x="5.8260%" y="239.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="5.5991%" y="341" width="0.0230%" height="15" fill="rgb(209,83,10)" fg:x="243" fg:w="1"/><text x="5.8491%" y="351.50"></text></g><g><title>_rjem_je_edata_avail_remove (2 samples, 0.05%)</title><rect x="5.6221%" y="277" width="0.0461%" height="15" fill="rgb(209,164,1)" fg:x="244" fg:w="2"/><text x="5.8721%" y="287.50"></text></g><g><title>ph_remove (2 samples, 0.05%)</title><rect x="5.6221%" y="261" width="0.0461%" height="15" fill="rgb(213,184,43)" fg:x="244" fg:w="2"/><text x="5.8721%" y="271.50"></text></g><g><title>ph_merge_children (2 samples, 0.05%)</title><rect x="5.6221%" y="245" width="0.0461%" height="15" fill="rgb(231,61,34)" fg:x="244" fg:w="2"/><text x="5.8721%" y="255.50"></text></g><g><title>phn_merge_siblings (2 samples, 0.05%)</title><rect x="5.6221%" y="229" width="0.0461%" height="15" fill="rgb(235,75,3)" fg:x="244" fg:w="2"/><text x="5.8721%" y="239.50"></text></g><g><title>phn_next_set (2 samples, 0.05%)</title><rect x="5.6221%" y="213" width="0.0461%" height="15" fill="rgb(220,106,47)" fg:x="244" fg:w="2"/><text x="5.8721%" y="223.50"></text></g><g><title>arena_slab_alloc (6 samples, 0.14%)</title><rect x="5.5530%" y="469" width="0.1382%" height="15" fill="rgb(210,196,33)" fg:x="241" fg:w="6"/><text x="5.8030%" y="479.50"></text></g><g><title>_rjem_je_pa_alloc (6 samples, 0.14%)</title><rect x="5.5530%" y="453" width="0.1382%" height="15" fill="rgb(229,154,42)" fg:x="241" fg:w="6"/><text x="5.8030%" y="463.50"></text></g><g><title>pai_alloc (5 samples, 0.12%)</title><rect x="5.5760%" y="437" width="0.1152%" height="15" fill="rgb(228,114,26)" fg:x="242" fg:w="5"/><text x="5.8260%" y="447.50"></text></g><g><title>pac_alloc_impl (5 samples, 0.12%)</title><rect x="5.5760%" y="421" width="0.1152%" height="15" fill="rgb(208,144,1)" fg:x="242" fg:w="5"/><text x="5.8260%" y="431.50"></text></g><g><title>pac_alloc_real (5 samples, 0.12%)</title><rect x="5.5760%" y="405" width="0.1152%" height="15" fill="rgb(239,112,37)" fg:x="242" fg:w="5"/><text x="5.8260%" y="415.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (4 samples, 0.09%)</title><rect x="5.5991%" y="389" width="0.0922%" height="15" fill="rgb(210,96,50)" fg:x="243" fg:w="4"/><text x="5.8491%" y="399.50"></text></g><g><title>extent_alloc_retained (4 samples, 0.09%)</title><rect x="5.5991%" y="373" width="0.0922%" height="15" fill="rgb(222,178,2)" fg:x="243" fg:w="4"/><text x="5.8491%" y="383.50"></text></g><g><title>extent_recycle (4 samples, 0.09%)</title><rect x="5.5991%" y="357" width="0.0922%" height="15" fill="rgb(226,74,18)" fg:x="243" fg:w="4"/><text x="5.8491%" y="367.50"></text></g><g><title>extent_recycle_split (3 samples, 0.07%)</title><rect x="5.6221%" y="341" width="0.0691%" height="15" fill="rgb(225,67,54)" fg:x="244" fg:w="3"/><text x="5.8721%" y="351.50"></text></g><g><title>extent_split_interior (3 samples, 0.07%)</title><rect x="5.6221%" y="325" width="0.0691%" height="15" fill="rgb(251,92,32)" fg:x="244" fg:w="3"/><text x="5.8721%" y="335.50"></text></g><g><title>extent_split_impl (3 samples, 0.07%)</title><rect x="5.6221%" y="309" width="0.0691%" height="15" fill="rgb(228,149,22)" fg:x="244" fg:w="3"/><text x="5.8721%" y="319.50"></text></g><g><title>_rjem_je_edata_cache_get (3 samples, 0.07%)</title><rect x="5.6221%" y="293" width="0.0691%" height="15" fill="rgb(243,54,13)" fg:x="244" fg:w="3"/><text x="5.8721%" y="303.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="5.6682%" y="277" width="0.0230%" height="15" fill="rgb(243,180,28)" fg:x="246" fg:w="1"/><text x="5.9182%" y="287.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="5.6682%" y="261" width="0.0230%" height="15" fill="rgb(208,167,24)" fg:x="246" fg:w="1"/><text x="5.9182%" y="271.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="5.6682%" y="245" width="0.0230%" height="15" fill="rgb(245,73,45)" fg:x="246" fg:w="1"/><text x="5.9182%" y="255.50"></text></g><g><title>_rjem_je_malloc_default (7 samples, 0.16%)</title><rect x="5.5530%" y="613" width="0.1613%" height="15" fill="rgb(237,203,48)" fg:x="241" fg:w="7"/><text x="5.8030%" y="623.50"></text></g><g><title>imalloc (7 samples, 0.16%)</title><rect x="5.5530%" y="597" width="0.1613%" height="15" fill="rgb(211,197,16)" fg:x="241" fg:w="7"/><text x="5.8030%" y="607.50"></text></g><g><title>imalloc_body (7 samples, 0.16%)</title><rect x="5.5530%" y="581" width="0.1613%" height="15" fill="rgb(243,99,51)" fg:x="241" fg:w="7"/><text x="5.8030%" y="591.50"></text></g><g><title>imalloc_no_sample (7 samples, 0.16%)</title><rect x="5.5530%" y="565" width="0.1613%" height="15" fill="rgb(215,123,29)" fg:x="241" fg:w="7"/><text x="5.8030%" y="575.50"></text></g><g><title>iallocztm (7 samples, 0.16%)</title><rect x="5.5530%" y="549" width="0.1613%" height="15" fill="rgb(239,186,37)" fg:x="241" fg:w="7"/><text x="5.8030%" y="559.50"></text></g><g><title>arena_malloc (7 samples, 0.16%)</title><rect x="5.5530%" y="533" width="0.1613%" height="15" fill="rgb(252,136,39)" fg:x="241" fg:w="7"/><text x="5.8030%" y="543.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.16%)</title><rect x="5.5530%" y="517" width="0.1613%" height="15" fill="rgb(223,213,32)" fg:x="241" fg:w="7"/><text x="5.8030%" y="527.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (7 samples, 0.16%)</title><rect x="5.5530%" y="501" width="0.1613%" height="15" fill="rgb(233,115,5)" fg:x="241" fg:w="7"/><text x="5.8030%" y="511.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (7 samples, 0.16%)</title><rect x="5.5530%" y="485" width="0.1613%" height="15" fill="rgb(207,226,44)" fg:x="241" fg:w="7"/><text x="5.8030%" y="495.50"></text></g><g><title>arena_slab_reg_alloc_batch (1 samples, 0.02%)</title><rect x="5.6912%" y="469" width="0.0230%" height="15" fill="rgb(208,126,0)" fg:x="247" fg:w="1"/><text x="5.9412%" y="479.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="5.7373%" y="597" width="0.0230%" height="15" fill="rgb(244,66,21)" fg:x="249" fg:w="1"/><text x="5.9873%" y="607.50"></text></g><g><title>?? (13 samples, 0.30%)</title><rect x="5.5300%" y="741" width="0.2995%" height="15" fill="rgb(222,97,12)" fg:x="240" fg:w="13"/><text x="5.7800%" y="751.50"></text></g><g><title>?? (13 samples, 0.30%)</title><rect x="5.5300%" y="725" width="0.2995%" height="15" fill="rgb(219,213,19)" fg:x="240" fg:w="13"/><text x="5.7800%" y="735.50"></text></g><g><title>?? (12 samples, 0.28%)</title><rect x="5.5530%" y="709" width="0.2765%" height="15" fill="rgb(252,169,30)" fg:x="241" fg:w="12"/><text x="5.8030%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.28%)</title><rect x="5.5530%" y="693" width="0.2765%" height="15" fill="rgb(206,32,51)" fg:x="241" fg:w="12"/><text x="5.8030%" y="703.50"></text></g><g><title>?? (12 samples, 0.28%)</title><rect x="5.5530%" y="677" width="0.2765%" height="15" fill="rgb(250,172,42)" fg:x="241" fg:w="12"/><text x="5.8030%" y="687.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.28%)</title><rect x="5.5530%" y="661" width="0.2765%" height="15" fill="rgb(209,34,43)" fg:x="241" fg:w="12"/><text x="5.8030%" y="671.50"></text></g><g><title>__rust_alloc (12 samples, 0.28%)</title><rect x="5.5530%" y="645" width="0.2765%" height="15" fill="rgb(223,11,35)" fg:x="241" fg:w="12"/><text x="5.8030%" y="655.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.28%)</title><rect x="5.5530%" y="629" width="0.2765%" height="15" fill="rgb(251,219,26)" fg:x="241" fg:w="12"/><text x="5.8030%" y="639.50"></text></g><g><title>_rjem_malloc (5 samples, 0.12%)</title><rect x="5.7143%" y="613" width="0.1152%" height="15" fill="rgb(231,119,3)" fg:x="248" fg:w="5"/><text x="5.9643%" y="623.50"></text></g><g><title>imalloc_fastpath (3 samples, 0.07%)</title><rect x="5.7604%" y="597" width="0.0691%" height="15" fill="rgb(216,97,11)" fg:x="250" fg:w="3"/><text x="6.0104%" y="607.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.05%)</title><rect x="5.7834%" y="581" width="0.0461%" height="15" fill="rgb(223,59,9)" fg:x="251" fg:w="2"/><text x="6.0334%" y="591.50"></text></g><g><title>cache_bin_alloc_impl (2 samples, 0.05%)</title><rect x="5.7834%" y="565" width="0.0461%" height="15" fill="rgb(233,93,31)" fg:x="251" fg:w="2"/><text x="6.0334%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="5.8295%" y="741" width="0.0230%" height="15" fill="rgb(239,81,33)" fg:x="253" fg:w="1"/><text x="6.0795%" y="751.50"></text></g><g><title>?? (18 samples, 0.41%)</title><rect x="5.5300%" y="757" width="0.4147%" height="15" fill="rgb(213,120,34)" fg:x="240" fg:w="18"/><text x="5.7800%" y="767.50"></text></g><g><title>core::ptr::write (4 samples, 0.09%)</title><rect x="5.8525%" y="741" width="0.0922%" height="15" fill="rgb(243,49,53)" fg:x="254" fg:w="4"/><text x="6.1025%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="6.1982%" y="565" width="0.0230%" height="15" fill="rgb(247,216,33)" fg:x="269" fg:w="1"/><text x="6.4482%" y="575.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="6.2212%" y="565" width="0.0922%" height="15" fill="rgb(226,26,14)" fg:x="270" fg:w="4"/><text x="6.4712%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.09%)</title><rect x="6.2212%" y="549" width="0.0922%" height="15" fill="rgb(215,49,53)" fg:x="270" fg:w="4"/><text x="6.4712%" y="559.50"></text></g><g><title>serde::de::MapAccess::next_key (25 samples, 0.58%)</title><rect x="6.0829%" y="661" width="0.5760%" height="15" fill="rgb(245,162,40)" fg:x="264" fg:w="25"/><text x="6.3329%" y="671.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (25 samples, 0.58%)</title><rect x="6.0829%" y="645" width="0.5760%" height="15" fill="rgb(229,68,17)" fg:x="264" fg:w="25"/><text x="6.3329%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.55%)</title><rect x="6.1060%" y="629" width="0.5530%" height="15" fill="rgb(213,182,10)" fg:x="265" fg:w="24"/><text x="6.3560%" y="639.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (24 samples, 0.55%)</title><rect x="6.1060%" y="613" width="0.5530%" height="15" fill="rgb(245,125,30)" fg:x="265" fg:w="24"/><text x="6.3560%" y="623.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_identifier (24 samples, 0.55%)</title><rect x="6.1060%" y="597" width="0.5530%" height="15" fill="rgb(232,202,2)" fg:x="265" fg:w="24"/><text x="6.3560%" y="607.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (24 samples, 0.55%)</title><rect x="6.1060%" y="581" width="0.5530%" height="15" fill="rgb(237,140,51)" fg:x="265" fg:w="24"/><text x="6.3560%" y="591.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (15 samples, 0.35%)</title><rect x="6.3134%" y="565" width="0.3456%" height="15" fill="rgb(236,157,25)" fg:x="274" fg:w="15"/><text x="6.5634%" y="575.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (15 samples, 0.35%)</title><rect x="6.3134%" y="549" width="0.3456%" height="15" fill="rgb(219,209,0)" fg:x="274" fg:w="15"/><text x="6.5634%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (15 samples, 0.35%)</title><rect x="6.3134%" y="533" width="0.3456%" height="15" fill="rgb(240,116,54)" fg:x="274" fg:w="15"/><text x="6.5634%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (15 samples, 0.35%)</title><rect x="6.3134%" y="517" width="0.3456%" height="15" fill="rgb(216,10,36)" fg:x="274" fg:w="15"/><text x="6.5634%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (15 samples, 0.35%)</title><rect x="6.3134%" y="501" width="0.3456%" height="15" fill="rgb(222,72,44)" fg:x="274" fg:w="15"/><text x="6.5634%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (15 samples, 0.35%)</title><rect x="6.3134%" y="485" width="0.3456%" height="15" fill="rgb(232,159,9)" fg:x="274" fg:w="15"/><text x="6.5634%" y="495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="6.6590%" y="581" width="0.0230%" height="15" fill="rgb(210,39,32)" fg:x="289" fg:w="1"/><text x="6.9090%" y="591.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (31 samples, 0.71%)</title><rect x="5.9908%" y="677" width="0.7143%" height="15" fill="rgb(216,194,45)" fg:x="260" fg:w="31"/><text x="6.2408%" y="687.50"></text></g><g><title>serde::de::MapAccess::next_value (2 samples, 0.05%)</title><rect x="6.6590%" y="661" width="0.0461%" height="15" fill="rgb(218,18,35)" fg:x="289" fg:w="2"/><text x="6.9090%" y="671.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.05%)</title><rect x="6.6590%" y="645" width="0.0461%" height="15" fill="rgb(207,83,51)" fg:x="289" fg:w="2"/><text x="6.9090%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="6.6590%" y="629" width="0.0461%" height="15" fill="rgb(225,63,43)" fg:x="289" fg:w="2"/><text x="6.9090%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.05%)</title><rect x="6.6590%" y="613" width="0.0461%" height="15" fill="rgb(207,57,36)" fg:x="289" fg:w="2"/><text x="6.9090%" y="623.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_u32 (2 samples, 0.05%)</title><rect x="6.6590%" y="597" width="0.0461%" height="15" fill="rgb(216,99,33)" fg:x="289" fg:w="2"/><text x="6.9090%" y="607.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="6.6820%" y="581" width="0.0230%" height="15" fill="rgb(225,42,16)" fg:x="290" fg:w="1"/><text x="6.9320%" y="591.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="6.6820%" y="565" width="0.0230%" height="15" fill="rgb(220,201,45)" fg:x="290" fg:w="1"/><text x="6.9320%" y="575.50"></text></g><g><title>&lt;[T] as simd_json::safer_unchecked::GetSaferUnchecked&lt;T&gt;&gt;::get_kinda_unchecked (1 samples, 0.02%)</title><rect x="6.6820%" y="549" width="0.0230%" height="15" fill="rgb(225,33,4)" fg:x="290" fg:w="1"/><text x="6.9320%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="6.6820%" y="533" width="0.0230%" height="15" fill="rgb(224,33,50)" fg:x="290" fg:w="1"/><text x="6.9320%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="6.6820%" y="517" width="0.0230%" height="15" fill="rgb(246,198,51)" fg:x="290" fg:w="1"/><text x="6.9320%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="6.6820%" y="501" width="0.0230%" height="15" fill="rgb(205,22,4)" fg:x="290" fg:w="1"/><text x="6.9320%" y="511.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize (32 samples, 0.74%)</title><rect x="5.9908%" y="709" width="0.7373%" height="15" fill="rgb(206,3,8)" fg:x="260" fg:w="32"/><text x="6.2408%" y="719.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (32 samples, 0.74%)</title><rect x="5.9908%" y="693" width="0.7373%" height="15" fill="rgb(251,23,15)" fg:x="260" fg:w="32"/><text x="6.2408%" y="703.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="6.7051%" y="677" width="0.0230%" height="15" fill="rgb(252,88,28)" fg:x="291" fg:w="1"/><text x="6.9551%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="6.7051%" y="661" width="0.0230%" height="15" fill="rgb(212,127,14)" fg:x="291" fg:w="1"/><text x="6.9551%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.12%)</title><rect x="6.8203%" y="661" width="0.1152%" height="15" fill="rgb(247,145,37)" fg:x="296" fg:w="5"/><text x="7.0703%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="6.9816%" y="565" width="0.0461%" height="15" fill="rgb(209,117,53)" fg:x="303" fg:w="2"/><text x="7.2316%" y="575.50"></text></g><g><title>serde::de::MapAccess::next_key (17 samples, 0.39%)</title><rect x="6.9355%" y="661" width="0.3917%" height="15" fill="rgb(212,90,42)" fg:x="301" fg:w="17"/><text x="7.1855%" y="671.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (17 samples, 0.39%)</title><rect x="6.9355%" y="645" width="0.3917%" height="15" fill="rgb(218,164,37)" fg:x="301" fg:w="17"/><text x="7.1855%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17 samples, 0.39%)</title><rect x="6.9355%" y="629" width="0.3917%" height="15" fill="rgb(246,65,34)" fg:x="301" fg:w="17"/><text x="7.1855%" y="639.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (17 samples, 0.39%)</title><rect x="6.9355%" y="613" width="0.3917%" height="15" fill="rgb(231,100,33)" fg:x="301" fg:w="17"/><text x="7.1855%" y="623.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_identifier (17 samples, 0.39%)</title><rect x="6.9355%" y="597" width="0.3917%" height="15" fill="rgb(228,126,14)" fg:x="301" fg:w="17"/><text x="7.1855%" y="607.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (17 samples, 0.39%)</title><rect x="6.9355%" y="581" width="0.3917%" height="15" fill="rgb(215,173,21)" fg:x="301" fg:w="17"/><text x="7.1855%" y="591.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (13 samples, 0.30%)</title><rect x="7.0276%" y="565" width="0.2995%" height="15" fill="rgb(210,6,40)" fg:x="305" fg:w="13"/><text x="7.2776%" y="575.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (13 samples, 0.30%)</title><rect x="7.0276%" y="549" width="0.2995%" height="15" fill="rgb(212,48,18)" fg:x="305" fg:w="13"/><text x="7.2776%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (13 samples, 0.30%)</title><rect x="7.0276%" y="533" width="0.2995%" height="15" fill="rgb(230,214,11)" fg:x="305" fg:w="13"/><text x="7.2776%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.30%)</title><rect x="7.0276%" y="517" width="0.2995%" height="15" fill="rgb(254,105,39)" fg:x="305" fg:w="13"/><text x="7.2776%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (13 samples, 0.30%)</title><rect x="7.0276%" y="501" width="0.2995%" height="15" fill="rgb(245,158,5)" fg:x="305" fg:w="13"/><text x="7.2776%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13 samples, 0.30%)</title><rect x="7.0276%" y="485" width="0.2995%" height="15" fill="rgb(249,208,11)" fg:x="305" fg:w="13"/><text x="7.2776%" y="495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="7.3502%" y="581" width="0.0230%" height="15" fill="rgb(210,39,28)" fg:x="319" fg:w="1"/><text x="7.6002%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.18%)</title><rect x="7.5806%" y="565" width="0.1843%" height="15" fill="rgb(211,56,53)" fg:x="329" fg:w="8"/><text x="7.8306%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.09%)</title><rect x="7.7650%" y="549" width="0.0922%" height="15" fill="rgb(226,201,30)" fg:x="337" fg:w="4"/><text x="8.0150%" y="559.50"></text></g><g><title>_rjem_je_arena_bin_choose (1 samples, 0.02%)</title><rect x="7.8571%" y="277" width="0.0230%" height="15" fill="rgb(239,101,34)" fg:x="341" fg:w="1"/><text x="8.1071%" y="287.50"></text></g><g><title>tsdn_null (1 samples, 0.02%)</title><rect x="7.8571%" y="261" width="0.0230%" height="15" fill="rgb(226,209,5)" fg:x="341" fg:w="1"/><text x="8.1071%" y="271.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="7.8802%" y="149" width="0.0230%" height="15" fill="rgb(250,105,47)" fg:x="342" fg:w="1"/><text x="8.1302%" y="159.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="7.8802%" y="133" width="0.0230%" height="15" fill="rgb(230,72,3)" fg:x="342" fg:w="1"/><text x="8.1302%" y="143.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="7.8802%" y="117" width="0.0230%" height="15" fill="rgb(232,218,39)" fg:x="342" fg:w="1"/><text x="8.1302%" y="127.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect x="7.9032%" y="117" width="0.0230%" height="15" fill="rgb(248,166,6)" fg:x="343" fg:w="1"/><text x="8.1532%" y="127.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="7.9032%" y="101" width="0.0230%" height="15" fill="rgb(247,89,20)" fg:x="343" fg:w="1"/><text x="8.1532%" y="111.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="7.9032%" y="85" width="0.0230%" height="15" fill="rgb(248,130,54)" fg:x="343" fg:w="1"/><text x="8.1532%" y="95.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="7.9032%" y="69" width="0.0230%" height="15" fill="rgb(234,196,4)" fg:x="343" fg:w="1"/><text x="8.1532%" y="79.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="7.9032%" y="53" width="0.0230%" height="15" fill="rgb(250,143,31)" fg:x="343" fg:w="1"/><text x="8.1532%" y="63.50"></text></g><g><title>phn_next_set (1 samples, 0.02%)</title><rect x="7.9032%" y="37" width="0.0230%" height="15" fill="rgb(211,110,34)" fg:x="343" fg:w="1"/><text x="8.1532%" y="47.50"></text></g><g><title>_rjem_je_ecache_alloc (3 samples, 0.07%)</title><rect x="7.8802%" y="197" width="0.0691%" height="15" fill="rgb(215,124,48)" fg:x="342" fg:w="3"/><text x="8.1302%" y="207.50"></text></g><g><title>extent_recycle (3 samples, 0.07%)</title><rect x="7.8802%" y="181" width="0.0691%" height="15" fill="rgb(216,46,13)" fg:x="342" fg:w="3"/><text x="8.1302%" y="191.50"></text></g><g><title>extent_recycle_split (3 samples, 0.07%)</title><rect x="7.8802%" y="165" width="0.0691%" height="15" fill="rgb(205,184,25)" fg:x="342" fg:w="3"/><text x="8.1302%" y="175.50"></text></g><g><title>extent_split_interior (2 samples, 0.05%)</title><rect x="7.9032%" y="149" width="0.0461%" height="15" fill="rgb(228,1,10)" fg:x="343" fg:w="2"/><text x="8.1532%" y="159.50"></text></g><g><title>extent_split_impl (2 samples, 0.05%)</title><rect x="7.9032%" y="133" width="0.0461%" height="15" fill="rgb(213,116,27)" fg:x="343" fg:w="2"/><text x="8.1532%" y="143.50"></text></g><g><title>_rjem_je_emap_split_prepare (1 samples, 0.02%)</title><rect x="7.9263%" y="117" width="0.0230%" height="15" fill="rgb(241,95,50)" fg:x="344" fg:w="1"/><text x="8.1763%" y="127.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (1 samples, 0.02%)</title><rect x="7.9263%" y="101" width="0.0230%" height="15" fill="rgb(238,48,32)" fg:x="344" fg:w="1"/><text x="8.1763%" y="111.50"></text></g><g><title>arena_slab_alloc (5 samples, 0.12%)</title><rect x="7.8802%" y="277" width="0.1152%" height="15" fill="rgb(235,113,49)" fg:x="342" fg:w="5"/><text x="8.1302%" y="287.50"></text></g><g><title>_rjem_je_pa_alloc (5 samples, 0.12%)</title><rect x="7.8802%" y="261" width="0.1152%" height="15" fill="rgb(205,127,43)" fg:x="342" fg:w="5"/><text x="8.1302%" y="271.50"></text></g><g><title>pai_alloc (5 samples, 0.12%)</title><rect x="7.8802%" y="245" width="0.1152%" height="15" fill="rgb(250,162,2)" fg:x="342" fg:w="5"/><text x="8.1302%" y="255.50"></text></g><g><title>pac_alloc_impl (5 samples, 0.12%)</title><rect x="7.8802%" y="229" width="0.1152%" height="15" fill="rgb(220,13,41)" fg:x="342" fg:w="5"/><text x="8.1302%" y="239.50"></text></g><g><title>pac_alloc_real (5 samples, 0.12%)</title><rect x="7.8802%" y="213" width="0.1152%" height="15" fill="rgb(249,221,25)" fg:x="342" fg:w="5"/><text x="8.1302%" y="223.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (2 samples, 0.05%)</title><rect x="7.9493%" y="197" width="0.0461%" height="15" fill="rgb(215,208,19)" fg:x="345" fg:w="2"/><text x="8.1993%" y="207.50"></text></g><g><title>extent_alloc_retained (2 samples, 0.05%)</title><rect x="7.9493%" y="181" width="0.0461%" height="15" fill="rgb(236,175,2)" fg:x="345" fg:w="2"/><text x="8.1993%" y="191.50"></text></g><g><title>extent_recycle (2 samples, 0.05%)</title><rect x="7.9493%" y="165" width="0.0461%" height="15" fill="rgb(241,52,2)" fg:x="345" fg:w="2"/><text x="8.1993%" y="175.50"></text></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect x="7.9724%" y="149" width="0.0230%" height="15" fill="rgb(248,140,14)" fg:x="346" fg:w="1"/><text x="8.2224%" y="159.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="7.9724%" y="133" width="0.0230%" height="15" fill="rgb(253,22,42)" fg:x="346" fg:w="1"/><text x="8.2224%" y="143.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="7.9724%" y="117" width="0.0230%" height="15" fill="rgb(234,61,47)" fg:x="346" fg:w="1"/><text x="8.2224%" y="127.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="7.9724%" y="101" width="0.0230%" height="15" fill="rgb(208,226,15)" fg:x="346" fg:w="1"/><text x="8.2224%" y="111.50"></text></g><g><title>edata_list_inactive_append (1 samples, 0.02%)</title><rect x="7.9724%" y="85" width="0.0230%" height="15" fill="rgb(217,221,4)" fg:x="346" fg:w="1"/><text x="8.2224%" y="95.50"></text></g><g><title>arena_slab_reg_alloc_batch (2 samples, 0.05%)</title><rect x="7.9954%" y="277" width="0.0461%" height="15" fill="rgb(212,174,34)" fg:x="347" fg:w="2"/><text x="8.2454%" y="287.50"></text></g><g><title>cfs_lu (1 samples, 0.02%)</title><rect x="8.0184%" y="261" width="0.0230%" height="15" fill="rgb(253,83,4)" fg:x="348" fg:w="1"/><text x="8.2684%" y="271.50"></text></g><g><title>cache_bin_finish_fill (1 samples, 0.02%)</title><rect x="8.0415%" y="277" width="0.0230%" height="15" fill="rgb(250,195,49)" fg:x="349" fg:w="1"/><text x="8.2915%" y="287.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="8.0645%" y="277" width="0.0230%" height="15" fill="rgb(241,192,25)" fg:x="350" fg:w="1"/><text x="8.3145%" y="287.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="8.0645%" y="261" width="0.0230%" height="15" fill="rgb(208,124,10)" fg:x="350" fg:w="1"/><text x="8.3145%" y="271.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="8.0645%" y="245" width="0.0230%" height="15" fill="rgb(222,33,0)" fg:x="350" fg:w="1"/><text x="8.3145%" y="255.50"></text></g><g><title>imalloc_no_sample (11 samples, 0.25%)</title><rect x="7.8571%" y="373" width="0.2535%" height="15" fill="rgb(234,209,28)" fg:x="341" fg:w="11"/><text x="8.1071%" y="383.50"></text></g><g><title>iallocztm (11 samples, 0.25%)</title><rect x="7.8571%" y="357" width="0.2535%" height="15" fill="rgb(224,11,23)" fg:x="341" fg:w="11"/><text x="8.1071%" y="367.50"></text></g><g><title>arena_malloc (11 samples, 0.25%)</title><rect x="7.8571%" y="341" width="0.2535%" height="15" fill="rgb(232,99,1)" fg:x="341" fg:w="11"/><text x="8.1071%" y="351.50"></text></g><g><title>tcache_alloc_small (11 samples, 0.25%)</title><rect x="7.8571%" y="325" width="0.2535%" height="15" fill="rgb(237,95,45)" fg:x="341" fg:w="11"/><text x="8.1071%" y="335.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (11 samples, 0.25%)</title><rect x="7.8571%" y="309" width="0.2535%" height="15" fill="rgb(208,109,11)" fg:x="341" fg:w="11"/><text x="8.1071%" y="319.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (11 samples, 0.25%)</title><rect x="7.8571%" y="293" width="0.2535%" height="15" fill="rgb(216,190,48)" fg:x="341" fg:w="11"/><text x="8.1071%" y="303.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="8.0876%" y="277" width="0.0230%" height="15" fill="rgb(251,171,36)" fg:x="351" fg:w="1"/><text x="8.3376%" y="287.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="8.0876%" y="261" width="0.0230%" height="15" fill="rgb(230,62,22)" fg:x="351" fg:w="1"/><text x="8.3376%" y="271.50"></text></g><g><title>_rjem_je_malloc_default (12 samples, 0.28%)</title><rect x="7.8571%" y="421" width="0.2765%" height="15" fill="rgb(225,114,35)" fg:x="341" fg:w="12"/><text x="8.1071%" y="431.50"></text></g><g><title>imalloc (12 samples, 0.28%)</title><rect x="7.8571%" y="405" width="0.2765%" height="15" fill="rgb(215,118,42)" fg:x="341" fg:w="12"/><text x="8.1071%" y="415.50"></text></g><g><title>imalloc_body (12 samples, 0.28%)</title><rect x="7.8571%" y="389" width="0.2765%" height="15" fill="rgb(243,119,21)" fg:x="341" fg:w="12"/><text x="8.1071%" y="399.50"></text></g><g><title>thread_alloc_event (1 samples, 0.02%)</title><rect x="8.1106%" y="373" width="0.0230%" height="15" fill="rgb(252,177,53)" fg:x="352" fg:w="1"/><text x="8.3606%" y="383.50"></text></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect x="8.1106%" y="357" width="0.0230%" height="15" fill="rgb(237,209,29)" fg:x="352" fg:w="1"/><text x="8.3606%" y="367.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="8.1336%" y="405" width="0.0230%" height="15" fill="rgb(212,65,23)" fg:x="353" fg:w="1"/><text x="8.3836%" y="415.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.05%)</title><rect x="8.1567%" y="389" width="0.0461%" height="15" fill="rgb(230,222,46)" fg:x="354" fg:w="2"/><text x="8.4067%" y="399.50"></text></g><g><title>cache_bin_alloc_impl (2 samples, 0.05%)</title><rect x="8.1567%" y="373" width="0.0461%" height="15" fill="rgb(215,135,32)" fg:x="354" fg:w="2"/><text x="8.4067%" y="383.50"></text></g><g><title>?? (17 samples, 0.39%)</title><rect x="7.8571%" y="549" width="0.3917%" height="15" fill="rgb(246,101,22)" fg:x="341" fg:w="17"/><text x="8.1071%" y="559.50"></text></g><g><title>?? (17 samples, 0.39%)</title><rect x="7.8571%" y="533" width="0.3917%" height="15" fill="rgb(206,107,13)" fg:x="341" fg:w="17"/><text x="8.1071%" y="543.50"></text></g><g><title>?? (17 samples, 0.39%)</title><rect x="7.8571%" y="517" width="0.3917%" height="15" fill="rgb(250,100,44)" fg:x="341" fg:w="17"/><text x="8.1071%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.39%)</title><rect x="7.8571%" y="501" width="0.3917%" height="15" fill="rgb(231,147,38)" fg:x="341" fg:w="17"/><text x="8.1071%" y="511.50"></text></g><g><title>?? (17 samples, 0.39%)</title><rect x="7.8571%" y="485" width="0.3917%" height="15" fill="rgb(229,8,40)" fg:x="341" fg:w="17"/><text x="8.1071%" y="495.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.39%)</title><rect x="7.8571%" y="469" width="0.3917%" height="15" fill="rgb(221,135,30)" fg:x="341" fg:w="17"/><text x="8.1071%" y="479.50"></text></g><g><title>__rust_alloc (17 samples, 0.39%)</title><rect x="7.8571%" y="453" width="0.3917%" height="15" fill="rgb(249,193,18)" fg:x="341" fg:w="17"/><text x="8.1071%" y="463.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.39%)</title><rect x="7.8571%" y="437" width="0.3917%" height="15" fill="rgb(209,133,39)" fg:x="341" fg:w="17"/><text x="8.1071%" y="447.50"></text></g><g><title>_rjem_malloc (5 samples, 0.12%)</title><rect x="8.1336%" y="421" width="0.1152%" height="15" fill="rgb(232,100,14)" fg:x="353" fg:w="5"/><text x="8.3836%" y="431.50"></text></g><g><title>imalloc_fastpath (4 samples, 0.09%)</title><rect x="8.1567%" y="405" width="0.0922%" height="15" fill="rgb(224,185,1)" fg:x="354" fg:w="4"/><text x="8.4067%" y="415.50"></text></g><g><title>sz_size2index_usize_fastpath (2 samples, 0.05%)</title><rect x="8.2028%" y="389" width="0.0461%" height="15" fill="rgb(223,139,8)" fg:x="356" fg:w="2"/><text x="8.4528%" y="399.50"></text></g><g><title>sz_index2size_lookup_impl (2 samples, 0.05%)</title><rect x="8.2028%" y="373" width="0.0461%" height="15" fill="rgb(232,213,38)" fg:x="356" fg:w="2"/><text x="8.4528%" y="383.50"></text></g><g><title>?? (22 samples, 0.51%)</title><rect x="7.7650%" y="565" width="0.5069%" height="15" fill="rgb(207,94,22)" fg:x="337" fg:w="22"/><text x="8.0150%" y="575.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="8.2488%" y="549" width="0.0230%" height="15" fill="rgb(219,183,54)" fg:x="358" fg:w="1"/><text x="8.4988%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.09%)</title><rect x="8.6866%" y="485" width="0.0922%" height="15" fill="rgb(216,185,54)" fg:x="377" fg:w="4"/><text x="8.9366%" y="495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.28%)</title><rect x="10.1613%" y="373" width="0.2765%" height="15" fill="rgb(254,217,39)" fg:x="441" fg:w="12"/><text x="10.4113%" y="383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10 samples, 0.23%)</title><rect x="10.4378%" y="357" width="0.2304%" height="15" fill="rgb(240,178,23)" fg:x="453" fg:w="10"/><text x="10.6878%" y="367.50"></text></g><g><title>?? (13 samples, 0.30%)</title><rect x="10.4378%" y="373" width="0.2995%" height="15" fill="rgb(218,11,47)" fg:x="453" fg:w="13"/><text x="10.6878%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3 samples, 0.07%)</title><rect x="10.6682%" y="357" width="0.0691%" height="15" fill="rgb(218,51,51)" fg:x="463" fg:w="3"/><text x="10.9182%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3 samples, 0.07%)</title><rect x="10.6682%" y="341" width="0.0691%" height="15" fill="rgb(238,126,27)" fg:x="463" fg:w="3"/><text x="10.9182%" y="351.50"></text></g><g><title>serde::de::MapAccess::next_key (99 samples, 2.28%)</title><rect x="9.6544%" y="469" width="2.2811%" height="15" fill="rgb(249,202,22)" fg:x="419" fg:w="99"/><text x="9.9044%" y="479.50">s..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (99 samples, 2.28%)</title><rect x="9.6544%" y="453" width="2.2811%" height="15" fill="rgb(254,195,49)" fg:x="419" fg:w="99"/><text x="9.9044%" y="463.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (89 samples, 2.05%)</title><rect x="9.8848%" y="437" width="2.0507%" height="15" fill="rgb(208,123,14)" fg:x="429" fg:w="89"/><text x="10.1348%" y="447.50">&lt;..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (89 samples, 2.05%)</title><rect x="9.8848%" y="421" width="2.0507%" height="15" fill="rgb(224,200,8)" fg:x="429" fg:w="89"/><text x="10.1348%" y="431.50">&lt;..</text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_identifier (89 samples, 2.05%)</title><rect x="9.8848%" y="405" width="2.0507%" height="15" fill="rgb(217,61,36)" fg:x="429" fg:w="89"/><text x="10.1348%" y="415.50">&lt;..</text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (89 samples, 2.05%)</title><rect x="9.8848%" y="389" width="2.0507%" height="15" fill="rgb(206,35,45)" fg:x="429" fg:w="89"/><text x="10.1348%" y="399.50">&lt;..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (52 samples, 1.20%)</title><rect x="10.7373%" y="373" width="1.1982%" height="15" fill="rgb(217,65,33)" fg:x="466" fg:w="52"/><text x="10.9873%" y="383.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (52 samples, 1.20%)</title><rect x="10.7373%" y="357" width="1.1982%" height="15" fill="rgb(222,158,48)" fg:x="466" fg:w="52"/><text x="10.9873%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (49 samples, 1.13%)</title><rect x="10.8065%" y="341" width="1.1290%" height="15" fill="rgb(254,2,54)" fg:x="469" fg:w="49"/><text x="11.0565%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (49 samples, 1.13%)</title><rect x="10.8065%" y="325" width="1.1290%" height="15" fill="rgb(250,143,38)" fg:x="469" fg:w="49"/><text x="11.0565%" y="335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (49 samples, 1.13%)</title><rect x="10.8065%" y="309" width="1.1290%" height="15" fill="rgb(248,25,0)" fg:x="469" fg:w="49"/><text x="11.0565%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (49 samples, 1.13%)</title><rect x="10.8065%" y="293" width="1.1290%" height="15" fill="rgb(206,152,27)" fg:x="469" fg:w="49"/><text x="11.0565%" y="303.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="11.9355%" y="373" width="0.0230%" height="15" fill="rgb(240,77,30)" fg:x="518" fg:w="1"/><text x="12.1855%" y="383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 0.37%)</title><rect x="11.9585%" y="357" width="0.3687%" height="15" fill="rgb(231,5,3)" fg:x="519" fg:w="16"/><text x="12.2085%" y="367.50"></text></g><g><title>&lt;json_benchmark::empty::Array as serde::de::Deserialize&gt;::deserialize (18 samples, 0.41%)</title><rect x="11.9355%" y="421" width="0.4147%" height="15" fill="rgb(207,226,32)" fg:x="518" fg:w="18"/><text x="12.1855%" y="431.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_tuple (18 samples, 0.41%)</title><rect x="11.9355%" y="405" width="0.4147%" height="15" fill="rgb(222,207,47)" fg:x="518" fg:w="18"/><text x="12.1855%" y="415.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (18 samples, 0.41%)</title><rect x="11.9355%" y="389" width="0.4147%" height="15" fill="rgb(229,115,45)" fg:x="518" fg:w="18"/><text x="12.1855%" y="399.50"></text></g><g><title>?? (17 samples, 0.39%)</title><rect x="11.9585%" y="373" width="0.3917%" height="15" fill="rgb(224,191,6)" fg:x="519" fg:w="17"/><text x="12.2085%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="12.3272%" y="357" width="0.0230%" height="15" fill="rgb(230,227,24)" fg:x="535" fg:w="1"/><text x="12.5772%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="12.3272%" y="341" width="0.0230%" height="15" fill="rgb(228,80,19)" fg:x="535" fg:w="1"/><text x="12.5772%" y="351.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 0.30%)</title><rect x="12.3502%" y="389" width="0.2995%" height="15" fill="rgb(247,229,0)" fg:x="536" fg:w="13"/><text x="12.6002%" y="399.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.18%)</title><rect x="12.6498%" y="373" width="0.1843%" height="15" fill="rgb(237,194,15)" fg:x="549" fg:w="8"/><text x="12.8998%" y="383.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (177 samples, 4.08%)</title><rect x="8.7788%" y="485" width="4.0783%" height="15" fill="rgb(219,203,20)" fg:x="381" fg:w="177"/><text x="9.0288%" y="495.50">&lt;jso..</text></g><g><title>serde::de::MapAccess::next_value (40 samples, 0.92%)</title><rect x="11.9355%" y="469" width="0.9217%" height="15" fill="rgb(234,128,8)" fg:x="518" fg:w="40"/><text x="12.1855%" y="479.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (40 samples, 0.92%)</title><rect x="11.9355%" y="453" width="0.9217%" height="15" fill="rgb(248,202,8)" fg:x="518" fg:w="40"/><text x="12.1855%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (40 samples, 0.92%)</title><rect x="11.9355%" y="437" width="0.9217%" height="15" fill="rgb(206,104,37)" fg:x="518" fg:w="40"/><text x="12.1855%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (22 samples, 0.51%)</title><rect x="12.3502%" y="421" width="0.5069%" height="15" fill="rgb(223,8,27)" fg:x="536" fg:w="22"/><text x="12.6002%" y="431.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_u32 (22 samples, 0.51%)</title><rect x="12.3502%" y="405" width="0.5069%" height="15" fill="rgb(216,217,28)" fg:x="536" fg:w="22"/><text x="12.6002%" y="415.50"></text></g><g><title>?? (9 samples, 0.21%)</title><rect x="12.6498%" y="389" width="0.2074%" height="15" fill="rgb(249,199,1)" fg:x="549" fg:w="9"/><text x="12.8998%" y="399.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="12.8341%" y="373" width="0.0230%" height="15" fill="rgb(240,85,17)" fg:x="557" fg:w="1"/><text x="13.0841%" y="383.50"></text></g><g><title>&lt;[T] as simd_json::safer_unchecked::GetSaferUnchecked&lt;T&gt;&gt;::get_kinda_unchecked (1 samples, 0.02%)</title><rect x="12.8341%" y="357" width="0.0230%" height="15" fill="rgb(206,108,45)" fg:x="557" fg:w="1"/><text x="13.0841%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="12.8341%" y="341" width="0.0230%" height="15" fill="rgb(245,210,41)" fg:x="557" fg:w="1"/><text x="13.0841%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="12.8341%" y="325" width="0.0230%" height="15" fill="rgb(206,13,37)" fg:x="557" fg:w="1"/><text x="13.0841%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="12.8341%" y="309" width="0.0230%" height="15" fill="rgb(250,61,18)" fg:x="557" fg:w="1"/><text x="13.0841%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.05%)</title><rect x="12.8571%" y="469" width="0.0461%" height="15" fill="rgb(235,172,48)" fg:x="558" fg:w="2"/><text x="13.1071%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15 samples, 0.35%)</title><rect x="12.9032%" y="469" width="0.3456%" height="15" fill="rgb(249,201,17)" fg:x="560" fg:w="15"/><text x="13.1532%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (256 samples, 5.90%)</title><rect x="7.3733%" y="581" width="5.8986%" height="15" fill="rgb(219,208,6)" fg:x="320" fg:w="256"/><text x="7.6233%" y="591.50">&lt;serde:..</text></g><g><title>serde::de::SeqAccess::next_element (217 samples, 5.00%)</title><rect x="8.2719%" y="565" width="5.0000%" height="15" fill="rgb(248,31,23)" fg:x="359" fg:w="217"/><text x="8.5219%" y="575.50">serde:..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::SeqAccess&gt;::next_element_seed (217 samples, 5.00%)</title><rect x="8.2719%" y="549" width="5.0000%" height="15" fill="rgb(245,15,42)" fg:x="359" fg:w="217"/><text x="8.5219%" y="559.50">&lt;simd_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (217 samples, 5.00%)</title><rect x="8.2719%" y="533" width="5.0000%" height="15" fill="rgb(222,217,39)" fg:x="359" fg:w="217"/><text x="8.5219%" y="543.50">&lt;core:..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (217 samples, 5.00%)</title><rect x="8.2719%" y="517" width="5.0000%" height="15" fill="rgb(210,219,27)" fg:x="359" fg:w="217"/><text x="8.5219%" y="527.50">json_b..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (217 samples, 5.00%)</title><rect x="8.2719%" y="501" width="5.0000%" height="15" fill="rgb(252,166,36)" fg:x="359" fg:w="217"/><text x="8.5219%" y="511.50">simd_j..</text></g><g><title>?? (18 samples, 0.41%)</title><rect x="12.8571%" y="485" width="0.4147%" height="15" fill="rgb(245,132,34)" fg:x="558" fg:w="18"/><text x="13.1071%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="13.2488%" y="469" width="0.0230%" height="15" fill="rgb(236,54,3)" fg:x="575" fg:w="1"/><text x="13.4988%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="13.2488%" y="453" width="0.0230%" height="15" fill="rgb(241,173,43)" fg:x="575" fg:w="1"/><text x="13.4988%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.07%)</title><rect x="13.2719%" y="565" width="0.0691%" height="15" fill="rgb(215,190,9)" fg:x="576" fg:w="3"/><text x="13.5219%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (262 samples, 6.04%)</title><rect x="7.3502%" y="613" width="6.0369%" height="15" fill="rgb(242,101,16)" fg:x="319" fg:w="262"/><text x="7.6002%" y="623.50">serde::d..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (262 samples, 6.04%)</title><rect x="7.3502%" y="597" width="6.0369%" height="15" fill="rgb(223,190,21)" fg:x="319" fg:w="262"/><text x="7.6002%" y="607.50">simd_jso..</text></g><g><title>?? (5 samples, 0.12%)</title><rect x="13.2719%" y="581" width="0.1152%" height="15" fill="rgb(215,228,25)" fg:x="576" fg:w="5"/><text x="13.5219%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.05%)</title><rect x="13.3410%" y="565" width="0.0461%" height="15" fill="rgb(225,36,22)" fg:x="579" fg:w="2"/><text x="13.5910%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.05%)</title><rect x="13.3410%" y="549" width="0.0461%" height="15" fill="rgb(251,106,46)" fg:x="579" fg:w="2"/><text x="13.5910%" y="559.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (289 samples, 6.66%)</title><rect x="6.7512%" y="677" width="6.6590%" height="15" fill="rgb(208,90,1)" fg:x="293" fg:w="289"/><text x="7.0012%" y="687.50">&lt;json_ben..</text></g><g><title>serde::de::MapAccess::next_value (264 samples, 6.08%)</title><rect x="7.3272%" y="661" width="6.0829%" height="15" fill="rgb(243,10,4)" fg:x="318" fg:w="264"/><text x="7.5772%" y="671.50">serde::d..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (264 samples, 6.08%)</title><rect x="7.3272%" y="645" width="6.0829%" height="15" fill="rgb(212,137,27)" fg:x="318" fg:w="264"/><text x="7.5772%" y="655.50">&lt;simd_js..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (264 samples, 6.08%)</title><rect x="7.3272%" y="629" width="6.0829%" height="15" fill="rgb(231,220,49)" fg:x="318" fg:w="264"/><text x="7.5772%" y="639.50">&lt;core::m..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="13.3871%" y="613" width="0.0230%" height="15" fill="rgb(237,96,20)" fg:x="581" fg:w="1"/><text x="13.6371%" y="623.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect x="13.3871%" y="597" width="0.0230%" height="15" fill="rgb(239,229,30)" fg:x="581" fg:w="1"/><text x="13.6371%" y="607.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="13.3871%" y="581" width="0.0230%" height="15" fill="rgb(219,65,33)" fg:x="581" fg:w="1"/><text x="13.6371%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="13.3871%" y="565" width="0.0230%" height="15" fill="rgb(243,134,7)" fg:x="581" fg:w="1"/><text x="13.6371%" y="575.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (350 samples, 8.06%)</title><rect x="5.4378%" y="773" width="8.0645%" height="15" fill="rgb(216,177,54)" fg:x="236" fg:w="350"/><text x="5.6878%" y="783.50">&lt;serde::de:..</text></g><g><title>serde::de::SeqAccess::next_element (328 samples, 7.56%)</title><rect x="5.9447%" y="757" width="7.5576%" height="15" fill="rgb(211,160,20)" fg:x="258" fg:w="328"/><text x="6.1947%" y="767.50">serde::de:..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::SeqAccess&gt;::next_element_seed (328 samples, 7.56%)</title><rect x="5.9447%" y="741" width="7.5576%" height="15" fill="rgb(239,85,39)" fg:x="258" fg:w="328"/><text x="6.1947%" y="751.50">&lt;simd_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (326 samples, 7.51%)</title><rect x="5.9908%" y="725" width="7.5115%" height="15" fill="rgb(232,125,22)" fg:x="260" fg:w="326"/><text x="6.2408%" y="735.50">&lt;core::mar..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (294 samples, 6.77%)</title><rect x="6.7281%" y="709" width="6.7742%" height="15" fill="rgb(244,57,34)" fg:x="292" fg:w="294"/><text x="6.9781%" y="719.50">json_benc..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (294 samples, 6.77%)</title><rect x="6.7281%" y="693" width="6.7742%" height="15" fill="rgb(214,203,32)" fg:x="292" fg:w="294"/><text x="6.9781%" y="703.50">simd_json..</text></g><g><title>?? (4 samples, 0.09%)</title><rect x="13.4101%" y="677" width="0.0922%" height="15" fill="rgb(207,58,43)" fg:x="582" fg:w="4"/><text x="13.6601%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.09%)</title><rect x="13.4101%" y="661" width="0.0922%" height="15" fill="rgb(215,193,15)" fg:x="582" fg:w="4"/><text x="13.6601%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (352 samples, 8.11%)</title><rect x="5.4378%" y="805" width="8.1106%" height="15" fill="rgb(232,15,44)" fg:x="236" fg:w="352"/><text x="5.6878%" y="815.50">serde::de::..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (352 samples, 8.11%)</title><rect x="5.4378%" y="789" width="8.1106%" height="15" fill="rgb(212,3,48)" fg:x="236" fg:w="352"/><text x="5.6878%" y="799.50">simd_json::..</text></g><g><title>?? (2 samples, 0.05%)</title><rect x="13.5023%" y="773" width="0.0461%" height="15" fill="rgb(218,128,7)" fg:x="586" fg:w="2"/><text x="13.7523%" y="783.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="13.5023%" y="757" width="0.0461%" height="15" fill="rgb(226,216,39)" fg:x="586" fg:w="2"/><text x="13.7523%" y="767.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="13.5484%" y="613" width="0.0230%" height="15" fill="rgb(243,47,51)" fg:x="588" fg:w="1"/><text x="13.7984%" y="623.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="13.5484%" y="597" width="0.0230%" height="15" fill="rgb(241,183,40)" fg:x="588" fg:w="1"/><text x="13.7984%" y="607.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="13.5484%" y="581" width="0.0230%" height="15" fill="rgb(231,217,32)" fg:x="588" fg:w="1"/><text x="13.7984%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="13.5484%" y="565" width="0.0230%" height="15" fill="rgb(229,61,38)" fg:x="588" fg:w="1"/><text x="13.7984%" y="575.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="13.5484%" y="549" width="0.0230%" height="15" fill="rgb(225,210,5)" fg:x="588" fg:w="1"/><text x="13.7984%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="13.5484%" y="533" width="0.0230%" height="15" fill="rgb(231,79,45)" fg:x="588" fg:w="1"/><text x="13.7984%" y="543.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="13.5484%" y="517" width="0.0230%" height="15" fill="rgb(224,100,7)" fg:x="588" fg:w="1"/><text x="13.7984%" y="527.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="13.5484%" y="501" width="0.0230%" height="15" fill="rgb(241,198,18)" fg:x="588" fg:w="1"/><text x="13.7984%" y="511.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="13.5484%" y="485" width="0.0230%" height="15" fill="rgb(252,97,53)" fg:x="588" fg:w="1"/><text x="13.7984%" y="495.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="13.5484%" y="469" width="0.0230%" height="15" fill="rgb(220,88,7)" fg:x="588" fg:w="1"/><text x="13.7984%" y="479.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="13.5484%" y="453" width="0.0230%" height="15" fill="rgb(213,176,14)" fg:x="588" fg:w="1"/><text x="13.7984%" y="463.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="13.5484%" y="437" width="0.0230%" height="15" fill="rgb(246,73,7)" fg:x="588" fg:w="1"/><text x="13.7984%" y="447.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="13.5484%" y="421" width="0.0230%" height="15" fill="rgb(245,64,36)" fg:x="588" fg:w="1"/><text x="13.7984%" y="431.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="13.5484%" y="405" width="0.0230%" height="15" fill="rgb(245,80,10)" fg:x="588" fg:w="1"/><text x="13.7984%" y="415.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="13.5484%" y="389" width="0.0230%" height="15" fill="rgb(232,107,50)" fg:x="588" fg:w="1"/><text x="13.7984%" y="399.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="13.5484%" y="373" width="0.0230%" height="15" fill="rgb(253,3,0)" fg:x="588" fg:w="1"/><text x="13.7984%" y="383.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="13.5484%" y="357" width="0.0230%" height="15" fill="rgb(212,99,53)" fg:x="588" fg:w="1"/><text x="13.7984%" y="367.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (2 samples, 0.05%)</title><rect x="13.5484%" y="805" width="0.0461%" height="15" fill="rgb(249,111,54)" fg:x="588" fg:w="2"/><text x="13.7984%" y="815.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_option (2 samples, 0.05%)</title><rect x="13.5484%" y="789" width="0.0461%" height="15" fill="rgb(249,55,30)" fg:x="588" fg:w="2"/><text x="13.7984%" y="799.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (2 samples, 0.05%)</title><rect x="13.5484%" y="773" width="0.0461%" height="15" fill="rgb(237,47,42)" fg:x="588" fg:w="2"/><text x="13.7984%" y="783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2 samples, 0.05%)</title><rect x="13.5484%" y="757" width="0.0461%" height="15" fill="rgb(211,20,18)" fg:x="588" fg:w="2"/><text x="13.7984%" y="767.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_string (2 samples, 0.05%)</title><rect x="13.5484%" y="741" width="0.0461%" height="15" fill="rgb(231,203,46)" fg:x="588" fg:w="2"/><text x="13.7984%" y="751.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.05%)</title><rect x="13.5484%" y="725" width="0.0461%" height="15" fill="rgb(237,142,3)" fg:x="588" fg:w="2"/><text x="13.7984%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.05%)</title><rect x="13.5484%" y="709" width="0.0461%" height="15" fill="rgb(241,107,1)" fg:x="588" fg:w="2"/><text x="13.7984%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.05%)</title><rect x="13.5484%" y="693" width="0.0461%" height="15" fill="rgb(229,83,13)" fg:x="588" fg:w="2"/><text x="13.7984%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.05%)</title><rect x="13.5484%" y="677" width="0.0461%" height="15" fill="rgb(241,91,40)" fg:x="588" fg:w="2"/><text x="13.7984%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.05%)</title><rect x="13.5484%" y="661" width="0.0461%" height="15" fill="rgb(225,3,45)" fg:x="588" fg:w="2"/><text x="13.7984%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.05%)</title><rect x="13.5484%" y="645" width="0.0461%" height="15" fill="rgb(244,223,14)" fg:x="588" fg:w="2"/><text x="13.7984%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.05%)</title><rect x="13.5484%" y="629" width="0.0461%" height="15" fill="rgb(224,124,37)" fg:x="588" fg:w="2"/><text x="13.7984%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="13.5714%" y="613" width="0.0230%" height="15" fill="rgb(251,171,30)" fg:x="589" fg:w="1"/><text x="13.8214%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="13.5714%" y="597" width="0.0230%" height="15" fill="rgb(236,46,54)" fg:x="589" fg:w="1"/><text x="13.8214%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="13.5714%" y="581" width="0.0230%" height="15" fill="rgb(245,213,5)" fg:x="589" fg:w="1"/><text x="13.8214%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="13.5945%" y="757" width="0.0230%" height="15" fill="rgb(230,144,27)" fg:x="590" fg:w="1"/><text x="13.8445%" y="767.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (387 samples, 8.92%)</title><rect x="4.7235%" y="869" width="8.9171%" height="15" fill="rgb(220,86,6)" fg:x="205" fg:w="387"/><text x="4.9735%" y="879.50">&lt;json_benchma..</text></g><g><title>serde::de::MapAccess::next_value (363 samples, 8.36%)</title><rect x="5.2765%" y="853" width="8.3641%" height="15" fill="rgb(240,20,13)" fg:x="229" fg:w="363"/><text x="5.5265%" y="863.50">serde::de::M..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (363 samples, 8.36%)</title><rect x="5.2765%" y="837" width="8.3641%" height="15" fill="rgb(217,89,34)" fg:x="229" fg:w="363"/><text x="5.5265%" y="847.50">&lt;simd_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (363 samples, 8.36%)</title><rect x="5.2765%" y="821" width="8.3641%" height="15" fill="rgb(229,13,5)" fg:x="229" fg:w="363"/><text x="5.5265%" y="831.50">&lt;core::marke..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.05%)</title><rect x="13.5945%" y="805" width="0.0461%" height="15" fill="rgb(244,67,35)" fg:x="590" fg:w="2"/><text x="13.8445%" y="815.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_u32 (2 samples, 0.05%)</title><rect x="13.5945%" y="789" width="0.0461%" height="15" fill="rgb(221,40,2)" fg:x="590" fg:w="2"/><text x="13.8445%" y="799.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="13.5945%" y="773" width="0.0461%" height="15" fill="rgb(237,157,21)" fg:x="590" fg:w="2"/><text x="13.8445%" y="783.50"></text></g><g><title>value_trait::ValueAccess::as_u32 (1 samples, 0.02%)</title><rect x="13.6175%" y="757" width="0.0230%" height="15" fill="rgb(222,94,11)" fg:x="591" fg:w="1"/><text x="13.8675%" y="767.50"></text></g><g><title>&lt;value_trait::node::StaticNode as value_trait::ValueAccess&gt;::as_u64 (1 samples, 0.02%)</title><rect x="13.6175%" y="741" width="0.0230%" height="15" fill="rgb(249,113,6)" fg:x="591" fg:w="1"/><text x="13.8675%" y="751.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (395 samples, 9.10%)</title><rect x="4.5622%" y="965" width="9.1014%" height="15" fill="rgb(238,137,36)" fg:x="198" fg:w="395"/><text x="4.8122%" y="975.50">&lt;serde::de::i..</text></g><g><title>serde::de::SeqAccess::next_element (391 samples, 9.01%)</title><rect x="4.6544%" y="949" width="9.0092%" height="15" fill="rgb(210,102,26)" fg:x="202" fg:w="391"/><text x="4.9044%" y="959.50">serde::de::Se..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::SeqAccess&gt;::next_element_seed (391 samples, 9.01%)</title><rect x="4.6544%" y="933" width="9.0092%" height="15" fill="rgb(218,30,30)" fg:x="202" fg:w="391"/><text x="4.9044%" y="943.50">&lt;simd_json::s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (391 samples, 9.01%)</title><rect x="4.6544%" y="917" width="9.0092%" height="15" fill="rgb(214,67,26)" fg:x="202" fg:w="391"/><text x="4.9044%" y="927.50">&lt;core::marker..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (391 samples, 9.01%)</title><rect x="4.6544%" y="901" width="9.0092%" height="15" fill="rgb(251,9,53)" fg:x="202" fg:w="391"/><text x="4.9044%" y="911.50">json_benchmar..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (391 samples, 9.01%)</title><rect x="4.6544%" y="885" width="9.0092%" height="15" fill="rgb(228,204,25)" fg:x="202" fg:w="391"/><text x="4.9044%" y="895.50">simd_json::se..</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="13.6406%" y="869" width="0.0230%" height="15" fill="rgb(207,153,8)" fg:x="592" fg:w="1"/><text x="13.8906%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="13.6406%" y="853" width="0.0230%" height="15" fill="rgb(242,9,16)" fg:x="592" fg:w="1"/><text x="13.8906%" y="863.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="13.6406%" y="837" width="0.0230%" height="15" fill="rgb(217,211,10)" fg:x="592" fg:w="1"/><text x="13.8906%" y="847.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (508 samples, 11.71%)</title><rect x="1.9816%" y="1061" width="11.7051%" height="15" fill="rgb(219,228,52)" fg:x="86" fg:w="508"/><text x="2.2316%" y="1071.50">&lt;json_benchmark::..</text></g><g><title>serde::de::MapAccess::next_value (505 samples, 11.64%)</title><rect x="2.0507%" y="1045" width="11.6359%" height="15" fill="rgb(231,92,29)" fg:x="89" fg:w="505"/><text x="2.3007%" y="1055.50">serde::de::MapAcc..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (505 samples, 11.64%)</title><rect x="2.0507%" y="1029" width="11.6359%" height="15" fill="rgb(232,8,23)" fg:x="89" fg:w="505"/><text x="2.3007%" y="1039.50">&lt;simd_json::serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (505 samples, 11.64%)</title><rect x="2.0507%" y="1013" width="11.6359%" height="15" fill="rgb(216,211,34)" fg:x="89" fg:w="505"/><text x="2.3007%" y="1023.50">&lt;core::marker::Ph..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (396 samples, 9.12%)</title><rect x="4.5622%" y="997" width="9.1244%" height="15" fill="rgb(236,151,0)" fg:x="198" fg:w="396"/><text x="4.8122%" y="1007.50">serde::de::im..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (396 samples, 9.12%)</title><rect x="4.5622%" y="981" width="9.1244%" height="15" fill="rgb(209,168,3)" fg:x="198" fg:w="396"/><text x="4.8122%" y="991.50">simd_json::se..</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="13.6636%" y="965" width="0.0230%" height="15" fill="rgb(208,129,28)" fg:x="593" fg:w="1"/><text x="13.9136%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="13.6636%" y="949" width="0.0230%" height="15" fill="rgb(229,78,22)" fg:x="593" fg:w="1"/><text x="13.9136%" y="959.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="13.6636%" y="933" width="0.0230%" height="15" fill="rgb(228,187,13)" fg:x="593" fg:w="1"/><text x="13.9136%" y="943.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (509 samples, 11.73%)</title><rect x="1.9816%" y="1093" width="11.7281%" height="15" fill="rgb(240,119,24)" fg:x="86" fg:w="509"/><text x="2.2316%" y="1103.50">json_benchmark::c..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (509 samples, 11.73%)</title><rect x="1.9816%" y="1077" width="11.7281%" height="15" fill="rgb(209,194,42)" fg:x="86" fg:w="509"/><text x="2.2316%" y="1087.50">simd_json::serde:..</text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="13.6866%" y="1061" width="0.0230%" height="15" fill="rgb(247,200,46)" fg:x="594" fg:w="1"/><text x="13.9366%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="14.2166%" y="997" width="0.0230%" height="15" fill="rgb(218,76,16)" fg:x="617" fg:w="1"/><text x="14.4666%" y="1007.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (8 samples, 0.18%)</title><rect x="14.2396%" y="997" width="0.1843%" height="15" fill="rgb(225,21,48)" fg:x="618" fg:w="8"/><text x="14.4896%" y="1007.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (14 samples, 0.32%)</title><rect x="14.4240%" y="997" width="0.3226%" height="15" fill="rgb(239,223,50)" fg:x="626" fg:w="14"/><text x="14.6740%" y="1007.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (20 samples, 0.46%)</title><rect x="14.7465%" y="997" width="0.4608%" height="15" fill="rgb(244,45,21)" fg:x="640" fg:w="20"/><text x="14.9965%" y="1007.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInputAVX as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::find_whitespace_and_structurals (79 samples, 1.82%)</title><rect x="13.7097%" y="1013" width="1.8203%" height="15" fill="rgb(232,33,43)" fg:x="595" fg:w="79"/><text x="13.9597%" y="1023.50">&lt;..</text></g><g><title>simd_json::Deserializer::from_slice (14 samples, 0.32%)</title><rect x="15.2074%" y="997" width="0.3226%" height="15" fill="rgb(209,8,3)" fg:x="660" fg:w="14"/><text x="15.4574%" y="1007.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="17.3963%" y="949" width="0.0230%" height="15" fill="rgb(214,25,53)" fg:x="755" fg:w="1"/><text x="17.6463%" y="959.50"></text></g><g><title>?? (13 samples, 0.30%)</title><rect x="17.3963%" y="965" width="0.2995%" height="15" fill="rgb(254,186,54)" fg:x="755" fg:w="13"/><text x="17.6463%" y="975.50"></text></g><g><title>simd_json::Deserializer::from_slice (12 samples, 0.28%)</title><rect x="17.4194%" y="949" width="0.2765%" height="15" fill="rgb(208,174,49)" fg:x="756" fg:w="12"/><text x="17.6694%" y="959.50"></text></g><g><title>?? (20 samples, 0.46%)</title><rect x="17.3963%" y="997" width="0.4608%" height="15" fill="rgb(233,191,51)" fg:x="755" fg:w="20"/><text x="17.6463%" y="1007.50"></text></g><g><title>?? (20 samples, 0.46%)</title><rect x="17.3963%" y="981" width="0.4608%" height="15" fill="rgb(222,134,10)" fg:x="755" fg:w="20"/><text x="17.6463%" y="991.50"></text></g><g><title>simd_json::Deserializer::from_slice (7 samples, 0.16%)</title><rect x="17.6959%" y="965" width="0.1613%" height="15" fill="rgb(230,226,20)" fg:x="768" fg:w="7"/><text x="17.9459%" y="975.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (5 samples, 0.12%)</title><rect x="17.8571%" y="997" width="0.1152%" height="15" fill="rgb(251,111,25)" fg:x="775" fg:w="5"/><text x="18.1071%" y="1007.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (25 samples, 0.58%)</title><rect x="17.9724%" y="997" width="0.5760%" height="15" fill="rgb(224,40,46)" fg:x="780" fg:w="25"/><text x="18.2224%" y="1007.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (25 samples, 0.58%)</title><rect x="17.9724%" y="981" width="0.5760%" height="15" fill="rgb(236,108,47)" fg:x="780" fg:w="25"/><text x="18.2224%" y="991.50"></text></g><g><title>simd_json::Deserializer::from_slice (25 samples, 0.58%)</title><rect x="17.9724%" y="965" width="0.5760%" height="15" fill="rgb(234,93,0)" fg:x="780" fg:w="25"/><text x="18.2224%" y="975.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_si256 (25 samples, 0.58%)</title><rect x="18.5484%" y="997" width="0.5760%" height="15" fill="rgb(224,213,32)" fg:x="805" fg:w="25"/><text x="18.7984%" y="1007.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (76 samples, 1.75%)</title><rect x="19.1244%" y="997" width="1.7512%" height="15" fill="rgb(251,11,48)" fg:x="830" fg:w="76"/><text x="19.3744%" y="1007.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInputAVX as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::flatten_bits (233 samples, 5.37%)</title><rect x="15.5300%" y="1013" width="5.3687%" height="15" fill="rgb(236,173,5)" fg:x="674" fg:w="233"/><text x="15.7800%" y="1023.50">&lt;simd_j..</text></g><g><title>simd_json::Deserializer::from_slice (1 samples, 0.02%)</title><rect x="20.8756%" y="997" width="0.0230%" height="15" fill="rgb(230,95,12)" fg:x="906" fg:w="1"/><text x="21.1256%" y="1007.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="20.8986%" y="949" width="0.0230%" height="15" fill="rgb(232,209,1)" fg:x="907" fg:w="1"/><text x="21.1486%" y="959.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="20.8986%" y="933" width="0.0230%" height="15" fill="rgb(232,6,1)" fg:x="907" fg:w="1"/><text x="21.1486%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="20.8986%" y="917" width="0.0230%" height="15" fill="rgb(210,224,50)" fg:x="907" fg:w="1"/><text x="21.1486%" y="927.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (2 samples, 0.05%)</title><rect x="20.9217%" y="949" width="0.0461%" height="15" fill="rgb(228,127,35)" fg:x="908" fg:w="2"/><text x="21.1717%" y="959.50"></text></g><g><title>?? (8 samples, 0.18%)</title><rect x="20.8986%" y="965" width="0.1843%" height="15" fill="rgb(245,102,45)" fg:x="907" fg:w="8"/><text x="21.1486%" y="975.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (5 samples, 0.12%)</title><rect x="20.9677%" y="949" width="0.1152%" height="15" fill="rgb(214,1,49)" fg:x="910" fg:w="5"/><text x="21.2177%" y="959.50"></text></g><g><title>?? (42 samples, 0.97%)</title><rect x="20.8986%" y="997" width="0.9677%" height="15" fill="rgb(226,163,40)" fg:x="907" fg:w="42"/><text x="21.1486%" y="1007.50"></text></g><g><title>?? (42 samples, 0.97%)</title><rect x="20.8986%" y="981" width="0.9677%" height="15" fill="rgb(239,212,28)" fg:x="907" fg:w="42"/><text x="21.1486%" y="991.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (34 samples, 0.78%)</title><rect x="21.0829%" y="965" width="0.7834%" height="15" fill="rgb(220,20,13)" fg:x="915" fg:w="34"/><text x="21.3329%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.78%)</title><rect x="21.0829%" y="949" width="0.7834%" height="15" fill="rgb(210,164,35)" fg:x="915" fg:w="34"/><text x="21.3329%" y="959.50"></text></g><g><title>&lt;simdutf8::implementation::x86::avx2::ChunkedUtf8ValidatorImp as simdutf8::basic::imp::ChunkedUtf8Validator&gt;::update_from_chunks (57 samples, 1.31%)</title><rect x="20.8986%" y="1013" width="1.3134%" height="15" fill="rgb(248,109,41)" fg:x="907" fg:w="57"/><text x="21.1486%" y="1023.50"></text></g><g><title>simd_json::Deserializer::from_slice (15 samples, 0.35%)</title><rect x="21.8664%" y="997" width="0.3456%" height="15" fill="rgb(238,23,50)" fg:x="949" fg:w="15"/><text x="22.1164%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="22.2120%" y="997" width="0.0230%" height="15" fill="rgb(211,48,49)" fg:x="964" fg:w="1"/><text x="22.4620%" y="1007.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="22.2120%" y="981" width="0.0230%" height="15" fill="rgb(223,36,21)" fg:x="964" fg:w="1"/><text x="22.4620%" y="991.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="22.2120%" y="965" width="0.0230%" height="15" fill="rgb(207,123,46)" fg:x="964" fg:w="1"/><text x="22.4620%" y="975.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="22.2120%" y="949" width="0.0230%" height="15" fill="rgb(240,218,32)" fg:x="964" fg:w="1"/><text x="22.4620%" y="959.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="22.2120%" y="933" width="0.0230%" height="15" fill="rgb(252,5,43)" fg:x="964" fg:w="1"/><text x="22.4620%" y="943.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="22.2120%" y="917" width="0.0230%" height="15" fill="rgb(252,84,19)" fg:x="964" fg:w="1"/><text x="22.4620%" y="927.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="22.2120%" y="901" width="0.0230%" height="15" fill="rgb(243,152,39)" fg:x="964" fg:w="1"/><text x="22.4620%" y="911.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="22.2120%" y="885" width="0.0230%" height="15" fill="rgb(234,160,15)" fg:x="964" fg:w="1"/><text x="22.4620%" y="895.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="22.2120%" y="869" width="0.0230%" height="15" fill="rgb(237,34,20)" fg:x="964" fg:w="1"/><text x="22.4620%" y="879.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="22.2120%" y="853" width="0.0230%" height="15" fill="rgb(229,97,13)" fg:x="964" fg:w="1"/><text x="22.4620%" y="863.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="22.2120%" y="837" width="0.0230%" height="15" fill="rgb(234,71,50)" fg:x="964" fg:w="1"/><text x="22.4620%" y="847.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.02%)</title><rect x="22.2120%" y="821" width="0.0230%" height="15" fill="rgb(253,155,4)" fg:x="964" fg:w="1"/><text x="22.4620%" y="831.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.02%)</title><rect x="22.2120%" y="805" width="0.0230%" height="15" fill="rgb(222,185,37)" fg:x="964" fg:w="1"/><text x="22.4620%" y="815.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="22.2120%" y="789" width="0.0230%" height="15" fill="rgb(251,177,13)" fg:x="964" fg:w="1"/><text x="22.4620%" y="799.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="22.2120%" y="773" width="0.0230%" height="15" fill="rgb(250,179,40)" fg:x="964" fg:w="1"/><text x="22.4620%" y="783.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="22.2120%" y="757" width="0.0230%" height="15" fill="rgb(242,44,2)" fg:x="964" fg:w="1"/><text x="22.4620%" y="767.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="22.2120%" y="741" width="0.0230%" height="15" fill="rgb(216,177,13)" fg:x="964" fg:w="1"/><text x="22.4620%" y="751.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect x="22.2120%" y="725" width="0.0230%" height="15" fill="rgb(216,106,43)" fg:x="964" fg:w="1"/><text x="22.4620%" y="735.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect x="22.2120%" y="709" width="0.0230%" height="15" fill="rgb(216,183,2)" fg:x="964" fg:w="1"/><text x="22.4620%" y="719.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="22.2120%" y="693" width="0.0230%" height="15" fill="rgb(249,75,3)" fg:x="964" fg:w="1"/><text x="22.4620%" y="703.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="22.2120%" y="677" width="0.0230%" height="15" fill="rgb(219,67,39)" fg:x="964" fg:w="1"/><text x="22.4620%" y="687.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="22.2120%" y="661" width="0.0230%" height="15" fill="rgb(253,228,2)" fg:x="964" fg:w="1"/><text x="22.4620%" y="671.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="22.2120%" y="645" width="0.0230%" height="15" fill="rgb(235,138,27)" fg:x="964" fg:w="1"/><text x="22.4620%" y="655.50"></text></g><g><title>edata_list_inactive_remove (1 samples, 0.02%)</title><rect x="22.2120%" y="629" width="0.0230%" height="15" fill="rgb(236,97,51)" fg:x="964" fg:w="1"/><text x="22.4620%" y="639.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="22.2350%" y="933" width="0.0230%" height="15" fill="rgb(240,80,30)" fg:x="965" fg:w="1"/><text x="22.4850%" y="943.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="22.2350%" y="917" width="0.0230%" height="15" fill="rgb(230,178,19)" fg:x="965" fg:w="1"/><text x="22.4850%" y="927.50"></text></g><g><title>_rjem_je_ecache_alloc (2 samples, 0.05%)</title><rect x="22.2811%" y="741" width="0.0461%" height="15" fill="rgb(210,190,27)" fg:x="967" fg:w="2"/><text x="22.5311%" y="751.50"></text></g><g><title>extent_recycle (2 samples, 0.05%)</title><rect x="22.2811%" y="725" width="0.0461%" height="15" fill="rgb(222,107,31)" fg:x="967" fg:w="2"/><text x="22.5311%" y="735.50"></text></g><g><title>extent_recycle_split (2 samples, 0.05%)</title><rect x="22.2811%" y="709" width="0.0461%" height="15" fill="rgb(216,127,34)" fg:x="967" fg:w="2"/><text x="22.5311%" y="719.50"></text></g><g><title>extent_split_interior (2 samples, 0.05%)</title><rect x="22.2811%" y="693" width="0.0461%" height="15" fill="rgb(234,116,52)" fg:x="967" fg:w="2"/><text x="22.5311%" y="703.50"></text></g><g><title>extent_split_impl (2 samples, 0.05%)</title><rect x="22.2811%" y="677" width="0.0461%" height="15" fill="rgb(222,124,15)" fg:x="967" fg:w="2"/><text x="22.5311%" y="687.50"></text></g><g><title>_rjem_je_edata_cache_get (2 samples, 0.05%)</title><rect x="22.2811%" y="661" width="0.0461%" height="15" fill="rgb(231,179,28)" fg:x="967" fg:w="2"/><text x="22.5311%" y="671.50"></text></g><g><title>_rjem_je_edata_avail_remove (2 samples, 0.05%)</title><rect x="22.2811%" y="645" width="0.0461%" height="15" fill="rgb(226,93,45)" fg:x="967" fg:w="2"/><text x="22.5311%" y="655.50"></text></g><g><title>ph_remove (2 samples, 0.05%)</title><rect x="22.2811%" y="629" width="0.0461%" height="15" fill="rgb(215,8,51)" fg:x="967" fg:w="2"/><text x="22.5311%" y="639.50"></text></g><g><title>ph_merge_children (2 samples, 0.05%)</title><rect x="22.2811%" y="613" width="0.0461%" height="15" fill="rgb(223,106,5)" fg:x="967" fg:w="2"/><text x="22.5311%" y="623.50"></text></g><g><title>phn_merge_siblings (2 samples, 0.05%)</title><rect x="22.2811%" y="597" width="0.0461%" height="15" fill="rgb(250,191,5)" fg:x="967" fg:w="2"/><text x="22.5311%" y="607.50"></text></g><g><title>?? (5 samples, 0.12%)</title><rect x="22.2350%" y="997" width="0.1152%" height="15" fill="rgb(242,132,44)" fg:x="965" fg:w="5"/><text x="22.4850%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.12%)</title><rect x="22.2350%" y="981" width="0.1152%" height="15" fill="rgb(251,152,29)" fg:x="965" fg:w="5"/><text x="22.4850%" y="991.50"></text></g><g><title>?? (5 samples, 0.12%)</title><rect x="22.2350%" y="965" width="0.1152%" height="15" fill="rgb(218,179,5)" fg:x="965" fg:w="5"/><text x="22.4850%" y="975.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.12%)</title><rect x="22.2350%" y="949" width="0.1152%" height="15" fill="rgb(227,67,19)" fg:x="965" fg:w="5"/><text x="22.4850%" y="959.50"></text></g><g><title>_rjem_je_malloc_default (4 samples, 0.09%)</title><rect x="22.2581%" y="933" width="0.0922%" height="15" fill="rgb(233,119,31)" fg:x="966" fg:w="4"/><text x="22.5081%" y="943.50"></text></g><g><title>imalloc (4 samples, 0.09%)</title><rect x="22.2581%" y="917" width="0.0922%" height="15" fill="rgb(241,120,22)" fg:x="966" fg:w="4"/><text x="22.5081%" y="927.50"></text></g><g><title>imalloc_body (4 samples, 0.09%)</title><rect x="22.2581%" y="901" width="0.0922%" height="15" fill="rgb(224,102,30)" fg:x="966" fg:w="4"/><text x="22.5081%" y="911.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.09%)</title><rect x="22.2581%" y="885" width="0.0922%" height="15" fill="rgb(210,164,37)" fg:x="966" fg:w="4"/><text x="22.5081%" y="895.50"></text></g><g><title>iallocztm (4 samples, 0.09%)</title><rect x="22.2581%" y="869" width="0.0922%" height="15" fill="rgb(226,191,16)" fg:x="966" fg:w="4"/><text x="22.5081%" y="879.50"></text></g><g><title>arena_malloc (4 samples, 0.09%)</title><rect x="22.2581%" y="853" width="0.0922%" height="15" fill="rgb(214,40,45)" fg:x="966" fg:w="4"/><text x="22.5081%" y="863.50"></text></g><g><title>_rjem_je_large_palloc (4 samples, 0.09%)</title><rect x="22.2581%" y="837" width="0.0922%" height="15" fill="rgb(244,29,26)" fg:x="966" fg:w="4"/><text x="22.5081%" y="847.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (4 samples, 0.09%)</title><rect x="22.2581%" y="821" width="0.0922%" height="15" fill="rgb(216,16,5)" fg:x="966" fg:w="4"/><text x="22.5081%" y="831.50"></text></g><g><title>_rjem_je_pa_alloc (4 samples, 0.09%)</title><rect x="22.2581%" y="805" width="0.0922%" height="15" fill="rgb(249,76,35)" fg:x="966" fg:w="4"/><text x="22.5081%" y="815.50"></text></g><g><title>pai_alloc (3 samples, 0.07%)</title><rect x="22.2811%" y="789" width="0.0691%" height="15" fill="rgb(207,11,44)" fg:x="967" fg:w="3"/><text x="22.5311%" y="799.50"></text></g><g><title>pac_alloc_impl (3 samples, 0.07%)</title><rect x="22.2811%" y="773" width="0.0691%" height="15" fill="rgb(228,190,49)" fg:x="967" fg:w="3"/><text x="22.5311%" y="783.50"></text></g><g><title>pac_alloc_real (3 samples, 0.07%)</title><rect x="22.2811%" y="757" width="0.0691%" height="15" fill="rgb(214,173,12)" fg:x="967" fg:w="3"/><text x="22.5311%" y="767.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (1 samples, 0.02%)</title><rect x="22.3272%" y="741" width="0.0230%" height="15" fill="rgb(218,26,35)" fg:x="969" fg:w="1"/><text x="22.5772%" y="751.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.02%)</title><rect x="22.3272%" y="725" width="0.0230%" height="15" fill="rgb(220,200,19)" fg:x="969" fg:w="1"/><text x="22.5772%" y="735.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="22.3272%" y="709" width="0.0230%" height="15" fill="rgb(239,95,49)" fg:x="969" fg:w="1"/><text x="22.5772%" y="719.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="22.3272%" y="693" width="0.0230%" height="15" fill="rgb(235,85,53)" fg:x="969" fg:w="1"/><text x="22.5772%" y="703.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="22.3272%" y="677" width="0.0230%" height="15" fill="rgb(233,133,31)" fg:x="969" fg:w="1"/><text x="22.5772%" y="687.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="22.3272%" y="661" width="0.0230%" height="15" fill="rgb(218,25,20)" fg:x="969" fg:w="1"/><text x="22.5772%" y="671.50"></text></g><g><title>edata_list_inactive_remove (1 samples, 0.02%)</title><rect x="22.3272%" y="645" width="0.0230%" height="15" fill="rgb(252,210,38)" fg:x="969" fg:w="1"/><text x="22.5772%" y="655.50"></text></g><g><title>_rjem_je_large_malloc (1 samples, 0.02%)</title><rect x="22.3502%" y="837" width="0.0230%" height="15" fill="rgb(242,134,21)" fg:x="970" fg:w="1"/><text x="22.6002%" y="847.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="22.3733%" y="709" width="0.0230%" height="15" fill="rgb(213,28,48)" fg:x="971" fg:w="1"/><text x="22.6233%" y="719.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="22.3733%" y="693" width="0.0230%" height="15" fill="rgb(250,196,2)" fg:x="971" fg:w="1"/><text x="22.6233%" y="703.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="22.3733%" y="677" width="0.0230%" height="15" fill="rgb(227,5,17)" fg:x="971" fg:w="1"/><text x="22.6233%" y="687.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="22.3733%" y="661" width="0.0230%" height="15" fill="rgb(221,226,24)" fg:x="971" fg:w="1"/><text x="22.6233%" y="671.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="22.3733%" y="645" width="0.0230%" height="15" fill="rgb(211,5,48)" fg:x="971" fg:w="1"/><text x="22.6233%" y="655.50"></text></g><g><title>extent_recycle_split (2 samples, 0.05%)</title><rect x="22.3963%" y="709" width="0.0461%" height="15" fill="rgb(219,150,6)" fg:x="972" fg:w="2"/><text x="22.6463%" y="719.50"></text></g><g><title>extent_split_interior (2 samples, 0.05%)</title><rect x="22.3963%" y="693" width="0.0461%" height="15" fill="rgb(251,46,16)" fg:x="972" fg:w="2"/><text x="22.6463%" y="703.50"></text></g><g><title>extent_split_impl (2 samples, 0.05%)</title><rect x="22.3963%" y="677" width="0.0461%" height="15" fill="rgb(220,204,40)" fg:x="972" fg:w="2"/><text x="22.6463%" y="687.50"></text></g><g><title>_rjem_je_edata_cache_get (2 samples, 0.05%)</title><rect x="22.3963%" y="661" width="0.0461%" height="15" fill="rgb(211,85,2)" fg:x="972" fg:w="2"/><text x="22.6463%" y="671.50"></text></g><g><title>_rjem_je_edata_avail_remove (2 samples, 0.05%)</title><rect x="22.3963%" y="645" width="0.0461%" height="15" fill="rgb(229,17,7)" fg:x="972" fg:w="2"/><text x="22.6463%" y="655.50"></text></g><g><title>ph_remove (2 samples, 0.05%)</title><rect x="22.3963%" y="629" width="0.0461%" height="15" fill="rgb(239,72,28)" fg:x="972" fg:w="2"/><text x="22.6463%" y="639.50"></text></g><g><title>ph_merge_children (2 samples, 0.05%)</title><rect x="22.3963%" y="613" width="0.0461%" height="15" fill="rgb(230,47,54)" fg:x="972" fg:w="2"/><text x="22.6463%" y="623.50"></text></g><g><title>phn_merge_siblings (2 samples, 0.05%)</title><rect x="22.3963%" y="597" width="0.0461%" height="15" fill="rgb(214,50,8)" fg:x="972" fg:w="2"/><text x="22.6463%" y="607.50"></text></g><g><title>phn_merge (1 samples, 0.02%)</title><rect x="22.4194%" y="581" width="0.0230%" height="15" fill="rgb(216,198,43)" fg:x="973" fg:w="1"/><text x="22.6694%" y="591.50"></text></g><g><title>phn_merge_ordered (1 samples, 0.02%)</title><rect x="22.4194%" y="565" width="0.0230%" height="15" fill="rgb(234,20,35)" fg:x="973" fg:w="1"/><text x="22.6694%" y="575.50"></text></g><g><title>phn_prev_set (1 samples, 0.02%)</title><rect x="22.4194%" y="549" width="0.0230%" height="15" fill="rgb(254,45,19)" fg:x="973" fg:w="1"/><text x="22.6694%" y="559.50"></text></g><g><title>?? (11 samples, 0.25%)</title><rect x="22.2120%" y="1013" width="0.2535%" height="15" fill="rgb(219,14,44)" fg:x="964" fg:w="11"/><text x="22.4620%" y="1023.50"></text></g><g><title>simd_json::Deserializer::from_slice (5 samples, 0.12%)</title><rect x="22.3502%" y="997" width="0.1152%" height="15" fill="rgb(217,220,26)" fg:x="970" fg:w="5"/><text x="22.6002%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.12%)</title><rect x="22.3502%" y="981" width="0.1152%" height="15" fill="rgb(213,158,28)" fg:x="970" fg:w="5"/><text x="22.6002%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.12%)</title><rect x="22.3502%" y="965" width="0.1152%" height="15" fill="rgb(252,51,52)" fg:x="970" fg:w="5"/><text x="22.6002%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.12%)</title><rect x="22.3502%" y="949" width="0.1152%" height="15" fill="rgb(246,89,16)" fg:x="970" fg:w="5"/><text x="22.6002%" y="959.50"></text></g><g><title>_rjem_je_malloc_default (5 samples, 0.12%)</title><rect x="22.3502%" y="933" width="0.1152%" height="15" fill="rgb(216,158,49)" fg:x="970" fg:w="5"/><text x="22.6002%" y="943.50"></text></g><g><title>imalloc (5 samples, 0.12%)</title><rect x="22.3502%" y="917" width="0.1152%" height="15" fill="rgb(236,107,19)" fg:x="970" fg:w="5"/><text x="22.6002%" y="927.50"></text></g><g><title>imalloc_body (5 samples, 0.12%)</title><rect x="22.3502%" y="901" width="0.1152%" height="15" fill="rgb(228,185,30)" fg:x="970" fg:w="5"/><text x="22.6002%" y="911.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.12%)</title><rect x="22.3502%" y="885" width="0.1152%" height="15" fill="rgb(246,134,8)" fg:x="970" fg:w="5"/><text x="22.6002%" y="895.50"></text></g><g><title>iallocztm (5 samples, 0.12%)</title><rect x="22.3502%" y="869" width="0.1152%" height="15" fill="rgb(214,143,50)" fg:x="970" fg:w="5"/><text x="22.6002%" y="879.50"></text></g><g><title>arena_malloc (5 samples, 0.12%)</title><rect x="22.3502%" y="853" width="0.1152%" height="15" fill="rgb(228,75,8)" fg:x="970" fg:w="5"/><text x="22.6002%" y="863.50"></text></g><g><title>_rjem_je_large_palloc (4 samples, 0.09%)</title><rect x="22.3733%" y="837" width="0.0922%" height="15" fill="rgb(207,175,4)" fg:x="971" fg:w="4"/><text x="22.6233%" y="847.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (4 samples, 0.09%)</title><rect x="22.3733%" y="821" width="0.0922%" height="15" fill="rgb(205,108,24)" fg:x="971" fg:w="4"/><text x="22.6233%" y="831.50"></text></g><g><title>_rjem_je_pa_alloc (4 samples, 0.09%)</title><rect x="22.3733%" y="805" width="0.0922%" height="15" fill="rgb(244,120,49)" fg:x="971" fg:w="4"/><text x="22.6233%" y="815.50"></text></g><g><title>pai_alloc (4 samples, 0.09%)</title><rect x="22.3733%" y="789" width="0.0922%" height="15" fill="rgb(223,47,38)" fg:x="971" fg:w="4"/><text x="22.6233%" y="799.50"></text></g><g><title>pac_alloc_impl (4 samples, 0.09%)</title><rect x="22.3733%" y="773" width="0.0922%" height="15" fill="rgb(229,179,11)" fg:x="971" fg:w="4"/><text x="22.6233%" y="783.50"></text></g><g><title>pac_alloc_real (4 samples, 0.09%)</title><rect x="22.3733%" y="757" width="0.0922%" height="15" fill="rgb(231,122,1)" fg:x="971" fg:w="4"/><text x="22.6233%" y="767.50"></text></g><g><title>_rjem_je_ecache_alloc (4 samples, 0.09%)</title><rect x="22.3733%" y="741" width="0.0922%" height="15" fill="rgb(245,119,9)" fg:x="971" fg:w="4"/><text x="22.6233%" y="751.50"></text></g><g><title>extent_recycle (4 samples, 0.09%)</title><rect x="22.3733%" y="725" width="0.0922%" height="15" fill="rgb(241,163,25)" fg:x="971" fg:w="4"/><text x="22.6233%" y="735.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="22.4424%" y="709" width="0.0230%" height="15" fill="rgb(217,214,3)" fg:x="974" fg:w="1"/><text x="22.6924%" y="719.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="22.4424%" y="693" width="0.0230%" height="15" fill="rgb(240,86,28)" fg:x="974" fg:w="1"/><text x="22.6924%" y="703.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="22.4424%" y="677" width="0.0230%" height="15" fill="rgb(215,47,9)" fg:x="974" fg:w="1"/><text x="22.6924%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from (1 samples, 0.02%)</title><rect x="22.4654%" y="1013" width="0.0230%" height="15" fill="rgb(252,25,45)" fg:x="975" fg:w="1"/><text x="22.7154%" y="1023.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.02%)</title><rect x="22.4654%" y="997" width="0.0230%" height="15" fill="rgb(251,164,9)" fg:x="975" fg:w="1"/><text x="22.7154%" y="1007.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="22.4654%" y="981" width="0.0230%" height="15" fill="rgb(233,194,0)" fg:x="975" fg:w="1"/><text x="22.7154%" y="991.50"></text></g><g><title>simd_json::Deserializer::from_slice (19 samples, 0.44%)</title><rect x="22.4885%" y="1013" width="0.4378%" height="15" fill="rgb(249,111,24)" fg:x="976" fg:w="19"/><text x="22.7385%" y="1023.50"></text></g><g><title>simd_json::Stage1Parse::finalize_structurals (32 samples, 0.74%)</title><rect x="22.9263%" y="1013" width="0.7373%" height="15" fill="rgb(250,223,3)" fg:x="995" fg:w="32"/><text x="23.1763%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (2 samples, 0.05%)</title><rect x="24.1475%" y="981" width="0.0461%" height="15" fill="rgb(236,178,37)" fg:x="1048" fg:w="2"/><text x="24.3975%" y="991.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (2 samples, 0.05%)</title><rect x="24.1935%" y="981" width="0.0461%" height="15" fill="rgb(241,158,50)" fg:x="1050" fg:w="2"/><text x="24.4435%" y="991.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInputAVX as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::cmp_mask_against_input (25 samples, 0.58%)</title><rect x="23.8249%" y="997" width="0.5760%" height="15" fill="rgb(213,121,41)" fg:x="1034" fg:w="25"/><text x="24.0749%" y="1007.50"></text></g><g><title>simd_json::Deserializer::from_slice (7 samples, 0.16%)</title><rect x="24.2396%" y="981" width="0.1613%" height="15" fill="rgb(240,92,3)" fg:x="1052" fg:w="7"/><text x="24.4896%" y="991.50"></text></g><g><title>?? (486 samples, 11.20%)</title><rect x="13.7097%" y="1029" width="11.1982%" height="15" fill="rgb(205,123,3)" fg:x="595" fg:w="486"/><text x="13.9597%" y="1039.50">??</text></g><g><title>simd_json::Stage1Parse::find_odd_backslash_sequences (54 samples, 1.24%)</title><rect x="23.6636%" y="1013" width="1.2442%" height="15" fill="rgb(205,97,47)" fg:x="1027" fg:w="54"/><text x="23.9136%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (22 samples, 0.51%)</title><rect x="24.4009%" y="997" width="0.5069%" height="15" fill="rgb(247,152,14)" fg:x="1059" fg:w="22"/><text x="24.6509%" y="1007.50"></text></g><g><title>?? (626 samples, 14.42%)</title><rect x="13.7097%" y="1045" width="14.4240%" height="15" fill="rgb(248,195,53)" fg:x="595" fg:w="626"/><text x="13.9597%" y="1055.50">??</text></g><g><title>simd_json::Deserializer::from_slice (140 samples, 3.23%)</title><rect x="24.9078%" y="1029" width="3.2258%" height="15" fill="rgb(226,201,16)" fg:x="1081" fg:w="140"/><text x="25.1578%" y="1039.50">sim..</text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="28.1336%" y="1045" width="0.0230%" height="15" fill="rgb(205,98,0)" fg:x="1221" fg:w="1"/><text x="28.3836%" y="1055.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="28.1336%" y="1029" width="0.0230%" height="15" fill="rgb(214,191,48)" fg:x="1221" fg:w="1"/><text x="28.3836%" y="1039.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="28.1336%" y="1013" width="0.0230%" height="15" fill="rgb(237,112,39)" fg:x="1221" fg:w="1"/><text x="28.3836%" y="1023.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="28.1336%" y="997" width="0.0230%" height="15" fill="rgb(247,203,27)" fg:x="1221" fg:w="1"/><text x="28.3836%" y="1007.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="28.1336%" y="981" width="0.0230%" height="15" fill="rgb(235,124,28)" fg:x="1221" fg:w="1"/><text x="28.3836%" y="991.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="28.1336%" y="965" width="0.0230%" height="15" fill="rgb(208,207,46)" fg:x="1221" fg:w="1"/><text x="28.3836%" y="975.50"></text></g><g><title>aligned_usize_get (1 samples, 0.02%)</title><rect x="28.1336%" y="949" width="0.0230%" height="15" fill="rgb(234,176,4)" fg:x="1221" fg:w="1"/><text x="28.3836%" y="959.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="28.1336%" y="933" width="0.0230%" height="15" fill="rgb(230,133,28)" fg:x="1221" fg:w="1"/><text x="28.3836%" y="943.50"></text></g><g><title>sz_size2index_compute (1 samples, 0.02%)</title><rect x="28.1336%" y="917" width="0.0230%" height="15" fill="rgb(211,137,40)" fg:x="1221" fg:w="1"/><text x="28.3836%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.05%)</title><rect x="28.1567%" y="1045" width="0.0461%" height="15" fill="rgb(254,35,13)" fg:x="1222" fg:w="2"/><text x="28.4067%" y="1055.50"></text></g><g><title>_rjem_je_ecache_dalloc (1 samples, 0.02%)</title><rect x="28.2258%" y="869" width="0.0230%" height="15" fill="rgb(225,49,51)" fg:x="1225" fg:w="1"/><text x="28.4758%" y="879.50"></text></g><g><title>edata_addr_set (1 samples, 0.02%)</title><rect x="28.2258%" y="853" width="0.0230%" height="15" fill="rgb(251,10,15)" fg:x="1225" fg:w="1"/><text x="28.4758%" y="863.50"></text></g><g><title>extent_try_coalesce_large (2 samples, 0.05%)</title><rect x="28.2488%" y="853" width="0.0461%" height="15" fill="rgb(228,207,15)" fg:x="1226" fg:w="2"/><text x="28.4988%" y="863.50"></text></g><g><title>extent_try_coalesce_impl (2 samples, 0.05%)</title><rect x="28.2488%" y="837" width="0.0461%" height="15" fill="rgb(241,99,19)" fg:x="1226" fg:w="2"/><text x="28.4988%" y="847.50"></text></g><g><title>extent_coalesce (2 samples, 0.05%)</title><rect x="28.2488%" y="821" width="0.0461%" height="15" fill="rgb(207,104,49)" fg:x="1226" fg:w="2"/><text x="28.4988%" y="831.50"></text></g><g><title>extent_merge_impl (2 samples, 0.05%)</title><rect x="28.2488%" y="805" width="0.0461%" height="15" fill="rgb(234,99,18)" fg:x="1226" fg:w="2"/><text x="28.4988%" y="815.50"></text></g><g><title>ehooks_merge (2 samples, 0.05%)</title><rect x="28.2488%" y="789" width="0.0461%" height="15" fill="rgb(213,191,49)" fg:x="1226" fg:w="2"/><text x="28.4988%" y="799.50"></text></g><g><title>_rjem_je_ehooks_default_merge_impl (1 samples, 0.02%)</title><rect x="28.2719%" y="773" width="0.0230%" height="15" fill="rgb(210,226,19)" fg:x="1227" fg:w="1"/><text x="28.5219%" y="783.50"></text></g><g><title>_rjem_je_extent_dss_mergeable (1 samples, 0.02%)</title><rect x="28.2719%" y="757" width="0.0230%" height="15" fill="rgb(229,97,18)" fg:x="1227" fg:w="1"/><text x="28.5219%" y="767.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="28.2949%" y="821" width="0.0461%" height="15" fill="rgb(211,167,15)" fg:x="1228" fg:w="2"/><text x="28.5449%" y="831.50"></text></g><g><title>_rjem_je_large_dalloc (7 samples, 0.16%)</title><rect x="28.2028%" y="917" width="0.1613%" height="15" fill="rgb(210,169,34)" fg:x="1224" fg:w="7"/><text x="28.4528%" y="927.50"></text></g><g><title>large_dalloc_finish_impl (6 samples, 0.14%)</title><rect x="28.2258%" y="901" width="0.1382%" height="15" fill="rgb(241,121,31)" fg:x="1225" fg:w="6"/><text x="28.4758%" y="911.50"></text></g><g><title>pac_dalloc_impl (6 samples, 0.14%)</title><rect x="28.2258%" y="885" width="0.1382%" height="15" fill="rgb(232,40,11)" fg:x="1225" fg:w="6"/><text x="28.4758%" y="895.50"></text></g><g><title>_rjem_je_extent_record (5 samples, 0.12%)</title><rect x="28.2488%" y="869" width="0.1152%" height="15" fill="rgb(205,86,26)" fg:x="1226" fg:w="5"/><text x="28.4988%" y="879.50"></text></g><g><title>malloc_mutex_lock (3 samples, 0.07%)</title><rect x="28.2949%" y="853" width="0.0691%" height="15" fill="rgb(231,126,28)" fg:x="1228" fg:w="3"/><text x="28.5449%" y="863.50"></text></g><g><title>malloc_mutex_trylock_final (3 samples, 0.07%)</title><rect x="28.2949%" y="837" width="0.0691%" height="15" fill="rgb(219,221,18)" fg:x="1228" fg:w="3"/><text x="28.5449%" y="847.50"></text></g><g><title>pthread_mutex_trylock@plt (1 samples, 0.02%)</title><rect x="28.3410%" y="821" width="0.0230%" height="15" fill="rgb(211,40,0)" fg:x="1230" fg:w="1"/><text x="28.5910%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(simd_json::stage2::StackState,usize,usize)&gt;&gt; (8 samples, 0.18%)</title><rect x="28.2028%" y="1045" width="0.1843%" height="15" fill="rgb(239,85,43)" fg:x="1224" fg:w="8"/><text x="28.4528%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(simd_json::stage2::StackState,usize,usize)&gt;&gt; (8 samples, 0.18%)</title><rect x="28.2028%" y="1029" width="0.1843%" height="15" fill="rgb(231,55,21)" fg:x="1224" fg:w="8"/><text x="28.4528%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.18%)</title><rect x="28.2028%" y="1013" width="0.1843%" height="15" fill="rgb(225,184,43)" fg:x="1224" fg:w="8"/><text x="28.4528%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.18%)</title><rect x="28.2028%" y="997" width="0.1843%" height="15" fill="rgb(251,158,41)" fg:x="1224" fg:w="8"/><text x="28.4528%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.18%)</title><rect x="28.2028%" y="981" width="0.1843%" height="15" fill="rgb(234,159,37)" fg:x="1224" fg:w="8"/><text x="28.4528%" y="991.50"></text></g><g><title>__rust_dealloc (8 samples, 0.18%)</title><rect x="28.2028%" y="965" width="0.1843%" height="15" fill="rgb(216,204,22)" fg:x="1224" fg:w="8"/><text x="28.4528%" y="975.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8 samples, 0.18%)</title><rect x="28.2028%" y="949" width="0.1843%" height="15" fill="rgb(214,17,3)" fg:x="1224" fg:w="8"/><text x="28.4528%" y="959.50"></text></g><g><title>_rjem_je_sdallocx_default (8 samples, 0.18%)</title><rect x="28.2028%" y="933" width="0.1843%" height="15" fill="rgb(212,111,17)" fg:x="1224" fg:w="8"/><text x="28.4528%" y="943.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="28.3641%" y="917" width="0.0230%" height="15" fill="rgb(221,157,24)" fg:x="1231" fg:w="1"/><text x="28.6141%" y="927.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="28.3641%" y="901" width="0.0230%" height="15" fill="rgb(252,16,13)" fg:x="1231" fg:w="1"/><text x="28.6141%" y="911.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="28.3641%" y="885" width="0.0230%" height="15" fill="rgb(221,62,2)" fg:x="1231" fg:w="1"/><text x="28.6141%" y="895.50"></text></g><g><title>arena_dalloc_large (1 samples, 0.02%)</title><rect x="28.3641%" y="869" width="0.0230%" height="15" fill="rgb(247,87,22)" fg:x="1231" fg:w="1"/><text x="28.6141%" y="879.50"></text></g><g><title>emap_edata_lookup (1 samples, 0.02%)</title><rect x="28.3641%" y="853" width="0.0230%" height="15" fill="rgb(215,73,9)" fg:x="1231" fg:w="1"/><text x="28.6141%" y="863.50"></text></g><g><title>rtree_read (1 samples, 0.02%)</title><rect x="28.3641%" y="837" width="0.0230%" height="15" fill="rgb(207,175,33)" fg:x="1231" fg:w="1"/><text x="28.6141%" y="847.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="28.3641%" y="821" width="0.0230%" height="15" fill="rgb(243,129,54)" fg:x="1231" fg:w="1"/><text x="28.6141%" y="831.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect x="28.3641%" y="805" width="0.0230%" height="15" fill="rgb(227,119,45)" fg:x="1231" fg:w="1"/><text x="28.6141%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (16 samples, 0.37%)</title><rect x="28.3871%" y="1045" width="0.3687%" height="15" fill="rgb(205,109,36)" fg:x="1232" fg:w="16"/><text x="28.6371%" y="1055.50"></text></g><g><title>core::ptr::write (115 samples, 2.65%)</title><rect x="28.7558%" y="1029" width="2.6498%" height="15" fill="rgb(205,6,39)" fg:x="1248" fg:w="115"/><text x="29.0058%" y="1039.50">co..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (120 samples, 2.76%)</title><rect x="28.7558%" y="1045" width="2.7650%" height="15" fill="rgb(221,32,16)" fg:x="1248" fg:w="120"/><text x="29.0058%" y="1055.50">co..</text></g><g><title>simd_json::Deserializer::from_slice (5 samples, 0.12%)</title><rect x="31.4055%" y="1029" width="0.1152%" height="15" fill="rgb(228,144,50)" fg:x="1363" fg:w="5"/><text x="31.6555%" y="1039.50"></text></g><g><title>?? (779 samples, 17.95%)</title><rect x="13.7097%" y="1061" width="17.9493%" height="15" fill="rgb(229,201,53)" fg:x="595" fg:w="779"/><text x="13.9597%" y="1071.50">??</text></g><g><title>simd_json::Deserializer::from_slice (6 samples, 0.14%)</title><rect x="31.5207%" y="1045" width="0.1382%" height="15" fill="rgb(249,153,27)" fg:x="1368" fg:w="6"/><text x="31.7707%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (331 samples, 7.63%)</title><rect x="31.6590%" y="1061" width="7.6267%" height="15" fill="rgb(227,106,25)" fg:x="1374" fg:w="331"/><text x="31.9090%" y="1071.50">core::intr..</text></g><g><title>__memmove_avx_unaligned_erms (331 samples, 7.63%)</title><rect x="31.6590%" y="1045" width="7.6267%" height="15" fill="rgb(230,65,29)" fg:x="1374" fg:w="331"/><text x="31.9090%" y="1055.50">__memmove_..</text></g><g><title>simd_json::Deserializer::parse_str_ (26 samples, 0.60%)</title><rect x="49.8157%" y="1029" width="0.5991%" height="15" fill="rgb(221,57,46)" fg:x="2162" fg:w="26"/><text x="50.0657%" y="1039.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (36 samples, 0.83%)</title><rect x="50.5300%" y="1013" width="0.8295%" height="15" fill="rgb(229,161,17)" fg:x="2193" fg:w="36"/><text x="50.7800%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (23 samples, 0.53%)</title><rect x="51.3594%" y="1013" width="0.5300%" height="15" fill="rgb(222,213,11)" fg:x="2229" fg:w="23"/><text x="51.6094%" y="1023.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (4 samples, 0.09%)</title><rect x="51.8894%" y="1013" width="0.0922%" height="15" fill="rgb(235,35,13)" fg:x="2252" fg:w="4"/><text x="52.1394%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.09%)</title><rect x="51.8894%" y="997" width="0.0922%" height="15" fill="rgb(233,158,34)" fg:x="2252" fg:w="4"/><text x="52.1394%" y="1007.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (4 samples, 0.09%)</title><rect x="51.9816%" y="1013" width="0.0922%" height="15" fill="rgb(215,151,48)" fg:x="2256" fg:w="4"/><text x="52.2316%" y="1023.50"></text></g><g><title>simd_json::Deserializer::parse_str_ (178 samples, 4.10%)</title><rect x="48.2258%" y="1045" width="4.1014%" height="15" fill="rgb(229,84,14)" fg:x="2093" fg:w="178"/><text x="48.4758%" y="1055.50">simd..</text></g><g><title>simd_json::avx2::deser::parse_str_avx (83 samples, 1.91%)</title><rect x="50.4147%" y="1029" width="1.9124%" height="15" fill="rgb(229,68,14)" fg:x="2188" fg:w="83"/><text x="50.6647%" y="1039.50">s..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.25%)</title><rect x="52.0737%" y="1013" width="0.2535%" height="15" fill="rgb(243,106,26)" fg:x="2260" fg:w="11"/><text x="52.3237%" y="1023.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for u64&gt;::from (32 samples, 0.74%)</title><rect x="54.5853%" y="1029" width="0.7373%" height="15" fill="rgb(206,45,38)" fg:x="2369" fg:w="32"/><text x="54.8353%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="55.3226%" y="1029" width="0.0461%" height="15" fill="rgb(226,6,15)" fg:x="2401" fg:w="2"/><text x="55.5726%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (8 samples, 0.18%)</title><rect x="55.3687%" y="1029" width="0.1843%" height="15" fill="rgb(232,22,54)" fg:x="2403" fg:w="8"/><text x="55.6187%" y="1039.50"></text></g><g><title>?? (1,857 samples, 42.79%)</title><rect x="13.7097%" y="1077" width="42.7880%" height="15" fill="rgb(229,222,32)" fg:x="595" fg:w="1857"/><text x="13.9597%" y="1087.50">??</text></g><g><title>simd_json::Deserializer::from_slice (747 samples, 17.21%)</title><rect x="39.2857%" y="1061" width="17.2120%" height="15" fill="rgb(228,62,29)" fg:x="1705" fg:w="747"/><text x="39.5357%" y="1071.50">simd_json::Deserializer::fr..</text></g><g><title>simd_json::numberparse::correct::&lt;impl simd_json::Deserializer&gt;::parse_number (181 samples, 4.17%)</title><rect x="52.3272%" y="1045" width="4.1705%" height="15" fill="rgb(251,103,34)" fg:x="2271" fg:w="181"/><text x="52.5772%" y="1055.50">simd_..</text></g><g><title>simd_json::numberparse::is_integer (41 samples, 0.94%)</title><rect x="55.5530%" y="1029" width="0.9447%" height="15" fill="rgb(233,12,30)" fg:x="2411" fg:w="41"/><text x="55.8030%" y="1039.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (41 samples, 0.94%)</title><rect x="55.5530%" y="1013" width="0.9447%" height="15" fill="rgb(238,52,0)" fg:x="2411" fg:w="41"/><text x="55.8030%" y="1023.50"></text></g><g><title>_rjem_je_large_dalloc (1 samples, 0.02%)</title><rect x="56.4977%" y="933" width="0.0230%" height="15" fill="rgb(223,98,5)" fg:x="2452" fg:w="1"/><text x="56.7477%" y="943.50"></text></g><g><title>arena_get_from_edata (1 samples, 0.02%)</title><rect x="56.4977%" y="917" width="0.0230%" height="15" fill="rgb(228,75,37)" fg:x="2452" fg:w="1"/><text x="56.7477%" y="927.50"></text></g><g><title>edata_arena_ind_get (1 samples, 0.02%)</title><rect x="56.4977%" y="901" width="0.0230%" height="15" fill="rgb(205,115,49)" fg:x="2452" fg:w="1"/><text x="56.7477%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;simd_json::Buffers&gt; (2 samples, 0.05%)</title><rect x="56.4977%" y="1077" width="0.0461%" height="15" fill="rgb(250,154,43)" fg:x="2452" fg:w="2"/><text x="56.7477%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="56.4977%" y="1061" width="0.0461%" height="15" fill="rgb(226,43,29)" fg:x="2452" fg:w="2"/><text x="56.7477%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="56.4977%" y="1045" width="0.0461%" height="15" fill="rgb(249,228,39)" fg:x="2452" fg:w="2"/><text x="56.7477%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="56.4977%" y="1029" width="0.0461%" height="15" fill="rgb(216,79,43)" fg:x="2452" fg:w="2"/><text x="56.7477%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="56.4977%" y="1013" width="0.0461%" height="15" fill="rgb(228,95,12)" fg:x="2452" fg:w="2"/><text x="56.7477%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="56.4977%" y="997" width="0.0461%" height="15" fill="rgb(249,221,15)" fg:x="2452" fg:w="2"/><text x="56.7477%" y="1007.50"></text></g><g><title>__rust_dealloc (2 samples, 0.05%)</title><rect x="56.4977%" y="981" width="0.0461%" height="15" fill="rgb(233,34,13)" fg:x="2452" fg:w="2"/><text x="56.7477%" y="991.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.05%)</title><rect x="56.4977%" y="965" width="0.0461%" height="15" fill="rgb(214,103,39)" fg:x="2452" fg:w="2"/><text x="56.7477%" y="975.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.05%)</title><rect x="56.4977%" y="949" width="0.0461%" height="15" fill="rgb(251,126,39)" fg:x="2452" fg:w="2"/><text x="56.7477%" y="959.50"></text></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.02%)</title><rect x="56.5207%" y="933" width="0.0230%" height="15" fill="rgb(214,216,36)" fg:x="2453" fg:w="1"/><text x="56.7707%" y="943.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="56.5207%" y="917" width="0.0230%" height="15" fill="rgb(220,221,8)" fg:x="2453" fg:w="1"/><text x="56.7707%" y="927.50"></text></g><g><title>tcache_gc_small (1 samples, 0.02%)</title><rect x="56.5207%" y="901" width="0.0230%" height="15" fill="rgb(240,216,3)" fg:x="2453" fg:w="1"/><text x="56.7707%" y="911.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="56.5207%" y="885" width="0.0230%" height="15" fill="rgb(232,218,17)" fg:x="2453" fg:w="1"/><text x="56.7707%" y="895.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="56.5207%" y="869" width="0.0230%" height="15" fill="rgb(229,163,45)" fg:x="2453" fg:w="1"/><text x="56.7707%" y="879.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="56.5207%" y="853" width="0.0230%" height="15" fill="rgb(231,110,42)" fg:x="2453" fg:w="1"/><text x="56.7707%" y="863.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="56.5207%" y="837" width="0.0230%" height="15" fill="rgb(208,170,48)" fg:x="2453" fg:w="1"/><text x="56.7707%" y="847.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="56.5207%" y="821" width="0.0230%" height="15" fill="rgb(239,116,25)" fg:x="2453" fg:w="1"/><text x="56.7707%" y="831.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="56.5207%" y="805" width="0.0230%" height="15" fill="rgb(219,200,50)" fg:x="2453" fg:w="1"/><text x="56.7707%" y="815.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect x="56.5207%" y="789" width="0.0230%" height="15" fill="rgb(245,200,0)" fg:x="2453" fg:w="1"/><text x="56.7707%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,384 samples, 54.93%)</title><rect x="1.8203%" y="1269" width="54.9309%" height="15" fill="rgb(245,119,33)" fg:x="79" fg:w="2384"/><text x="2.0703%" y="1279.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,384 samples, 54.93%)</title><rect x="1.8203%" y="1253" width="54.9309%" height="15" fill="rgb(231,125,12)" fg:x="79" fg:w="2384"/><text x="2.0703%" y="1263.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>?? (2,384 samples, 54.93%)</title><rect x="1.8203%" y="1237" width="54.9309%" height="15" fill="rgb(216,96,41)" fg:x="79" fg:w="2384"/><text x="2.0703%" y="1247.50">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,384 samples, 54.93%)</title><rect x="1.8203%" y="1221" width="54.9309%" height="15" fill="rgb(248,43,45)" fg:x="79" fg:w="2384"/><text x="2.0703%" y="1231.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,384 samples, 54.93%)</title><rect x="1.8203%" y="1205" width="54.9309%" height="15" fill="rgb(217,222,7)" fg:x="79" fg:w="2384"/><text x="2.0703%" y="1215.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,384 samples, 54.93%)</title><rect x="1.8203%" y="1189" width="54.9309%" height="15" fill="rgb(233,28,6)" fg:x="79" fg:w="2384"/><text x="2.0703%" y="1199.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,384 samples, 54.93%)</title><rect x="1.8203%" y="1173" width="54.9309%" height="15" fill="rgb(231,218,15)" fg:x="79" fg:w="2384"/><text x="2.0703%" y="1183.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,384 samples, 54.93%)</title><rect x="1.8203%" y="1157" width="54.9309%" height="15" fill="rgb(226,171,48)" fg:x="79" fg:w="2384"/><text x="2.0703%" y="1167.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (2,384 samples, 54.93%)</title><rect x="1.8203%" y="1141" width="54.9309%" height="15" fill="rgb(235,201,9)" fg:x="79" fg:w="2384"/><text x="2.0703%" y="1151.50">deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}}</text></g><g><title>deserialize_struct::simd_json_parse_struct (2,380 samples, 54.84%)</title><rect x="1.9124%" y="1125" width="54.8387%" height="15" fill="rgb(217,80,15)" fg:x="83" fg:w="2380"/><text x="2.1624%" y="1135.50">deserialize_struct::simd_json_parse_struct</text></g><g><title>simd_json::serde::from_slice (2,380 samples, 54.84%)</title><rect x="1.9124%" y="1109" width="54.8387%" height="15" fill="rgb(219,152,8)" fg:x="83" fg:w="2380"/><text x="2.1624%" y="1119.50">simd_json::serde::from_slice</text></g><g><title>simd_json::Deserializer::from_slice (1,868 samples, 43.04%)</title><rect x="13.7097%" y="1093" width="43.0415%" height="15" fill="rgb(243,107,38)" fg:x="595" fg:w="1868"/><text x="13.9597%" y="1103.50">simd_json::Deserializer::from_slice</text></g><g><title>simd_json::Deserializer::from_slice (9 samples, 0.21%)</title><rect x="56.5438%" y="1077" width="0.2074%" height="15" fill="rgb(231,17,5)" fg:x="2454" fg:w="9"/><text x="56.7938%" y="1087.50"></text></g><g><title>aligned_usize_get (1 samples, 0.02%)</title><rect x="56.7512%" y="837" width="0.0230%" height="15" fill="rgb(209,25,54)" fg:x="2463" fg:w="1"/><text x="57.0012%" y="847.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="56.7512%" y="821" width="0.0230%" height="15" fill="rgb(219,0,2)" fg:x="2463" fg:w="1"/><text x="57.0012%" y="831.50"></text></g><g><title>sz_size2index_compute (1 samples, 0.02%)</title><rect x="56.7512%" y="805" width="0.0230%" height="15" fill="rgb(246,9,5)" fg:x="2463" fg:w="1"/><text x="57.0012%" y="815.50"></text></g><g><title>_rjem_je_arena_malloc_hard (1 samples, 0.02%)</title><rect x="56.7742%" y="789" width="0.0230%" height="15" fill="rgb(226,159,4)" fg:x="2464" fg:w="1"/><text x="57.0242%" y="799.50"></text></g><g><title>_rjem_je_arena_get_ehooks (1 samples, 0.02%)</title><rect x="56.7972%" y="757" width="0.0230%" height="15" fill="rgb(219,175,34)" fg:x="2465" fg:w="1"/><text x="57.0472%" y="767.50"></text></g><g><title>_rjem_je_base_ehooks_get (1 samples, 0.02%)</title><rect x="56.7972%" y="741" width="0.0230%" height="15" fill="rgb(236,10,46)" fg:x="2465" fg:w="1"/><text x="57.0472%" y="751.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="56.8433%" y="693" width="0.0230%" height="15" fill="rgb(240,211,16)" fg:x="2467" fg:w="1"/><text x="57.0933%" y="703.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="56.8433%" y="677" width="0.0230%" height="15" fill="rgb(205,3,43)" fg:x="2467" fg:w="1"/><text x="57.0933%" y="687.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="56.8433%" y="661" width="0.0230%" height="15" fill="rgb(245,7,22)" fg:x="2467" fg:w="1"/><text x="57.0933%" y="671.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="56.8433%" y="645" width="0.0230%" height="15" fill="rgb(239,132,32)" fg:x="2467" fg:w="1"/><text x="57.0933%" y="655.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="56.8433%" y="629" width="0.0230%" height="15" fill="rgb(228,202,34)" fg:x="2467" fg:w="1"/><text x="57.0933%" y="639.50"></text></g><g><title>_rjem_je_edata_avail_first (1 samples, 0.02%)</title><rect x="56.8664%" y="581" width="0.0230%" height="15" fill="rgb(254,200,22)" fg:x="2468" fg:w="1"/><text x="57.1164%" y="591.50"></text></g><g><title>ph_first (1 samples, 0.02%)</title><rect x="56.8664%" y="565" width="0.0230%" height="15" fill="rgb(219,10,39)" fg:x="2468" fg:w="1"/><text x="57.1164%" y="575.50"></text></g><g><title>ph_merge_aux (1 samples, 0.02%)</title><rect x="56.8664%" y="549" width="0.0230%" height="15" fill="rgb(226,210,39)" fg:x="2468" fg:w="1"/><text x="57.1164%" y="559.50"></text></g><g><title>imalloc_no_sample (6 samples, 0.14%)</title><rect x="56.7742%" y="837" width="0.1382%" height="15" fill="rgb(208,219,16)" fg:x="2464" fg:w="6"/><text x="57.0242%" y="847.50"></text></g><g><title>iallocztm (6 samples, 0.14%)</title><rect x="56.7742%" y="821" width="0.1382%" height="15" fill="rgb(216,158,51)" fg:x="2464" fg:w="6"/><text x="57.0242%" y="831.50"></text></g><g><title>arena_malloc (6 samples, 0.14%)</title><rect x="56.7742%" y="805" width="0.1382%" height="15" fill="rgb(233,14,44)" fg:x="2464" fg:w="6"/><text x="57.0242%" y="815.50"></text></g><g><title>_rjem_je_large_palloc (5 samples, 0.12%)</title><rect x="56.7972%" y="789" width="0.1152%" height="15" fill="rgb(237,97,39)" fg:x="2465" fg:w="5"/><text x="57.0472%" y="799.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (5 samples, 0.12%)</title><rect x="56.7972%" y="773" width="0.1152%" height="15" fill="rgb(218,198,43)" fg:x="2465" fg:w="5"/><text x="57.0472%" y="783.50"></text></g><g><title>_rjem_je_pa_alloc (4 samples, 0.09%)</title><rect x="56.8203%" y="757" width="0.0922%" height="15" fill="rgb(231,104,20)" fg:x="2466" fg:w="4"/><text x="57.0703%" y="767.50"></text></g><g><title>pai_alloc (4 samples, 0.09%)</title><rect x="56.8203%" y="741" width="0.0922%" height="15" fill="rgb(254,36,13)" fg:x="2466" fg:w="4"/><text x="57.0703%" y="751.50"></text></g><g><title>pac_alloc_impl (4 samples, 0.09%)</title><rect x="56.8203%" y="725" width="0.0922%" height="15" fill="rgb(248,14,50)" fg:x="2466" fg:w="4"/><text x="57.0703%" y="735.50"></text></g><g><title>pac_alloc_real (3 samples, 0.07%)</title><rect x="56.8433%" y="709" width="0.0691%" height="15" fill="rgb(217,107,29)" fg:x="2467" fg:w="3"/><text x="57.0933%" y="719.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (2 samples, 0.05%)</title><rect x="56.8664%" y="693" width="0.0461%" height="15" fill="rgb(251,169,33)" fg:x="2468" fg:w="2"/><text x="57.1164%" y="703.50"></text></g><g><title>extent_alloc_retained (2 samples, 0.05%)</title><rect x="56.8664%" y="677" width="0.0461%" height="15" fill="rgb(217,108,32)" fg:x="2468" fg:w="2"/><text x="57.1164%" y="687.50"></text></g><g><title>extent_recycle (2 samples, 0.05%)</title><rect x="56.8664%" y="661" width="0.0461%" height="15" fill="rgb(219,66,42)" fg:x="2468" fg:w="2"/><text x="57.1164%" y="671.50"></text></g><g><title>extent_recycle_split (2 samples, 0.05%)</title><rect x="56.8664%" y="645" width="0.0461%" height="15" fill="rgb(206,180,7)" fg:x="2468" fg:w="2"/><text x="57.1164%" y="655.50"></text></g><g><title>extent_split_interior (2 samples, 0.05%)</title><rect x="56.8664%" y="629" width="0.0461%" height="15" fill="rgb(208,226,31)" fg:x="2468" fg:w="2"/><text x="57.1164%" y="639.50"></text></g><g><title>extent_split_impl (2 samples, 0.05%)</title><rect x="56.8664%" y="613" width="0.0461%" height="15" fill="rgb(218,26,49)" fg:x="2468" fg:w="2"/><text x="57.1164%" y="623.50"></text></g><g><title>_rjem_je_edata_cache_get (2 samples, 0.05%)</title><rect x="56.8664%" y="597" width="0.0461%" height="15" fill="rgb(233,197,48)" fg:x="2468" fg:w="2"/><text x="57.1164%" y="607.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="56.8894%" y="581" width="0.0230%" height="15" fill="rgb(252,181,51)" fg:x="2469" fg:w="1"/><text x="57.1394%" y="591.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="56.8894%" y="565" width="0.0230%" height="15" fill="rgb(253,90,19)" fg:x="2469" fg:w="1"/><text x="57.1394%" y="575.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="56.8894%" y="549" width="0.0230%" height="15" fill="rgb(215,171,30)" fg:x="2469" fg:w="1"/><text x="57.1394%" y="559.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="56.8894%" y="533" width="0.0230%" height="15" fill="rgb(214,222,9)" fg:x="2469" fg:w="1"/><text x="57.1394%" y="543.50"></text></g><g><title>?? (9 samples, 0.21%)</title><rect x="56.7512%" y="1013" width="0.2074%" height="15" fill="rgb(223,3,22)" fg:x="2463" fg:w="9"/><text x="57.0012%" y="1023.50"></text></g><g><title>?? (9 samples, 0.21%)</title><rect x="56.7512%" y="997" width="0.2074%" height="15" fill="rgb(225,196,46)" fg:x="2463" fg:w="9"/><text x="57.0012%" y="1007.50"></text></g><g><title>?? (9 samples, 0.21%)</title><rect x="56.7512%" y="981" width="0.2074%" height="15" fill="rgb(209,110,37)" fg:x="2463" fg:w="9"/><text x="57.0012%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.21%)</title><rect x="56.7512%" y="965" width="0.2074%" height="15" fill="rgb(249,89,12)" fg:x="2463" fg:w="9"/><text x="57.0012%" y="975.50"></text></g><g><title>?? (9 samples, 0.21%)</title><rect x="56.7512%" y="949" width="0.2074%" height="15" fill="rgb(226,27,33)" fg:x="2463" fg:w="9"/><text x="57.0012%" y="959.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.21%)</title><rect x="56.7512%" y="933" width="0.2074%" height="15" fill="rgb(213,82,22)" fg:x="2463" fg:w="9"/><text x="57.0012%" y="943.50"></text></g><g><title>__rust_alloc (9 samples, 0.21%)</title><rect x="56.7512%" y="917" width="0.2074%" height="15" fill="rgb(248,140,0)" fg:x="2463" fg:w="9"/><text x="57.0012%" y="927.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (9 samples, 0.21%)</title><rect x="56.7512%" y="901" width="0.2074%" height="15" fill="rgb(228,106,3)" fg:x="2463" fg:w="9"/><text x="57.0012%" y="911.50"></text></g><g><title>_rjem_je_malloc_default (9 samples, 0.21%)</title><rect x="56.7512%" y="885" width="0.2074%" height="15" fill="rgb(209,23,37)" fg:x="2463" fg:w="9"/><text x="57.0012%" y="895.50"></text></g><g><title>imalloc (9 samples, 0.21%)</title><rect x="56.7512%" y="869" width="0.2074%" height="15" fill="rgb(241,93,50)" fg:x="2463" fg:w="9"/><text x="57.0012%" y="879.50"></text></g><g><title>imalloc_body (9 samples, 0.21%)</title><rect x="56.7512%" y="853" width="0.2074%" height="15" fill="rgb(253,46,43)" fg:x="2463" fg:w="9"/><text x="57.0012%" y="863.50"></text></g><g><title>thread_alloc_event (2 samples, 0.05%)</title><rect x="56.9124%" y="837" width="0.0461%" height="15" fill="rgb(226,206,43)" fg:x="2470" fg:w="2"/><text x="57.1624%" y="847.50"></text></g><g><title>te_event_advance (2 samples, 0.05%)</title><rect x="56.9124%" y="821" width="0.0461%" height="15" fill="rgb(217,54,7)" fg:x="2470" fg:w="2"/><text x="57.1624%" y="831.50"></text></g><g><title>_rjem_je_te_event_trigger (2 samples, 0.05%)</title><rect x="56.9124%" y="805" width="0.0461%" height="15" fill="rgb(223,5,52)" fg:x="2470" fg:w="2"/><text x="57.1624%" y="815.50"></text></g><g><title>tcache_event (2 samples, 0.05%)</title><rect x="56.9124%" y="789" width="0.0461%" height="15" fill="rgb(206,52,46)" fg:x="2470" fg:w="2"/><text x="57.1624%" y="799.50"></text></g><g><title>tcache_gc_small (1 samples, 0.02%)</title><rect x="56.9355%" y="773" width="0.0230%" height="15" fill="rgb(253,136,11)" fg:x="2471" fg:w="1"/><text x="57.1855%" y="783.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="56.9355%" y="757" width="0.0230%" height="15" fill="rgb(208,106,33)" fg:x="2471" fg:w="1"/><text x="57.1855%" y="767.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="56.9355%" y="741" width="0.0230%" height="15" fill="rgb(206,54,4)" fg:x="2471" fg:w="1"/><text x="57.1855%" y="751.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="56.9355%" y="725" width="0.0230%" height="15" fill="rgb(213,3,15)" fg:x="2471" fg:w="1"/><text x="57.1855%" y="735.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="56.9355%" y="709" width="0.0230%" height="15" fill="rgb(252,211,39)" fg:x="2471" fg:w="1"/><text x="57.1855%" y="719.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="56.9355%" y="693" width="0.0230%" height="15" fill="rgb(223,6,36)" fg:x="2471" fg:w="1"/><text x="57.1855%" y="703.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="56.9355%" y="677" width="0.0230%" height="15" fill="rgb(252,169,45)" fg:x="2471" fg:w="1"/><text x="57.1855%" y="687.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="56.9355%" y="661" width="0.0230%" height="15" fill="rgb(212,48,26)" fg:x="2471" fg:w="1"/><text x="57.1855%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (251 samples, 5.78%)</title><rect x="56.7512%" y="1269" width="5.7834%" height="15" fill="rgb(251,102,48)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1279.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (251 samples, 5.78%)</title><rect x="56.7512%" y="1253" width="5.7834%" height="15" fill="rgb(243,208,16)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1263.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (251 samples, 5.78%)</title><rect x="56.7512%" y="1237" width="5.7834%" height="15" fill="rgb(219,96,24)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1247.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (251 samples, 5.78%)</title><rect x="56.7512%" y="1221" width="5.7834%" height="15" fill="rgb(219,33,29)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1231.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (251 samples, 5.78%)</title><rect x="56.7512%" y="1205" width="5.7834%" height="15" fill="rgb(223,176,5)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1215.50">&lt;alloc:..</text></g><g><title>?? (251 samples, 5.78%)</title><rect x="56.7512%" y="1189" width="5.7834%" height="15" fill="rgb(228,140,14)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1199.50">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (251 samples, 5.78%)</title><rect x="56.7512%" y="1173" width="5.7834%" height="15" fill="rgb(217,179,31)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1183.50">core::i..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (251 samples, 5.78%)</title><rect x="56.7512%" y="1157" width="5.7834%" height="15" fill="rgb(230,9,30)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1167.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (251 samples, 5.78%)</title><rect x="56.7512%" y="1141" width="5.7834%" height="15" fill="rgb(230,136,20)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1151.50">core::i..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (251 samples, 5.78%)</title><rect x="56.7512%" y="1125" width="5.7834%" height="15" fill="rgb(215,210,22)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1135.50">core::i..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched::_{{closure}} (251 samples, 5.78%)</title><rect x="56.7512%" y="1109" width="5.7834%" height="15" fill="rgb(218,43,5)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1119.50">criteri..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (251 samples, 5.78%)</title><rect x="56.7512%" y="1093" width="5.7834%" height="15" fill="rgb(216,11,5)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1103.50">deseria..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (251 samples, 5.78%)</title><rect x="56.7512%" y="1077" width="5.7834%" height="15" fill="rgb(209,82,29)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1087.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (251 samples, 5.78%)</title><rect x="56.7512%" y="1061" width="5.7834%" height="15" fill="rgb(244,115,12)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1071.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (251 samples, 5.78%)</title><rect x="56.7512%" y="1045" width="5.7834%" height="15" fill="rgb(222,82,18)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1055.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (251 samples, 5.78%)</title><rect x="56.7512%" y="1029" width="5.7834%" height="15" fill="rgb(249,227,8)" fg:x="2463" fg:w="251"/><text x="57.0012%" y="1039.50">&lt;T as a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (242 samples, 5.58%)</title><rect x="56.9585%" y="1013" width="5.5760%" height="15" fill="rgb(253,141,45)" fg:x="2472" fg:w="242"/><text x="57.2085%" y="1023.50">core::p..</text></g><g><title>core::intrinsics::copy_nonoverlapping (242 samples, 5.58%)</title><rect x="56.9585%" y="997" width="5.5760%" height="15" fill="rgb(234,184,4)" fg:x="2472" fg:w="242"/><text x="57.2085%" y="1007.50">core::i..</text></g><g><title>__memmove_avx_unaligned_erms (242 samples, 5.58%)</title><rect x="56.9585%" y="981" width="5.5760%" height="15" fill="rgb(218,194,23)" fg:x="2472" fg:w="242"/><text x="57.2085%" y="991.50">__memmo..</text></g><g><title>?? (2 samples, 0.05%)</title><rect x="62.5576%" y="1109" width="0.0461%" height="15" fill="rgb(235,66,41)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="1119.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="62.5576%" y="1093" width="0.0461%" height="15" fill="rgb(245,217,1)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.05%)</title><rect x="62.5576%" y="1077" width="0.0461%" height="15" fill="rgb(229,91,1)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="62.5576%" y="1061" width="0.0461%" height="15" fill="rgb(207,101,30)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="62.5576%" y="1045" width="0.0461%" height="15" fill="rgb(223,82,49)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="62.5576%" y="1029" width="0.0461%" height="15" fill="rgb(218,167,17)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="62.5576%" y="1013" width="0.0461%" height="15" fill="rgb(208,103,14)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="62.5576%" y="997" width="0.0461%" height="15" fill="rgb(238,20,8)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="1007.50"></text></g><g><title>__rust_dealloc (2 samples, 0.05%)</title><rect x="62.5576%" y="981" width="0.0461%" height="15" fill="rgb(218,80,54)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="991.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.05%)</title><rect x="62.5576%" y="965" width="0.0461%" height="15" fill="rgb(240,144,17)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="975.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.05%)</title><rect x="62.5576%" y="949" width="0.0461%" height="15" fill="rgb(245,27,50)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="959.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.05%)</title><rect x="62.5576%" y="933" width="0.0461%" height="15" fill="rgb(251,51,7)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="943.50"></text></g><g><title>tcache_bin_flush_bottom (2 samples, 0.05%)</title><rect x="62.5576%" y="917" width="0.0461%" height="15" fill="rgb(245,217,29)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="927.50"></text></g><g><title>tcache_bin_flush_impl (2 samples, 0.05%)</title><rect x="62.5576%" y="901" width="0.0461%" height="15" fill="rgb(221,176,29)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="911.50"></text></g><g><title>tcache_bin_flush_match (2 samples, 0.05%)</title><rect x="62.5576%" y="885" width="0.0461%" height="15" fill="rgb(212,180,24)" fg:x="2715" fg:w="2"/><text x="62.8076%" y="895.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="62.6267%" y="1013" width="0.0230%" height="15" fill="rgb(254,24,2)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="62.6267%" y="997" width="0.0230%" height="15" fill="rgb(230,100,2)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="62.6267%" y="981" width="0.0230%" height="15" fill="rgb(219,142,25)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="991.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="62.6267%" y="965" width="0.0230%" height="15" fill="rgb(240,73,43)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="975.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="62.6267%" y="949" width="0.0230%" height="15" fill="rgb(214,114,15)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="959.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="62.6267%" y="933" width="0.0230%" height="15" fill="rgb(207,130,4)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="943.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="62.6267%" y="917" width="0.0230%" height="15" fill="rgb(221,25,40)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="927.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="62.6267%" y="901" width="0.0230%" height="15" fill="rgb(241,184,7)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="911.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="62.6267%" y="885" width="0.0230%" height="15" fill="rgb(235,159,4)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="895.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="62.6267%" y="869" width="0.0230%" height="15" fill="rgb(214,87,48)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="879.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="62.6267%" y="853" width="0.0230%" height="15" fill="rgb(246,198,24)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="863.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="62.6267%" y="837" width="0.0230%" height="15" fill="rgb(209,66,40)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="847.50"></text></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect x="62.6267%" y="821" width="0.0230%" height="15" fill="rgb(233,147,39)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="831.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect x="62.6267%" y="805" width="0.0230%" height="15" fill="rgb(231,145,52)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="815.50"></text></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect x="62.6267%" y="789" width="0.0230%" height="15" fill="rgb(206,20,26)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="799.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="62.6267%" y="773" width="0.0230%" height="15" fill="rgb(238,220,4)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="783.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="62.6267%" y="757" width="0.0230%" height="15" fill="rgb(252,195,42)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="767.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="62.6267%" y="741" width="0.0230%" height="15" fill="rgb(209,10,6)" fg:x="2718" fg:w="1"/><text x="62.8767%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (6 samples, 0.14%)</title><rect x="62.5346%" y="1189" width="0.1382%" height="15" fill="rgb(229,3,52)" fg:x="2714" fg:w="6"/><text x="62.7846%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.14%)</title><rect x="62.5346%" y="1173" width="0.1382%" height="15" fill="rgb(253,49,37)" fg:x="2714" fg:w="6"/><text x="62.7846%" y="1183.50"></text></g><g><title>core::mem::drop (6 samples, 0.14%)</title><rect x="62.5346%" y="1157" width="0.1382%" height="15" fill="rgb(240,103,49)" fg:x="2714" fg:w="6"/><text x="62.7846%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (6 samples, 0.14%)</title><rect x="62.5346%" y="1141" width="0.1382%" height="15" fill="rgb(250,182,30)" fg:x="2714" fg:w="6"/><text x="62.7846%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.14%)</title><rect x="62.5346%" y="1125" width="0.1382%" height="15" fill="rgb(248,8,30)" fg:x="2714" fg:w="6"/><text x="62.7846%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.07%)</title><rect x="62.6037%" y="1109" width="0.0691%" height="15" fill="rgb(237,120,30)" fg:x="2717" fg:w="3"/><text x="62.8537%" y="1119.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="62.6267%" y="1093" width="0.0461%" height="15" fill="rgb(221,146,34)" fg:x="2718" fg:w="2"/><text x="62.8767%" y="1103.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="62.6267%" y="1077" width="0.0461%" height="15" fill="rgb(242,55,13)" fg:x="2718" fg:w="2"/><text x="62.8767%" y="1087.50"></text></g><g><title>alloc::collections::btree::mem::replace (2 samples, 0.05%)</title><rect x="62.6267%" y="1061" width="0.0461%" height="15" fill="rgb(242,112,31)" fg:x="2718" fg:w="2"/><text x="62.8767%" y="1071.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (2 samples, 0.05%)</title><rect x="62.6267%" y="1045" width="0.0461%" height="15" fill="rgb(249,192,27)" fg:x="2718" fg:w="2"/><text x="62.8767%" y="1055.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="62.6267%" y="1029" width="0.0461%" height="15" fill="rgb(208,204,44)" fg:x="2718" fg:w="2"/><text x="62.8767%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect x="62.6498%" y="1013" width="0.0230%" height="15" fill="rgb(208,93,54)" fg:x="2719" fg:w="1"/><text x="62.8998%" y="1023.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="62.6728%" y="1013" width="0.0230%" height="15" fill="rgb(242,1,31)" fg:x="2720" fg:w="1"/><text x="62.9228%" y="1023.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="62.6728%" y="997" width="0.0230%" height="15" fill="rgb(241,83,25)" fg:x="2720" fg:w="1"/><text x="62.9228%" y="1007.50"></text></g><g><title>tcache_bin_flush_metadata_visitor (1 samples, 0.02%)</title><rect x="62.6728%" y="981" width="0.0230%" height="15" fill="rgb(205,169,50)" fg:x="2720" fg:w="1"/><text x="62.9228%" y="991.50"></text></g><g><title>util_prefetch_write_range (1 samples, 0.02%)</title><rect x="62.6728%" y="965" width="0.0230%" height="15" fill="rgb(239,186,37)" fg:x="2720" fg:w="1"/><text x="62.9228%" y="975.50"></text></g><g><title>util_prefetch_write (1 samples, 0.02%)</title><rect x="62.6728%" y="949" width="0.0230%" height="15" fill="rgb(205,221,10)" fg:x="2720" fg:w="1"/><text x="62.9228%" y="959.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.05%)</title><rect x="62.6728%" y="1077" width="0.0461%" height="15" fill="rgb(218,196,15)" fg:x="2720" fg:w="2"/><text x="62.9228%" y="1087.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.05%)</title><rect x="62.6728%" y="1061" width="0.0461%" height="15" fill="rgb(218,196,35)" fg:x="2720" fg:w="2"/><text x="62.9228%" y="1071.50"></text></g><g><title>tcache_bin_flush_bottom (2 samples, 0.05%)</title><rect x="62.6728%" y="1045" width="0.0461%" height="15" fill="rgb(233,63,24)" fg:x="2720" fg:w="2"/><text x="62.9228%" y="1055.50"></text></g><g><title>tcache_bin_flush_impl (2 samples, 0.05%)</title><rect x="62.6728%" y="1029" width="0.0461%" height="15" fill="rgb(225,8,4)" fg:x="2720" fg:w="2"/><text x="62.9228%" y="1039.50"></text></g><g><title>tcache_bin_flush_match (1 samples, 0.02%)</title><rect x="62.6959%" y="1013" width="0.0230%" height="15" fill="rgb(234,105,35)" fg:x="2721" fg:w="1"/><text x="62.9459%" y="1023.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="62.7189%" y="1077" width="0.0230%" height="15" fill="rgb(236,21,32)" fg:x="2722" fg:w="1"/><text x="62.9689%" y="1087.50"></text></g><g><title>bitmap_unset (1 samples, 0.02%)</title><rect x="62.7419%" y="853" width="0.0230%" height="15" fill="rgb(228,109,6)" fg:x="2723" fg:w="1"/><text x="62.9919%" y="863.50"></text></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.05%)</title><rect x="62.7419%" y="869" width="0.0461%" height="15" fill="rgb(229,215,31)" fg:x="2723" fg:w="2"/><text x="62.9919%" y="879.50"></text></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect x="62.7650%" y="853" width="0.0230%" height="15" fill="rgb(221,52,54)" fg:x="2724" fg:w="1"/><text x="63.0150%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.07%)</title><rect x="62.7419%" y="1061" width="0.0691%" height="15" fill="rgb(252,129,43)" fg:x="2723" fg:w="3"/><text x="62.9919%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.07%)</title><rect x="62.7419%" y="1045" width="0.0691%" height="15" fill="rgb(248,183,27)" fg:x="2723" fg:w="3"/><text x="62.9919%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.07%)</title><rect x="62.7419%" y="1029" width="0.0691%" height="15" fill="rgb(250,0,22)" fg:x="2723" fg:w="3"/><text x="62.9919%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="62.7419%" y="1013" width="0.0691%" height="15" fill="rgb(213,166,10)" fg:x="2723" fg:w="3"/><text x="62.9919%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="62.7419%" y="997" width="0.0691%" height="15" fill="rgb(207,163,36)" fg:x="2723" fg:w="3"/><text x="62.9919%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="62.7419%" y="981" width="0.0691%" height="15" fill="rgb(208,122,22)" fg:x="2723" fg:w="3"/><text x="62.9919%" y="991.50"></text></g><g><title>__rust_dealloc (3 samples, 0.07%)</title><rect x="62.7419%" y="965" width="0.0691%" height="15" fill="rgb(207,104,49)" fg:x="2723" fg:w="3"/><text x="62.9919%" y="975.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.07%)</title><rect x="62.7419%" y="949" width="0.0691%" height="15" fill="rgb(248,211,50)" fg:x="2723" fg:w="3"/><text x="62.9919%" y="959.50"></text></g><g><title>_rjem_je_sdallocx_default (3 samples, 0.07%)</title><rect x="62.7419%" y="933" width="0.0691%" height="15" fill="rgb(217,13,45)" fg:x="2723" fg:w="3"/><text x="62.9919%" y="943.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.07%)</title><rect x="62.7419%" y="917" width="0.0691%" height="15" fill="rgb(211,216,49)" fg:x="2723" fg:w="3"/><text x="62.9919%" y="927.50"></text></g><g><title>tcache_bin_flush_bottom (3 samples, 0.07%)</title><rect x="62.7419%" y="901" width="0.0691%" height="15" fill="rgb(221,58,53)" fg:x="2723" fg:w="3"/><text x="62.9919%" y="911.50"></text></g><g><title>tcache_bin_flush_impl (3 samples, 0.07%)</title><rect x="62.7419%" y="885" width="0.0691%" height="15" fill="rgb(220,112,41)" fg:x="2723" fg:w="3"/><text x="62.9919%" y="895.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="62.7880%" y="869" width="0.0230%" height="15" fill="rgb(236,38,28)" fg:x="2725" fg:w="1"/><text x="63.0380%" y="879.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="62.7880%" y="853" width="0.0230%" height="15" fill="rgb(227,195,22)" fg:x="2725" fg:w="1"/><text x="63.0380%" y="863.50"></text></g><g><title>tcache_bin_flush_metadata_visitor (1 samples, 0.02%)</title><rect x="62.7880%" y="837" width="0.0230%" height="15" fill="rgb(214,55,33)" fg:x="2725" fg:w="1"/><text x="63.0380%" y="847.50"></text></g><g><title>util_prefetch_write_range (1 samples, 0.02%)</title><rect x="62.7880%" y="821" width="0.0230%" height="15" fill="rgb(248,80,13)" fg:x="2725" fg:w="1"/><text x="63.0380%" y="831.50"></text></g><g><title>util_prefetch_write (1 samples, 0.02%)</title><rect x="62.7880%" y="805" width="0.0230%" height="15" fill="rgb(238,52,6)" fg:x="2725" fg:w="1"/><text x="63.0380%" y="815.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="62.8111%" y="885" width="0.0230%" height="15" fill="rgb(224,198,47)" fg:x="2726" fg:w="1"/><text x="63.0611%" y="895.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="62.8111%" y="869" width="0.0230%" height="15" fill="rgb(233,171,20)" fg:x="2726" fg:w="1"/><text x="63.0611%" y="879.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="62.8111%" y="853" width="0.0230%" height="15" fill="rgb(241,30,25)" fg:x="2726" fg:w="1"/><text x="63.0611%" y="863.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="62.8111%" y="837" width="0.0230%" height="15" fill="rgb(207,171,38)" fg:x="2726" fg:w="1"/><text x="63.0611%" y="847.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="62.8111%" y="821" width="0.0230%" height="15" fill="rgb(234,70,1)" fg:x="2726" fg:w="1"/><text x="63.0611%" y="831.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="62.8111%" y="805" width="0.0230%" height="15" fill="rgb(232,178,18)" fg:x="2726" fg:w="1"/><text x="63.0611%" y="815.50"></text></g><g><title>edata_list_inactive_append (1 samples, 0.02%)</title><rect x="62.8111%" y="789" width="0.0230%" height="15" fill="rgb(241,78,40)" fg:x="2726" fg:w="1"/><text x="63.0611%" y="799.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="62.8341%" y="885" width="0.0230%" height="15" fill="rgb(222,35,25)" fg:x="2727" fg:w="1"/><text x="63.0841%" y="895.50"></text></g><g><title>_rjem_je_sdallocx_default (3 samples, 0.07%)</title><rect x="62.8111%" y="949" width="0.0691%" height="15" fill="rgb(207,92,16)" fg:x="2726" fg:w="3"/><text x="63.0611%" y="959.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.07%)</title><rect x="62.8111%" y="933" width="0.0691%" height="15" fill="rgb(216,59,51)" fg:x="2726" fg:w="3"/><text x="63.0611%" y="943.50"></text></g><g><title>tcache_bin_flush_bottom (3 samples, 0.07%)</title><rect x="62.8111%" y="917" width="0.0691%" height="15" fill="rgb(213,80,28)" fg:x="2726" fg:w="3"/><text x="63.0611%" y="927.50"></text></g><g><title>tcache_bin_flush_impl (3 samples, 0.07%)</title><rect x="62.8111%" y="901" width="0.0691%" height="15" fill="rgb(220,93,7)" fg:x="2726" fg:w="3"/><text x="63.0611%" y="911.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="62.8571%" y="885" width="0.0230%" height="15" fill="rgb(225,24,44)" fg:x="2728" fg:w="1"/><text x="63.1071%" y="895.50"></text></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect x="62.8571%" y="869" width="0.0230%" height="15" fill="rgb(243,74,40)" fg:x="2728" fg:w="1"/><text x="63.1071%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (4 samples, 0.09%)</title><rect x="62.8111%" y="1061" width="0.0922%" height="15" fill="rgb(228,39,7)" fg:x="2726" fg:w="4"/><text x="63.0611%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (4 samples, 0.09%)</title><rect x="62.8111%" y="1045" width="0.0922%" height="15" fill="rgb(227,79,8)" fg:x="2726" fg:w="4"/><text x="63.0611%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="62.8111%" y="1029" width="0.0922%" height="15" fill="rgb(236,58,11)" fg:x="2726" fg:w="4"/><text x="63.0611%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.09%)</title><rect x="62.8111%" y="1013" width="0.0922%" height="15" fill="rgb(249,63,35)" fg:x="2726" fg:w="4"/><text x="63.0611%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.09%)</title><rect x="62.8111%" y="997" width="0.0922%" height="15" fill="rgb(252,114,16)" fg:x="2726" fg:w="4"/><text x="63.0611%" y="1007.50"></text></g><g><title>__rust_dealloc (4 samples, 0.09%)</title><rect x="62.8111%" y="981" width="0.0922%" height="15" fill="rgb(254,151,24)" fg:x="2726" fg:w="4"/><text x="63.0611%" y="991.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (4 samples, 0.09%)</title><rect x="62.8111%" y="965" width="0.0922%" height="15" fill="rgb(253,54,39)" fg:x="2726" fg:w="4"/><text x="63.0611%" y="975.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="62.8802%" y="949" width="0.0230%" height="15" fill="rgb(243,25,45)" fg:x="2729" fg:w="1"/><text x="63.1302%" y="959.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="62.8802%" y="933" width="0.0230%" height="15" fill="rgb(234,134,9)" fg:x="2729" fg:w="1"/><text x="63.1302%" y="943.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="62.8802%" y="917" width="0.0230%" height="15" fill="rgb(227,166,31)" fg:x="2729" fg:w="1"/><text x="63.1302%" y="927.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect x="62.8802%" y="901" width="0.0230%" height="15" fill="rgb(245,143,41)" fg:x="2729" fg:w="1"/><text x="63.1302%" y="911.50"></text></g><g><title>?? (12 samples, 0.28%)</title><rect x="62.6728%" y="1109" width="0.2765%" height="15" fill="rgb(238,181,32)" fg:x="2720" fg:w="12"/><text x="62.9228%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (12 samples, 0.28%)</title><rect x="62.6728%" y="1093" width="0.2765%" height="15" fill="rgb(224,113,18)" fg:x="2720" fg:w="12"/><text x="62.9228%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Event&gt; (9 samples, 0.21%)</title><rect x="62.7419%" y="1077" width="0.2074%" height="15" fill="rgb(240,229,28)" fg:x="2723" fg:w="9"/><text x="62.9919%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2 samples, 0.05%)</title><rect x="62.9032%" y="1061" width="0.0461%" height="15" fill="rgb(250,185,3)" fg:x="2730" fg:w="2"/><text x="63.1532%" y="1071.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="62.9724%" y="821" width="0.0230%" height="15" fill="rgb(212,59,25)" fg:x="2733" fg:w="1"/><text x="63.2224%" y="831.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="62.9724%" y="805" width="0.0230%" height="15" fill="rgb(221,87,20)" fg:x="2733" fg:w="1"/><text x="63.2224%" y="815.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="62.9724%" y="789" width="0.0230%" height="15" fill="rgb(213,74,28)" fg:x="2733" fg:w="1"/><text x="63.2224%" y="799.50"></text></g><g><title>_rjem_je_edata_heap_empty (1 samples, 0.02%)</title><rect x="62.9724%" y="773" width="0.0230%" height="15" fill="rgb(224,132,34)" fg:x="2733" fg:w="1"/><text x="63.2224%" y="783.50"></text></g><g><title>ph_empty (1 samples, 0.02%)</title><rect x="62.9724%" y="757" width="0.0230%" height="15" fill="rgb(222,101,24)" fg:x="2733" fg:w="1"/><text x="63.2224%" y="767.50"></text></g><g><title>_rjem_je_edata_cache_put (1 samples, 0.02%)</title><rect x="62.9954%" y="757" width="0.0230%" height="15" fill="rgb(254,142,4)" fg:x="2734" fg:w="1"/><text x="63.2454%" y="767.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="62.9954%" y="741" width="0.0230%" height="15" fill="rgb(230,229,49)" fg:x="2734" fg:w="1"/><text x="63.2454%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="62.9724%" y="997" width="0.0691%" height="15" fill="rgb(238,70,47)" fg:x="2733" fg:w="3"/><text x="63.2224%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="62.9724%" y="981" width="0.0691%" height="15" fill="rgb(231,160,17)" fg:x="2733" fg:w="3"/><text x="63.2224%" y="991.50"></text></g><g><title>__rust_dealloc (3 samples, 0.07%)</title><rect x="62.9724%" y="965" width="0.0691%" height="15" fill="rgb(218,68,53)" fg:x="2733" fg:w="3"/><text x="63.2224%" y="975.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.07%)</title><rect x="62.9724%" y="949" width="0.0691%" height="15" fill="rgb(236,111,10)" fg:x="2733" fg:w="3"/><text x="63.2224%" y="959.50"></text></g><g><title>_rjem_je_sdallocx_default (3 samples, 0.07%)</title><rect x="62.9724%" y="933" width="0.0691%" height="15" fill="rgb(224,34,41)" fg:x="2733" fg:w="3"/><text x="63.2224%" y="943.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.07%)</title><rect x="62.9724%" y="917" width="0.0691%" height="15" fill="rgb(241,118,19)" fg:x="2733" fg:w="3"/><text x="63.2224%" y="927.50"></text></g><g><title>tcache_bin_flush_bottom (3 samples, 0.07%)</title><rect x="62.9724%" y="901" width="0.0691%" height="15" fill="rgb(238,129,25)" fg:x="2733" fg:w="3"/><text x="63.2224%" y="911.50"></text></g><g><title>tcache_bin_flush_impl (3 samples, 0.07%)</title><rect x="62.9724%" y="885" width="0.0691%" height="15" fill="rgb(238,22,31)" fg:x="2733" fg:w="3"/><text x="63.2224%" y="895.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (3 samples, 0.07%)</title><rect x="62.9724%" y="869" width="0.0691%" height="15" fill="rgb(222,174,48)" fg:x="2733" fg:w="3"/><text x="63.2224%" y="879.50"></text></g><g><title>pac_dalloc_impl (3 samples, 0.07%)</title><rect x="62.9724%" y="853" width="0.0691%" height="15" fill="rgb(206,152,40)" fg:x="2733" fg:w="3"/><text x="63.2224%" y="863.50"></text></g><g><title>_rjem_je_extent_record (3 samples, 0.07%)</title><rect x="62.9724%" y="837" width="0.0691%" height="15" fill="rgb(218,99,54)" fg:x="2733" fg:w="3"/><text x="63.2224%" y="847.50"></text></g><g><title>extent_try_coalesce_large (2 samples, 0.05%)</title><rect x="62.9954%" y="821" width="0.0461%" height="15" fill="rgb(220,174,26)" fg:x="2734" fg:w="2"/><text x="63.2454%" y="831.50"></text></g><g><title>extent_try_coalesce_impl (2 samples, 0.05%)</title><rect x="62.9954%" y="805" width="0.0461%" height="15" fill="rgb(245,116,9)" fg:x="2734" fg:w="2"/><text x="63.2454%" y="815.50"></text></g><g><title>extent_coalesce (2 samples, 0.05%)</title><rect x="62.9954%" y="789" width="0.0461%" height="15" fill="rgb(209,72,35)" fg:x="2734" fg:w="2"/><text x="63.2454%" y="799.50"></text></g><g><title>extent_merge_impl (2 samples, 0.05%)</title><rect x="62.9954%" y="773" width="0.0461%" height="15" fill="rgb(226,126,21)" fg:x="2734" fg:w="2"/><text x="63.2454%" y="783.50"></text></g><g><title>_rjem_je_emap_merge_prepare (1 samples, 0.02%)</title><rect x="63.0184%" y="757" width="0.0230%" height="15" fill="rgb(227,192,1)" fg:x="2735" fg:w="1"/><text x="63.2684%" y="767.50"></text></g><g><title>?? (5 samples, 0.12%)</title><rect x="62.9724%" y="1013" width="0.1152%" height="15" fill="rgb(237,180,29)" fg:x="2733" fg:w="5"/><text x="63.2224%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.05%)</title><rect x="63.0415%" y="997" width="0.0461%" height="15" fill="rgb(230,197,35)" fg:x="2736" fg:w="2"/><text x="63.2915%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (21 samples, 0.48%)</title><rect x="62.6728%" y="1189" width="0.4839%" height="15" fill="rgb(246,193,31)" fg:x="2720" fg:w="21"/><text x="62.9228%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.48%)</title><rect x="62.6728%" y="1173" width="0.4839%" height="15" fill="rgb(241,36,4)" fg:x="2720" fg:w="21"/><text x="62.9228%" y="1183.50"></text></g><g><title>core::mem::drop (21 samples, 0.48%)</title><rect x="62.6728%" y="1157" width="0.4839%" height="15" fill="rgb(241,130,17)" fg:x="2720" fg:w="21"/><text x="62.9228%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (21 samples, 0.48%)</title><rect x="62.6728%" y="1141" width="0.4839%" height="15" fill="rgb(206,137,32)" fg:x="2720" fg:w="21"/><text x="62.9228%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.48%)</title><rect x="62.6728%" y="1125" width="0.4839%" height="15" fill="rgb(237,228,51)" fg:x="2720" fg:w="21"/><text x="62.9228%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.21%)</title><rect x="62.9493%" y="1109" width="0.2074%" height="15" fill="rgb(243,6,42)" fg:x="2732" fg:w="9"/><text x="63.1993%" y="1119.50"></text></g><g><title>?? (8 samples, 0.18%)</title><rect x="62.9724%" y="1093" width="0.1843%" height="15" fill="rgb(251,74,28)" fg:x="2733" fg:w="8"/><text x="63.2224%" y="1103.50"></text></g><g><title>?? (8 samples, 0.18%)</title><rect x="62.9724%" y="1077" width="0.1843%" height="15" fill="rgb(218,20,49)" fg:x="2733" fg:w="8"/><text x="63.2224%" y="1087.50"></text></g><g><title>alloc::collections::btree::mem::replace (8 samples, 0.18%)</title><rect x="62.9724%" y="1061" width="0.1843%" height="15" fill="rgb(238,28,14)" fg:x="2733" fg:w="8"/><text x="63.2224%" y="1071.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (8 samples, 0.18%)</title><rect x="62.9724%" y="1045" width="0.1843%" height="15" fill="rgb(229,40,46)" fg:x="2733" fg:w="8"/><text x="63.2224%" y="1055.50"></text></g><g><title>?? (8 samples, 0.18%)</title><rect x="62.9724%" y="1029" width="0.1843%" height="15" fill="rgb(244,195,20)" fg:x="2733" fg:w="8"/><text x="63.2224%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.07%)</title><rect x="63.0876%" y="1013" width="0.0691%" height="15" fill="rgb(253,56,35)" fg:x="2738" fg:w="3"/><text x="63.3376%" y="1023.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="63.1567%" y="1141" width="0.0230%" height="15" fill="rgb(210,149,44)" fg:x="2741" fg:w="1"/><text x="63.4067%" y="1151.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="63.1567%" y="1125" width="0.0230%" height="15" fill="rgb(240,135,12)" fg:x="2741" fg:w="1"/><text x="63.4067%" y="1135.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="63.1567%" y="1109" width="0.0230%" height="15" fill="rgb(251,24,50)" fg:x="2741" fg:w="1"/><text x="63.4067%" y="1119.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="63.1567%" y="1093" width="0.0230%" height="15" fill="rgb(243,200,47)" fg:x="2741" fg:w="1"/><text x="63.4067%" y="1103.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="63.1567%" y="1077" width="0.0230%" height="15" fill="rgb(224,166,26)" fg:x="2741" fg:w="1"/><text x="63.4067%" y="1087.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="63.1567%" y="1061" width="0.0230%" height="15" fill="rgb(233,0,47)" fg:x="2741" fg:w="1"/><text x="63.4067%" y="1071.50"></text></g><g><title>tcache_bin_flush_metadata_visitor (1 samples, 0.02%)</title><rect x="63.1567%" y="1045" width="0.0230%" height="15" fill="rgb(253,80,5)" fg:x="2741" fg:w="1"/><text x="63.4067%" y="1055.50"></text></g><g><title>util_prefetch_write_range (1 samples, 0.02%)</title><rect x="63.1567%" y="1029" width="0.0230%" height="15" fill="rgb(214,133,25)" fg:x="2741" fg:w="1"/><text x="63.4067%" y="1039.50"></text></g><g><title>util_prefetch_write (1 samples, 0.02%)</title><rect x="63.1567%" y="1013" width="0.0230%" height="15" fill="rgb(209,27,14)" fg:x="2741" fg:w="1"/><text x="63.4067%" y="1023.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="63.1797%" y="1141" width="0.0230%" height="15" fill="rgb(219,102,51)" fg:x="2742" fg:w="1"/><text x="63.4297%" y="1151.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="63.1797%" y="1125" width="0.0230%" height="15" fill="rgb(237,18,16)" fg:x="2742" fg:w="1"/><text x="63.4297%" y="1135.50"></text></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect x="63.1797%" y="1109" width="0.0230%" height="15" fill="rgb(241,85,17)" fg:x="2742" fg:w="1"/><text x="63.4297%" y="1119.50"></text></g><g><title>cache_bin_full (1 samples, 0.02%)</title><rect x="63.1797%" y="1093" width="0.0230%" height="15" fill="rgb(236,90,42)" fg:x="2742" fg:w="1"/><text x="63.4297%" y="1103.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_locked_handle_newly_empty (1 samples, 0.02%)</title><rect x="63.2028%" y="933" width="0.0230%" height="15" fill="rgb(249,57,21)" fg:x="2743" fg:w="1"/><text x="63.4528%" y="943.50"></text></g><g><title>arena_dissociate_bin_slab (1 samples, 0.02%)</title><rect x="63.2028%" y="917" width="0.0230%" height="15" fill="rgb(243,12,36)" fg:x="2743" fg:w="1"/><text x="63.4528%" y="927.50"></text></g><g><title>arena_bin_slabs_nonfull_remove (1 samples, 0.02%)</title><rect x="63.2028%" y="901" width="0.0230%" height="15" fill="rgb(253,128,47)" fg:x="2743" fg:w="1"/><text x="63.4528%" y="911.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="63.2028%" y="885" width="0.0230%" height="15" fill="rgb(207,33,20)" fg:x="2743" fg:w="1"/><text x="63.4528%" y="895.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="63.2028%" y="869" width="0.0230%" height="15" fill="rgb(233,215,35)" fg:x="2743" fg:w="1"/><text x="63.4528%" y="879.50"></text></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.05%)</title><rect x="63.2028%" y="949" width="0.0461%" height="15" fill="rgb(249,188,52)" fg:x="2743" fg:w="2"/><text x="63.4528%" y="959.50"></text></g><g><title>edata_nfree_get (1 samples, 0.02%)</title><rect x="63.2258%" y="933" width="0.0230%" height="15" fill="rgb(225,12,32)" fg:x="2744" fg:w="1"/><text x="63.4758%" y="943.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="63.2488%" y="917" width="0.0230%" height="15" fill="rgb(247,98,14)" fg:x="2745" fg:w="1"/><text x="63.4988%" y="927.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (4 samples, 0.09%)</title><rect x="63.2028%" y="997" width="0.0922%" height="15" fill="rgb(247,219,48)" fg:x="2743" fg:w="4"/><text x="63.4528%" y="1007.50"></text></g><g><title>tcache_bin_flush_bottom (4 samples, 0.09%)</title><rect x="63.2028%" y="981" width="0.0922%" height="15" fill="rgb(253,60,48)" fg:x="2743" fg:w="4"/><text x="63.4528%" y="991.50"></text></g><g><title>tcache_bin_flush_impl (4 samples, 0.09%)</title><rect x="63.2028%" y="965" width="0.0922%" height="15" fill="rgb(245,15,52)" fg:x="2743" fg:w="4"/><text x="63.4528%" y="975.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (2 samples, 0.05%)</title><rect x="63.2488%" y="949" width="0.0461%" height="15" fill="rgb(220,133,28)" fg:x="2745" fg:w="2"/><text x="63.4988%" y="959.50"></text></g><g><title>emap_edata_lookup_batch (2 samples, 0.05%)</title><rect x="63.2488%" y="933" width="0.0461%" height="15" fill="rgb(217,180,4)" fg:x="2745" fg:w="2"/><text x="63.4988%" y="943.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="63.2719%" y="917" width="0.0230%" height="15" fill="rgb(251,24,1)" fg:x="2746" fg:w="1"/><text x="63.5219%" y="927.50"></text></g><g><title>rtree_leaf_elm_bits_read (1 samples, 0.02%)</title><rect x="63.2719%" y="901" width="0.0230%" height="15" fill="rgb(212,185,49)" fg:x="2746" fg:w="1"/><text x="63.5219%" y="911.50"></text></g><g><title>atomic_load_p (1 samples, 0.02%)</title><rect x="63.2719%" y="885" width="0.0230%" height="15" fill="rgb(215,175,22)" fg:x="2746" fg:w="1"/><text x="63.5219%" y="895.50"></text></g><g><title>_rjem_je_sdallocx_default (5 samples, 0.12%)</title><rect x="63.2028%" y="1013" width="0.1152%" height="15" fill="rgb(250,205,14)" fg:x="2743" fg:w="5"/><text x="63.4528%" y="1023.50"></text></g><g><title>inallocx (1 samples, 0.02%)</title><rect x="63.2949%" y="997" width="0.0230%" height="15" fill="rgb(225,211,22)" fg:x="2747" fg:w="1"/><text x="63.5449%" y="1007.50"></text></g><g><title>aligned_usize_get (1 samples, 0.02%)</title><rect x="63.2949%" y="981" width="0.0230%" height="15" fill="rgb(251,179,42)" fg:x="2747" fg:w="1"/><text x="63.5449%" y="991.50"></text></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect x="63.2949%" y="965" width="0.0230%" height="15" fill="rgb(208,216,51)" fg:x="2747" fg:w="1"/><text x="63.5449%" y="975.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect x="63.2949%" y="949" width="0.0230%" height="15" fill="rgb(235,36,11)" fg:x="2747" fg:w="1"/><text x="63.5449%" y="959.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="63.2949%" y="933" width="0.0230%" height="15" fill="rgb(213,189,28)" fg:x="2747" fg:w="1"/><text x="63.5449%" y="943.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="63.2949%" y="917" width="0.0230%" height="15" fill="rgb(227,203,42)" fg:x="2747" fg:w="1"/><text x="63.5449%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Price&gt;&gt; (6 samples, 0.14%)</title><rect x="63.2028%" y="1125" width="0.1382%" height="15" fill="rgb(244,72,36)" fg:x="2743" fg:w="6"/><text x="63.4528%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Price&gt;&gt; (6 samples, 0.14%)</title><rect x="63.2028%" y="1109" width="0.1382%" height="15" fill="rgb(213,53,17)" fg:x="2743" fg:w="6"/><text x="63.4528%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.14%)</title><rect x="63.2028%" y="1093" width="0.1382%" height="15" fill="rgb(207,167,3)" fg:x="2743" fg:w="6"/><text x="63.4528%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.14%)</title><rect x="63.2028%" y="1077" width="0.1382%" height="15" fill="rgb(216,98,30)" fg:x="2743" fg:w="6"/><text x="63.4528%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.14%)</title><rect x="63.2028%" y="1061" width="0.1382%" height="15" fill="rgb(236,123,15)" fg:x="2743" fg:w="6"/><text x="63.4528%" y="1071.50"></text></g><g><title>__rust_dealloc (6 samples, 0.14%)</title><rect x="63.2028%" y="1045" width="0.1382%" height="15" fill="rgb(248,81,50)" fg:x="2743" fg:w="6"/><text x="63.4528%" y="1055.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (6 samples, 0.14%)</title><rect x="63.2028%" y="1029" width="0.1382%" height="15" fill="rgb(214,120,4)" fg:x="2743" fg:w="6"/><text x="63.4528%" y="1039.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="63.3180%" y="1013" width="0.0230%" height="15" fill="rgb(208,179,34)" fg:x="2748" fg:w="1"/><text x="63.5680%" y="1023.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="63.3180%" y="997" width="0.0230%" height="15" fill="rgb(227,140,7)" fg:x="2748" fg:w="1"/><text x="63.5680%" y="1007.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="63.3180%" y="981" width="0.0230%" height="15" fill="rgb(214,22,6)" fg:x="2748" fg:w="1"/><text x="63.5680%" y="991.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="63.3871%" y="885" width="0.0230%" height="15" fill="rgb(207,137,27)" fg:x="2751" fg:w="1"/><text x="63.6371%" y="895.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="63.3871%" y="869" width="0.0230%" height="15" fill="rgb(210,8,46)" fg:x="2751" fg:w="1"/><text x="63.6371%" y="879.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="63.3871%" y="853" width="0.0230%" height="15" fill="rgb(240,16,54)" fg:x="2751" fg:w="1"/><text x="63.6371%" y="863.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="63.3871%" y="837" width="0.0230%" height="15" fill="rgb(211,209,29)" fg:x="2751" fg:w="1"/><text x="63.6371%" y="847.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="63.3871%" y="821" width="0.0230%" height="15" fill="rgb(226,228,24)" fg:x="2751" fg:w="1"/><text x="63.6371%" y="831.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="63.3871%" y="805" width="0.0230%" height="15" fill="rgb(222,84,9)" fg:x="2751" fg:w="1"/><text x="63.6371%" y="815.50"></text></g><g><title>edata_list_inactive_append (1 samples, 0.02%)</title><rect x="63.3871%" y="789" width="0.0230%" height="15" fill="rgb(234,203,30)" fg:x="2751" fg:w="1"/><text x="63.6371%" y="799.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="63.4101%" y="885" width="0.0230%" height="15" fill="rgb(238,109,14)" fg:x="2752" fg:w="1"/><text x="63.6601%" y="895.50"></text></g><g><title>arena_bin_lower_slab (1 samples, 0.02%)</title><rect x="63.4332%" y="869" width="0.0230%" height="15" fill="rgb(233,206,34)" fg:x="2753" fg:w="1"/><text x="63.6832%" y="879.50"></text></g><g><title>arena_bin_slabs_nonfull_insert (1 samples, 0.02%)</title><rect x="63.4332%" y="853" width="0.0230%" height="15" fill="rgb(220,167,47)" fg:x="2753" fg:w="1"/><text x="63.6832%" y="863.50"></text></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.02%)</title><rect x="63.4332%" y="837" width="0.0230%" height="15" fill="rgb(238,105,10)" fg:x="2753" fg:w="1"/><text x="63.6832%" y="847.50"></text></g><g><title>bitmap_unset (2 samples, 0.05%)</title><rect x="63.4562%" y="869" width="0.0461%" height="15" fill="rgb(213,227,17)" fg:x="2754" fg:w="2"/><text x="63.7062%" y="879.50"></text></g><g><title>edata_nfree_get (1 samples, 0.02%)</title><rect x="63.5023%" y="869" width="0.0230%" height="15" fill="rgb(217,132,38)" fg:x="2756" fg:w="1"/><text x="63.7523%" y="879.50"></text></g><g><title>arena_dalloc_bin_locked_step (5 samples, 0.12%)</title><rect x="63.4332%" y="885" width="0.1152%" height="15" fill="rgb(242,146,4)" fg:x="2753" fg:w="5"/><text x="63.6832%" y="895.50"></text></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect x="63.5253%" y="869" width="0.0230%" height="15" fill="rgb(212,61,9)" fg:x="2757" fg:w="1"/><text x="63.7753%" y="879.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="63.5484%" y="869" width="0.0230%" height="15" fill="rgb(247,126,22)" fg:x="2758" fg:w="1"/><text x="63.7984%" y="879.50"></text></g><g><title>rtree_leaf_elm_lookup (2 samples, 0.05%)</title><rect x="63.6406%" y="853" width="0.0461%" height="15" fill="rgb(220,196,2)" fg:x="2762" fg:w="2"/><text x="63.8906%" y="863.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (7 samples, 0.16%)</title><rect x="63.5484%" y="885" width="0.1613%" height="15" fill="rgb(208,46,4)" fg:x="2758" fg:w="7"/><text x="63.7984%" y="895.50"></text></g><g><title>emap_edata_lookup_batch (6 samples, 0.14%)</title><rect x="63.5714%" y="869" width="0.1382%" height="15" fill="rgb(252,104,46)" fg:x="2759" fg:w="6"/><text x="63.8214%" y="879.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="63.6866%" y="853" width="0.0230%" height="15" fill="rgb(237,152,48)" fg:x="2764" fg:w="1"/><text x="63.9366%" y="863.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="63.6866%" y="837" width="0.0230%" height="15" fill="rgb(221,59,37)" fg:x="2764" fg:w="1"/><text x="63.9366%" y="847.50"></text></g><g><title>_rjem_je_sdallocx_default (17 samples, 0.39%)</title><rect x="63.3641%" y="949" width="0.3917%" height="15" fill="rgb(209,202,51)" fg:x="2750" fg:w="17"/><text x="63.6141%" y="959.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (17 samples, 0.39%)</title><rect x="63.3641%" y="933" width="0.3917%" height="15" fill="rgb(228,81,30)" fg:x="2750" fg:w="17"/><text x="63.6141%" y="943.50"></text></g><g><title>tcache_bin_flush_bottom (17 samples, 0.39%)</title><rect x="63.3641%" y="917" width="0.3917%" height="15" fill="rgb(227,42,39)" fg:x="2750" fg:w="17"/><text x="63.6141%" y="927.50"></text></g><g><title>tcache_bin_flush_impl (17 samples, 0.39%)</title><rect x="63.3641%" y="901" width="0.3917%" height="15" fill="rgb(221,26,2)" fg:x="2750" fg:w="17"/><text x="63.6141%" y="911.50"></text></g><g><title>tcache_bin_flush_match (2 samples, 0.05%)</title><rect x="63.7097%" y="885" width="0.0461%" height="15" fill="rgb(254,61,31)" fg:x="2765" fg:w="2"/><text x="63.9597%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.41%)</title><rect x="63.3641%" y="1013" width="0.4147%" height="15" fill="rgb(222,173,38)" fg:x="2750" fg:w="18"/><text x="63.6141%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.41%)</title><rect x="63.3641%" y="997" width="0.4147%" height="15" fill="rgb(218,50,12)" fg:x="2750" fg:w="18"/><text x="63.6141%" y="1007.50"></text></g><g><title>__rust_dealloc (18 samples, 0.41%)</title><rect x="63.3641%" y="981" width="0.4147%" height="15" fill="rgb(223,88,40)" fg:x="2750" fg:w="18"/><text x="63.6141%" y="991.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.41%)</title><rect x="63.3641%" y="965" width="0.4147%" height="15" fill="rgb(237,54,19)" fg:x="2750" fg:w="18"/><text x="63.6141%" y="975.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="63.7558%" y="949" width="0.0230%" height="15" fill="rgb(251,129,25)" fg:x="2767" fg:w="1"/><text x="64.0058%" y="959.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="63.7558%" y="933" width="0.0230%" height="15" fill="rgb(238,97,19)" fg:x="2767" fg:w="1"/><text x="64.0058%" y="943.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="63.7558%" y="917" width="0.0230%" height="15" fill="rgb(240,169,18)" fg:x="2767" fg:w="1"/><text x="64.0058%" y="927.50"></text></g><g><title>sz_size2index_lookup_impl (1 samples, 0.02%)</title><rect x="63.7558%" y="901" width="0.0230%" height="15" fill="rgb(230,187,49)" fg:x="2767" fg:w="1"/><text x="64.0058%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.53%)</title><rect x="63.3410%" y="1109" width="0.5300%" height="15" fill="rgb(209,44,26)" fg:x="2749" fg:w="23"/><text x="63.5910%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::SeatCategory]&gt; (23 samples, 0.53%)</title><rect x="63.3410%" y="1093" width="0.5300%" height="15" fill="rgb(244,0,6)" fg:x="2749" fg:w="23"/><text x="63.5910%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt; (22 samples, 0.51%)</title><rect x="63.3641%" y="1077" width="0.5069%" height="15" fill="rgb(248,18,21)" fg:x="2750" fg:w="22"/><text x="63.6141%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (22 samples, 0.51%)</title><rect x="63.3641%" y="1061" width="0.5069%" height="15" fill="rgb(245,180,19)" fg:x="2750" fg:w="22"/><text x="63.6141%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (22 samples, 0.51%)</title><rect x="63.3641%" y="1045" width="0.5069%" height="15" fill="rgb(252,118,36)" fg:x="2750" fg:w="22"/><text x="63.6141%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.51%)</title><rect x="63.3641%" y="1029" width="0.5069%" height="15" fill="rgb(210,224,19)" fg:x="2750" fg:w="22"/><text x="63.6141%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (4 samples, 0.09%)</title><rect x="63.7788%" y="1013" width="0.0922%" height="15" fill="rgb(218,30,24)" fg:x="2768" fg:w="4"/><text x="64.0288%" y="1023.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="63.8710%" y="949" width="0.0230%" height="15" fill="rgb(219,75,50)" fg:x="2772" fg:w="1"/><text x="64.1210%" y="959.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_locked_handle_newly_empty (1 samples, 0.02%)</title><rect x="63.8710%" y="933" width="0.0230%" height="15" fill="rgb(234,72,50)" fg:x="2772" fg:w="1"/><text x="64.1210%" y="943.50"></text></g><g><title>arena_dissociate_bin_slab (1 samples, 0.02%)</title><rect x="63.8710%" y="917" width="0.0230%" height="15" fill="rgb(219,100,48)" fg:x="2772" fg:w="1"/><text x="64.1210%" y="927.50"></text></g><g><title>arena_bin_slabs_nonfull_remove (1 samples, 0.02%)</title><rect x="63.8710%" y="901" width="0.0230%" height="15" fill="rgb(253,5,41)" fg:x="2772" fg:w="1"/><text x="64.1210%" y="911.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="63.8710%" y="885" width="0.0230%" height="15" fill="rgb(247,181,11)" fg:x="2772" fg:w="1"/><text x="64.1210%" y="895.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="63.8710%" y="869" width="0.0230%" height="15" fill="rgb(222,223,25)" fg:x="2772" fg:w="1"/><text x="64.1210%" y="879.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="63.8710%" y="853" width="0.0230%" height="15" fill="rgb(214,198,28)" fg:x="2772" fg:w="1"/><text x="64.1210%" y="863.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="63.8710%" y="837" width="0.0230%" height="15" fill="rgb(230,46,43)" fg:x="2772" fg:w="1"/><text x="64.1210%" y="847.50"></text></g><g><title>phn_merge (1 samples, 0.02%)</title><rect x="63.8710%" y="821" width="0.0230%" height="15" fill="rgb(233,65,53)" fg:x="2772" fg:w="1"/><text x="64.1210%" y="831.50"></text></g><g><title>edata_heap_ph_cmp (1 samples, 0.02%)</title><rect x="63.8710%" y="805" width="0.0230%" height="15" fill="rgb(221,121,27)" fg:x="2772" fg:w="1"/><text x="64.1210%" y="815.50"></text></g><g><title>edata_snad_comp (1 samples, 0.02%)</title><rect x="63.8710%" y="789" width="0.0230%" height="15" fill="rgb(247,70,47)" fg:x="2772" fg:w="1"/><text x="64.1210%" y="799.50"></text></g><g><title>edata_cmp_summary_comp (1 samples, 0.02%)</title><rect x="63.8710%" y="773" width="0.0230%" height="15" fill="rgb(228,85,35)" fg:x="2772" fg:w="1"/><text x="64.1210%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (25 samples, 0.58%)</title><rect x="63.3410%" y="1125" width="0.5760%" height="15" fill="rgb(209,50,18)" fg:x="2749" fg:w="25"/><text x="63.5910%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (2 samples, 0.05%)</title><rect x="63.8710%" y="1109" width="0.0461%" height="15" fill="rgb(250,19,35)" fg:x="2772" fg:w="2"/><text x="64.1210%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="63.8710%" y="1093" width="0.0461%" height="15" fill="rgb(253,107,29)" fg:x="2772" fg:w="2"/><text x="64.1210%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="63.8710%" y="1077" width="0.0461%" height="15" fill="rgb(252,179,29)" fg:x="2772" fg:w="2"/><text x="64.1210%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="63.8710%" y="1061" width="0.0461%" height="15" fill="rgb(238,194,6)" fg:x="2772" fg:w="2"/><text x="64.1210%" y="1071.50"></text></g><g><title>__rust_dealloc (2 samples, 0.05%)</title><rect x="63.8710%" y="1045" width="0.0461%" height="15" fill="rgb(238,164,29)" fg:x="2772" fg:w="2"/><text x="64.1210%" y="1055.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.05%)</title><rect x="63.8710%" y="1029" width="0.0461%" height="15" fill="rgb(224,25,9)" fg:x="2772" fg:w="2"/><text x="64.1210%" y="1039.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.05%)</title><rect x="63.8710%" y="1013" width="0.0461%" height="15" fill="rgb(244,153,23)" fg:x="2772" fg:w="2"/><text x="64.1210%" y="1023.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.05%)</title><rect x="63.8710%" y="997" width="0.0461%" height="15" fill="rgb(212,203,14)" fg:x="2772" fg:w="2"/><text x="64.1210%" y="1007.50"></text></g><g><title>tcache_bin_flush_bottom (2 samples, 0.05%)</title><rect x="63.8710%" y="981" width="0.0461%" height="15" fill="rgb(220,164,20)" fg:x="2772" fg:w="2"/><text x="64.1210%" y="991.50"></text></g><g><title>tcache_bin_flush_impl (2 samples, 0.05%)</title><rect x="63.8710%" y="965" width="0.0461%" height="15" fill="rgb(222,203,48)" fg:x="2772" fg:w="2"/><text x="64.1210%" y="975.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="63.8940%" y="949" width="0.0230%" height="15" fill="rgb(215,159,22)" fg:x="2773" fg:w="1"/><text x="64.1440%" y="959.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="63.8940%" y="933" width="0.0230%" height="15" fill="rgb(216,183,47)" fg:x="2773" fg:w="1"/><text x="64.1440%" y="943.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="63.8940%" y="917" width="0.0230%" height="15" fill="rgb(229,195,25)" fg:x="2773" fg:w="1"/><text x="64.1440%" y="927.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="63.8940%" y="901" width="0.0230%" height="15" fill="rgb(224,132,51)" fg:x="2773" fg:w="1"/><text x="64.1440%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,simd_json::error::Error&gt;&gt;&gt; (61 samples, 1.41%)</title><rect x="62.5346%" y="1269" width="1.4055%" height="15" fill="rgb(240,63,7)" fg:x="2714" fg:w="61"/><text x="62.7846%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 1.41%)</title><rect x="62.5346%" y="1253" width="1.4055%" height="15" fill="rgb(249,182,41)" fg:x="2714" fg:w="61"/><text x="62.7846%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,simd_json::error::Error&gt;]&gt; (61 samples, 1.41%)</title><rect x="62.5346%" y="1237" width="1.4055%" height="15" fill="rgb(243,47,26)" fg:x="2714" fg:w="61"/><text x="62.7846%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,simd_json::error::Error&gt;&gt; (61 samples, 1.41%)</title><rect x="62.5346%" y="1221" width="1.4055%" height="15" fill="rgb(233,48,2)" fg:x="2714" fg:w="61"/><text x="62.7846%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (61 samples, 1.41%)</title><rect x="62.5346%" y="1205" width="1.4055%" height="15" fill="rgb(244,165,34)" fg:x="2714" fg:w="61"/><text x="62.7846%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Performance&gt;&gt; (34 samples, 0.78%)</title><rect x="63.1567%" y="1189" width="0.7834%" height="15" fill="rgb(207,89,7)" fg:x="2741" fg:w="34"/><text x="63.4067%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.78%)</title><rect x="63.1567%" y="1173" width="0.7834%" height="15" fill="rgb(244,117,36)" fg:x="2741" fg:w="34"/><text x="63.4067%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::Performance]&gt; (34 samples, 0.78%)</title><rect x="63.1567%" y="1157" width="0.7834%" height="15" fill="rgb(226,144,34)" fg:x="2741" fg:w="34"/><text x="63.4067%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (32 samples, 0.74%)</title><rect x="63.2028%" y="1141" width="0.7373%" height="15" fill="rgb(213,23,19)" fg:x="2743" fg:w="32"/><text x="63.4528%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.02%)</title><rect x="63.9171%" y="1125" width="0.0230%" height="15" fill="rgb(217,75,12)" fg:x="2774" fg:w="1"/><text x="64.1671%" y="1135.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1493" width="62.1429%" height="15" fill="rgb(224,159,17)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1503.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench</text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1477" width="62.1429%" height="15" fill="rgb(217,118,1)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1487.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1461" width="62.1429%" height="15" fill="rgb(232,180,48)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1471.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1445" width="62.1429%" height="15" fill="rgb(230,27,33)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1455.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1429" width="62.1429%" height="15" fill="rgb(205,31,21)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1439.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1413" width="62.1429%" height="15" fill="rgb(253,59,4)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1423.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>?? (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1397" width="62.1429%" height="15" fill="rgb(224,201,9)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1407.50">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1381" width="62.1429%" height="15" fill="rgb(229,206,30)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1391.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1365" width="62.1429%" height="15" fill="rgb(212,67,47)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1375.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1349" width="62.1429%" height="15" fill="rgb(211,96,50)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1359.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1333" width="62.1429%" height="15" fill="rgb(252,114,18)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1343.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1317" width="62.1429%" height="15" fill="rgb(223,58,37)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1327.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}}</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}} (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1301" width="62.1429%" height="15" fill="rgb(237,70,4)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1311.50">deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched (2,697 samples, 62.14%)</title><rect x="1.8203%" y="1285" width="62.1429%" height="15" fill="rgb(244,85,46)" fg:x="79" fg:w="2697"/><text x="2.0703%" y="1295.50">criterion::bencher::Bencher&lt;M&gt;::iter_batched</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.02%)</title><rect x="63.9401%" y="1269" width="0.0230%" height="15" fill="rgb(223,39,52)" fg:x="2775" fg:w="1"/><text x="64.1901%" y="1279.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="63.9401%" y="1253" width="0.0230%" height="15" fill="rgb(218,200,14)" fg:x="2775" fg:w="1"/><text x="64.1901%" y="1263.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.02%)</title><rect x="63.9401%" y="1237" width="0.0230%" height="15" fill="rgb(208,171,16)" fg:x="2775" fg:w="1"/><text x="64.1901%" y="1247.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.02%)</title><rect x="63.9401%" y="1221" width="0.0230%" height="15" fill="rgb(234,200,18)" fg:x="2775" fg:w="1"/><text x="64.1901%" y="1231.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.02%)</title><rect x="63.9401%" y="1205" width="0.0230%" height="15" fill="rgb(228,45,11)" fg:x="2775" fg:w="1"/><text x="64.1901%" y="1215.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.02%)</title><rect x="63.9401%" y="1189" width="0.0230%" height="15" fill="rgb(237,182,11)" fg:x="2775" fg:w="1"/><text x="64.1901%" y="1199.50"></text></g><g><title>_rjem_je_extent_dalloc_wrapper (1 samples, 0.02%)</title><rect x="63.9862%" y="1093" width="0.0230%" height="15" fill="rgb(241,175,49)" fg:x="2777" fg:w="1"/><text x="64.2362%" y="1103.50"></text></g><g><title>ehooks_purge_forced (1 samples, 0.02%)</title><rect x="63.9862%" y="1077" width="0.0230%" height="15" fill="rgb(247,38,35)" fg:x="2777" fg:w="1"/><text x="64.2362%" y="1087.50"></text></g><g><title>_rjem_je_pages_purge_forced (1 samples, 0.02%)</title><rect x="63.9862%" y="1061" width="0.0230%" height="15" fill="rgb(228,39,49)" fg:x="2777" fg:w="1"/><text x="64.2362%" y="1071.50"></text></g><g><title>__GI_madvise (1 samples, 0.02%)</title><rect x="63.9862%" y="1045" width="0.0230%" height="15" fill="rgb(226,101,26)" fg:x="2777" fg:w="1"/><text x="64.2362%" y="1055.50"></text></g><g><title>extent_maximally_purge (2 samples, 0.05%)</title><rect x="63.9862%" y="1109" width="0.0461%" height="15" fill="rgb(206,141,19)" fg:x="2777" fg:w="2"/><text x="64.2362%" y="1119.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="64.0092%" y="1093" width="0.0230%" height="15" fill="rgb(211,200,13)" fg:x="2778" fg:w="1"/><text x="64.2592%" y="1103.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="64.0092%" y="1077" width="0.0230%" height="15" fill="rgb(241,121,6)" fg:x="2778" fg:w="1"/><text x="64.2592%" y="1087.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="64.0092%" y="1061" width="0.0230%" height="15" fill="rgb(234,221,29)" fg:x="2778" fg:w="1"/><text x="64.2592%" y="1071.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="64.0092%" y="1045" width="0.0230%" height="15" fill="rgb(229,136,5)" fg:x="2778" fg:w="1"/><text x="64.2592%" y="1055.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (1 samples, 0.02%)</title><rect x="64.0323%" y="1077" width="0.0230%" height="15" fill="rgb(238,36,11)" fg:x="2779" fg:w="1"/><text x="64.2823%" y="1087.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (1 samples, 0.02%)</title><rect x="64.0323%" y="1061" width="0.0230%" height="15" fill="rgb(251,55,41)" fg:x="2779" fg:w="1"/><text x="64.2823%" y="1071.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="64.0323%" y="1045" width="0.0230%" height="15" fill="rgb(242,34,40)" fg:x="2779" fg:w="1"/><text x="64.2823%" y="1055.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="64.0323%" y="1029" width="0.0230%" height="15" fill="rgb(215,42,17)" fg:x="2779" fg:w="1"/><text x="64.2823%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.12%)</title><rect x="63.9631%" y="1301" width="0.1152%" height="15" fill="rgb(207,44,46)" fg:x="2776" fg:w="5"/><text x="64.2131%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.12%)</title><rect x="63.9631%" y="1285" width="0.1152%" height="15" fill="rgb(211,206,28)" fg:x="2776" fg:w="5"/><text x="64.2131%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.12%)</title><rect x="63.9631%" y="1269" width="0.1152%" height="15" fill="rgb(237,167,16)" fg:x="2776" fg:w="5"/><text x="64.2131%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.12%)</title><rect x="63.9631%" y="1253" width="0.1152%" height="15" fill="rgb(233,66,6)" fg:x="2776" fg:w="5"/><text x="64.2131%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.12%)</title><rect x="63.9631%" y="1237" width="0.1152%" height="15" fill="rgb(246,123,29)" fg:x="2776" fg:w="5"/><text x="64.2131%" y="1247.50"></text></g><g><title>__rust_dealloc (5 samples, 0.12%)</title><rect x="63.9631%" y="1221" width="0.1152%" height="15" fill="rgb(209,62,40)" fg:x="2776" fg:w="5"/><text x="64.2131%" y="1231.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.12%)</title><rect x="63.9631%" y="1205" width="0.1152%" height="15" fill="rgb(218,4,25)" fg:x="2776" fg:w="5"/><text x="64.2131%" y="1215.50"></text></g><g><title>_rjem_je_sdallocx_default (5 samples, 0.12%)</title><rect x="63.9631%" y="1189" width="0.1152%" height="15" fill="rgb(253,91,49)" fg:x="2776" fg:w="5"/><text x="64.2131%" y="1199.50"></text></g><g><title>_rjem_je_large_dalloc (4 samples, 0.09%)</title><rect x="63.9862%" y="1173" width="0.0922%" height="15" fill="rgb(228,155,29)" fg:x="2777" fg:w="4"/><text x="64.2362%" y="1183.50"></text></g><g><title>large_dalloc_finish_impl (4 samples, 0.09%)</title><rect x="63.9862%" y="1157" width="0.0922%" height="15" fill="rgb(243,57,37)" fg:x="2777" fg:w="4"/><text x="64.2362%" y="1167.50"></text></g><g><title>pac_dalloc_impl (4 samples, 0.09%)</title><rect x="63.9862%" y="1141" width="0.0922%" height="15" fill="rgb(244,167,17)" fg:x="2777" fg:w="4"/><text x="64.2362%" y="1151.50"></text></g><g><title>_rjem_je_extent_record (4 samples, 0.09%)</title><rect x="63.9862%" y="1125" width="0.0922%" height="15" fill="rgb(207,181,38)" fg:x="2777" fg:w="4"/><text x="64.2362%" y="1135.50"></text></g><g><title>extent_try_coalesce_large (2 samples, 0.05%)</title><rect x="64.0323%" y="1109" width="0.0461%" height="15" fill="rgb(211,8,23)" fg:x="2779" fg:w="2"/><text x="64.2823%" y="1119.50"></text></g><g><title>extent_try_coalesce_impl (2 samples, 0.05%)</title><rect x="64.0323%" y="1093" width="0.0461%" height="15" fill="rgb(235,11,44)" fg:x="2779" fg:w="2"/><text x="64.2823%" y="1103.50"></text></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect x="64.0553%" y="1077" width="0.0230%" height="15" fill="rgb(248,18,52)" fg:x="2780" fg:w="1"/><text x="64.3053%" y="1087.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="64.0553%" y="1061" width="0.0230%" height="15" fill="rgb(208,4,7)" fg:x="2780" fg:w="1"/><text x="64.3053%" y="1071.50"></text></g><g><title>eset_stats_sub (1 samples, 0.02%)</title><rect x="64.0553%" y="1045" width="0.0230%" height="15" fill="rgb(240,17,39)" fg:x="2780" fg:w="1"/><text x="64.3053%" y="1055.50"></text></g><g><title>atomic_store_zu (1 samples, 0.02%)</title><rect x="64.0553%" y="1029" width="0.0230%" height="15" fill="rgb(207,170,3)" fg:x="2780" fg:w="1"/><text x="64.3053%" y="1039.50"></text></g><g><title>large_dalloc_finish_impl (1 samples, 0.02%)</title><rect x="64.1014%" y="1109" width="0.0230%" height="15" fill="rgb(236,100,52)" fg:x="2782" fg:w="1"/><text x="64.3514%" y="1119.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="64.1014%" y="1093" width="0.0230%" height="15" fill="rgb(246,78,51)" fg:x="2782" fg:w="1"/><text x="64.3514%" y="1103.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="64.1014%" y="1077" width="0.0230%" height="15" fill="rgb(211,17,15)" fg:x="2782" fg:w="1"/><text x="64.3514%" y="1087.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="64.1014%" y="1061" width="0.0230%" height="15" fill="rgb(209,59,46)" fg:x="2782" fg:w="1"/><text x="64.3514%" y="1071.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="64.1014%" y="1045" width="0.0230%" height="15" fill="rgb(210,92,25)" fg:x="2782" fg:w="1"/><text x="64.3514%" y="1055.50"></text></g><g><title>_rjem_je_emap_update_edata_state (1 samples, 0.02%)</title><rect x="64.1014%" y="1029" width="0.0230%" height="15" fill="rgb(238,174,52)" fg:x="2782" fg:w="1"/><text x="64.3514%" y="1039.50"></text></g><g><title>edata_last_get (1 samples, 0.02%)</title><rect x="64.1014%" y="1013" width="0.0230%" height="15" fill="rgb(230,73,7)" fg:x="2782" fg:w="1"/><text x="64.3514%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;simd_json::Deserializer&gt; (3 samples, 0.07%)</title><rect x="64.0783%" y="1269" width="0.0691%" height="15" fill="rgb(243,124,40)" fg:x="2781" fg:w="3"/><text x="64.3283%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;simd_json::value::tape::Node&gt;&gt; (3 samples, 0.07%)</title><rect x="64.0783%" y="1253" width="0.0691%" height="15" fill="rgb(244,170,11)" fg:x="2781" fg:w="3"/><text x="64.3283%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;simd_json::value::tape::Node&gt;&gt; (3 samples, 0.07%)</title><rect x="64.0783%" y="1237" width="0.0691%" height="15" fill="rgb(207,114,54)" fg:x="2781" fg:w="3"/><text x="64.3283%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="64.0783%" y="1221" width="0.0691%" height="15" fill="rgb(205,42,20)" fg:x="2781" fg:w="3"/><text x="64.3283%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="64.0783%" y="1205" width="0.0691%" height="15" fill="rgb(230,30,28)" fg:x="2781" fg:w="3"/><text x="64.3283%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="64.0783%" y="1189" width="0.0691%" height="15" fill="rgb(205,73,54)" fg:x="2781" fg:w="3"/><text x="64.3283%" y="1199.50"></text></g><g><title>__rust_dealloc (3 samples, 0.07%)</title><rect x="64.0783%" y="1173" width="0.0691%" height="15" fill="rgb(254,227,23)" fg:x="2781" fg:w="3"/><text x="64.3283%" y="1183.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.07%)</title><rect x="64.0783%" y="1157" width="0.0691%" height="15" fill="rgb(228,202,34)" fg:x="2781" fg:w="3"/><text x="64.3283%" y="1167.50"></text></g><g><title>_rjem_je_sdallocx_default (3 samples, 0.07%)</title><rect x="64.0783%" y="1141" width="0.0691%" height="15" fill="rgb(222,225,37)" fg:x="2781" fg:w="3"/><text x="64.3283%" y="1151.50"></text></g><g><title>_rjem_je_large_dalloc (2 samples, 0.05%)</title><rect x="64.1014%" y="1125" width="0.0461%" height="15" fill="rgb(221,14,54)" fg:x="2782" fg:w="2"/><text x="64.3514%" y="1135.50"></text></g><g><title>large_dalloc_prep_impl (1 samples, 0.02%)</title><rect x="64.1244%" y="1109" width="0.0230%" height="15" fill="rgb(254,102,2)" fg:x="2783" fg:w="1"/><text x="64.3744%" y="1119.50"></text></g><g><title>_rjem_je_arena_extent_dalloc_large_prep (1 samples, 0.02%)</title><rect x="64.1244%" y="1093" width="0.0230%" height="15" fill="rgb(232,104,17)" fg:x="2783" fg:w="1"/><text x="64.3744%" y="1103.50"></text></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="64.2166%" y="1045" width="0.0230%" height="15" fill="rgb(250,220,14)" fg:x="2787" fg:w="1"/><text x="64.4666%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.02%)</title><rect x="64.2166%" y="1029" width="0.0230%" height="15" fill="rgb(241,158,9)" fg:x="2787" fg:w="1"/><text x="64.4666%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.02%)</title><rect x="64.2396%" y="1029" width="0.0230%" height="15" fill="rgb(246,9,43)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.02%)</title><rect x="64.2396%" y="1013" width="0.0230%" height="15" fill="rgb(206,73,33)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="64.2396%" y="997" width="0.0230%" height="15" fill="rgb(222,79,8)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="1007.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="64.2396%" y="981" width="0.0230%" height="15" fill="rgb(234,8,54)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="991.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="64.2396%" y="965" width="0.0230%" height="15" fill="rgb(209,134,38)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="975.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="64.2396%" y="949" width="0.0230%" height="15" fill="rgb(230,127,29)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="959.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="64.2396%" y="933" width="0.0230%" height="15" fill="rgb(242,44,41)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="943.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="64.2396%" y="917" width="0.0230%" height="15" fill="rgb(222,56,43)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="927.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="64.2396%" y="901" width="0.0230%" height="15" fill="rgb(238,39,47)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="911.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="64.2396%" y="885" width="0.0230%" height="15" fill="rgb(226,79,43)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="895.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="64.2396%" y="869" width="0.0230%" height="15" fill="rgb(242,105,53)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="879.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="64.2396%" y="853" width="0.0230%" height="15" fill="rgb(251,132,46)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="863.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="64.2396%" y="837" width="0.0230%" height="15" fill="rgb(231,77,14)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="847.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="64.2396%" y="821" width="0.0230%" height="15" fill="rgb(240,135,9)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="831.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="64.2396%" y="805" width="0.0230%" height="15" fill="rgb(248,109,14)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="815.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="64.2396%" y="789" width="0.0230%" height="15" fill="rgb(227,146,52)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="799.50"></text></g><g><title>edata_nfree_get (1 samples, 0.02%)</title><rect x="64.2396%" y="773" width="0.0230%" height="15" fill="rgb(232,54,3)" fg:x="2788" fg:w="1"/><text x="64.4896%" y="783.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="64.2396%" y="1045" width="0.0461%" height="15" fill="rgb(229,201,43)" fg:x="2788" fg:w="2"/><text x="64.4896%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (1 samples, 0.02%)</title><rect x="64.2627%" y="1029" width="0.0230%" height="15" fill="rgb(252,161,33)" fg:x="2789" fg:w="1"/><text x="64.5127%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="64.2627%" y="1013" width="0.0230%" height="15" fill="rgb(226,146,40)" fg:x="2789" fg:w="1"/><text x="64.5127%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="64.2627%" y="997" width="0.0230%" height="15" fill="rgb(219,47,25)" fg:x="2789" fg:w="1"/><text x="64.5127%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="64.2857%" y="1029" width="0.0230%" height="15" fill="rgb(250,135,13)" fg:x="2790" fg:w="1"/><text x="64.5357%" y="1039.50"></text></g><g><title>?? (5 samples, 0.12%)</title><rect x="64.2166%" y="1061" width="0.1152%" height="15" fill="rgb(219,229,18)" fg:x="2787" fg:w="5"/><text x="64.4666%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (2 samples, 0.05%)</title><rect x="64.2857%" y="1045" width="0.0461%" height="15" fill="rgb(217,152,27)" fg:x="2790" fg:w="2"/><text x="64.5357%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="64.3088%" y="1029" width="0.0230%" height="15" fill="rgb(225,71,47)" fg:x="2791" fg:w="1"/><text x="64.5588%" y="1039.50"></text></g><g><title>?? (7 samples, 0.16%)</title><rect x="64.2166%" y="1077" width="0.1613%" height="15" fill="rgb(220,139,14)" fg:x="2787" fg:w="7"/><text x="64.4666%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.05%)</title><rect x="64.3318%" y="1061" width="0.0461%" height="15" fill="rgb(247,54,32)" fg:x="2792" fg:w="2"/><text x="64.5818%" y="1071.50"></text></g><g><title>?? (8 samples, 0.18%)</title><rect x="64.2166%" y="1093" width="0.1843%" height="15" fill="rgb(252,131,39)" fg:x="2787" fg:w="8"/><text x="64.4666%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="64.3779%" y="1077" width="0.0230%" height="15" fill="rgb(210,108,39)" fg:x="2794" fg:w="1"/><text x="64.6279%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.21%)</title><rect x="64.2166%" y="1125" width="0.2074%" height="15" fill="rgb(205,23,29)" fg:x="2787" fg:w="9"/><text x="64.4666%" y="1135.50"></text></g><g><title>?? (9 samples, 0.21%)</title><rect x="64.2166%" y="1109" width="0.2074%" height="15" fill="rgb(246,139,46)" fg:x="2787" fg:w="9"/><text x="64.4666%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="64.4009%" y="1093" width="0.0230%" height="15" fill="rgb(250,81,26)" fg:x="2795" fg:w="1"/><text x="64.6509%" y="1103.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="64.4470%" y="1013" width="0.0230%" height="15" fill="rgb(214,104,7)" fg:x="2797" fg:w="1"/><text x="64.6970%" y="1023.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.07%)</title><rect x="64.4240%" y="1093" width="0.0691%" height="15" fill="rgb(233,189,8)" fg:x="2796" fg:w="3"/><text x="64.6740%" y="1103.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="64.4470%" y="1077" width="0.0461%" height="15" fill="rgb(228,141,17)" fg:x="2797" fg:w="2"/><text x="64.6970%" y="1087.50"></text></g><g><title>&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize (2 samples, 0.05%)</title><rect x="64.4470%" y="1061" width="0.0461%" height="15" fill="rgb(247,157,1)" fg:x="2797" fg:w="2"/><text x="64.6970%" y="1071.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_str (2 samples, 0.05%)</title><rect x="64.4470%" y="1045" width="0.0461%" height="15" fill="rgb(249,225,5)" fg:x="2797" fg:w="2"/><text x="64.6970%" y="1055.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.05%)</title><rect x="64.4470%" y="1029" width="0.0461%" height="15" fill="rgb(242,55,13)" fg:x="2797" fg:w="2"/><text x="64.6970%" y="1039.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect x="64.4700%" y="1013" width="0.0230%" height="15" fill="rgb(230,49,50)" fg:x="2798" fg:w="1"/><text x="64.7200%" y="1023.50"></text></g><g><title>&lt;&lt;json_benchmark::prim_str::PrimStr&lt;T&gt; as serde::de::Deserialize&gt;::deserialize::Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="64.4700%" y="997" width="0.0230%" height="15" fill="rgb(241,111,38)" fg:x="2798" fg:w="1"/><text x="64.7200%" y="1007.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (1 samples, 0.02%)</title><rect x="64.4700%" y="981" width="0.0230%" height="15" fill="rgb(252,155,4)" fg:x="2798" fg:w="1"/><text x="64.7200%" y="991.50"></text></g><g><title>core::num::from_str_radix (1 samples, 0.02%)</title><rect x="64.4700%" y="965" width="0.0230%" height="15" fill="rgb(212,69,32)" fg:x="2798" fg:w="1"/><text x="64.7200%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="64.5622%" y="1013" width="0.0230%" height="15" fill="rgb(243,107,47)" fg:x="2802" fg:w="1"/><text x="64.8122%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.16%)</title><rect x="64.5853%" y="1013" width="0.1613%" height="15" fill="rgb(247,130,12)" fg:x="2803" fg:w="7"/><text x="64.8353%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="64.7926%" y="901" width="0.0230%" height="15" fill="rgb(233,74,16)" fg:x="2812" fg:w="1"/><text x="65.0426%" y="911.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="64.7926%" y="917" width="0.0461%" height="15" fill="rgb(208,58,18)" fg:x="2812" fg:w="2"/><text x="65.0426%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="64.8157%" y="901" width="0.0230%" height="15" fill="rgb(242,225,1)" fg:x="2813" fg:w="1"/><text x="65.0657%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="64.8157%" y="885" width="0.0230%" height="15" fill="rgb(249,39,40)" fg:x="2813" fg:w="1"/><text x="65.0657%" y="895.50"></text></g><g><title>serde::de::MapAccess::next_key (14 samples, 0.32%)</title><rect x="64.7465%" y="1013" width="0.3226%" height="15" fill="rgb(207,72,44)" fg:x="2810" fg:w="14"/><text x="64.9965%" y="1023.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (14 samples, 0.32%)</title><rect x="64.7465%" y="997" width="0.3226%" height="15" fill="rgb(215,193,12)" fg:x="2810" fg:w="14"/><text x="64.9965%" y="1007.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.32%)</title><rect x="64.7465%" y="981" width="0.3226%" height="15" fill="rgb(248,41,39)" fg:x="2810" fg:w="14"/><text x="64.9965%" y="991.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (14 samples, 0.32%)</title><rect x="64.7465%" y="965" width="0.3226%" height="15" fill="rgb(253,85,4)" fg:x="2810" fg:w="14"/><text x="64.9965%" y="975.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_identifier (14 samples, 0.32%)</title><rect x="64.7465%" y="949" width="0.3226%" height="15" fill="rgb(243,70,31)" fg:x="2810" fg:w="14"/><text x="64.9965%" y="959.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (14 samples, 0.32%)</title><rect x="64.7465%" y="933" width="0.3226%" height="15" fill="rgb(253,195,26)" fg:x="2810" fg:w="14"/><text x="64.9965%" y="943.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (10 samples, 0.23%)</title><rect x="64.8387%" y="917" width="0.2304%" height="15" fill="rgb(243,42,11)" fg:x="2814" fg:w="10"/><text x="65.0887%" y="927.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (10 samples, 0.23%)</title><rect x="64.8387%" y="901" width="0.2304%" height="15" fill="rgb(239,66,17)" fg:x="2814" fg:w="10"/><text x="65.0887%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.09%)</title><rect x="64.9770%" y="885" width="0.0922%" height="15" fill="rgb(217,132,21)" fg:x="2820" fg:w="4"/><text x="65.2270%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.09%)</title><rect x="64.9770%" y="869" width="0.0922%" height="15" fill="rgb(252,202,21)" fg:x="2820" fg:w="4"/><text x="65.2270%" y="879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.09%)</title><rect x="64.9770%" y="853" width="0.0922%" height="15" fill="rgb(233,98,36)" fg:x="2820" fg:w="4"/><text x="65.2270%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.09%)</title><rect x="64.9770%" y="837" width="0.0922%" height="15" fill="rgb(216,153,54)" fg:x="2820" fg:w="4"/><text x="65.2270%" y="847.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="65.0691%" y="549" width="0.0230%" height="15" fill="rgb(250,99,7)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="559.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="65.0691%" y="533" width="0.0230%" height="15" fill="rgb(207,56,50)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="543.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="65.0691%" y="517" width="0.0230%" height="15" fill="rgb(244,61,34)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="527.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="65.0691%" y="501" width="0.0230%" height="15" fill="rgb(241,50,38)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="511.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="65.0691%" y="485" width="0.0230%" height="15" fill="rgb(212,166,30)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="495.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="65.0691%" y="469" width="0.0230%" height="15" fill="rgb(249,127,32)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="479.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="65.0691%" y="453" width="0.0230%" height="15" fill="rgb(209,103,0)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="463.50"></text></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect x="65.0691%" y="437" width="0.0230%" height="15" fill="rgb(238,209,51)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="447.50"></text></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect x="65.0691%" y="421" width="0.0230%" height="15" fill="rgb(237,56,23)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="431.50"></text></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect x="65.0691%" y="405" width="0.0230%" height="15" fill="rgb(215,153,46)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="415.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect x="65.0691%" y="389" width="0.0230%" height="15" fill="rgb(224,49,31)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="399.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="65.0691%" y="373" width="0.0230%" height="15" fill="rgb(250,18,42)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="383.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="65.0691%" y="357" width="0.0230%" height="15" fill="rgb(215,176,39)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="367.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="65.0691%" y="341" width="0.0230%" height="15" fill="rgb(223,77,29)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="351.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="65.0691%" y="325" width="0.0230%" height="15" fill="rgb(234,94,52)" fg:x="2824" fg:w="1"/><text x="65.3191%" y="335.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="65.0691%" y="789" width="0.0461%" height="15" fill="rgb(220,154,50)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.05%)</title><rect x="65.0691%" y="773" width="0.0461%" height="15" fill="rgb(212,11,10)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="783.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="65.0691%" y="757" width="0.0461%" height="15" fill="rgb(205,166,19)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="767.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.05%)</title><rect x="65.0691%" y="741" width="0.0461%" height="15" fill="rgb(244,198,16)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="751.50"></text></g><g><title>__rust_alloc (2 samples, 0.05%)</title><rect x="65.0691%" y="725" width="0.0461%" height="15" fill="rgb(219,69,12)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="735.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.05%)</title><rect x="65.0691%" y="709" width="0.0461%" height="15" fill="rgb(245,30,7)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="719.50"></text></g><g><title>_rjem_je_malloc_default (2 samples, 0.05%)</title><rect x="65.0691%" y="693" width="0.0461%" height="15" fill="rgb(218,221,48)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="703.50"></text></g><g><title>imalloc (2 samples, 0.05%)</title><rect x="65.0691%" y="677" width="0.0461%" height="15" fill="rgb(216,66,15)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="687.50"></text></g><g><title>imalloc_body (2 samples, 0.05%)</title><rect x="65.0691%" y="661" width="0.0461%" height="15" fill="rgb(226,122,50)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="671.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.05%)</title><rect x="65.0691%" y="645" width="0.0461%" height="15" fill="rgb(239,156,16)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="655.50"></text></g><g><title>iallocztm (2 samples, 0.05%)</title><rect x="65.0691%" y="629" width="0.0461%" height="15" fill="rgb(224,27,38)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="639.50"></text></g><g><title>arena_malloc (2 samples, 0.05%)</title><rect x="65.0691%" y="613" width="0.0461%" height="15" fill="rgb(224,39,27)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="623.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.05%)</title><rect x="65.0691%" y="597" width="0.0461%" height="15" fill="rgb(215,92,29)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.05%)</title><rect x="65.0691%" y="581" width="0.0461%" height="15" fill="rgb(207,159,16)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="591.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.05%)</title><rect x="65.0691%" y="565" width="0.0461%" height="15" fill="rgb(238,163,47)" fg:x="2824" fg:w="2"/><text x="65.3191%" y="575.50"></text></g><g><title>arena_slab_reg_alloc_batch (1 samples, 0.02%)</title><rect x="65.0922%" y="549" width="0.0230%" height="15" fill="rgb(219,91,49)" fg:x="2825" fg:w="1"/><text x="65.3422%" y="559.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="65.0691%" y="821" width="0.0691%" height="15" fill="rgb(227,167,31)" fg:x="2824" fg:w="3"/><text x="65.3191%" y="831.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="65.0691%" y="805" width="0.0691%" height="15" fill="rgb(234,80,54)" fg:x="2824" fg:w="3"/><text x="65.3191%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="65.1152%" y="789" width="0.0230%" height="15" fill="rgb(212,114,2)" fg:x="2826" fg:w="1"/><text x="65.3652%" y="799.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (4 samples, 0.09%)</title><rect x="65.0691%" y="965" width="0.0922%" height="15" fill="rgb(234,50,24)" fg:x="2824" fg:w="4"/><text x="65.3191%" y="975.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_string (4 samples, 0.09%)</title><rect x="65.0691%" y="949" width="0.0922%" height="15" fill="rgb(221,68,8)" fg:x="2824" fg:w="4"/><text x="65.3191%" y="959.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (4 samples, 0.09%)</title><rect x="65.0691%" y="933" width="0.0922%" height="15" fill="rgb(254,180,31)" fg:x="2824" fg:w="4"/><text x="65.3191%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.09%)</title><rect x="65.0691%" y="917" width="0.0922%" height="15" fill="rgb(247,130,50)" fg:x="2824" fg:w="4"/><text x="65.3191%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.09%)</title><rect x="65.0691%" y="901" width="0.0922%" height="15" fill="rgb(211,109,4)" fg:x="2824" fg:w="4"/><text x="65.3191%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.09%)</title><rect x="65.0691%" y="885" width="0.0922%" height="15" fill="rgb(238,50,21)" fg:x="2824" fg:w="4"/><text x="65.3191%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.09%)</title><rect x="65.0691%" y="869" width="0.0922%" height="15" fill="rgb(225,57,45)" fg:x="2824" fg:w="4"/><text x="65.3191%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.09%)</title><rect x="65.0691%" y="853" width="0.0922%" height="15" fill="rgb(209,196,50)" fg:x="2824" fg:w="4"/><text x="65.3191%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.09%)</title><rect x="65.0691%" y="837" width="0.0922%" height="15" fill="rgb(242,140,13)" fg:x="2824" fg:w="4"/><text x="65.3191%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="65.1382%" y="821" width="0.0230%" height="15" fill="rgb(217,111,7)" fg:x="2827" fg:w="1"/><text x="65.3882%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="65.1382%" y="805" width="0.0230%" height="15" fill="rgb(253,193,51)" fg:x="2827" fg:w="1"/><text x="65.3882%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="65.1382%" y="789" width="0.0230%" height="15" fill="rgb(252,70,29)" fg:x="2827" fg:w="1"/><text x="65.3882%" y="799.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="65.1613%" y="629" width="0.0230%" height="15" fill="rgb(232,127,12)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="639.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="65.1613%" y="613" width="0.0230%" height="15" fill="rgb(211,180,21)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="623.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="65.1613%" y="597" width="0.0230%" height="15" fill="rgb(229,72,13)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="607.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="65.1613%" y="581" width="0.0230%" height="15" fill="rgb(240,211,49)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="591.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="65.1613%" y="565" width="0.0230%" height="15" fill="rgb(219,149,40)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="575.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="65.1613%" y="549" width="0.0230%" height="15" fill="rgb(210,127,46)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="559.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="65.1613%" y="533" width="0.0230%" height="15" fill="rgb(220,106,7)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="543.50"></text></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect x="65.1613%" y="517" width="0.0230%" height="15" fill="rgb(249,31,22)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="527.50"></text></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect x="65.1613%" y="501" width="0.0230%" height="15" fill="rgb(253,1,49)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="511.50"></text></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect x="65.1613%" y="485" width="0.0230%" height="15" fill="rgb(227,144,33)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="495.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect x="65.1613%" y="469" width="0.0230%" height="15" fill="rgb(249,163,44)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="479.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="65.1613%" y="453" width="0.0230%" height="15" fill="rgb(234,15,39)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="463.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="65.1613%" y="437" width="0.0230%" height="15" fill="rgb(207,66,16)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="447.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="65.1613%" y="421" width="0.0230%" height="15" fill="rgb(233,112,24)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="431.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="65.1613%" y="405" width="0.0230%" height="15" fill="rgb(230,90,22)" fg:x="2828" fg:w="1"/><text x="65.4113%" y="415.50"></text></g><g><title>_rjem_je_malloc_default (2 samples, 0.05%)</title><rect x="65.1613%" y="773" width="0.0461%" height="15" fill="rgb(229,61,13)" fg:x="2828" fg:w="2"/><text x="65.4113%" y="783.50"></text></g><g><title>imalloc (2 samples, 0.05%)</title><rect x="65.1613%" y="757" width="0.0461%" height="15" fill="rgb(225,57,24)" fg:x="2828" fg:w="2"/><text x="65.4113%" y="767.50"></text></g><g><title>imalloc_body (2 samples, 0.05%)</title><rect x="65.1613%" y="741" width="0.0461%" height="15" fill="rgb(208,169,48)" fg:x="2828" fg:w="2"/><text x="65.4113%" y="751.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.05%)</title><rect x="65.1613%" y="725" width="0.0461%" height="15" fill="rgb(244,218,51)" fg:x="2828" fg:w="2"/><text x="65.4113%" y="735.50"></text></g><g><title>iallocztm (2 samples, 0.05%)</title><rect x="65.1613%" y="709" width="0.0461%" height="15" fill="rgb(214,148,10)" fg:x="2828" fg:w="2"/><text x="65.4113%" y="719.50"></text></g><g><title>arena_malloc (2 samples, 0.05%)</title><rect x="65.1613%" y="693" width="0.0461%" height="15" fill="rgb(225,174,27)" fg:x="2828" fg:w="2"/><text x="65.4113%" y="703.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.05%)</title><rect x="65.1613%" y="677" width="0.0461%" height="15" fill="rgb(230,96,26)" fg:x="2828" fg:w="2"/><text x="65.4113%" y="687.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.05%)</title><rect x="65.1613%" y="661" width="0.0461%" height="15" fill="rgb(232,10,30)" fg:x="2828" fg:w="2"/><text x="65.4113%" y="671.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.05%)</title><rect x="65.1613%" y="645" width="0.0461%" height="15" fill="rgb(222,8,50)" fg:x="2828" fg:w="2"/><text x="65.4113%" y="655.50"></text></g><g><title>arena_slab_reg_alloc_batch (1 samples, 0.02%)</title><rect x="65.1843%" y="629" width="0.0230%" height="15" fill="rgb(213,81,27)" fg:x="2829" fg:w="1"/><text x="65.4343%" y="639.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="65.2074%" y="757" width="0.0230%" height="15" fill="rgb(245,50,10)" fg:x="2830" fg:w="1"/><text x="65.4574%" y="767.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="65.1613%" y="917" width="0.0922%" height="15" fill="rgb(216,100,18)" fg:x="2828" fg:w="4"/><text x="65.4113%" y="927.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="65.1613%" y="901" width="0.0922%" height="15" fill="rgb(236,147,54)" fg:x="2828" fg:w="4"/><text x="65.4113%" y="911.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="65.1613%" y="885" width="0.0922%" height="15" fill="rgb(205,143,26)" fg:x="2828" fg:w="4"/><text x="65.4113%" y="895.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="65.1613%" y="869" width="0.0922%" height="15" fill="rgb(236,26,9)" fg:x="2828" fg:w="4"/><text x="65.4113%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.09%)</title><rect x="65.1613%" y="853" width="0.0922%" height="15" fill="rgb(221,165,53)" fg:x="2828" fg:w="4"/><text x="65.4113%" y="863.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="65.1613%" y="837" width="0.0922%" height="15" fill="rgb(214,110,17)" fg:x="2828" fg:w="4"/><text x="65.4113%" y="847.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.09%)</title><rect x="65.1613%" y="821" width="0.0922%" height="15" fill="rgb(237,197,12)" fg:x="2828" fg:w="4"/><text x="65.4113%" y="831.50"></text></g><g><title>__rust_alloc (4 samples, 0.09%)</title><rect x="65.1613%" y="805" width="0.0922%" height="15" fill="rgb(205,84,17)" fg:x="2828" fg:w="4"/><text x="65.4113%" y="815.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.09%)</title><rect x="65.1613%" y="789" width="0.0922%" height="15" fill="rgb(237,18,45)" fg:x="2828" fg:w="4"/><text x="65.4113%" y="799.50"></text></g><g><title>_rjem_malloc (2 samples, 0.05%)</title><rect x="65.2074%" y="773" width="0.0461%" height="15" fill="rgb(221,87,14)" fg:x="2830" fg:w="2"/><text x="65.4574%" y="783.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="65.2304%" y="757" width="0.0230%" height="15" fill="rgb(238,186,15)" fg:x="2831" fg:w="1"/><text x="65.4804%" y="767.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (5 samples, 0.12%)</title><rect x="65.1613%" y="965" width="0.1152%" height="15" fill="rgb(208,115,11)" fg:x="2828" fg:w="5"/><text x="65.4113%" y="975.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (5 samples, 0.12%)</title><rect x="65.1613%" y="949" width="0.1152%" height="15" fill="rgb(254,175,0)" fg:x="2828" fg:w="5"/><text x="65.4113%" y="959.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (5 samples, 0.12%)</title><rect x="65.1613%" y="933" width="0.1152%" height="15" fill="rgb(227,24,42)" fg:x="2828" fg:w="5"/><text x="65.4113%" y="943.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="65.2535%" y="917" width="0.0230%" height="15" fill="rgb(223,211,37)" fg:x="2832" fg:w="1"/><text x="65.5035%" y="927.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="65.2535%" y="901" width="0.0230%" height="15" fill="rgb(235,49,27)" fg:x="2832" fg:w="1"/><text x="65.5035%" y="911.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="65.2535%" y="885" width="0.0230%" height="15" fill="rgb(254,97,51)" fg:x="2832" fg:w="1"/><text x="65.5035%" y="895.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="65.2535%" y="869" width="0.0230%" height="15" fill="rgb(249,51,40)" fg:x="2832" fg:w="1"/><text x="65.5035%" y="879.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect x="65.2535%" y="853" width="0.0230%" height="15" fill="rgb(210,128,45)" fg:x="2832" fg:w="1"/><text x="65.5035%" y="863.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.2535%" y="837" width="0.0230%" height="15" fill="rgb(224,137,50)" fg:x="2832" fg:w="1"/><text x="65.5035%" y="847.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="65.2535%" y="821" width="0.0230%" height="15" fill="rgb(242,15,9)" fg:x="2832" fg:w="1"/><text x="65.5035%" y="831.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.2765%" y="773" width="0.0230%" height="15" fill="rgb(233,187,41)" fg:x="2833" fg:w="1"/><text x="65.5265%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.2765%" y="757" width="0.0230%" height="15" fill="rgb(227,2,29)" fg:x="2833" fg:w="1"/><text x="65.5265%" y="767.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.2765%" y="741" width="0.0230%" height="15" fill="rgb(222,70,3)" fg:x="2833" fg:w="1"/><text x="65.5265%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="65.2765%" y="725" width="0.0230%" height="15" fill="rgb(213,11,42)" fg:x="2833" fg:w="1"/><text x="65.5265%" y="735.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.2765%" y="709" width="0.0230%" height="15" fill="rgb(225,150,9)" fg:x="2833" fg:w="1"/><text x="65.5265%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="65.2765%" y="693" width="0.0230%" height="15" fill="rgb(230,162,45)" fg:x="2833" fg:w="1"/><text x="65.5265%" y="703.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="65.2765%" y="677" width="0.0230%" height="15" fill="rgb(222,14,52)" fg:x="2833" fg:w="1"/><text x="65.5265%" y="687.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="65.2765%" y="661" width="0.0230%" height="15" fill="rgb(254,198,14)" fg:x="2833" fg:w="1"/><text x="65.5265%" y="671.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="65.2765%" y="645" width="0.0230%" height="15" fill="rgb(220,217,30)" fg:x="2833" fg:w="1"/><text x="65.5265%" y="655.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (2 samples, 0.05%)</title><rect x="65.2765%" y="933" width="0.0461%" height="15" fill="rgb(215,146,41)" fg:x="2833" fg:w="2"/><text x="65.5265%" y="943.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2 samples, 0.05%)</title><rect x="65.2765%" y="917" width="0.0461%" height="15" fill="rgb(217,27,36)" fg:x="2833" fg:w="2"/><text x="65.5265%" y="927.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_string (2 samples, 0.05%)</title><rect x="65.2765%" y="901" width="0.0461%" height="15" fill="rgb(219,218,39)" fg:x="2833" fg:w="2"/><text x="65.5265%" y="911.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.05%)</title><rect x="65.2765%" y="885" width="0.0461%" height="15" fill="rgb(219,4,42)" fg:x="2833" fg:w="2"/><text x="65.5265%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.05%)</title><rect x="65.2765%" y="869" width="0.0461%" height="15" fill="rgb(249,119,36)" fg:x="2833" fg:w="2"/><text x="65.5265%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.05%)</title><rect x="65.2765%" y="853" width="0.0461%" height="15" fill="rgb(209,23,33)" fg:x="2833" fg:w="2"/><text x="65.5265%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.05%)</title><rect x="65.2765%" y="837" width="0.0461%" height="15" fill="rgb(211,10,0)" fg:x="2833" fg:w="2"/><text x="65.5265%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.05%)</title><rect x="65.2765%" y="821" width="0.0461%" height="15" fill="rgb(208,99,37)" fg:x="2833" fg:w="2"/><text x="65.5265%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.05%)</title><rect x="65.2765%" y="805" width="0.0461%" height="15" fill="rgb(213,132,31)" fg:x="2833" fg:w="2"/><text x="65.5265%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.05%)</title><rect x="65.2765%" y="789" width="0.0461%" height="15" fill="rgb(243,129,40)" fg:x="2833" fg:w="2"/><text x="65.5265%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="65.2995%" y="773" width="0.0230%" height="15" fill="rgb(210,66,33)" fg:x="2834" fg:w="1"/><text x="65.5495%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="65.2995%" y="757" width="0.0230%" height="15" fill="rgb(209,189,4)" fg:x="2834" fg:w="1"/><text x="65.5495%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="65.2995%" y="741" width="0.0230%" height="15" fill="rgb(214,107,37)" fg:x="2834" fg:w="1"/><text x="65.5495%" y="751.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize (37 samples, 0.85%)</title><rect x="64.4931%" y="1061" width="0.8525%" height="15" fill="rgb(245,88,54)" fg:x="2799" fg:w="37"/><text x="64.7431%" y="1071.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (37 samples, 0.85%)</title><rect x="64.4931%" y="1045" width="0.8525%" height="15" fill="rgb(205,146,20)" fg:x="2799" fg:w="37"/><text x="64.7431%" y="1055.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (37 samples, 0.85%)</title><rect x="64.4931%" y="1029" width="0.8525%" height="15" fill="rgb(220,161,25)" fg:x="2799" fg:w="37"/><text x="64.7431%" y="1039.50"></text></g><g><title>serde::de::MapAccess::next_value (12 samples, 0.28%)</title><rect x="65.0691%" y="1013" width="0.2765%" height="15" fill="rgb(215,152,15)" fg:x="2824" fg:w="12"/><text x="65.3191%" y="1023.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (12 samples, 0.28%)</title><rect x="65.0691%" y="997" width="0.2765%" height="15" fill="rgb(233,192,44)" fg:x="2824" fg:w="12"/><text x="65.3191%" y="1007.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.28%)</title><rect x="65.0691%" y="981" width="0.2765%" height="15" fill="rgb(240,170,46)" fg:x="2824" fg:w="12"/><text x="65.3191%" y="991.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (3 samples, 0.07%)</title><rect x="65.2765%" y="965" width="0.0691%" height="15" fill="rgb(207,104,33)" fg:x="2833" fg:w="3"/><text x="65.5265%" y="975.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_option (3 samples, 0.07%)</title><rect x="65.2765%" y="949" width="0.0691%" height="15" fill="rgb(219,21,39)" fg:x="2833" fg:w="3"/><text x="65.5265%" y="959.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.3226%" y="933" width="0.0230%" height="15" fill="rgb(214,133,29)" fg:x="2835" fg:w="1"/><text x="65.5726%" y="943.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="65.3226%" y="917" width="0.0230%" height="15" fill="rgb(226,93,6)" fg:x="2835" fg:w="1"/><text x="65.5726%" y="927.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="65.3687%" y="789" width="0.0230%" height="15" fill="rgb(252,222,34)" fg:x="2837" fg:w="1"/><text x="65.6187%" y="799.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="65.3687%" y="773" width="0.0230%" height="15" fill="rgb(252,92,48)" fg:x="2837" fg:w="1"/><text x="65.6187%" y="783.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="65.3687%" y="757" width="0.0230%" height="15" fill="rgb(245,223,24)" fg:x="2837" fg:w="1"/><text x="65.6187%" y="767.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="65.3687%" y="741" width="0.0230%" height="15" fill="rgb(205,176,3)" fg:x="2837" fg:w="1"/><text x="65.6187%" y="751.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="65.3687%" y="725" width="0.0230%" height="15" fill="rgb(235,151,15)" fg:x="2837" fg:w="1"/><text x="65.6187%" y="735.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="65.3687%" y="709" width="0.0230%" height="15" fill="rgb(237,209,11)" fg:x="2837" fg:w="1"/><text x="65.6187%" y="719.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="65.3687%" y="693" width="0.0230%" height="15" fill="rgb(243,227,24)" fg:x="2837" fg:w="1"/><text x="65.6187%" y="703.50"></text></g><g><title>arena_choose (1 samples, 0.02%)</title><rect x="65.3687%" y="677" width="0.0230%" height="15" fill="rgb(239,193,16)" fg:x="2837" fg:w="1"/><text x="65.6187%" y="687.50"></text></g><g><title>cache_bin_alloc (1 samples, 0.02%)</title><rect x="65.3917%" y="757" width="0.0230%" height="15" fill="rgb(231,27,9)" fg:x="2838" fg:w="1"/><text x="65.6417%" y="767.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="65.3917%" y="741" width="0.0230%" height="15" fill="rgb(219,169,10)" fg:x="2838" fg:w="1"/><text x="65.6417%" y="751.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="65.3687%" y="917" width="0.0922%" height="15" fill="rgb(244,229,43)" fg:x="2837" fg:w="4"/><text x="65.6187%" y="927.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="65.3687%" y="901" width="0.0922%" height="15" fill="rgb(254,38,20)" fg:x="2837" fg:w="4"/><text x="65.6187%" y="911.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="65.3687%" y="885" width="0.0922%" height="15" fill="rgb(250,47,30)" fg:x="2837" fg:w="4"/><text x="65.6187%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.09%)</title><rect x="65.3687%" y="869" width="0.0922%" height="15" fill="rgb(224,124,36)" fg:x="2837" fg:w="4"/><text x="65.6187%" y="879.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="65.3687%" y="853" width="0.0922%" height="15" fill="rgb(246,68,51)" fg:x="2837" fg:w="4"/><text x="65.6187%" y="863.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.09%)</title><rect x="65.3687%" y="837" width="0.0922%" height="15" fill="rgb(253,43,49)" fg:x="2837" fg:w="4"/><text x="65.6187%" y="847.50"></text></g><g><title>__rust_alloc (4 samples, 0.09%)</title><rect x="65.3687%" y="821" width="0.0922%" height="15" fill="rgb(219,54,36)" fg:x="2837" fg:w="4"/><text x="65.6187%" y="831.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.09%)</title><rect x="65.3687%" y="805" width="0.0922%" height="15" fill="rgb(227,133,34)" fg:x="2837" fg:w="4"/><text x="65.6187%" y="815.50"></text></g><g><title>_rjem_malloc (3 samples, 0.07%)</title><rect x="65.3917%" y="789" width="0.0691%" height="15" fill="rgb(247,227,15)" fg:x="2838" fg:w="3"/><text x="65.6417%" y="799.50"></text></g><g><title>imalloc_fastpath (3 samples, 0.07%)</title><rect x="65.3917%" y="773" width="0.0691%" height="15" fill="rgb(229,96,14)" fg:x="2838" fg:w="3"/><text x="65.6417%" y="783.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.05%)</title><rect x="65.4147%" y="757" width="0.0461%" height="15" fill="rgb(220,79,17)" fg:x="2839" fg:w="2"/><text x="65.6647%" y="767.50"></text></g><g><title>cache_bin_alloc_impl (2 samples, 0.05%)</title><rect x="65.4147%" y="741" width="0.0461%" height="15" fill="rgb(205,131,53)" fg:x="2839" fg:w="2"/><text x="65.6647%" y="751.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (6 samples, 0.14%)</title><rect x="65.3687%" y="1029" width="0.1382%" height="15" fill="rgb(209,50,29)" fg:x="2837" fg:w="6"/><text x="65.6187%" y="1039.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (6 samples, 0.14%)</title><rect x="65.3687%" y="1013" width="0.1382%" height="15" fill="rgb(245,86,46)" fg:x="2837" fg:w="6"/><text x="65.6187%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (6 samples, 0.14%)</title><rect x="65.3687%" y="997" width="0.1382%" height="15" fill="rgb(235,66,46)" fg:x="2837" fg:w="6"/><text x="65.6187%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.14%)</title><rect x="65.3687%" y="981" width="0.1382%" height="15" fill="rgb(232,148,31)" fg:x="2837" fg:w="6"/><text x="65.6187%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.14%)</title><rect x="65.3687%" y="965" width="0.1382%" height="15" fill="rgb(217,149,8)" fg:x="2837" fg:w="6"/><text x="65.6187%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.14%)</title><rect x="65.3687%" y="949" width="0.1382%" height="15" fill="rgb(209,183,11)" fg:x="2837" fg:w="6"/><text x="65.6187%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.14%)</title><rect x="65.3687%" y="933" width="0.1382%" height="15" fill="rgb(208,55,20)" fg:x="2837" fg:w="6"/><text x="65.6187%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.05%)</title><rect x="65.4608%" y="917" width="0.0461%" height="15" fill="rgb(218,39,14)" fg:x="2841" fg:w="2"/><text x="65.7108%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="65.4608%" y="901" width="0.0461%" height="15" fill="rgb(216,169,33)" fg:x="2841" fg:w="2"/><text x="65.7108%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="65.4608%" y="885" width="0.0461%" height="15" fill="rgb(233,80,24)" fg:x="2841" fg:w="2"/><text x="65.7108%" y="895.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (8 samples, 0.18%)</title><rect x="65.3456%" y="1061" width="0.1843%" height="15" fill="rgb(213,179,31)" fg:x="2836" fg:w="8"/><text x="65.5956%" y="1071.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_string (7 samples, 0.16%)</title><rect x="65.3687%" y="1045" width="0.1613%" height="15" fill="rgb(209,19,5)" fg:x="2837" fg:w="7"/><text x="65.6187%" y="1055.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.5069%" y="1029" width="0.0230%" height="15" fill="rgb(219,18,35)" fg:x="2843" fg:w="1"/><text x="65.7569%" y="1039.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="65.5069%" y="1013" width="0.0230%" height="15" fill="rgb(209,169,16)" fg:x="2843" fg:w="1"/><text x="65.7569%" y="1023.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (59 samples, 1.36%)</title><rect x="64.1935%" y="1141" width="1.3594%" height="15" fill="rgb(245,90,51)" fg:x="2786" fg:w="59"/><text x="64.4435%" y="1151.50"></text></g><g><title>serde::de::MapAccess::next_entry (49 samples, 1.13%)</title><rect x="64.4240%" y="1125" width="1.1290%" height="15" fill="rgb(220,99,45)" fg:x="2796" fg:w="49"/><text x="64.6740%" y="1135.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (49 samples, 1.13%)</title><rect x="64.4240%" y="1109" width="1.1290%" height="15" fill="rgb(249,89,25)" fg:x="2796" fg:w="49"/><text x="64.6740%" y="1119.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (46 samples, 1.06%)</title><rect x="64.4931%" y="1093" width="1.0599%" height="15" fill="rgb(239,193,0)" fg:x="2799" fg:w="46"/><text x="64.7431%" y="1103.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (46 samples, 1.06%)</title><rect x="64.4931%" y="1077" width="1.0599%" height="15" fill="rgb(231,126,1)" fg:x="2799" fg:w="46"/><text x="64.7431%" y="1087.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="65.5300%" y="1061" width="0.0230%" height="15" fill="rgb(243,166,3)" fg:x="2844" fg:w="1"/><text x="65.7800%" y="1071.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect x="65.5300%" y="1045" width="0.0230%" height="15" fill="rgb(223,22,34)" fg:x="2844" fg:w="1"/><text x="65.7800%" y="1055.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.5300%" y="1029" width="0.0230%" height="15" fill="rgb(251,52,51)" fg:x="2844" fg:w="1"/><text x="65.7800%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="65.5300%" y="1013" width="0.0230%" height="15" fill="rgb(221,165,28)" fg:x="2844" fg:w="1"/><text x="65.7800%" y="1023.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (60 samples, 1.38%)</title><rect x="64.1935%" y="1173" width="1.3825%" height="15" fill="rgb(218,121,47)" fg:x="2786" fg:w="60"/><text x="64.4435%" y="1183.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_map (60 samples, 1.38%)</title><rect x="64.1935%" y="1157" width="1.3825%" height="15" fill="rgb(209,120,9)" fg:x="2786" fg:w="60"/><text x="64.4435%" y="1167.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.5530%" y="1141" width="0.0230%" height="15" fill="rgb(236,68,12)" fg:x="2845" fg:w="1"/><text x="65.8030%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="65.5530%" y="1125" width="0.0230%" height="15" fill="rgb(225,194,26)" fg:x="2845" fg:w="1"/><text x="65.8030%" y="1135.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="65.5530%" y="1109" width="0.0230%" height="15" fill="rgb(231,84,39)" fg:x="2845" fg:w="1"/><text x="65.8030%" y="1119.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.5760%" y="1109" width="0.0230%" height="15" fill="rgb(210,11,45)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="1119.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.5760%" y="1093" width="0.0230%" height="15" fill="rgb(224,54,52)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="1103.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.5760%" y="1077" width="0.0230%" height="15" fill="rgb(238,102,14)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="65.5760%" y="1061" width="0.0230%" height="15" fill="rgb(243,160,52)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="1071.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.5760%" y="1045" width="0.0230%" height="15" fill="rgb(216,114,19)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="65.5760%" y="1029" width="0.0230%" height="15" fill="rgb(244,166,37)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="1039.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="65.5760%" y="1013" width="0.0230%" height="15" fill="rgb(246,29,44)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="1023.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="65.5760%" y="997" width="0.0230%" height="15" fill="rgb(215,56,53)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="1007.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="65.5760%" y="981" width="0.0230%" height="15" fill="rgb(217,60,2)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="991.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="65.5760%" y="965" width="0.0230%" height="15" fill="rgb(207,26,24)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="975.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="65.5760%" y="949" width="0.0230%" height="15" fill="rgb(252,210,15)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="959.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="65.5760%" y="933" width="0.0230%" height="15" fill="rgb(253,209,26)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="943.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="65.5760%" y="917" width="0.0230%" height="15" fill="rgb(238,170,14)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="927.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="65.5760%" y="901" width="0.0230%" height="15" fill="rgb(216,178,15)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="911.50"></text></g><g><title>tcache_alloc_large (1 samples, 0.02%)</title><rect x="65.5760%" y="885" width="0.0230%" height="15" fill="rgb(250,197,2)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="895.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.02%)</title><rect x="65.5760%" y="869" width="0.0230%" height="15" fill="rgb(212,70,42)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="879.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.02%)</title><rect x="65.5760%" y="853" width="0.0230%" height="15" fill="rgb(227,213,9)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="863.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="65.5760%" y="837" width="0.0230%" height="15" fill="rgb(245,99,25)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="847.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="65.5760%" y="821" width="0.0230%" height="15" fill="rgb(250,82,29)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="831.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="65.5760%" y="805" width="0.0230%" height="15" fill="rgb(241,226,54)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="815.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="65.5760%" y="789" width="0.0230%" height="15" fill="rgb(221,99,41)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="799.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="65.5760%" y="773" width="0.0230%" height="15" fill="rgb(213,90,21)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="783.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="65.5760%" y="757" width="0.0230%" height="15" fill="rgb(205,208,24)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="767.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="65.5760%" y="741" width="0.0230%" height="15" fill="rgb(246,31,12)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="751.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="65.5760%" y="725" width="0.0230%" height="15" fill="rgb(213,154,6)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="735.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="65.5760%" y="709" width="0.0230%" height="15" fill="rgb(222,163,29)" fg:x="2846" fg:w="1"/><text x="65.8260%" y="719.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="65.5760%" y="1125" width="0.0691%" height="15" fill="rgb(227,201,8)" fg:x="2846" fg:w="3"/><text x="65.8260%" y="1135.50"></text></g><g><title>core::ptr::write (2 samples, 0.05%)</title><rect x="65.5991%" y="1109" width="0.0461%" height="15" fill="rgb(233,9,32)" fg:x="2847" fg:w="2"/><text x="65.8491%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.05%)</title><rect x="65.7143%" y="1029" width="0.0461%" height="15" fill="rgb(217,54,24)" fg:x="2852" fg:w="2"/><text x="65.9643%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="65.7604%" y="933" width="0.0461%" height="15" fill="rgb(235,192,0)" fg:x="2854" fg:w="2"/><text x="66.0104%" y="943.50"></text></g><g><title>serde::de::MapAccess::next_key (5 samples, 0.12%)</title><rect x="65.7604%" y="1029" width="0.1152%" height="15" fill="rgb(235,45,9)" fg:x="2854" fg:w="5"/><text x="66.0104%" y="1039.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.12%)</title><rect x="65.7604%" y="1013" width="0.1152%" height="15" fill="rgb(246,42,40)" fg:x="2854" fg:w="5"/><text x="66.0104%" y="1023.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.12%)</title><rect x="65.7604%" y="997" width="0.1152%" height="15" fill="rgb(248,111,24)" fg:x="2854" fg:w="5"/><text x="66.0104%" y="1007.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (5 samples, 0.12%)</title><rect x="65.7604%" y="981" width="0.1152%" height="15" fill="rgb(249,65,22)" fg:x="2854" fg:w="5"/><text x="66.0104%" y="991.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_identifier (5 samples, 0.12%)</title><rect x="65.7604%" y="965" width="0.1152%" height="15" fill="rgb(238,111,51)" fg:x="2854" fg:w="5"/><text x="66.0104%" y="975.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.12%)</title><rect x="65.7604%" y="949" width="0.1152%" height="15" fill="rgb(250,118,22)" fg:x="2854" fg:w="5"/><text x="66.0104%" y="959.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (3 samples, 0.07%)</title><rect x="65.8065%" y="933" width="0.0691%" height="15" fill="rgb(234,84,26)" fg:x="2856" fg:w="3"/><text x="66.0565%" y="943.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.07%)</title><rect x="65.8065%" y="917" width="0.0691%" height="15" fill="rgb(243,172,12)" fg:x="2856" fg:w="3"/><text x="66.0565%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.05%)</title><rect x="65.8295%" y="901" width="0.0461%" height="15" fill="rgb(236,150,49)" fg:x="2857" fg:w="2"/><text x="66.0795%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="65.8295%" y="885" width="0.0461%" height="15" fill="rgb(225,197,26)" fg:x="2857" fg:w="2"/><text x="66.0795%" y="895.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="65.8295%" y="869" width="0.0461%" height="15" fill="rgb(214,17,42)" fg:x="2857" fg:w="2"/><text x="66.0795%" y="879.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="65.8295%" y="853" width="0.0461%" height="15" fill="rgb(224,165,40)" fg:x="2857" fg:w="2"/><text x="66.0795%" y="863.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for ()&gt;::deserialize (1 samples, 0.02%)</title><rect x="65.8756%" y="981" width="0.0230%" height="15" fill="rgb(246,100,4)" fg:x="2859" fg:w="1"/><text x="66.1256%" y="991.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_unit (1 samples, 0.02%)</title><rect x="65.8756%" y="965" width="0.0230%" height="15" fill="rgb(222,103,0)" fg:x="2859" fg:w="1"/><text x="66.1256%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="65.8756%" y="949" width="0.0230%" height="15" fill="rgb(227,189,26)" fg:x="2859" fg:w="1"/><text x="66.1256%" y="959.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.8986%" y="837" width="0.0230%" height="15" fill="rgb(214,202,17)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="847.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.8986%" y="821" width="0.0230%" height="15" fill="rgb(229,111,3)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="831.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.8986%" y="805" width="0.0230%" height="15" fill="rgb(229,172,15)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="65.8986%" y="789" width="0.0230%" height="15" fill="rgb(230,224,35)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="65.8986%" y="773" width="0.0230%" height="15" fill="rgb(251,141,6)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="783.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="65.8986%" y="757" width="0.0230%" height="15" fill="rgb(225,208,6)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="767.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="65.8986%" y="741" width="0.0230%" height="15" fill="rgb(246,181,16)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="751.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="65.8986%" y="725" width="0.0230%" height="15" fill="rgb(227,129,36)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="735.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="65.8986%" y="709" width="0.0230%" height="15" fill="rgb(248,117,24)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="719.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="65.8986%" y="693" width="0.0230%" height="15" fill="rgb(214,185,35)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="703.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="65.8986%" y="677" width="0.0230%" height="15" fill="rgb(236,150,34)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="687.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="65.8986%" y="661" width="0.0230%" height="15" fill="rgb(243,228,27)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="671.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="65.8986%" y="645" width="0.0230%" height="15" fill="rgb(245,77,44)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="655.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="65.8986%" y="629" width="0.0230%" height="15" fill="rgb(235,214,42)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="639.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="65.8986%" y="613" width="0.0230%" height="15" fill="rgb(221,74,3)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="623.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="65.8986%" y="597" width="0.0230%" height="15" fill="rgb(206,121,29)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="607.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="65.8986%" y="581" width="0.0230%" height="15" fill="rgb(249,131,53)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="591.50"></text></g><g><title>arena_slab_reg_alloc_batch (1 samples, 0.02%)</title><rect x="65.8986%" y="565" width="0.0230%" height="15" fill="rgb(236,170,29)" fg:x="2860" fg:w="1"/><text x="66.1486%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (3 samples, 0.07%)</title><rect x="65.8986%" y="981" width="0.0691%" height="15" fill="rgb(247,96,15)" fg:x="2860" fg:w="3"/><text x="66.1486%" y="991.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_string (3 samples, 0.07%)</title><rect x="65.8986%" y="965" width="0.0691%" height="15" fill="rgb(211,210,7)" fg:x="2860" fg:w="3"/><text x="66.1486%" y="975.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.07%)</title><rect x="65.8986%" y="949" width="0.0691%" height="15" fill="rgb(240,88,50)" fg:x="2860" fg:w="3"/><text x="66.1486%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.07%)</title><rect x="65.8986%" y="933" width="0.0691%" height="15" fill="rgb(209,229,26)" fg:x="2860" fg:w="3"/><text x="66.1486%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.07%)</title><rect x="65.8986%" y="917" width="0.0691%" height="15" fill="rgb(210,68,23)" fg:x="2860" fg:w="3"/><text x="66.1486%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.07%)</title><rect x="65.8986%" y="901" width="0.0691%" height="15" fill="rgb(229,180,13)" fg:x="2860" fg:w="3"/><text x="66.1486%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.07%)</title><rect x="65.8986%" y="885" width="0.0691%" height="15" fill="rgb(236,53,44)" fg:x="2860" fg:w="3"/><text x="66.1486%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.07%)</title><rect x="65.8986%" y="869" width="0.0691%" height="15" fill="rgb(244,214,29)" fg:x="2860" fg:w="3"/><text x="66.1486%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.07%)</title><rect x="65.8986%" y="853" width="0.0691%" height="15" fill="rgb(220,75,29)" fg:x="2860" fg:w="3"/><text x="66.1486%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.05%)</title><rect x="65.9217%" y="837" width="0.0461%" height="15" fill="rgb(214,183,37)" fg:x="2861" fg:w="2"/><text x="66.1717%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="65.9217%" y="821" width="0.0461%" height="15" fill="rgb(239,117,29)" fg:x="2861" fg:w="2"/><text x="66.1717%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="65.9217%" y="805" width="0.0461%" height="15" fill="rgb(237,171,35)" fg:x="2861" fg:w="2"/><text x="66.1717%" y="815.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="66.0369%" y="885" width="0.0230%" height="15" fill="rgb(229,178,53)" fg:x="2866" fg:w="1"/><text x="66.2869%" y="895.50"></text></g><g><title>_rjem_je_edata_heap_first (1 samples, 0.02%)</title><rect x="66.0829%" y="485" width="0.0230%" height="15" fill="rgb(210,102,19)" fg:x="2868" fg:w="1"/><text x="66.3329%" y="495.50"></text></g><g><title>ph_first (1 samples, 0.02%)</title><rect x="66.0829%" y="469" width="0.0230%" height="15" fill="rgb(235,127,22)" fg:x="2868" fg:w="1"/><text x="66.3329%" y="479.50"></text></g><g><title>ph_merge_aux (1 samples, 0.02%)</title><rect x="66.0829%" y="453" width="0.0230%" height="15" fill="rgb(244,31,31)" fg:x="2868" fg:w="1"/><text x="66.3329%" y="463.50"></text></g><g><title>extent_recycle_extract (3 samples, 0.07%)</title><rect x="66.0599%" y="533" width="0.0691%" height="15" fill="rgb(231,43,21)" fg:x="2867" fg:w="3"/><text x="66.3099%" y="543.50"></text></g><g><title>_rjem_je_eset_fit (3 samples, 0.07%)</title><rect x="66.0599%" y="517" width="0.0691%" height="15" fill="rgb(217,131,35)" fg:x="2867" fg:w="3"/><text x="66.3099%" y="527.50"></text></g><g><title>eset_first_fit (2 samples, 0.05%)</title><rect x="66.0829%" y="501" width="0.0461%" height="15" fill="rgb(221,149,4)" fg:x="2868" fg:w="2"/><text x="66.3329%" y="511.50"></text></g><g><title>sz_psz2ind (1 samples, 0.02%)</title><rect x="66.1060%" y="485" width="0.0230%" height="15" fill="rgb(232,170,28)" fg:x="2869" fg:w="1"/><text x="66.3560%" y="495.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="66.1290%" y="517" width="0.0230%" height="15" fill="rgb(238,56,10)" fg:x="2870" fg:w="1"/><text x="66.3790%" y="527.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="66.1290%" y="501" width="0.0230%" height="15" fill="rgb(235,196,14)" fg:x="2870" fg:w="1"/><text x="66.3790%" y="511.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="66.1290%" y="485" width="0.0230%" height="15" fill="rgb(216,45,48)" fg:x="2870" fg:w="1"/><text x="66.3790%" y="495.50"></text></g><g><title>edata_list_inactive_append (1 samples, 0.02%)</title><rect x="66.1290%" y="469" width="0.0230%" height="15" fill="rgb(238,213,17)" fg:x="2870" fg:w="1"/><text x="66.3790%" y="479.50"></text></g><g><title>_rjem_je_malloc_default (5 samples, 0.12%)</title><rect x="66.0599%" y="789" width="0.1152%" height="15" fill="rgb(212,13,2)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="799.50"></text></g><g><title>imalloc (5 samples, 0.12%)</title><rect x="66.0599%" y="773" width="0.1152%" height="15" fill="rgb(240,114,20)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="783.50"></text></g><g><title>imalloc_body (5 samples, 0.12%)</title><rect x="66.0599%" y="757" width="0.1152%" height="15" fill="rgb(228,41,40)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="767.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.12%)</title><rect x="66.0599%" y="741" width="0.1152%" height="15" fill="rgb(244,132,35)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="751.50"></text></g><g><title>iallocztm (5 samples, 0.12%)</title><rect x="66.0599%" y="725" width="0.1152%" height="15" fill="rgb(253,189,4)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="735.50"></text></g><g><title>arena_malloc (5 samples, 0.12%)</title><rect x="66.0599%" y="709" width="0.1152%" height="15" fill="rgb(224,37,19)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="719.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.12%)</title><rect x="66.0599%" y="693" width="0.1152%" height="15" fill="rgb(235,223,18)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="703.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (5 samples, 0.12%)</title><rect x="66.0599%" y="677" width="0.1152%" height="15" fill="rgb(235,163,25)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="687.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (5 samples, 0.12%)</title><rect x="66.0599%" y="661" width="0.1152%" height="15" fill="rgb(217,145,28)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="671.50"></text></g><g><title>arena_slab_alloc (5 samples, 0.12%)</title><rect x="66.0599%" y="645" width="0.1152%" height="15" fill="rgb(223,223,32)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="655.50"></text></g><g><title>_rjem_je_pa_alloc (5 samples, 0.12%)</title><rect x="66.0599%" y="629" width="0.1152%" height="15" fill="rgb(227,189,39)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="639.50"></text></g><g><title>pai_alloc (5 samples, 0.12%)</title><rect x="66.0599%" y="613" width="0.1152%" height="15" fill="rgb(248,10,22)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="623.50"></text></g><g><title>pac_alloc_impl (5 samples, 0.12%)</title><rect x="66.0599%" y="597" width="0.1152%" height="15" fill="rgb(248,46,39)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="607.50"></text></g><g><title>pac_alloc_real (5 samples, 0.12%)</title><rect x="66.0599%" y="581" width="0.1152%" height="15" fill="rgb(248,113,48)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="591.50"></text></g><g><title>_rjem_je_ecache_alloc (5 samples, 0.12%)</title><rect x="66.0599%" y="565" width="0.1152%" height="15" fill="rgb(245,16,25)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="575.50"></text></g><g><title>extent_recycle (5 samples, 0.12%)</title><rect x="66.0599%" y="549" width="0.1152%" height="15" fill="rgb(249,152,16)" fg:x="2867" fg:w="5"/><text x="66.3099%" y="559.50"></text></g><g><title>extent_recycle_split (2 samples, 0.05%)</title><rect x="66.1290%" y="533" width="0.0461%" height="15" fill="rgb(250,16,1)" fg:x="2870" fg:w="2"/><text x="66.3790%" y="543.50"></text></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect x="66.1521%" y="517" width="0.0230%" height="15" fill="rgb(249,138,3)" fg:x="2871" fg:w="1"/><text x="66.4021%" y="527.50"></text></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect x="66.1521%" y="501" width="0.0230%" height="15" fill="rgb(227,71,41)" fg:x="2871" fg:w="1"/><text x="66.4021%" y="511.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect x="66.1521%" y="485" width="0.0230%" height="15" fill="rgb(209,184,23)" fg:x="2871" fg:w="1"/><text x="66.4021%" y="495.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="66.1521%" y="469" width="0.0230%" height="15" fill="rgb(223,215,31)" fg:x="2871" fg:w="1"/><text x="66.4021%" y="479.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="66.1521%" y="453" width="0.0230%" height="15" fill="rgb(210,146,28)" fg:x="2871" fg:w="1"/><text x="66.4021%" y="463.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="66.1521%" y="437" width="0.0230%" height="15" fill="rgb(209,183,41)" fg:x="2871" fg:w="1"/><text x="66.4021%" y="447.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="66.1521%" y="421" width="0.0230%" height="15" fill="rgb(209,224,45)" fg:x="2871" fg:w="1"/><text x="66.4021%" y="431.50"></text></g><g><title>phn_merge (1 samples, 0.02%)</title><rect x="66.1521%" y="405" width="0.0230%" height="15" fill="rgb(224,209,51)" fg:x="2871" fg:w="1"/><text x="66.4021%" y="415.50"></text></g><g><title>edata_avail_ph_cmp (1 samples, 0.02%)</title><rect x="66.1521%" y="389" width="0.0230%" height="15" fill="rgb(223,17,39)" fg:x="2871" fg:w="1"/><text x="66.4021%" y="399.50"></text></g><g><title>edata_esnead_comp (1 samples, 0.02%)</title><rect x="66.1521%" y="373" width="0.0230%" height="15" fill="rgb(234,204,37)" fg:x="2871" fg:w="1"/><text x="66.4021%" y="383.50"></text></g><g><title>edata_esn_comp (1 samples, 0.02%)</title><rect x="66.1521%" y="357" width="0.0230%" height="15" fill="rgb(236,120,5)" fg:x="2871" fg:w="1"/><text x="66.4021%" y="367.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="66.1982%" y="757" width="0.0230%" height="15" fill="rgb(248,97,27)" fg:x="2873" fg:w="1"/><text x="66.4482%" y="767.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="66.1982%" y="741" width="0.0230%" height="15" fill="rgb(240,66,17)" fg:x="2873" fg:w="1"/><text x="66.4482%" y="751.50"></text></g><g><title>?? (9 samples, 0.21%)</title><rect x="66.0369%" y="917" width="0.2074%" height="15" fill="rgb(210,79,3)" fg:x="2866" fg:w="9"/><text x="66.2869%" y="927.50"></text></g><g><title>?? (9 samples, 0.21%)</title><rect x="66.0369%" y="901" width="0.2074%" height="15" fill="rgb(214,176,27)" fg:x="2866" fg:w="9"/><text x="66.2869%" y="911.50"></text></g><g><title>?? (8 samples, 0.18%)</title><rect x="66.0599%" y="885" width="0.1843%" height="15" fill="rgb(235,185,3)" fg:x="2867" fg:w="8"/><text x="66.3099%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.18%)</title><rect x="66.0599%" y="869" width="0.1843%" height="15" fill="rgb(227,24,12)" fg:x="2867" fg:w="8"/><text x="66.3099%" y="879.50"></text></g><g><title>?? (8 samples, 0.18%)</title><rect x="66.0599%" y="853" width="0.1843%" height="15" fill="rgb(252,169,48)" fg:x="2867" fg:w="8"/><text x="66.3099%" y="863.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.18%)</title><rect x="66.0599%" y="837" width="0.1843%" height="15" fill="rgb(212,65,1)" fg:x="2867" fg:w="8"/><text x="66.3099%" y="847.50"></text></g><g><title>__rust_alloc (8 samples, 0.18%)</title><rect x="66.0599%" y="821" width="0.1843%" height="15" fill="rgb(242,39,24)" fg:x="2867" fg:w="8"/><text x="66.3099%" y="831.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (8 samples, 0.18%)</title><rect x="66.0599%" y="805" width="0.1843%" height="15" fill="rgb(249,32,23)" fg:x="2867" fg:w="8"/><text x="66.3099%" y="815.50"></text></g><g><title>_rjem_malloc (3 samples, 0.07%)</title><rect x="66.1751%" y="789" width="0.0691%" height="15" fill="rgb(251,195,23)" fg:x="2872" fg:w="3"/><text x="66.4251%" y="799.50"></text></g><g><title>imalloc_fastpath (3 samples, 0.07%)</title><rect x="66.1751%" y="773" width="0.0691%" height="15" fill="rgb(236,174,8)" fg:x="2872" fg:w="3"/><text x="66.4251%" y="783.50"></text></g><g><title>sz_size2index_usize_fastpath (1 samples, 0.02%)</title><rect x="66.2212%" y="757" width="0.0230%" height="15" fill="rgb(220,197,8)" fg:x="2874" fg:w="1"/><text x="66.4712%" y="767.50"></text></g><g><title>sz_index2size_lookup_impl (1 samples, 0.02%)</title><rect x="66.2212%" y="741" width="0.0230%" height="15" fill="rgb(240,108,37)" fg:x="2874" fg:w="1"/><text x="66.4712%" y="751.50"></text></g><g><title>?? (11 samples, 0.25%)</title><rect x="66.0369%" y="933" width="0.2535%" height="15" fill="rgb(232,176,24)" fg:x="2866" fg:w="11"/><text x="66.2869%" y="943.50"></text></g><g><title>core::ptr::write (2 samples, 0.05%)</title><rect x="66.2442%" y="917" width="0.0461%" height="15" fill="rgb(243,35,29)" fg:x="2875" fg:w="2"/><text x="66.4942%" y="927.50"></text></g><g><title>serde::de::MapAccess::next_key (9 samples, 0.21%)</title><rect x="66.3594%" y="837" width="0.2074%" height="15" fill="rgb(210,37,18)" fg:x="2880" fg:w="9"/><text x="66.6094%" y="847.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (9 samples, 0.21%)</title><rect x="66.3594%" y="821" width="0.2074%" height="15" fill="rgb(224,184,40)" fg:x="2880" fg:w="9"/><text x="66.6094%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.21%)</title><rect x="66.3594%" y="805" width="0.2074%" height="15" fill="rgb(236,39,29)" fg:x="2880" fg:w="9"/><text x="66.6094%" y="815.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (9 samples, 0.21%)</title><rect x="66.3594%" y="789" width="0.2074%" height="15" fill="rgb(232,48,39)" fg:x="2880" fg:w="9"/><text x="66.6094%" y="799.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_identifier (9 samples, 0.21%)</title><rect x="66.3594%" y="773" width="0.2074%" height="15" fill="rgb(236,34,42)" fg:x="2880" fg:w="9"/><text x="66.6094%" y="783.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.21%)</title><rect x="66.3594%" y="757" width="0.2074%" height="15" fill="rgb(243,106,37)" fg:x="2880" fg:w="9"/><text x="66.6094%" y="767.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (9 samples, 0.21%)</title><rect x="66.3594%" y="741" width="0.2074%" height="15" fill="rgb(218,96,6)" fg:x="2880" fg:w="9"/><text x="66.6094%" y="751.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (9 samples, 0.21%)</title><rect x="66.3594%" y="725" width="0.2074%" height="15" fill="rgb(235,130,12)" fg:x="2880" fg:w="9"/><text x="66.6094%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (9 samples, 0.21%)</title><rect x="66.3594%" y="709" width="0.2074%" height="15" fill="rgb(231,95,0)" fg:x="2880" fg:w="9"/><text x="66.6094%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.21%)</title><rect x="66.3594%" y="693" width="0.2074%" height="15" fill="rgb(228,12,23)" fg:x="2880" fg:w="9"/><text x="66.6094%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (9 samples, 0.21%)</title><rect x="66.3594%" y="677" width="0.2074%" height="15" fill="rgb(216,12,1)" fg:x="2880" fg:w="9"/><text x="66.6094%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.21%)</title><rect x="66.3594%" y="661" width="0.2074%" height="15" fill="rgb(219,59,3)" fg:x="2880" fg:w="9"/><text x="66.6094%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="66.5668%" y="757" width="0.0230%" height="15" fill="rgb(215,208,46)" fg:x="2889" fg:w="1"/><text x="66.8168%" y="767.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.07%)</title><rect x="66.5899%" y="741" width="0.0691%" height="15" fill="rgb(254,224,29)" fg:x="2890" fg:w="3"/><text x="66.8399%" y="751.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (15 samples, 0.35%)</title><rect x="66.3364%" y="853" width="0.3456%" height="15" fill="rgb(232,14,29)" fg:x="2879" fg:w="15"/><text x="66.5864%" y="863.50"></text></g><g><title>serde::de::MapAccess::next_value (5 samples, 0.12%)</title><rect x="66.5668%" y="837" width="0.1152%" height="15" fill="rgb(208,45,52)" fg:x="2889" fg:w="5"/><text x="66.8168%" y="847.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.12%)</title><rect x="66.5668%" y="821" width="0.1152%" height="15" fill="rgb(234,191,28)" fg:x="2889" fg:w="5"/><text x="66.8168%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.12%)</title><rect x="66.5668%" y="805" width="0.1152%" height="15" fill="rgb(244,67,43)" fg:x="2889" fg:w="5"/><text x="66.8168%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (5 samples, 0.12%)</title><rect x="66.5668%" y="789" width="0.1152%" height="15" fill="rgb(236,189,24)" fg:x="2889" fg:w="5"/><text x="66.8168%" y="799.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_u32 (5 samples, 0.12%)</title><rect x="66.5668%" y="773" width="0.1152%" height="15" fill="rgb(239,214,33)" fg:x="2889" fg:w="5"/><text x="66.8168%" y="783.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="66.5899%" y="757" width="0.0922%" height="15" fill="rgb(226,176,41)" fg:x="2890" fg:w="4"/><text x="66.8399%" y="767.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="66.6590%" y="741" width="0.0230%" height="15" fill="rgb(248,47,8)" fg:x="2893" fg:w="1"/><text x="66.9090%" y="751.50"></text></g><g><title>&lt;[T] as simd_json::safer_unchecked::GetSaferUnchecked&lt;T&gt;&gt;::get_kinda_unchecked (1 samples, 0.02%)</title><rect x="66.6590%" y="725" width="0.0230%" height="15" fill="rgb(218,81,44)" fg:x="2893" fg:w="1"/><text x="66.9090%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="66.6590%" y="709" width="0.0230%" height="15" fill="rgb(213,98,6)" fg:x="2893" fg:w="1"/><text x="66.9090%" y="719.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="66.6590%" y="693" width="0.0230%" height="15" fill="rgb(222,85,22)" fg:x="2893" fg:w="1"/><text x="66.9090%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="66.6590%" y="677" width="0.0230%" height="15" fill="rgb(239,46,39)" fg:x="2893" fg:w="1"/><text x="66.9090%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="66.6820%" y="837" width="0.0230%" height="15" fill="rgb(237,12,29)" fg:x="2894" fg:w="1"/><text x="66.9320%" y="847.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize (18 samples, 0.41%)</title><rect x="66.3134%" y="885" width="0.4147%" height="15" fill="rgb(214,77,8)" fg:x="2878" fg:w="18"/><text x="66.5634%" y="895.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (18 samples, 0.41%)</title><rect x="66.3134%" y="869" width="0.4147%" height="15" fill="rgb(217,168,37)" fg:x="2878" fg:w="18"/><text x="66.5634%" y="879.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="66.6820%" y="853" width="0.0461%" height="15" fill="rgb(221,217,23)" fg:x="2894" fg:w="2"/><text x="66.9320%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="66.7051%" y="837" width="0.0230%" height="15" fill="rgb(243,229,36)" fg:x="2895" fg:w="1"/><text x="66.9551%" y="847.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="66.7051%" y="821" width="0.0230%" height="15" fill="rgb(251,163,40)" fg:x="2895" fg:w="1"/><text x="66.9551%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.12%)</title><rect x="66.8894%" y="837" width="0.1152%" height="15" fill="rgb(237,222,12)" fg:x="2903" fg:w="5"/><text x="67.1394%" y="847.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="67.0046%" y="741" width="0.0230%" height="15" fill="rgb(248,132,6)" fg:x="2908" fg:w="1"/><text x="67.2546%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="67.0046%" y="725" width="0.0230%" height="15" fill="rgb(227,167,50)" fg:x="2908" fg:w="1"/><text x="67.2546%" y="735.50"></text></g><g><title>serde::de::MapAccess::next_key (8 samples, 0.18%)</title><rect x="67.0046%" y="837" width="0.1843%" height="15" fill="rgb(242,84,37)" fg:x="2908" fg:w="8"/><text x="67.2546%" y="847.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (8 samples, 0.18%)</title><rect x="67.0046%" y="821" width="0.1843%" height="15" fill="rgb(212,4,50)" fg:x="2908" fg:w="8"/><text x="67.2546%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.18%)</title><rect x="67.0046%" y="805" width="0.1843%" height="15" fill="rgb(230,228,32)" fg:x="2908" fg:w="8"/><text x="67.2546%" y="815.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (8 samples, 0.18%)</title><rect x="67.0046%" y="789" width="0.1843%" height="15" fill="rgb(248,217,23)" fg:x="2908" fg:w="8"/><text x="67.2546%" y="799.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_identifier (8 samples, 0.18%)</title><rect x="67.0046%" y="773" width="0.1843%" height="15" fill="rgb(238,197,32)" fg:x="2908" fg:w="8"/><text x="67.2546%" y="783.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.18%)</title><rect x="67.0046%" y="757" width="0.1843%" height="15" fill="rgb(236,106,1)" fg:x="2908" fg:w="8"/><text x="67.2546%" y="767.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (7 samples, 0.16%)</title><rect x="67.0276%" y="741" width="0.1613%" height="15" fill="rgb(219,228,13)" fg:x="2909" fg:w="7"/><text x="67.2776%" y="751.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (7 samples, 0.16%)</title><rect x="67.0276%" y="725" width="0.1613%" height="15" fill="rgb(238,30,35)" fg:x="2909" fg:w="7"/><text x="67.2776%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (7 samples, 0.16%)</title><rect x="67.0276%" y="709" width="0.1613%" height="15" fill="rgb(236,70,23)" fg:x="2909" fg:w="7"/><text x="67.2776%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.16%)</title><rect x="67.0276%" y="693" width="0.1613%" height="15" fill="rgb(249,104,48)" fg:x="2909" fg:w="7"/><text x="67.2776%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.16%)</title><rect x="67.0276%" y="677" width="0.1613%" height="15" fill="rgb(254,117,50)" fg:x="2909" fg:w="7"/><text x="67.2776%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.16%)</title><rect x="67.0276%" y="661" width="0.1613%" height="15" fill="rgb(223,152,4)" fg:x="2909" fg:w="7"/><text x="67.2776%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.16%)</title><rect x="67.3272%" y="741" width="0.1613%" height="15" fill="rgb(245,6,2)" fg:x="2922" fg:w="7"/><text x="67.5772%" y="751.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="67.4885%" y="453" width="0.0230%" height="15" fill="rgb(249,150,24)" fg:x="2929" fg:w="1"/><text x="67.7385%" y="463.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="67.4885%" y="437" width="0.0230%" height="15" fill="rgb(228,185,42)" fg:x="2929" fg:w="1"/><text x="67.7385%" y="447.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="67.4885%" y="421" width="0.0230%" height="15" fill="rgb(226,39,33)" fg:x="2929" fg:w="1"/><text x="67.7385%" y="431.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="67.4885%" y="405" width="0.0230%" height="15" fill="rgb(221,166,19)" fg:x="2929" fg:w="1"/><text x="67.7385%" y="415.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="67.4885%" y="389" width="0.0230%" height="15" fill="rgb(209,109,2)" fg:x="2929" fg:w="1"/><text x="67.7385%" y="399.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="67.4885%" y="373" width="0.0230%" height="15" fill="rgb(252,216,26)" fg:x="2929" fg:w="1"/><text x="67.7385%" y="383.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="67.4885%" y="357" width="0.0230%" height="15" fill="rgb(227,173,36)" fg:x="2929" fg:w="1"/><text x="67.7385%" y="367.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="67.4885%" y="341" width="0.0230%" height="15" fill="rgb(209,90,7)" fg:x="2929" fg:w="1"/><text x="67.7385%" y="351.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="67.4885%" y="325" width="0.0230%" height="15" fill="rgb(250,194,11)" fg:x="2929" fg:w="1"/><text x="67.7385%" y="335.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="67.4885%" y="309" width="0.0230%" height="15" fill="rgb(220,72,50)" fg:x="2929" fg:w="1"/><text x="67.7385%" y="319.50"></text></g><g><title>_rjem_je_malloc_default (3 samples, 0.07%)</title><rect x="67.4885%" y="597" width="0.0691%" height="15" fill="rgb(222,106,48)" fg:x="2929" fg:w="3"/><text x="67.7385%" y="607.50"></text></g><g><title>imalloc (3 samples, 0.07%)</title><rect x="67.4885%" y="581" width="0.0691%" height="15" fill="rgb(216,220,45)" fg:x="2929" fg:w="3"/><text x="67.7385%" y="591.50"></text></g><g><title>imalloc_body (3 samples, 0.07%)</title><rect x="67.4885%" y="565" width="0.0691%" height="15" fill="rgb(234,112,18)" fg:x="2929" fg:w="3"/><text x="67.7385%" y="575.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.07%)</title><rect x="67.4885%" y="549" width="0.0691%" height="15" fill="rgb(206,179,9)" fg:x="2929" fg:w="3"/><text x="67.7385%" y="559.50"></text></g><g><title>iallocztm (3 samples, 0.07%)</title><rect x="67.4885%" y="533" width="0.0691%" height="15" fill="rgb(215,115,40)" fg:x="2929" fg:w="3"/><text x="67.7385%" y="543.50"></text></g><g><title>arena_malloc (3 samples, 0.07%)</title><rect x="67.4885%" y="517" width="0.0691%" height="15" fill="rgb(222,69,34)" fg:x="2929" fg:w="3"/><text x="67.7385%" y="527.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.07%)</title><rect x="67.4885%" y="501" width="0.0691%" height="15" fill="rgb(209,161,10)" fg:x="2929" fg:w="3"/><text x="67.7385%" y="511.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (3 samples, 0.07%)</title><rect x="67.4885%" y="485" width="0.0691%" height="15" fill="rgb(217,6,38)" fg:x="2929" fg:w="3"/><text x="67.7385%" y="495.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (3 samples, 0.07%)</title><rect x="67.4885%" y="469" width="0.0691%" height="15" fill="rgb(229,229,48)" fg:x="2929" fg:w="3"/><text x="67.7385%" y="479.50"></text></g><g><title>arena_slab_reg_alloc_batch (2 samples, 0.05%)</title><rect x="67.5115%" y="453" width="0.0461%" height="15" fill="rgb(225,21,28)" fg:x="2930" fg:w="2"/><text x="67.7615%" y="463.50"></text></g><g><title>?? (6 samples, 0.14%)</title><rect x="67.4885%" y="741" width="0.1382%" height="15" fill="rgb(206,33,13)" fg:x="2929" fg:w="6"/><text x="67.7385%" y="751.50"></text></g><g><title>?? (6 samples, 0.14%)</title><rect x="67.4885%" y="725" width="0.1382%" height="15" fill="rgb(242,178,17)" fg:x="2929" fg:w="6"/><text x="67.7385%" y="735.50"></text></g><g><title>?? (6 samples, 0.14%)</title><rect x="67.4885%" y="709" width="0.1382%" height="15" fill="rgb(220,162,5)" fg:x="2929" fg:w="6"/><text x="67.7385%" y="719.50"></text></g><g><title>?? (6 samples, 0.14%)</title><rect x="67.4885%" y="693" width="0.1382%" height="15" fill="rgb(210,33,43)" fg:x="2929" fg:w="6"/><text x="67.7385%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.14%)</title><rect x="67.4885%" y="677" width="0.1382%" height="15" fill="rgb(216,116,54)" fg:x="2929" fg:w="6"/><text x="67.7385%" y="687.50"></text></g><g><title>?? (6 samples, 0.14%)</title><rect x="67.4885%" y="661" width="0.1382%" height="15" fill="rgb(249,92,24)" fg:x="2929" fg:w="6"/><text x="67.7385%" y="671.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.14%)</title><rect x="67.4885%" y="645" width="0.1382%" height="15" fill="rgb(231,189,14)" fg:x="2929" fg:w="6"/><text x="67.7385%" y="655.50"></text></g><g><title>__rust_alloc (6 samples, 0.14%)</title><rect x="67.4885%" y="629" width="0.1382%" height="15" fill="rgb(230,8,41)" fg:x="2929" fg:w="6"/><text x="67.7385%" y="639.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.14%)</title><rect x="67.4885%" y="613" width="0.1382%" height="15" fill="rgb(249,7,27)" fg:x="2929" fg:w="6"/><text x="67.7385%" y="623.50"></text></g><g><title>_rjem_malloc (3 samples, 0.07%)</title><rect x="67.5576%" y="597" width="0.0691%" height="15" fill="rgb(232,86,5)" fg:x="2932" fg:w="3"/><text x="67.8076%" y="607.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="67.6037%" y="581" width="0.0230%" height="15" fill="rgb(224,175,18)" fg:x="2934" fg:w="1"/><text x="67.8537%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.09%)</title><rect x="67.8341%" y="661" width="0.0922%" height="15" fill="rgb(220,129,12)" fg:x="2944" fg:w="4"/><text x="68.0841%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="68.7327%" y="549" width="0.0461%" height="15" fill="rgb(210,19,36)" fg:x="2983" fg:w="2"/><text x="68.9827%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.09%)</title><rect x="68.7788%" y="533" width="0.0922%" height="15" fill="rgb(219,96,14)" fg:x="2985" fg:w="4"/><text x="69.0288%" y="543.50"></text></g><g><title>?? (5 samples, 0.12%)</title><rect x="68.7788%" y="549" width="0.1152%" height="15" fill="rgb(249,106,1)" fg:x="2985" fg:w="5"/><text x="69.0288%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="68.8710%" y="533" width="0.0230%" height="15" fill="rgb(249,155,20)" fg:x="2989" fg:w="1"/><text x="69.1210%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="68.8710%" y="517" width="0.0230%" height="15" fill="rgb(244,168,9)" fg:x="2989" fg:w="1"/><text x="69.1210%" y="527.50"></text></g><g><title>serde::de::MapAccess::next_key (49 samples, 1.13%)</title><rect x="68.5714%" y="645" width="1.1290%" height="15" fill="rgb(216,23,50)" fg:x="2976" fg:w="49"/><text x="68.8214%" y="655.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (49 samples, 1.13%)</title><rect x="68.5714%" y="629" width="1.1290%" height="15" fill="rgb(224,219,20)" fg:x="2976" fg:w="49"/><text x="68.8214%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (45 samples, 1.04%)</title><rect x="68.6636%" y="613" width="1.0369%" height="15" fill="rgb(222,156,15)" fg:x="2980" fg:w="45"/><text x="68.9136%" y="623.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (45 samples, 1.04%)</title><rect x="68.6636%" y="597" width="1.0369%" height="15" fill="rgb(231,97,17)" fg:x="2980" fg:w="45"/><text x="68.9136%" y="607.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_identifier (45 samples, 1.04%)</title><rect x="68.6636%" y="581" width="1.0369%" height="15" fill="rgb(218,70,48)" fg:x="2980" fg:w="45"/><text x="68.9136%" y="591.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (45 samples, 1.04%)</title><rect x="68.6636%" y="565" width="1.0369%" height="15" fill="rgb(212,196,52)" fg:x="2980" fg:w="45"/><text x="68.9136%" y="575.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (35 samples, 0.81%)</title><rect x="68.8940%" y="549" width="0.8065%" height="15" fill="rgb(243,203,18)" fg:x="2990" fg:w="35"/><text x="69.1440%" y="559.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (35 samples, 0.81%)</title><rect x="68.8940%" y="533" width="0.8065%" height="15" fill="rgb(252,125,41)" fg:x="2990" fg:w="35"/><text x="69.1440%" y="543.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (34 samples, 0.78%)</title><rect x="68.9171%" y="517" width="0.7834%" height="15" fill="rgb(223,180,33)" fg:x="2991" fg:w="34"/><text x="69.1671%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (34 samples, 0.78%)</title><rect x="68.9171%" y="501" width="0.7834%" height="15" fill="rgb(254,159,46)" fg:x="2991" fg:w="34"/><text x="69.1671%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (34 samples, 0.78%)</title><rect x="68.9171%" y="485" width="0.7834%" height="15" fill="rgb(254,38,10)" fg:x="2991" fg:w="34"/><text x="69.1671%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (34 samples, 0.78%)</title><rect x="68.9171%" y="469" width="0.7834%" height="15" fill="rgb(208,217,32)" fg:x="2991" fg:w="34"/><text x="69.1671%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.07%)</title><rect x="69.7005%" y="533" width="0.0691%" height="15" fill="rgb(221,120,13)" fg:x="3025" fg:w="3"/><text x="69.9505%" y="543.50"></text></g><g><title>&lt;json_benchmark::empty::Array as serde::de::Deserialize&gt;::deserialize (6 samples, 0.14%)</title><rect x="69.7005%" y="597" width="0.1382%" height="15" fill="rgb(246,54,52)" fg:x="3025" fg:w="6"/><text x="69.9505%" y="607.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_tuple (6 samples, 0.14%)</title><rect x="69.7005%" y="581" width="0.1382%" height="15" fill="rgb(242,34,25)" fg:x="3025" fg:w="6"/><text x="69.9505%" y="591.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (6 samples, 0.14%)</title><rect x="69.7005%" y="565" width="0.1382%" height="15" fill="rgb(247,209,9)" fg:x="3025" fg:w="6"/><text x="69.9505%" y="575.50"></text></g><g><title>?? (6 samples, 0.14%)</title><rect x="69.7005%" y="549" width="0.1382%" height="15" fill="rgb(228,71,26)" fg:x="3025" fg:w="6"/><text x="69.9505%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3 samples, 0.07%)</title><rect x="69.7696%" y="533" width="0.0691%" height="15" fill="rgb(222,145,49)" fg:x="3028" fg:w="3"/><text x="70.0196%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3 samples, 0.07%)</title><rect x="69.7696%" y="517" width="0.0691%" height="15" fill="rgb(218,121,17)" fg:x="3028" fg:w="3"/><text x="70.0196%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.21%)</title><rect x="69.8387%" y="565" width="0.2074%" height="15" fill="rgb(244,50,7)" fg:x="3031" fg:w="9"/><text x="70.0887%" y="575.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (99 samples, 2.28%)</title><rect x="67.9263%" y="661" width="2.2811%" height="15" fill="rgb(246,229,37)" fg:x="2948" fg:w="99"/><text x="68.1763%" y="671.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_value (22 samples, 0.51%)</title><rect x="69.7005%" y="645" width="0.5069%" height="15" fill="rgb(225,18,5)" fg:x="3025" fg:w="22"/><text x="69.9505%" y="655.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (22 samples, 0.51%)</title><rect x="69.7005%" y="629" width="0.5069%" height="15" fill="rgb(213,204,8)" fg:x="3025" fg:w="22"/><text x="69.9505%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22 samples, 0.51%)</title><rect x="69.7005%" y="613" width="0.5069%" height="15" fill="rgb(238,103,6)" fg:x="3025" fg:w="22"/><text x="69.9505%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (16 samples, 0.37%)</title><rect x="69.8387%" y="597" width="0.3687%" height="15" fill="rgb(222,25,35)" fg:x="3031" fg:w="16"/><text x="70.0887%" y="607.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_u32 (16 samples, 0.37%)</title><rect x="69.8387%" y="581" width="0.3687%" height="15" fill="rgb(213,203,35)" fg:x="3031" fg:w="16"/><text x="70.0887%" y="591.50"></text></g><g><title>?? (7 samples, 0.16%)</title><rect x="70.0461%" y="565" width="0.1613%" height="15" fill="rgb(221,79,53)" fg:x="3040" fg:w="7"/><text x="70.2961%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.16%)</title><rect x="70.0461%" y="549" width="0.1613%" height="15" fill="rgb(243,200,35)" fg:x="3040" fg:w="7"/><text x="70.2961%" y="559.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (140 samples, 3.23%)</title><rect x="67.2350%" y="757" width="3.2258%" height="15" fill="rgb(248,60,25)" fg:x="2918" fg:w="140"/><text x="67.4850%" y="767.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (123 samples, 2.83%)</title><rect x="67.6267%" y="741" width="2.8341%" height="15" fill="rgb(227,53,46)" fg:x="2935" fg:w="123"/><text x="67.8767%" y="751.50">se..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::SeqAccess&gt;::next_element_seed (123 samples, 2.83%)</title><rect x="67.6267%" y="725" width="2.8341%" height="15" fill="rgb(216,120,32)" fg:x="2935" fg:w="123"/><text x="67.8767%" y="735.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (123 samples, 2.83%)</title><rect x="67.6267%" y="709" width="2.8341%" height="15" fill="rgb(220,134,1)" fg:x="2935" fg:w="123"/><text x="67.8767%" y="719.50">&lt;c..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (123 samples, 2.83%)</title><rect x="67.6267%" y="693" width="2.8341%" height="15" fill="rgb(237,168,5)" fg:x="2935" fg:w="123"/><text x="67.8767%" y="703.50">js..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (123 samples, 2.83%)</title><rect x="67.6267%" y="677" width="2.8341%" height="15" fill="rgb(231,100,33)" fg:x="2935" fg:w="123"/><text x="67.8767%" y="687.50">si..</text></g><g><title>?? (11 samples, 0.25%)</title><rect x="70.2074%" y="661" width="0.2535%" height="15" fill="rgb(236,177,47)" fg:x="3047" fg:w="11"/><text x="70.4574%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.25%)</title><rect x="70.2074%" y="645" width="0.2535%" height="15" fill="rgb(235,7,49)" fg:x="3047" fg:w="11"/><text x="70.4574%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (141 samples, 3.25%)</title><rect x="67.2350%" y="789" width="3.2488%" height="15" fill="rgb(232,119,22)" fg:x="2918" fg:w="141"/><text x="67.4850%" y="799.50">ser..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (141 samples, 3.25%)</title><rect x="67.2350%" y="773" width="3.2488%" height="15" fill="rgb(254,73,53)" fg:x="2918" fg:w="141"/><text x="67.4850%" y="783.50">sim..</text></g><g><title>?? (1 samples, 0.02%)</title><rect x="70.4608%" y="757" width="0.0230%" height="15" fill="rgb(251,35,20)" fg:x="3058" fg:w="1"/><text x="70.7108%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="70.4608%" y="741" width="0.0230%" height="15" fill="rgb(241,119,20)" fg:x="3058" fg:w="1"/><text x="70.7108%" y="751.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="70.4608%" y="725" width="0.0230%" height="15" fill="rgb(207,102,14)" fg:x="3058" fg:w="1"/><text x="70.7108%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="70.4839%" y="757" width="0.0230%" height="15" fill="rgb(248,201,50)" fg:x="3059" fg:w="1"/><text x="70.7339%" y="767.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (198 samples, 4.56%)</title><rect x="65.9677%" y="981" width="4.5622%" height="15" fill="rgb(222,185,44)" fg:x="2863" fg:w="198"/><text x="66.2177%" y="991.50">serde..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (198 samples, 4.56%)</title><rect x="65.9677%" y="965" width="4.5622%" height="15" fill="rgb(218,107,18)" fg:x="2863" fg:w="198"/><text x="66.2177%" y="975.50">simd_..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (198 samples, 4.56%)</title><rect x="65.9677%" y="949" width="4.5622%" height="15" fill="rgb(237,177,39)" fg:x="2863" fg:w="198"/><text x="66.2177%" y="959.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (184 samples, 4.24%)</title><rect x="66.2903%" y="933" width="4.2396%" height="15" fill="rgb(246,69,6)" fg:x="2877" fg:w="184"/><text x="66.5403%" y="943.50">serde..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::SeqAccess&gt;::next_element_seed (184 samples, 4.24%)</title><rect x="66.2903%" y="917" width="4.2396%" height="15" fill="rgb(234,208,37)" fg:x="2877" fg:w="184"/><text x="66.5403%" y="927.50">&lt;simd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (183 samples, 4.22%)</title><rect x="66.3134%" y="901" width="4.2166%" height="15" fill="rgb(225,4,6)" fg:x="2878" fg:w="183"/><text x="66.5634%" y="911.50">&lt;core..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (165 samples, 3.80%)</title><rect x="66.7281%" y="885" width="3.8018%" height="15" fill="rgb(233,45,0)" fg:x="2896" fg:w="165"/><text x="66.9781%" y="895.50">json..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (165 samples, 3.80%)</title><rect x="66.7281%" y="869" width="3.8018%" height="15" fill="rgb(226,136,5)" fg:x="2896" fg:w="165"/><text x="66.9781%" y="879.50">simd..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (164 samples, 3.78%)</title><rect x="66.7512%" y="853" width="3.7788%" height="15" fill="rgb(211,91,47)" fg:x="2897" fg:w="164"/><text x="67.0012%" y="863.50">&lt;jso..</text></g><g><title>serde::de::MapAccess::next_value (145 samples, 3.34%)</title><rect x="67.1889%" y="837" width="3.3410%" height="15" fill="rgb(242,88,51)" fg:x="2916" fg:w="145"/><text x="67.4389%" y="847.50">ser..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (145 samples, 3.34%)</title><rect x="67.1889%" y="821" width="3.3410%" height="15" fill="rgb(230,91,28)" fg:x="2916" fg:w="145"/><text x="67.4389%" y="831.50">&lt;si..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (145 samples, 3.34%)</title><rect x="67.1889%" y="805" width="3.3410%" height="15" fill="rgb(254,186,29)" fg:x="2916" fg:w="145"/><text x="67.4389%" y="815.50">&lt;co..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (2 samples, 0.05%)</title><rect x="70.4839%" y="789" width="0.0461%" height="15" fill="rgb(238,6,4)" fg:x="3059" fg:w="2"/><text x="70.7339%" y="799.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_u32 (2 samples, 0.05%)</title><rect x="70.4839%" y="773" width="0.0461%" height="15" fill="rgb(221,151,16)" fg:x="3059" fg:w="2"/><text x="70.7339%" y="783.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="70.5069%" y="757" width="0.0230%" height="15" fill="rgb(251,143,52)" fg:x="3060" fg:w="1"/><text x="70.7569%" y="767.50"></text></g><g><title>value_trait::ValueAccess::as_u32 (1 samples, 0.02%)</title><rect x="70.5069%" y="741" width="0.0230%" height="15" fill="rgb(206,90,15)" fg:x="3060" fg:w="1"/><text x="70.7569%" y="751.50"></text></g><g><title>&lt;value_trait::node::StaticNode as value_trait::ValueAccess&gt;::as_u64 (1 samples, 0.02%)</title><rect x="70.5069%" y="725" width="0.0230%" height="15" fill="rgb(218,35,8)" fg:x="3060" fg:w="1"/><text x="70.7569%" y="735.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="70.5300%" y="661" width="0.0230%" height="15" fill="rgb(239,215,6)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="671.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="70.5300%" y="645" width="0.0230%" height="15" fill="rgb(245,116,39)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="655.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="70.5300%" y="629" width="0.0230%" height="15" fill="rgb(242,65,28)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="639.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="70.5300%" y="613" width="0.0230%" height="15" fill="rgb(252,132,53)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="623.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="70.5300%" y="597" width="0.0230%" height="15" fill="rgb(224,159,50)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="607.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="70.5300%" y="581" width="0.0230%" height="15" fill="rgb(224,93,4)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="591.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="70.5300%" y="565" width="0.0230%" height="15" fill="rgb(208,81,34)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="575.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="70.5300%" y="549" width="0.0230%" height="15" fill="rgb(233,92,54)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="559.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="70.5300%" y="533" width="0.0230%" height="15" fill="rgb(237,21,14)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="543.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="70.5300%" y="517" width="0.0230%" height="15" fill="rgb(249,128,51)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="527.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="70.5300%" y="501" width="0.0230%" height="15" fill="rgb(223,129,24)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="511.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="70.5300%" y="485" width="0.0230%" height="15" fill="rgb(231,168,25)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="495.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="70.5300%" y="469" width="0.0230%" height="15" fill="rgb(224,39,20)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="479.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="70.5300%" y="453" width="0.0230%" height="15" fill="rgb(225,152,53)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="463.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="70.5300%" y="437" width="0.0230%" height="15" fill="rgb(252,17,24)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="447.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="70.5300%" y="421" width="0.0230%" height="15" fill="rgb(250,114,30)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="431.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="70.5300%" y="405" width="0.0230%" height="15" fill="rgb(229,5,4)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="415.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="70.5300%" y="389" width="0.0230%" height="15" fill="rgb(225,176,49)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="399.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="70.5300%" y="373" width="0.0230%" height="15" fill="rgb(224,221,49)" fg:x="3061" fg:w="1"/><text x="70.7800%" y="383.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (279 samples, 6.43%)</title><rect x="64.1475%" y="1269" width="6.4286%" height="15" fill="rgb(253,169,27)" fg:x="2784" fg:w="279"/><text x="64.3975%" y="1279.50">json_ben..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (279 samples, 6.43%)</title><rect x="64.1475%" y="1253" width="6.4286%" height="15" fill="rgb(211,206,16)" fg:x="2784" fg:w="279"/><text x="64.3975%" y="1263.50">simd_jso..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (279 samples, 6.43%)</title><rect x="64.1475%" y="1237" width="6.4286%" height="15" fill="rgb(244,87,35)" fg:x="2784" fg:w="279"/><text x="64.3975%" y="1247.50">&lt;json_be..</text></g><g><title>serde::de::MapAccess::next_value (278 samples, 6.41%)</title><rect x="64.1705%" y="1221" width="6.4055%" height="15" fill="rgb(246,28,10)" fg:x="2785" fg:w="278"/><text x="64.4205%" y="1231.50">serde::d..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (278 samples, 6.41%)</title><rect x="64.1705%" y="1205" width="6.4055%" height="15" fill="rgb(229,12,44)" fg:x="2785" fg:w="278"/><text x="64.4205%" y="1215.50">&lt;simd_js..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (278 samples, 6.41%)</title><rect x="64.1705%" y="1189" width="6.4055%" height="15" fill="rgb(210,145,37)" fg:x="2785" fg:w="278"/><text x="64.4205%" y="1199.50">&lt;core::m..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (217 samples, 5.00%)</title><rect x="65.5760%" y="1173" width="5.0000%" height="15" fill="rgb(227,112,52)" fg:x="2846" fg:w="217"/><text x="65.8260%" y="1183.50">serde:..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (217 samples, 5.00%)</title><rect x="65.5760%" y="1157" width="5.0000%" height="15" fill="rgb(238,155,34)" fg:x="2846" fg:w="217"/><text x="65.8260%" y="1167.50">simd_j..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (217 samples, 5.00%)</title><rect x="65.5760%" y="1141" width="5.0000%" height="15" fill="rgb(239,226,36)" fg:x="2846" fg:w="217"/><text x="65.8260%" y="1151.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (214 samples, 4.93%)</title><rect x="65.6452%" y="1125" width="4.9309%" height="15" fill="rgb(230,16,23)" fg:x="2849" fg:w="214"/><text x="65.8952%" y="1135.50">serde:..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::SeqAccess&gt;::next_element_seed (214 samples, 4.93%)</title><rect x="65.6452%" y="1109" width="4.9309%" height="15" fill="rgb(236,171,36)" fg:x="2849" fg:w="214"/><text x="65.8952%" y="1119.50">&lt;simd_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (214 samples, 4.93%)</title><rect x="65.6452%" y="1093" width="4.9309%" height="15" fill="rgb(221,22,14)" fg:x="2849" fg:w="214"/><text x="65.8952%" y="1103.50">&lt;core:..</text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (214 samples, 4.93%)</title><rect x="65.6452%" y="1077" width="4.9309%" height="15" fill="rgb(242,43,11)" fg:x="2849" fg:w="214"/><text x="65.8952%" y="1087.50">json_b..</text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (214 samples, 4.93%)</title><rect x="65.6452%" y="1061" width="4.9309%" height="15" fill="rgb(232,69,23)" fg:x="2849" fg:w="214"/><text x="65.8952%" y="1071.50">simd_j..</text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (213 samples, 4.91%)</title><rect x="65.6682%" y="1045" width="4.9078%" height="15" fill="rgb(216,180,54)" fg:x="2850" fg:w="213"/><text x="65.9182%" y="1055.50">&lt;json_..</text></g><g><title>serde::de::MapAccess::next_value (204 samples, 4.70%)</title><rect x="65.8756%" y="1029" width="4.7005%" height="15" fill="rgb(216,5,24)" fg:x="2859" fg:w="204"/><text x="66.1256%" y="1039.50">serde..</text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (204 samples, 4.70%)</title><rect x="65.8756%" y="1013" width="4.7005%" height="15" fill="rgb(225,89,9)" fg:x="2859" fg:w="204"/><text x="66.1256%" y="1023.50">&lt;simd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (204 samples, 4.70%)</title><rect x="65.8756%" y="997" width="4.7005%" height="15" fill="rgb(243,75,33)" fg:x="2859" fg:w="204"/><text x="66.1256%" y="1007.50">&lt;core..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (2 samples, 0.05%)</title><rect x="70.5300%" y="981" width="0.0461%" height="15" fill="rgb(247,141,45)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="991.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_option (2 samples, 0.05%)</title><rect x="70.5300%" y="965" width="0.0461%" height="15" fill="rgb(232,177,36)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="975.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (2 samples, 0.05%)</title><rect x="70.5300%" y="949" width="0.0461%" height="15" fill="rgb(219,125,36)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="959.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2 samples, 0.05%)</title><rect x="70.5300%" y="933" width="0.0461%" height="15" fill="rgb(227,94,9)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="943.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_string (2 samples, 0.05%)</title><rect x="70.5300%" y="917" width="0.0461%" height="15" fill="rgb(240,34,52)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="927.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.05%)</title><rect x="70.5300%" y="901" width="0.0461%" height="15" fill="rgb(216,45,12)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="911.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.05%)</title><rect x="70.5300%" y="885" width="0.0461%" height="15" fill="rgb(246,21,19)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.05%)</title><rect x="70.5300%" y="869" width="0.0461%" height="15" fill="rgb(213,98,42)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.05%)</title><rect x="70.5300%" y="853" width="0.0461%" height="15" fill="rgb(250,136,47)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.05%)</title><rect x="70.5300%" y="837" width="0.0461%" height="15" fill="rgb(251,124,27)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.05%)</title><rect x="70.5300%" y="821" width="0.0461%" height="15" fill="rgb(229,180,14)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.05%)</title><rect x="70.5300%" y="805" width="0.0461%" height="15" fill="rgb(245,216,25)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="815.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="70.5300%" y="789" width="0.0461%" height="15" fill="rgb(251,43,5)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="799.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="70.5300%" y="773" width="0.0461%" height="15" fill="rgb(250,128,24)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="783.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="70.5300%" y="757" width="0.0461%" height="15" fill="rgb(217,117,27)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.05%)</title><rect x="70.5300%" y="741" width="0.0461%" height="15" fill="rgb(245,147,4)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="751.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="70.5300%" y="725" width="0.0461%" height="15" fill="rgb(242,201,35)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="735.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.05%)</title><rect x="70.5300%" y="709" width="0.0461%" height="15" fill="rgb(218,181,1)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="719.50"></text></g><g><title>__rust_alloc (2 samples, 0.05%)</title><rect x="70.5300%" y="693" width="0.0461%" height="15" fill="rgb(222,6,29)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="703.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.05%)</title><rect x="70.5300%" y="677" width="0.0461%" height="15" fill="rgb(208,186,3)" fg:x="3061" fg:w="2"/><text x="70.7800%" y="687.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="70.5530%" y="661" width="0.0230%" height="15" fill="rgb(216,36,26)" fg:x="3062" fg:w="1"/><text x="70.8030%" y="671.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="70.5530%" y="645" width="0.0230%" height="15" fill="rgb(248,201,23)" fg:x="3062" fg:w="1"/><text x="70.8030%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (8 samples, 0.18%)</title><rect x="70.7834%" y="1173" width="0.1843%" height="15" fill="rgb(251,170,31)" fg:x="3072" fg:w="8"/><text x="71.0334%" y="1183.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (4 samples, 0.09%)</title><rect x="70.9677%" y="1173" width="0.0922%" height="15" fill="rgb(207,110,25)" fg:x="3080" fg:w="4"/><text x="71.2177%" y="1183.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (8 samples, 0.18%)</title><rect x="71.0599%" y="1173" width="0.1843%" height="15" fill="rgb(250,54,15)" fg:x="3084" fg:w="8"/><text x="71.3099%" y="1183.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInputAVX as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::find_whitespace_and_structurals (35 samples, 0.81%)</title><rect x="70.5760%" y="1189" width="0.8065%" height="15" fill="rgb(227,68,33)" fg:x="3063" fg:w="35"/><text x="70.8260%" y="1199.50"></text></g><g><title>simd_json::Deserializer::from_slice (6 samples, 0.14%)</title><rect x="71.2442%" y="1173" width="0.1382%" height="15" fill="rgb(238,34,41)" fg:x="3092" fg:w="6"/><text x="71.4942%" y="1183.50"></text></g><g><title>?? (7 samples, 0.16%)</title><rect x="72.4194%" y="1141" width="0.1613%" height="15" fill="rgb(220,11,15)" fg:x="3143" fg:w="7"/><text x="72.6694%" y="1151.50"></text></g><g><title>simd_json::Deserializer::from_slice (7 samples, 0.16%)</title><rect x="72.4194%" y="1125" width="0.1613%" height="15" fill="rgb(246,111,35)" fg:x="3143" fg:w="7"/><text x="72.6694%" y="1135.50"></text></g><g><title>?? (9 samples, 0.21%)</title><rect x="72.4194%" y="1173" width="0.2074%" height="15" fill="rgb(209,88,53)" fg:x="3143" fg:w="9"/><text x="72.6694%" y="1183.50"></text></g><g><title>?? (9 samples, 0.21%)</title><rect x="72.4194%" y="1157" width="0.2074%" height="15" fill="rgb(231,185,47)" fg:x="3143" fg:w="9"/><text x="72.6694%" y="1167.50"></text></g><g><title>simd_json::Deserializer::from_slice (2 samples, 0.05%)</title><rect x="72.5806%" y="1141" width="0.0461%" height="15" fill="rgb(233,154,1)" fg:x="3150" fg:w="2"/><text x="72.8306%" y="1151.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="72.6267%" y="1173" width="0.0461%" height="15" fill="rgb(225,15,46)" fg:x="3152" fg:w="2"/><text x="72.8767%" y="1183.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (13 samples, 0.30%)</title><rect x="72.6728%" y="1173" width="0.2995%" height="15" fill="rgb(211,135,41)" fg:x="3154" fg:w="13"/><text x="72.9228%" y="1183.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (13 samples, 0.30%)</title><rect x="72.6728%" y="1157" width="0.2995%" height="15" fill="rgb(208,54,0)" fg:x="3154" fg:w="13"/><text x="72.9228%" y="1167.50"></text></g><g><title>simd_json::Deserializer::from_slice (13 samples, 0.30%)</title><rect x="72.6728%" y="1141" width="0.2995%" height="15" fill="rgb(244,136,14)" fg:x="3154" fg:w="13"/><text x="72.9228%" y="1151.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_si256 (14 samples, 0.32%)</title><rect x="72.9724%" y="1173" width="0.3226%" height="15" fill="rgb(241,56,14)" fg:x="3167" fg:w="14"/><text x="73.2224%" y="1183.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInputAVX as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::flatten_bits (123 samples, 2.83%)</title><rect x="71.3825%" y="1189" width="2.8341%" height="15" fill="rgb(205,80,24)" fg:x="3098" fg:w="123"/><text x="71.6325%" y="1199.50">&lt;s..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (40 samples, 0.92%)</title><rect x="73.2949%" y="1173" width="0.9217%" height="15" fill="rgb(220,57,4)" fg:x="3181" fg:w="40"/><text x="73.5449%" y="1183.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (2 samples, 0.05%)</title><rect x="74.2166%" y="1125" width="0.0461%" height="15" fill="rgb(226,193,50)" fg:x="3221" fg:w="2"/><text x="74.4666%" y="1135.50"></text></g><g><title>?? (5 samples, 0.12%)</title><rect x="74.2166%" y="1141" width="0.1152%" height="15" fill="rgb(231,168,22)" fg:x="3221" fg:w="5"/><text x="74.4666%" y="1151.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (3 samples, 0.07%)</title><rect x="74.2627%" y="1125" width="0.0691%" height="15" fill="rgb(254,215,14)" fg:x="3223" fg:w="3"/><text x="74.5127%" y="1135.50"></text></g><g><title>&lt;simdutf8::implementation::x86::avx2::ChunkedUtf8ValidatorImp as simdutf8::basic::imp::ChunkedUtf8Validator&gt;::update_from_chunks (18 samples, 0.41%)</title><rect x="74.2166%" y="1189" width="0.4147%" height="15" fill="rgb(211,115,16)" fg:x="3221" fg:w="18"/><text x="74.4666%" y="1199.50"></text></g><g><title>?? (18 samples, 0.41%)</title><rect x="74.2166%" y="1173" width="0.4147%" height="15" fill="rgb(236,210,16)" fg:x="3221" fg:w="18"/><text x="74.4666%" y="1183.50"></text></g><g><title>?? (18 samples, 0.41%)</title><rect x="74.2166%" y="1157" width="0.4147%" height="15" fill="rgb(221,94,12)" fg:x="3221" fg:w="18"/><text x="74.4666%" y="1167.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (13 samples, 0.30%)</title><rect x="74.3318%" y="1141" width="0.2995%" height="15" fill="rgb(235,218,49)" fg:x="3226" fg:w="13"/><text x="74.5818%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.30%)</title><rect x="74.3318%" y="1125" width="0.2995%" height="15" fill="rgb(217,114,14)" fg:x="3226" fg:w="13"/><text x="74.5818%" y="1135.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="74.6313%" y="1045" width="0.0230%" height="15" fill="rgb(216,145,22)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="1055.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="74.6313%" y="1029" width="0.0230%" height="15" fill="rgb(217,112,39)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="1039.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="74.6313%" y="1013" width="0.0230%" height="15" fill="rgb(225,85,32)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="1023.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.02%)</title><rect x="74.6313%" y="997" width="0.0230%" height="15" fill="rgb(245,209,47)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="1007.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.02%)</title><rect x="74.6313%" y="981" width="0.0230%" height="15" fill="rgb(218,220,15)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="991.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="74.6313%" y="965" width="0.0230%" height="15" fill="rgb(222,202,31)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="975.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="74.6313%" y="949" width="0.0230%" height="15" fill="rgb(243,203,4)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="959.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="74.6313%" y="933" width="0.0230%" height="15" fill="rgb(237,92,17)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="943.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="74.6313%" y="917" width="0.0230%" height="15" fill="rgb(231,119,7)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="927.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="74.6313%" y="901" width="0.0230%" height="15" fill="rgb(237,82,41)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="911.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="74.6313%" y="885" width="0.0230%" height="15" fill="rgb(226,81,48)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="895.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="74.6313%" y="869" width="0.0230%" height="15" fill="rgb(234,70,51)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="879.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="74.6313%" y="853" width="0.0230%" height="15" fill="rgb(251,86,4)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="863.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="74.6313%" y="837" width="0.0230%" height="15" fill="rgb(244,144,28)" fg:x="3239" fg:w="1"/><text x="74.8813%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.05%)</title><rect x="74.6313%" y="1173" width="0.0461%" height="15" fill="rgb(232,161,39)" fg:x="3239" fg:w="2"/><text x="74.8813%" y="1183.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="74.6313%" y="1157" width="0.0461%" height="15" fill="rgb(247,34,51)" fg:x="3239" fg:w="2"/><text x="74.8813%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.05%)</title><rect x="74.6313%" y="1141" width="0.0461%" height="15" fill="rgb(225,132,2)" fg:x="3239" fg:w="2"/><text x="74.8813%" y="1151.50"></text></g><g><title>__rust_alloc (2 samples, 0.05%)</title><rect x="74.6313%" y="1125" width="0.0461%" height="15" fill="rgb(209,159,44)" fg:x="3239" fg:w="2"/><text x="74.8813%" y="1135.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.05%)</title><rect x="74.6313%" y="1109" width="0.0461%" height="15" fill="rgb(251,214,1)" fg:x="3239" fg:w="2"/><text x="74.8813%" y="1119.50"></text></g><g><title>_rjem_je_malloc_default (2 samples, 0.05%)</title><rect x="74.6313%" y="1093" width="0.0461%" height="15" fill="rgb(247,84,47)" fg:x="3239" fg:w="2"/><text x="74.8813%" y="1103.50"></text></g><g><title>imalloc (2 samples, 0.05%)</title><rect x="74.6313%" y="1077" width="0.0461%" height="15" fill="rgb(240,111,43)" fg:x="3239" fg:w="2"/><text x="74.8813%" y="1087.50"></text></g><g><title>imalloc_body (2 samples, 0.05%)</title><rect x="74.6313%" y="1061" width="0.0461%" height="15" fill="rgb(215,214,35)" fg:x="3239" fg:w="2"/><text x="74.8813%" y="1071.50"></text></g><g><title>thread_alloc_event (1 samples, 0.02%)</title><rect x="74.6544%" y="1045" width="0.0230%" height="15" fill="rgb(248,207,23)" fg:x="3240" fg:w="1"/><text x="74.9044%" y="1055.50"></text></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect x="74.6544%" y="1029" width="0.0230%" height="15" fill="rgb(214,186,4)" fg:x="3240" fg:w="1"/><text x="74.9044%" y="1039.50"></text></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.02%)</title><rect x="74.6544%" y="1013" width="0.0230%" height="15" fill="rgb(220,133,22)" fg:x="3240" fg:w="1"/><text x="74.9044%" y="1023.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="74.6544%" y="997" width="0.0230%" height="15" fill="rgb(239,134,19)" fg:x="3240" fg:w="1"/><text x="74.9044%" y="1007.50"></text></g><g><title>tcache_gc_large (1 samples, 0.02%)</title><rect x="74.6544%" y="981" width="0.0230%" height="15" fill="rgb(250,140,9)" fg:x="3240" fg:w="1"/><text x="74.9044%" y="991.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (1 samples, 0.02%)</title><rect x="74.6544%" y="965" width="0.0230%" height="15" fill="rgb(225,59,14)" fg:x="3240" fg:w="1"/><text x="74.9044%" y="975.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="74.6544%" y="949" width="0.0230%" height="15" fill="rgb(214,152,51)" fg:x="3240" fg:w="1"/><text x="74.9044%" y="959.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="74.6544%" y="933" width="0.0230%" height="15" fill="rgb(251,227,43)" fg:x="3240" fg:w="1"/><text x="74.9044%" y="943.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="74.6544%" y="917" width="0.0230%" height="15" fill="rgb(241,96,17)" fg:x="3240" fg:w="1"/><text x="74.9044%" y="927.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="74.6544%" y="901" width="0.0230%" height="15" fill="rgb(234,198,43)" fg:x="3240" fg:w="1"/><text x="74.9044%" y="911.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="74.6544%" y="885" width="0.0230%" height="15" fill="rgb(220,108,29)" fg:x="3240" fg:w="1"/><text x="74.9044%" y="895.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect x="74.6544%" y="869" width="0.0230%" height="15" fill="rgb(226,163,33)" fg:x="3240" fg:w="1"/><text x="74.9044%" y="879.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="74.6774%" y="1173" width="0.0230%" height="15" fill="rgb(205,194,45)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="74.6774%" y="1157" width="0.0230%" height="15" fill="rgb(206,143,44)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="1167.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="74.6774%" y="1141" width="0.0230%" height="15" fill="rgb(236,136,36)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="74.6774%" y="1125" width="0.0230%" height="15" fill="rgb(249,172,42)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="1135.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.02%)</title><rect x="74.6774%" y="1109" width="0.0230%" height="15" fill="rgb(216,139,23)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="1119.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="74.6774%" y="1093" width="0.0230%" height="15" fill="rgb(207,166,20)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="1103.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="74.6774%" y="1077" width="0.0230%" height="15" fill="rgb(210,209,22)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="1087.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="74.6774%" y="1061" width="0.0230%" height="15" fill="rgb(232,118,20)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="1071.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="74.6774%" y="1045" width="0.0230%" height="15" fill="rgb(238,113,42)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="1055.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="74.6774%" y="1029" width="0.0230%" height="15" fill="rgb(231,42,5)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="1039.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.02%)</title><rect x="74.6774%" y="1013" width="0.0230%" height="15" fill="rgb(243,166,24)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="1023.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.02%)</title><rect x="74.6774%" y="997" width="0.0230%" height="15" fill="rgb(237,226,12)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="1007.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="74.6774%" y="981" width="0.0230%" height="15" fill="rgb(229,133,24)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="991.50"></text></g><g><title>sz_size2index_compute (1 samples, 0.02%)</title><rect x="74.6774%" y="965" width="0.0230%" height="15" fill="rgb(238,33,43)" fg:x="3241" fg:w="1"/><text x="74.9274%" y="975.50"></text></g><g><title>_rjem_je_arena_malloc_hard (1 samples, 0.02%)</title><rect x="74.7005%" y="1013" width="0.0230%" height="15" fill="rgb(227,59,38)" fg:x="3242" fg:w="1"/><text x="74.9505%" y="1023.50"></text></g><g><title>?? (5 samples, 0.12%)</title><rect x="74.6313%" y="1189" width="0.1152%" height="15" fill="rgb(230,97,0)" fg:x="3239" fg:w="5"/><text x="74.8813%" y="1199.50"></text></g><g><title>simd_json::Deserializer::from_slice (2 samples, 0.05%)</title><rect x="74.7005%" y="1173" width="0.0461%" height="15" fill="rgb(250,173,50)" fg:x="3242" fg:w="2"/><text x="74.9505%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="74.7005%" y="1157" width="0.0461%" height="15" fill="rgb(240,15,50)" fg:x="3242" fg:w="2"/><text x="74.9505%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="74.7005%" y="1141" width="0.0461%" height="15" fill="rgb(221,93,22)" fg:x="3242" fg:w="2"/><text x="74.9505%" y="1151.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="74.7005%" y="1125" width="0.0461%" height="15" fill="rgb(245,180,53)" fg:x="3242" fg:w="2"/><text x="74.9505%" y="1135.50"></text></g><g><title>_rjem_je_malloc_default (2 samples, 0.05%)</title><rect x="74.7005%" y="1109" width="0.0461%" height="15" fill="rgb(231,88,51)" fg:x="3242" fg:w="2"/><text x="74.9505%" y="1119.50"></text></g><g><title>imalloc (2 samples, 0.05%)</title><rect x="74.7005%" y="1093" width="0.0461%" height="15" fill="rgb(240,58,21)" fg:x="3242" fg:w="2"/><text x="74.9505%" y="1103.50"></text></g><g><title>imalloc_body (2 samples, 0.05%)</title><rect x="74.7005%" y="1077" width="0.0461%" height="15" fill="rgb(237,21,10)" fg:x="3242" fg:w="2"/><text x="74.9505%" y="1087.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.05%)</title><rect x="74.7005%" y="1061" width="0.0461%" height="15" fill="rgb(218,43,11)" fg:x="3242" fg:w="2"/><text x="74.9505%" y="1071.50"></text></g><g><title>iallocztm (2 samples, 0.05%)</title><rect x="74.7005%" y="1045" width="0.0461%" height="15" fill="rgb(218,221,29)" fg:x="3242" fg:w="2"/><text x="74.9505%" y="1055.50"></text></g><g><title>arena_malloc (2 samples, 0.05%)</title><rect x="74.7005%" y="1029" width="0.0461%" height="15" fill="rgb(214,118,42)" fg:x="3242" fg:w="2"/><text x="74.9505%" y="1039.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.02%)</title><rect x="74.7235%" y="1013" width="0.0230%" height="15" fill="rgb(251,200,26)" fg:x="3243" fg:w="1"/><text x="74.9735%" y="1023.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.02%)</title><rect x="74.7235%" y="997" width="0.0230%" height="15" fill="rgb(237,101,39)" fg:x="3243" fg:w="1"/><text x="74.9735%" y="1007.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="74.7235%" y="981" width="0.0230%" height="15" fill="rgb(251,117,11)" fg:x="3243" fg:w="1"/><text x="74.9735%" y="991.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="74.7235%" y="965" width="0.0230%" height="15" fill="rgb(216,223,23)" fg:x="3243" fg:w="1"/><text x="74.9735%" y="975.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="74.7235%" y="949" width="0.0230%" height="15" fill="rgb(251,54,12)" fg:x="3243" fg:w="1"/><text x="74.9735%" y="959.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="74.7235%" y="933" width="0.0230%" height="15" fill="rgb(254,176,54)" fg:x="3243" fg:w="1"/><text x="74.9735%" y="943.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="74.7235%" y="917" width="0.0230%" height="15" fill="rgb(210,32,8)" fg:x="3243" fg:w="1"/><text x="74.9735%" y="927.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="74.7235%" y="901" width="0.0230%" height="15" fill="rgb(235,52,38)" fg:x="3243" fg:w="1"/><text x="74.9735%" y="911.50"></text></g><g><title>extent_recycle_split (1 samples, 0.02%)</title><rect x="74.7235%" y="885" width="0.0230%" height="15" fill="rgb(231,4,44)" fg:x="3243" fg:w="1"/><text x="74.9735%" y="895.50"></text></g><g><title>extent_split_interior (1 samples, 0.02%)</title><rect x="74.7235%" y="869" width="0.0230%" height="15" fill="rgb(249,2,32)" fg:x="3243" fg:w="1"/><text x="74.9735%" y="879.50"></text></g><g><title>extent_split_impl (1 samples, 0.02%)</title><rect x="74.7235%" y="853" width="0.0230%" height="15" fill="rgb(224,65,26)" fg:x="3243" fg:w="1"/><text x="74.9735%" y="863.50"></text></g><g><title>_rjem_je_edata_cache_get (1 samples, 0.02%)</title><rect x="74.7235%" y="837" width="0.0230%" height="15" fill="rgb(250,73,40)" fg:x="3243" fg:w="1"/><text x="74.9735%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from (1 samples, 0.02%)</title><rect x="74.7465%" y="1189" width="0.0230%" height="15" fill="rgb(253,177,16)" fg:x="3244" fg:w="1"/><text x="74.9965%" y="1199.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.02%)</title><rect x="74.7465%" y="1173" width="0.0230%" height="15" fill="rgb(217,32,34)" fg:x="3244" fg:w="1"/><text x="74.9965%" y="1183.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="74.7465%" y="1157" width="0.0230%" height="15" fill="rgb(212,7,10)" fg:x="3244" fg:w="1"/><text x="74.9965%" y="1167.50"></text></g><g><title>simd_json::Deserializer::from_slice (13 samples, 0.30%)</title><rect x="74.7696%" y="1189" width="0.2995%" height="15" fill="rgb(245,89,8)" fg:x="3245" fg:w="13"/><text x="75.0196%" y="1199.50"></text></g><g><title>simd_json::Stage1Parse::finalize_structurals (16 samples, 0.37%)</title><rect x="75.0691%" y="1189" width="0.3687%" height="15" fill="rgb(237,16,53)" fg:x="3258" fg:w="16"/><text x="75.3191%" y="1199.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInputAVX as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::cmp_mask_against_input (4 samples, 0.09%)</title><rect x="75.4608%" y="1173" width="0.0922%" height="15" fill="rgb(250,204,30)" fg:x="3275" fg:w="4"/><text x="75.7108%" y="1183.50"></text></g><g><title>?? (225 samples, 5.18%)</title><rect x="70.5760%" y="1205" width="5.1843%" height="15" fill="rgb(208,77,27)" fg:x="3063" fg:w="225"/><text x="70.8260%" y="1215.50">??</text></g><g><title>simd_json::Stage1Parse::find_odd_backslash_sequences (14 samples, 0.32%)</title><rect x="75.4378%" y="1189" width="0.3226%" height="15" fill="rgb(250,204,28)" fg:x="3274" fg:w="14"/><text x="75.6878%" y="1199.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (9 samples, 0.21%)</title><rect x="75.5530%" y="1173" width="0.2074%" height="15" fill="rgb(244,63,21)" fg:x="3279" fg:w="9"/><text x="75.8030%" y="1183.50"></text></g><g><title>?? (321 samples, 7.40%)</title><rect x="70.5760%" y="1221" width="7.3963%" height="15" fill="rgb(236,85,44)" fg:x="3063" fg:w="321"/><text x="70.8260%" y="1231.50">??</text></g><g><title>simd_json::Deserializer::from_slice (96 samples, 2.21%)</title><rect x="75.7604%" y="1205" width="2.2120%" height="15" fill="rgb(215,98,4)" fg:x="3288" fg:w="96"/><text x="76.0104%" y="1215.50">s..</text></g><g><title>_rjem_je_pa_dalloc (1 samples, 0.02%)</title><rect x="77.9954%" y="1061" width="0.0230%" height="15" fill="rgb(235,38,11)" fg:x="3385" fg:w="1"/><text x="78.2454%" y="1071.50"></text></g><g><title>pa_get_pai (1 samples, 0.02%)</title><rect x="77.9954%" y="1045" width="0.0230%" height="15" fill="rgb(254,186,25)" fg:x="3385" fg:w="1"/><text x="78.2454%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(simd_json::stage2::StackState,usize,usize)&gt;&gt; (3 samples, 0.07%)</title><rect x="77.9724%" y="1221" width="0.0691%" height="15" fill="rgb(225,55,31)" fg:x="3384" fg:w="3"/><text x="78.2224%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(simd_json::stage2::StackState,usize,usize)&gt;&gt; (3 samples, 0.07%)</title><rect x="77.9724%" y="1205" width="0.0691%" height="15" fill="rgb(211,15,21)" fg:x="3384" fg:w="3"/><text x="78.2224%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="77.9724%" y="1189" width="0.0691%" height="15" fill="rgb(215,187,41)" fg:x="3384" fg:w="3"/><text x="78.2224%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="77.9724%" y="1173" width="0.0691%" height="15" fill="rgb(248,69,32)" fg:x="3384" fg:w="3"/><text x="78.2224%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="77.9724%" y="1157" width="0.0691%" height="15" fill="rgb(252,102,52)" fg:x="3384" fg:w="3"/><text x="78.2224%" y="1167.50"></text></g><g><title>__rust_dealloc (3 samples, 0.07%)</title><rect x="77.9724%" y="1141" width="0.0691%" height="15" fill="rgb(253,140,32)" fg:x="3384" fg:w="3"/><text x="78.2224%" y="1151.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.07%)</title><rect x="77.9724%" y="1125" width="0.0691%" height="15" fill="rgb(216,56,42)" fg:x="3384" fg:w="3"/><text x="78.2224%" y="1135.50"></text></g><g><title>_rjem_je_sdallocx_default (3 samples, 0.07%)</title><rect x="77.9724%" y="1109" width="0.0691%" height="15" fill="rgb(216,184,14)" fg:x="3384" fg:w="3"/><text x="78.2224%" y="1119.50"></text></g><g><title>_rjem_je_large_dalloc (2 samples, 0.05%)</title><rect x="77.9954%" y="1093" width="0.0461%" height="15" fill="rgb(237,187,27)" fg:x="3385" fg:w="2"/><text x="78.2454%" y="1103.50"></text></g><g><title>large_dalloc_finish_impl (2 samples, 0.05%)</title><rect x="77.9954%" y="1077" width="0.0461%" height="15" fill="rgb(219,65,3)" fg:x="3385" fg:w="2"/><text x="78.2454%" y="1087.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="78.0184%" y="1061" width="0.0230%" height="15" fill="rgb(245,83,25)" fg:x="3386" fg:w="1"/><text x="78.2684%" y="1071.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="78.0184%" y="1045" width="0.0230%" height="15" fill="rgb(214,205,45)" fg:x="3386" fg:w="1"/><text x="78.2684%" y="1055.50"></text></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect x="78.0184%" y="1029" width="0.0230%" height="15" fill="rgb(241,20,18)" fg:x="3386" fg:w="1"/><text x="78.2684%" y="1039.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect x="78.0184%" y="1013" width="0.0230%" height="15" fill="rgb(232,163,23)" fg:x="3386" fg:w="1"/><text x="78.2684%" y="1023.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (1 samples, 0.02%)</title><rect x="78.0184%" y="997" width="0.0230%" height="15" fill="rgb(214,5,46)" fg:x="3386" fg:w="1"/><text x="78.2684%" y="1007.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (1 samples, 0.02%)</title><rect x="78.0184%" y="981" width="0.0230%" height="15" fill="rgb(229,78,17)" fg:x="3386" fg:w="1"/><text x="78.2684%" y="991.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="78.0184%" y="965" width="0.0230%" height="15" fill="rgb(248,89,10)" fg:x="3386" fg:w="1"/><text x="78.2684%" y="975.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="78.0184%" y="949" width="0.0230%" height="15" fill="rgb(248,54,15)" fg:x="3386" fg:w="1"/><text x="78.2684%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.18%)</title><rect x="78.0415%" y="1221" width="0.1843%" height="15" fill="rgb(223,116,6)" fg:x="3387" fg:w="8"/><text x="78.2915%" y="1231.50"></text></g><g><title>core::ptr::write (51 samples, 1.18%)</title><rect x="78.2258%" y="1205" width="1.1751%" height="15" fill="rgb(205,125,38)" fg:x="3395" fg:w="51"/><text x="78.4758%" y="1215.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (52 samples, 1.20%)</title><rect x="78.2258%" y="1221" width="1.1982%" height="15" fill="rgb(251,78,38)" fg:x="3395" fg:w="52"/><text x="78.4758%" y="1231.50"></text></g><g><title>simd_json::Deserializer::from_slice (1 samples, 0.02%)</title><rect x="79.4009%" y="1205" width="0.0230%" height="15" fill="rgb(253,78,28)" fg:x="3446" fg:w="1"/><text x="79.6509%" y="1215.50"></text></g><g><title>simd_json::Deserializer::from_slice (1 samples, 0.02%)</title><rect x="79.4240%" y="1221" width="0.0230%" height="15" fill="rgb(209,120,3)" fg:x="3447" fg:w="1"/><text x="79.6740%" y="1231.50"></text></g><g><title>?? (386 samples, 8.89%)</title><rect x="70.5760%" y="1237" width="8.8940%" height="15" fill="rgb(238,229,9)" fg:x="3063" fg:w="386"/><text x="70.8260%" y="1247.50">??</text></g><g><title>simd_json::stage2::is_valid_null_atom (1 samples, 0.02%)</title><rect x="79.4470%" y="1221" width="0.0230%" height="15" fill="rgb(253,159,18)" fg:x="3448" fg:w="1"/><text x="79.6970%" y="1231.50"></text></g><g><title>simd_json::Deserializer::from_slice (1 samples, 0.02%)</title><rect x="79.4470%" y="1205" width="0.0230%" height="15" fill="rgb(244,42,34)" fg:x="3448" fg:w="1"/><text x="79.6970%" y="1215.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (180 samples, 4.15%)</title><rect x="79.4700%" y="1237" width="4.1475%" height="15" fill="rgb(224,8,7)" fg:x="3449" fg:w="180"/><text x="79.7200%" y="1247.50">core:..</text></g><g><title>__memmove_avx_unaligned_erms (180 samples, 4.15%)</title><rect x="79.4700%" y="1221" width="4.1475%" height="15" fill="rgb(210,201,45)" fg:x="3449" fg:w="180"/><text x="79.7200%" y="1231.50">__mem..</text></g><g><title>simd_json::Deserializer::parse_str_ (8 samples, 0.18%)</title><rect x="89.2627%" y="1205" width="0.1843%" height="15" fill="rgb(252,185,21)" fg:x="3874" fg:w="8"/><text x="89.5127%" y="1215.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (23 samples, 0.53%)</title><rect x="89.6083%" y="1189" width="0.5300%" height="15" fill="rgb(223,131,1)" fg:x="3889" fg:w="23"/><text x="89.8583%" y="1199.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (7 samples, 0.16%)</title><rect x="90.1382%" y="1189" width="0.1613%" height="15" fill="rgb(245,141,16)" fg:x="3912" fg:w="7"/><text x="90.3882%" y="1199.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="90.2995%" y="1189" width="0.0230%" height="15" fill="rgb(229,55,45)" fg:x="3919" fg:w="1"/><text x="90.5495%" y="1199.50"></text></g><g><title>simd_json::Deserializer::parse_str_ (82 samples, 1.89%)</title><rect x="88.6406%" y="1221" width="1.8894%" height="15" fill="rgb(208,92,15)" fg:x="3847" fg:w="82"/><text x="88.8906%" y="1231.50">s..</text></g><g><title>simd_json::avx2::deser::parse_str_avx (47 samples, 1.08%)</title><rect x="89.4470%" y="1205" width="1.0829%" height="15" fill="rgb(234,185,47)" fg:x="3882" fg:w="47"/><text x="89.6970%" y="1215.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9 samples, 0.21%)</title><rect x="90.3226%" y="1189" width="0.2074%" height="15" fill="rgb(253,104,50)" fg:x="3920" fg:w="9"/><text x="90.5726%" y="1199.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for u64&gt;::from (26 samples, 0.60%)</title><rect x="91.8433%" y="1205" width="0.5991%" height="15" fill="rgb(205,70,7)" fg:x="3986" fg:w="26"/><text x="92.0933%" y="1215.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="92.4424%" y="1205" width="0.0230%" height="15" fill="rgb(240,178,43)" fg:x="4012" fg:w="1"/><text x="92.6924%" y="1215.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (3 samples, 0.07%)</title><rect x="92.4654%" y="1205" width="0.0691%" height="15" fill="rgb(214,112,2)" fg:x="4013" fg:w="3"/><text x="92.7154%" y="1215.50"></text></g><g><title>?? (969 samples, 22.33%)</title><rect x="70.5760%" y="1253" width="22.3272%" height="15" fill="rgb(206,46,17)" fg:x="3063" fg:w="969"/><text x="70.8260%" y="1263.50">??</text></g><g><title>simd_json::Deserializer::from_slice (403 samples, 9.29%)</title><rect x="83.6175%" y="1237" width="9.2857%" height="15" fill="rgb(225,220,16)" fg:x="3629" fg:w="403"/><text x="83.8675%" y="1247.50">simd_json::De..</text></g><g><title>simd_json::numberparse::correct::&lt;impl simd_json::Deserializer&gt;::parse_number (103 samples, 2.37%)</title><rect x="90.5300%" y="1221" width="2.3733%" height="15" fill="rgb(238,65,40)" fg:x="3929" fg:w="103"/><text x="90.7800%" y="1231.50">si..</text></g><g><title>simd_json::numberparse::is_integer (16 samples, 0.37%)</title><rect x="92.5346%" y="1205" width="0.3687%" height="15" fill="rgb(230,151,21)" fg:x="4016" fg:w="16"/><text x="92.7846%" y="1215.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (16 samples, 0.37%)</title><rect x="92.5346%" y="1189" width="0.3687%" height="15" fill="rgb(218,58,49)" fg:x="4016" fg:w="16"/><text x="92.7846%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,257 samples, 28.96%)</title><rect x="63.9631%" y="1445" width="28.9631%" height="15" fill="rgb(219,179,14)" fg:x="2776" fg:w="1257"/><text x="64.2131%" y="1455.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,257 samples, 28.96%)</title><rect x="63.9631%" y="1429" width="28.9631%" height="15" fill="rgb(223,72,1)" fg:x="2776" fg:w="1257"/><text x="64.2131%" y="1439.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_exten..</text></g><g><title>?? (1,257 samples, 28.96%)</title><rect x="63.9631%" y="1413" width="28.9631%" height="15" fill="rgb(238,126,10)" fg:x="2776" fg:w="1257"/><text x="64.2131%" y="1423.50">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,257 samples, 28.96%)</title><rect x="63.9631%" y="1397" width="28.9631%" height="15" fill="rgb(224,206,38)" fg:x="2776" fg:w="1257"/><text x="64.2131%" y="1407.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,257 samples, 28.96%)</title><rect x="63.9631%" y="1381" width="28.9631%" height="15" fill="rgb(212,201,54)" fg:x="2776" fg:w="1257"/><text x="64.2131%" y="1391.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,257 samples, 28.96%)</title><rect x="63.9631%" y="1365" width="28.9631%" height="15" fill="rgb(218,154,48)" fg:x="2776" fg:w="1257"/><text x="64.2131%" y="1375.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,257 samples, 28.96%)</title><rect x="63.9631%" y="1349" width="28.9631%" height="15" fill="rgb(232,93,24)" fg:x="2776" fg:w="1257"/><text x="64.2131%" y="1359.50">core::iter::adapters::map::map_fold::_{{closure..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,257 samples, 28.96%)</title><rect x="63.9631%" y="1333" width="28.9631%" height="15" fill="rgb(245,30,21)" fg:x="2776" fg:w="1257"/><text x="64.2131%" y="1343.50">core::ops::function::impls::&lt;impl core::ops::fu..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (1,257 samples, 28.96%)</title><rect x="63.9631%" y="1317" width="28.9631%" height="15" fill="rgb(242,148,29)" fg:x="2776" fg:w="1257"/><text x="64.2131%" y="1327.50">deserialize_struct::bench_citm_catalog_CitmCata..</text></g><g><title>deserialize_struct::simd_json_parse_struct (1,252 samples, 28.85%)</title><rect x="64.0783%" y="1301" width="28.8479%" height="15" fill="rgb(244,153,54)" fg:x="2781" fg:w="1252"/><text x="64.3283%" y="1311.50">deserialize_struct::simd_json_parse_struct</text></g><g><title>simd_json::serde::from_slice (1,252 samples, 28.85%)</title><rect x="64.0783%" y="1285" width="28.8479%" height="15" fill="rgb(252,87,22)" fg:x="2781" fg:w="1252"/><text x="64.3283%" y="1295.50">simd_json::serde::from_slice</text></g><g><title>simd_json::Deserializer::from_slice (970 samples, 22.35%)</title><rect x="70.5760%" y="1269" width="22.3502%" height="15" fill="rgb(210,51,29)" fg:x="3063" fg:w="970"/><text x="70.8260%" y="1279.50">simd_json::Deserializer::from_slice</text></g><g><title>simd_json::Deserializer::from_slice (1 samples, 0.02%)</title><rect x="92.9032%" y="1253" width="0.0230%" height="15" fill="rgb(242,136,47)" fg:x="4032" fg:w="1"/><text x="93.1532%" y="1263.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="92.9263%" y="1445" width="0.0230%" height="15" fill="rgb(238,68,4)" fg:x="4033" fg:w="1"/><text x="93.1763%" y="1455.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="92.9263%" y="1429" width="0.0230%" height="15" fill="rgb(242,161,30)" fg:x="4033" fg:w="1"/><text x="93.1763%" y="1439.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="92.9263%" y="1413" width="0.0230%" height="15" fill="rgb(218,58,44)" fg:x="4033" fg:w="1"/><text x="93.1763%" y="1423.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="92.9263%" y="1397" width="0.0230%" height="15" fill="rgb(252,125,32)" fg:x="4033" fg:w="1"/><text x="93.1763%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="92.9263%" y="1381" width="0.0230%" height="15" fill="rgb(219,178,0)" fg:x="4033" fg:w="1"/><text x="93.1763%" y="1391.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="92.9263%" y="1365" width="0.0230%" height="15" fill="rgb(213,152,7)" fg:x="4033" fg:w="1"/><text x="93.1763%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="92.9263%" y="1349" width="0.0230%" height="15" fill="rgb(249,109,34)" fg:x="4033" fg:w="1"/><text x="93.1763%" y="1359.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="92.9263%" y="1333" width="0.0230%" height="15" fill="rgb(232,96,21)" fg:x="4033" fg:w="1"/><text x="93.1763%" y="1343.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="92.9263%" y="1317" width="0.0230%" height="15" fill="rgb(228,27,39)" fg:x="4033" fg:w="1"/><text x="93.1763%" y="1327.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="92.9263%" y="1301" width="0.0230%" height="15" fill="rgb(211,182,52)" fg:x="4033" fg:w="1"/><text x="93.1763%" y="1311.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="92.9263%" y="1285" width="0.0230%" height="15" fill="rgb(234,178,38)" fg:x="4033" fg:w="1"/><text x="93.1763%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.05%)</title><rect x="92.9493%" y="1285" width="0.0461%" height="15" fill="rgb(221,111,3)" fg:x="4034" fg:w="2"/><text x="93.1993%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (2 samples, 0.05%)</title><rect x="92.9493%" y="1269" width="0.0461%" height="15" fill="rgb(228,175,21)" fg:x="4034" fg:w="2"/><text x="93.1993%" y="1279.50"></text></g><g><title>core::ptr::write (2 samples, 0.05%)</title><rect x="92.9493%" y="1253" width="0.0461%" height="15" fill="rgb(228,174,43)" fg:x="4034" fg:w="2"/><text x="93.1993%" y="1263.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="92.9954%" y="837" width="0.0230%" height="15" fill="rgb(211,191,0)" fg:x="4036" fg:w="1"/><text x="93.2454%" y="847.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="92.9954%" y="821" width="0.0230%" height="15" fill="rgb(253,117,3)" fg:x="4036" fg:w="1"/><text x="93.2454%" y="831.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="92.9954%" y="805" width="0.0230%" height="15" fill="rgb(241,127,19)" fg:x="4036" fg:w="1"/><text x="93.2454%" y="815.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="92.9954%" y="789" width="0.0230%" height="15" fill="rgb(218,103,12)" fg:x="4036" fg:w="1"/><text x="93.2454%" y="799.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="92.9954%" y="773" width="0.0230%" height="15" fill="rgb(236,214,43)" fg:x="4036" fg:w="1"/><text x="93.2454%" y="783.50"></text></g><g><title>_rjem_je_edata_avail_first (1 samples, 0.02%)</title><rect x="93.0184%" y="773" width="0.0230%" height="15" fill="rgb(244,144,19)" fg:x="4037" fg:w="1"/><text x="93.2684%" y="783.50"></text></g><g><title>ph_first (1 samples, 0.02%)</title><rect x="93.0184%" y="757" width="0.0230%" height="15" fill="rgb(246,188,10)" fg:x="4037" fg:w="1"/><text x="93.2684%" y="767.50"></text></g><g><title>ph_merge_aux (1 samples, 0.02%)</title><rect x="93.0184%" y="741" width="0.0230%" height="15" fill="rgb(212,193,33)" fg:x="4037" fg:w="1"/><text x="93.2684%" y="751.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="93.0184%" y="725" width="0.0230%" height="15" fill="rgb(241,51,29)" fg:x="4037" fg:w="1"/><text x="93.2684%" y="735.50"></text></g><g><title>phn_prev_set (1 samples, 0.02%)</title><rect x="93.0184%" y="709" width="0.0230%" height="15" fill="rgb(211,58,19)" fg:x="4037" fg:w="1"/><text x="93.2684%" y="719.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.07%)</title><rect x="92.9954%" y="1013" width="0.0691%" height="15" fill="rgb(229,111,26)" fg:x="4036" fg:w="3"/><text x="93.2454%" y="1023.50"></text></g><g><title>iallocztm (3 samples, 0.07%)</title><rect x="92.9954%" y="997" width="0.0691%" height="15" fill="rgb(213,115,40)" fg:x="4036" fg:w="3"/><text x="93.2454%" y="1007.50"></text></g><g><title>arena_malloc (3 samples, 0.07%)</title><rect x="92.9954%" y="981" width="0.0691%" height="15" fill="rgb(209,56,44)" fg:x="4036" fg:w="3"/><text x="93.2454%" y="991.50"></text></g><g><title>_rjem_je_large_palloc (3 samples, 0.07%)</title><rect x="92.9954%" y="965" width="0.0691%" height="15" fill="rgb(230,108,32)" fg:x="4036" fg:w="3"/><text x="93.2454%" y="975.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (3 samples, 0.07%)</title><rect x="92.9954%" y="949" width="0.0691%" height="15" fill="rgb(216,165,31)" fg:x="4036" fg:w="3"/><text x="93.2454%" y="959.50"></text></g><g><title>_rjem_je_pa_alloc (3 samples, 0.07%)</title><rect x="92.9954%" y="933" width="0.0691%" height="15" fill="rgb(218,122,21)" fg:x="4036" fg:w="3"/><text x="93.2454%" y="943.50"></text></g><g><title>pai_alloc (3 samples, 0.07%)</title><rect x="92.9954%" y="917" width="0.0691%" height="15" fill="rgb(223,224,47)" fg:x="4036" fg:w="3"/><text x="93.2454%" y="927.50"></text></g><g><title>pac_alloc_impl (3 samples, 0.07%)</title><rect x="92.9954%" y="901" width="0.0691%" height="15" fill="rgb(238,102,44)" fg:x="4036" fg:w="3"/><text x="93.2454%" y="911.50"></text></g><g><title>pac_alloc_real (3 samples, 0.07%)</title><rect x="92.9954%" y="885" width="0.0691%" height="15" fill="rgb(236,46,40)" fg:x="4036" fg:w="3"/><text x="93.2454%" y="895.50"></text></g><g><title>_rjem_je_ecache_alloc (3 samples, 0.07%)</title><rect x="92.9954%" y="869" width="0.0691%" height="15" fill="rgb(247,202,50)" fg:x="4036" fg:w="3"/><text x="93.2454%" y="879.50"></text></g><g><title>extent_recycle (3 samples, 0.07%)</title><rect x="92.9954%" y="853" width="0.0691%" height="15" fill="rgb(209,99,20)" fg:x="4036" fg:w="3"/><text x="93.2454%" y="863.50"></text></g><g><title>extent_recycle_split (2 samples, 0.05%)</title><rect x="93.0184%" y="837" width="0.0461%" height="15" fill="rgb(252,27,34)" fg:x="4037" fg:w="2"/><text x="93.2684%" y="847.50"></text></g><g><title>extent_split_interior (2 samples, 0.05%)</title><rect x="93.0184%" y="821" width="0.0461%" height="15" fill="rgb(215,206,23)" fg:x="4037" fg:w="2"/><text x="93.2684%" y="831.50"></text></g><g><title>extent_split_impl (2 samples, 0.05%)</title><rect x="93.0184%" y="805" width="0.0461%" height="15" fill="rgb(212,135,36)" fg:x="4037" fg:w="2"/><text x="93.2684%" y="815.50"></text></g><g><title>_rjem_je_edata_cache_get (2 samples, 0.05%)</title><rect x="93.0184%" y="789" width="0.0461%" height="15" fill="rgb(240,189,1)" fg:x="4037" fg:w="2"/><text x="93.2684%" y="799.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.02%)</title><rect x="93.0415%" y="773" width="0.0230%" height="15" fill="rgb(242,56,20)" fg:x="4038" fg:w="1"/><text x="93.2915%" y="783.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="93.0415%" y="757" width="0.0230%" height="15" fill="rgb(247,132,33)" fg:x="4038" fg:w="1"/><text x="93.2915%" y="767.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="93.0415%" y="741" width="0.0230%" height="15" fill="rgb(208,149,11)" fg:x="4038" fg:w="1"/><text x="93.2915%" y="751.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="93.0415%" y="725" width="0.0230%" height="15" fill="rgb(211,33,11)" fg:x="4038" fg:w="1"/><text x="93.2915%" y="735.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="92.9954%" y="1189" width="0.0922%" height="15" fill="rgb(221,29,38)" fg:x="4036" fg:w="4"/><text x="93.2454%" y="1199.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="92.9954%" y="1173" width="0.0922%" height="15" fill="rgb(206,182,49)" fg:x="4036" fg:w="4"/><text x="93.2454%" y="1183.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="92.9954%" y="1157" width="0.0922%" height="15" fill="rgb(216,140,1)" fg:x="4036" fg:w="4"/><text x="93.2454%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.09%)</title><rect x="92.9954%" y="1141" width="0.0922%" height="15" fill="rgb(232,57,40)" fg:x="4036" fg:w="4"/><text x="93.2454%" y="1151.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="92.9954%" y="1125" width="0.0922%" height="15" fill="rgb(224,186,18)" fg:x="4036" fg:w="4"/><text x="93.2454%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.09%)</title><rect x="92.9954%" y="1109" width="0.0922%" height="15" fill="rgb(215,121,11)" fg:x="4036" fg:w="4"/><text x="93.2454%" y="1119.50"></text></g><g><title>__rust_alloc (4 samples, 0.09%)</title><rect x="92.9954%" y="1093" width="0.0922%" height="15" fill="rgb(245,147,10)" fg:x="4036" fg:w="4"/><text x="93.2454%" y="1103.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.09%)</title><rect x="92.9954%" y="1077" width="0.0922%" height="15" fill="rgb(238,153,13)" fg:x="4036" fg:w="4"/><text x="93.2454%" y="1087.50"></text></g><g><title>_rjem_je_malloc_default (4 samples, 0.09%)</title><rect x="92.9954%" y="1061" width="0.0922%" height="15" fill="rgb(233,108,0)" fg:x="4036" fg:w="4"/><text x="93.2454%" y="1071.50"></text></g><g><title>imalloc (4 samples, 0.09%)</title><rect x="92.9954%" y="1045" width="0.0922%" height="15" fill="rgb(212,157,17)" fg:x="4036" fg:w="4"/><text x="93.2454%" y="1055.50"></text></g><g><title>imalloc_body (4 samples, 0.09%)</title><rect x="92.9954%" y="1029" width="0.0922%" height="15" fill="rgb(225,213,38)" fg:x="4036" fg:w="4"/><text x="93.2454%" y="1039.50"></text></g><g><title>thread_alloc_event (1 samples, 0.02%)</title><rect x="93.0645%" y="1013" width="0.0230%" height="15" fill="rgb(248,16,11)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="1023.50"></text></g><g><title>te_event_advance (1 samples, 0.02%)</title><rect x="93.0645%" y="997" width="0.0230%" height="15" fill="rgb(241,33,4)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="1007.50"></text></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.02%)</title><rect x="93.0645%" y="981" width="0.0230%" height="15" fill="rgb(222,26,43)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="991.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="93.0645%" y="965" width="0.0230%" height="15" fill="rgb(243,29,36)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="975.50"></text></g><g><title>tcache_gc_small (1 samples, 0.02%)</title><rect x="93.0645%" y="949" width="0.0230%" height="15" fill="rgb(241,9,27)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="959.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="93.0645%" y="933" width="0.0230%" height="15" fill="rgb(205,117,26)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="943.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="93.0645%" y="917" width="0.0230%" height="15" fill="rgb(209,80,39)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="927.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="93.0645%" y="901" width="0.0230%" height="15" fill="rgb(239,155,6)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="911.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="93.0645%" y="885" width="0.0230%" height="15" fill="rgb(212,104,12)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="895.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="93.0645%" y="869" width="0.0230%" height="15" fill="rgb(234,204,3)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="879.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="93.0645%" y="853" width="0.0230%" height="15" fill="rgb(251,218,7)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="863.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="93.0645%" y="837" width="0.0230%" height="15" fill="rgb(221,81,32)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="847.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="93.0645%" y="821" width="0.0230%" height="15" fill="rgb(214,152,26)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="831.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="93.0645%" y="805" width="0.0230%" height="15" fill="rgb(223,22,3)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="815.50"></text></g><g><title>eset_stats_add (1 samples, 0.02%)</title><rect x="93.0645%" y="789" width="0.0230%" height="15" fill="rgb(207,174,7)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="799.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="93.0645%" y="773" width="0.0230%" height="15" fill="rgb(224,19,52)" fg:x="4039" fg:w="1"/><text x="93.3145%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (158 samples, 3.64%)</title><rect x="92.9493%" y="1445" width="3.6406%" height="15" fill="rgb(228,24,14)" fg:x="4034" fg:w="158"/><text x="93.1993%" y="1455.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (158 samples, 3.64%)</title><rect x="92.9493%" y="1429" width="3.6406%" height="15" fill="rgb(230,153,43)" fg:x="4034" fg:w="158"/><text x="93.1993%" y="1439.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (158 samples, 3.64%)</title><rect x="92.9493%" y="1413" width="3.6406%" height="15" fill="rgb(231,106,12)" fg:x="4034" fg:w="158"/><text x="93.1993%" y="1423.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (158 samples, 3.64%)</title><rect x="92.9493%" y="1397" width="3.6406%" height="15" fill="rgb(215,92,2)" fg:x="4034" fg:w="158"/><text x="93.1993%" y="1407.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (158 samples, 3.64%)</title><rect x="92.9493%" y="1381" width="3.6406%" height="15" fill="rgb(249,143,25)" fg:x="4034" fg:w="158"/><text x="93.1993%" y="1391.50">&lt;all..</text></g><g><title>?? (158 samples, 3.64%)</title><rect x="92.9493%" y="1365" width="3.6406%" height="15" fill="rgb(252,7,35)" fg:x="4034" fg:w="158"/><text x="93.1993%" y="1375.50">??</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (158 samples, 3.64%)</title><rect x="92.9493%" y="1349" width="3.6406%" height="15" fill="rgb(216,69,40)" fg:x="4034" fg:w="158"/><text x="93.1993%" y="1359.50">core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (158 samples, 3.64%)</title><rect x="92.9493%" y="1333" width="3.6406%" height="15" fill="rgb(240,36,33)" fg:x="4034" fg:w="158"/><text x="93.1993%" y="1343.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (158 samples, 3.64%)</title><rect x="92.9493%" y="1317" width="3.6406%" height="15" fill="rgb(231,128,14)" fg:x="4034" fg:w="158"/><text x="93.1993%" y="1327.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (158 samples, 3.64%)</title><rect x="92.9493%" y="1301" width="3.6406%" height="15" fill="rgb(245,143,14)" fg:x="4034" fg:w="158"/><text x="93.1993%" y="1311.50">core..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched::_{{closure}} (156 samples, 3.59%)</title><rect x="92.9954%" y="1285" width="3.5945%" height="15" fill="rgb(222,130,28)" fg:x="4036" fg:w="156"/><text x="93.2454%" y="1295.50">crit..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (156 samples, 3.59%)</title><rect x="92.9954%" y="1269" width="3.5945%" height="15" fill="rgb(212,10,48)" fg:x="4036" fg:w="156"/><text x="93.2454%" y="1279.50">dese..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (156 samples, 3.59%)</title><rect x="92.9954%" y="1253" width="3.5945%" height="15" fill="rgb(254,118,45)" fg:x="4036" fg:w="156"/><text x="93.2454%" y="1263.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (156 samples, 3.59%)</title><rect x="92.9954%" y="1237" width="3.5945%" height="15" fill="rgb(228,6,45)" fg:x="4036" fg:w="156"/><text x="93.2454%" y="1247.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (156 samples, 3.59%)</title><rect x="92.9954%" y="1221" width="3.5945%" height="15" fill="rgb(241,18,35)" fg:x="4036" fg:w="156"/><text x="93.2454%" y="1231.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (156 samples, 3.59%)</title><rect x="92.9954%" y="1205" width="3.5945%" height="15" fill="rgb(227,214,53)" fg:x="4036" fg:w="156"/><text x="93.2454%" y="1215.50">&lt;T a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (152 samples, 3.50%)</title><rect x="93.0876%" y="1189" width="3.5023%" height="15" fill="rgb(224,107,51)" fg:x="4040" fg:w="152"/><text x="93.3376%" y="1199.50">cor..</text></g><g><title>core::intrinsics::copy_nonoverlapping (152 samples, 3.50%)</title><rect x="93.0876%" y="1173" width="3.5023%" height="15" fill="rgb(248,60,28)" fg:x="4040" fg:w="152"/><text x="93.3376%" y="1183.50">cor..</text></g><g><title>__memmove_avx_unaligned_erms (152 samples, 3.50%)</title><rect x="93.0876%" y="1157" width="3.5023%" height="15" fill="rgb(249,101,23)" fg:x="4040" fg:w="152"/><text x="93.3376%" y="1167.50">__m..</text></g><g><title>core::mem::drop (2 samples, 0.05%)</title><rect x="96.5899%" y="1445" width="0.0461%" height="15" fill="rgb(228,51,19)" fg:x="4192" fg:w="2"/><text x="96.8399%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,simd_json::error::Error&gt;&gt; (2 samples, 0.05%)</title><rect x="96.5899%" y="1429" width="0.0461%" height="15" fill="rgb(213,20,6)" fg:x="4192" fg:w="2"/><text x="96.8399%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (2 samples, 0.05%)</title><rect x="96.5899%" y="1413" width="0.0461%" height="15" fill="rgb(212,124,10)" fg:x="4192" fg:w="2"/><text x="96.8399%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (2 samples, 0.05%)</title><rect x="96.5899%" y="1397" width="0.0461%" height="15" fill="rgb(248,3,40)" fg:x="4192" fg:w="2"/><text x="96.8399%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="96.5899%" y="1381" width="0.0461%" height="15" fill="rgb(223,178,23)" fg:x="4192" fg:w="2"/><text x="96.8399%" y="1391.50"></text></g><g><title>core::mem::drop (2 samples, 0.05%)</title><rect x="96.5899%" y="1365" width="0.0461%" height="15" fill="rgb(240,132,45)" fg:x="4192" fg:w="2"/><text x="96.8399%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (2 samples, 0.05%)</title><rect x="96.5899%" y="1349" width="0.0461%" height="15" fill="rgb(245,164,36)" fg:x="4192" fg:w="2"/><text x="96.8399%" y="1359.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="96.5899%" y="1333" width="0.0461%" height="15" fill="rgb(231,188,53)" fg:x="4192" fg:w="2"/><text x="96.8399%" y="1343.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="96.5899%" y="1317" width="0.0461%" height="15" fill="rgb(237,198,39)" fg:x="4192" fg:w="2"/><text x="96.8399%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (2 samples, 0.05%)</title><rect x="96.5899%" y="1301" width="0.0461%" height="15" fill="rgb(223,120,35)" fg:x="4192" fg:w="2"/><text x="96.8399%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Event&gt; (2 samples, 0.05%)</title><rect x="96.5899%" y="1285" width="0.0461%" height="15" fill="rgb(253,107,49)" fg:x="4192" fg:w="2"/><text x="96.8399%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2 samples, 0.05%)</title><rect x="96.5899%" y="1269" width="0.0461%" height="15" fill="rgb(216,44,31)" fg:x="4192" fg:w="2"/><text x="96.8399%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="96.6129%" y="1253" width="0.0230%" height="15" fill="rgb(253,87,21)" fg:x="4193" fg:w="1"/><text x="96.8629%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="96.6129%" y="1237" width="0.0230%" height="15" fill="rgb(226,18,2)" fg:x="4193" fg:w="1"/><text x="96.8629%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="96.6129%" y="1221" width="0.0230%" height="15" fill="rgb(216,8,46)" fg:x="4193" fg:w="1"/><text x="96.8629%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="96.6129%" y="1205" width="0.0230%" height="15" fill="rgb(226,140,39)" fg:x="4193" fg:w="1"/><text x="96.8629%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="96.6129%" y="1189" width="0.0230%" height="15" fill="rgb(221,194,54)" fg:x="4193" fg:w="1"/><text x="96.8629%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="96.6129%" y="1173" width="0.0230%" height="15" fill="rgb(213,92,11)" fg:x="4193" fg:w="1"/><text x="96.8629%" y="1183.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="96.6129%" y="1157" width="0.0230%" height="15" fill="rgb(229,162,46)" fg:x="4193" fg:w="1"/><text x="96.8629%" y="1167.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="96.6129%" y="1141" width="0.0230%" height="15" fill="rgb(214,111,36)" fg:x="4193" fg:w="1"/><text x="96.8629%" y="1151.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="96.6129%" y="1125" width="0.0230%" height="15" fill="rgb(207,6,21)" fg:x="4193" fg:w="1"/><text x="96.8629%" y="1135.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="96.6129%" y="1109" width="0.0230%" height="15" fill="rgb(213,127,38)" fg:x="4193" fg:w="1"/><text x="96.8629%" y="1119.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (1 samples, 0.02%)</title><rect x="96.6590%" y="1077" width="0.0230%" height="15" fill="rgb(238,118,32)" fg:x="4195" fg:w="1"/><text x="96.9090%" y="1087.50"></text></g><g><title>cache_bin_nstashed_get_local (1 samples, 0.02%)</title><rect x="96.6590%" y="1061" width="0.0230%" height="15" fill="rgb(240,139,39)" fg:x="4195" fg:w="1"/><text x="96.9090%" y="1071.50"></text></g><g><title>cache_bin_nstashed_get_internal (1 samples, 0.02%)</title><rect x="96.6590%" y="1045" width="0.0230%" height="15" fill="rgb(235,10,37)" fg:x="4195" fg:w="1"/><text x="96.9090%" y="1055.50"></text></g><g><title>cache_bin_diff (1 samples, 0.02%)</title><rect x="96.6590%" y="1029" width="0.0230%" height="15" fill="rgb(249,171,38)" fg:x="4195" fg:w="1"/><text x="96.9090%" y="1039.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="96.6590%" y="1285" width="0.0461%" height="15" fill="rgb(242,144,32)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1295.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="96.6590%" y="1269" width="0.0461%" height="15" fill="rgb(217,117,21)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.05%)</title><rect x="96.6590%" y="1253" width="0.0461%" height="15" fill="rgb(249,87,1)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="96.6590%" y="1237" width="0.0461%" height="15" fill="rgb(248,196,48)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="96.6590%" y="1221" width="0.0461%" height="15" fill="rgb(251,206,33)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="96.6590%" y="1205" width="0.0461%" height="15" fill="rgb(232,141,28)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="96.6590%" y="1189" width="0.0461%" height="15" fill="rgb(209,167,14)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="96.6590%" y="1173" width="0.0461%" height="15" fill="rgb(225,11,50)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1183.50"></text></g><g><title>__rust_dealloc (2 samples, 0.05%)</title><rect x="96.6590%" y="1157" width="0.0461%" height="15" fill="rgb(209,50,20)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1167.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.05%)</title><rect x="96.6590%" y="1141" width="0.0461%" height="15" fill="rgb(212,17,46)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1151.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.05%)</title><rect x="96.6590%" y="1125" width="0.0461%" height="15" fill="rgb(216,101,39)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1135.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.05%)</title><rect x="96.6590%" y="1109" width="0.0461%" height="15" fill="rgb(212,228,48)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1119.50"></text></g><g><title>tcache_bin_flush_bottom (2 samples, 0.05%)</title><rect x="96.6590%" y="1093" width="0.0461%" height="15" fill="rgb(250,6,50)" fg:x="4195" fg:w="2"/><text x="96.9090%" y="1103.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="96.6820%" y="1077" width="0.0230%" height="15" fill="rgb(250,160,48)" fg:x="4196" fg:w="1"/><text x="96.9320%" y="1087.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="96.6820%" y="1061" width="0.0230%" height="15" fill="rgb(244,216,33)" fg:x="4196" fg:w="1"/><text x="96.9320%" y="1071.50"></text></g><g><title>bitmap_unset (1 samples, 0.02%)</title><rect x="96.6820%" y="1045" width="0.0230%" height="15" fill="rgb(207,157,5)" fg:x="4196" fg:w="1"/><text x="96.9320%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (4 samples, 0.09%)</title><rect x="96.6590%" y="1365" width="0.0922%" height="15" fill="rgb(228,199,8)" fg:x="4195" fg:w="4"/><text x="96.9090%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="96.6590%" y="1349" width="0.0922%" height="15" fill="rgb(227,80,20)" fg:x="4195" fg:w="4"/><text x="96.9090%" y="1359.50"></text></g><g><title>core::mem::drop (4 samples, 0.09%)</title><rect x="96.6590%" y="1333" width="0.0922%" height="15" fill="rgb(222,9,33)" fg:x="4195" fg:w="4"/><text x="96.9090%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,alloc::string::String&gt;&gt; (4 samples, 0.09%)</title><rect x="96.6590%" y="1317" width="0.0922%" height="15" fill="rgb(239,44,28)" fg:x="4195" fg:w="4"/><text x="96.9090%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="96.6590%" y="1301" width="0.0922%" height="15" fill="rgb(249,187,43)" fg:x="4195" fg:w="4"/><text x="96.9090%" y="1311.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.05%)</title><rect x="96.7051%" y="1285" width="0.0461%" height="15" fill="rgb(216,141,28)" fg:x="4197" fg:w="2"/><text x="96.9551%" y="1295.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="96.7281%" y="1269" width="0.0230%" height="15" fill="rgb(230,154,53)" fg:x="4198" fg:w="1"/><text x="96.9781%" y="1279.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="96.7281%" y="1253" width="0.0230%" height="15" fill="rgb(227,82,4)" fg:x="4198" fg:w="1"/><text x="96.9781%" y="1263.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="96.7281%" y="1237" width="0.0230%" height="15" fill="rgb(220,107,16)" fg:x="4198" fg:w="1"/><text x="96.9781%" y="1247.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect x="96.7281%" y="1221" width="0.0230%" height="15" fill="rgb(207,187,2)" fg:x="4198" fg:w="1"/><text x="96.9781%" y="1231.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="96.7281%" y="1205" width="0.0230%" height="15" fill="rgb(210,162,52)" fg:x="4198" fg:w="1"/><text x="96.9781%" y="1215.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect x="96.7281%" y="1189" width="0.0230%" height="15" fill="rgb(217,216,49)" fg:x="4198" fg:w="1"/><text x="96.9781%" y="1199.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="96.7512%" y="1253" width="0.0230%" height="15" fill="rgb(218,146,49)" fg:x="4199" fg:w="1"/><text x="97.0012%" y="1263.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="96.7512%" y="1237" width="0.0230%" height="15" fill="rgb(216,55,40)" fg:x="4199" fg:w="1"/><text x="97.0012%" y="1247.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="96.7512%" y="1221" width="0.0230%" height="15" fill="rgb(208,196,21)" fg:x="4199" fg:w="1"/><text x="97.0012%" y="1231.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="96.7512%" y="1205" width="0.0230%" height="15" fill="rgb(242,117,42)" fg:x="4199" fg:w="1"/><text x="97.0012%" y="1215.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="96.7512%" y="1189" width="0.0230%" height="15" fill="rgb(210,11,23)" fg:x="4199" fg:w="1"/><text x="97.0012%" y="1199.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="96.7512%" y="1173" width="0.0230%" height="15" fill="rgb(217,110,2)" fg:x="4199" fg:w="1"/><text x="97.0012%" y="1183.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="96.7512%" y="1157" width="0.0230%" height="15" fill="rgb(229,77,54)" fg:x="4199" fg:w="1"/><text x="97.0012%" y="1167.50"></text></g><g><title>rtree_leafkey (1 samples, 0.02%)</title><rect x="96.7512%" y="1141" width="0.0230%" height="15" fill="rgb(218,53,16)" fg:x="4199" fg:w="1"/><text x="97.0012%" y="1151.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="96.7742%" y="1253" width="0.0230%" height="15" fill="rgb(215,38,13)" fg:x="4200" fg:w="1"/><text x="97.0242%" y="1263.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="96.7742%" y="1237" width="0.0230%" height="15" fill="rgb(235,42,18)" fg:x="4200" fg:w="1"/><text x="97.0242%" y="1247.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="96.7742%" y="1221" width="0.0230%" height="15" fill="rgb(219,66,54)" fg:x="4200" fg:w="1"/><text x="97.0242%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.05%)</title><rect x="96.7972%" y="1237" width="0.0461%" height="15" fill="rgb(222,205,4)" fg:x="4201" fg:w="2"/><text x="97.0472%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="96.7972%" y="1221" width="0.0461%" height="15" fill="rgb(227,213,46)" fg:x="4201" fg:w="2"/><text x="97.0472%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="96.7972%" y="1205" width="0.0461%" height="15" fill="rgb(250,145,42)" fg:x="4201" fg:w="2"/><text x="97.0472%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="96.7972%" y="1189" width="0.0461%" height="15" fill="rgb(219,15,2)" fg:x="4201" fg:w="2"/><text x="97.0472%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="96.7972%" y="1173" width="0.0461%" height="15" fill="rgb(231,181,52)" fg:x="4201" fg:w="2"/><text x="97.0472%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="96.7972%" y="1157" width="0.0461%" height="15" fill="rgb(235,1,42)" fg:x="4201" fg:w="2"/><text x="97.0472%" y="1167.50"></text></g><g><title>__rust_dealloc (2 samples, 0.05%)</title><rect x="96.7972%" y="1141" width="0.0461%" height="15" fill="rgb(249,88,27)" fg:x="4201" fg:w="2"/><text x="97.0472%" y="1151.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.05%)</title><rect x="96.7972%" y="1125" width="0.0461%" height="15" fill="rgb(235,145,16)" fg:x="4201" fg:w="2"/><text x="97.0472%" y="1135.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="96.8203%" y="1109" width="0.0230%" height="15" fill="rgb(237,114,19)" fg:x="4202" fg:w="1"/><text x="97.0703%" y="1119.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="96.8203%" y="1093" width="0.0230%" height="15" fill="rgb(238,51,50)" fg:x="4202" fg:w="1"/><text x="97.0703%" y="1103.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="96.8203%" y="1077" width="0.0230%" height="15" fill="rgb(205,194,25)" fg:x="4202" fg:w="1"/><text x="97.0703%" y="1087.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="96.8203%" y="1061" width="0.0230%" height="15" fill="rgb(215,203,17)" fg:x="4202" fg:w="1"/><text x="97.0703%" y="1071.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="96.8203%" y="1045" width="0.0230%" height="15" fill="rgb(233,112,49)" fg:x="4202" fg:w="1"/><text x="97.0703%" y="1055.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="96.8203%" y="1029" width="0.0230%" height="15" fill="rgb(241,130,26)" fg:x="4202" fg:w="1"/><text x="97.0703%" y="1039.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.02%)</title><rect x="96.8203%" y="1013" width="0.0230%" height="15" fill="rgb(252,223,19)" fg:x="4202" fg:w="1"/><text x="97.0703%" y="1023.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.02%)</title><rect x="96.8203%" y="997" width="0.0230%" height="15" fill="rgb(211,95,25)" fg:x="4202" fg:w="1"/><text x="97.0703%" y="1007.50"></text></g><g><title>?? (5 samples, 0.12%)</title><rect x="96.7512%" y="1285" width="0.1152%" height="15" fill="rgb(251,182,27)" fg:x="4199" fg:w="5"/><text x="97.0012%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (5 samples, 0.12%)</title><rect x="96.7512%" y="1269" width="0.1152%" height="15" fill="rgb(238,24,4)" fg:x="4199" fg:w="5"/><text x="97.0012%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Event&gt; (3 samples, 0.07%)</title><rect x="96.7972%" y="1253" width="0.0691%" height="15" fill="rgb(224,220,25)" fg:x="4201" fg:w="3"/><text x="97.0472%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.02%)</title><rect x="96.8433%" y="1237" width="0.0230%" height="15" fill="rgb(239,133,26)" fg:x="4203" fg:w="1"/><text x="97.0933%" y="1247.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect x="96.8664%" y="1237" width="0.0230%" height="15" fill="rgb(211,94,48)" fg:x="4204" fg:w="1"/><text x="97.1164%" y="1247.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="96.8894%" y="1189" width="0.0230%" height="15" fill="rgb(239,87,6)" fg:x="4205" fg:w="1"/><text x="97.1394%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="96.8894%" y="1173" width="0.0230%" height="15" fill="rgb(227,62,0)" fg:x="4205" fg:w="1"/><text x="97.1394%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="96.8894%" y="1157" width="0.0230%" height="15" fill="rgb(211,226,4)" fg:x="4205" fg:w="1"/><text x="97.1394%" y="1167.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="96.8894%" y="1141" width="0.0230%" height="15" fill="rgb(253,38,52)" fg:x="4205" fg:w="1"/><text x="97.1394%" y="1151.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="96.8894%" y="1125" width="0.0230%" height="15" fill="rgb(229,126,40)" fg:x="4205" fg:w="1"/><text x="97.1394%" y="1135.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="96.8894%" y="1109" width="0.0230%" height="15" fill="rgb(229,165,44)" fg:x="4205" fg:w="1"/><text x="97.1394%" y="1119.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="96.8894%" y="1093" width="0.0230%" height="15" fill="rgb(247,95,47)" fg:x="4205" fg:w="1"/><text x="97.1394%" y="1103.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="96.8894%" y="1077" width="0.0230%" height="15" fill="rgb(216,140,30)" fg:x="4205" fg:w="1"/><text x="97.1394%" y="1087.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="96.8894%" y="1061" width="0.0230%" height="15" fill="rgb(246,214,8)" fg:x="4205" fg:w="1"/><text x="97.1394%" y="1071.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (2 samples, 0.05%)</title><rect x="96.8894%" y="1221" width="0.0461%" height="15" fill="rgb(227,224,15)" fg:x="4205" fg:w="2"/><text x="97.1394%" y="1231.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="96.8894%" y="1205" width="0.0461%" height="15" fill="rgb(233,175,4)" fg:x="4205" fg:w="2"/><text x="97.1394%" y="1215.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.02%)</title><rect x="96.9124%" y="1189" width="0.0230%" height="15" fill="rgb(221,66,45)" fg:x="4206" fg:w="1"/><text x="97.1624%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (9 samples, 0.21%)</title><rect x="96.7512%" y="1365" width="0.2074%" height="15" fill="rgb(221,178,18)" fg:x="4199" fg:w="9"/><text x="97.0012%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.21%)</title><rect x="96.7512%" y="1349" width="0.2074%" height="15" fill="rgb(213,81,29)" fg:x="4199" fg:w="9"/><text x="97.0012%" y="1359.50"></text></g><g><title>core::mem::drop (9 samples, 0.21%)</title><rect x="96.7512%" y="1333" width="0.2074%" height="15" fill="rgb(220,89,49)" fg:x="4199" fg:w="9"/><text x="97.0012%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;json_benchmark::prim_str::PrimStr&lt;u32&gt;,json_benchmark::copy::citm_catalog::Event&gt;&gt; (9 samples, 0.21%)</title><rect x="96.7512%" y="1317" width="0.2074%" height="15" fill="rgb(227,60,33)" fg:x="4199" fg:w="9"/><text x="97.0012%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.21%)</title><rect x="96.7512%" y="1301" width="0.2074%" height="15" fill="rgb(205,113,12)" fg:x="4199" fg:w="9"/><text x="97.0012%" y="1311.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.09%)</title><rect x="96.8664%" y="1285" width="0.0922%" height="15" fill="rgb(211,32,1)" fg:x="4204" fg:w="4"/><text x="97.1164%" y="1295.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="96.8664%" y="1269" width="0.0922%" height="15" fill="rgb(246,2,12)" fg:x="4204" fg:w="4"/><text x="97.1164%" y="1279.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="96.8664%" y="1253" width="0.0922%" height="15" fill="rgb(243,37,27)" fg:x="4204" fg:w="4"/><text x="97.1164%" y="1263.50"></text></g><g><title>alloc::collections::btree::mem::replace (3 samples, 0.07%)</title><rect x="96.8894%" y="1237" width="0.0691%" height="15" fill="rgb(248,211,31)" fg:x="4205" fg:w="3"/><text x="97.1394%" y="1247.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="96.9355%" y="1221" width="0.0230%" height="15" fill="rgb(242,146,47)" fg:x="4207" fg:w="1"/><text x="97.1855%" y="1231.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="96.9585%" y="1253" width="0.0230%" height="15" fill="rgb(206,70,20)" fg:x="4208" fg:w="1"/><text x="97.2085%" y="1263.50"></text></g><g><title>edata_nfree_get (1 samples, 0.02%)</title><rect x="96.9585%" y="1237" width="0.0230%" height="15" fill="rgb(215,10,51)" fg:x="4208" fg:w="1"/><text x="97.2085%" y="1247.50"></text></g><g><title>_rjem_je_sdallocx_default (2 samples, 0.05%)</title><rect x="96.9585%" y="1317" width="0.0461%" height="15" fill="rgb(243,178,53)" fg:x="4208" fg:w="2"/><text x="97.2085%" y="1327.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.05%)</title><rect x="96.9585%" y="1301" width="0.0461%" height="15" fill="rgb(233,221,20)" fg:x="4208" fg:w="2"/><text x="97.2085%" y="1311.50"></text></g><g><title>tcache_bin_flush_bottom (2 samples, 0.05%)</title><rect x="96.9585%" y="1285" width="0.0461%" height="15" fill="rgb(218,95,35)" fg:x="4208" fg:w="2"/><text x="97.2085%" y="1295.50"></text></g><g><title>tcache_bin_flush_impl (2 samples, 0.05%)</title><rect x="96.9585%" y="1269" width="0.0461%" height="15" fill="rgb(229,13,5)" fg:x="4208" fg:w="2"/><text x="97.2085%" y="1279.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (1 samples, 0.02%)</title><rect x="96.9816%" y="1253" width="0.0230%" height="15" fill="rgb(252,164,30)" fg:x="4209" fg:w="1"/><text x="97.2316%" y="1263.50"></text></g><g><title>emap_edata_lookup_batch (1 samples, 0.02%)</title><rect x="96.9816%" y="1237" width="0.0230%" height="15" fill="rgb(232,68,36)" fg:x="4209" fg:w="1"/><text x="97.2316%" y="1247.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="96.9816%" y="1221" width="0.0230%" height="15" fill="rgb(219,59,54)" fg:x="4209" fg:w="1"/><text x="97.2316%" y="1231.50"></text></g><g><title>rtree_cache_direct_map (1 samples, 0.02%)</title><rect x="96.9816%" y="1205" width="0.0230%" height="15" fill="rgb(250,92,33)" fg:x="4209" fg:w="1"/><text x="97.2316%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Price&gt;&gt; (1 samples, 0.02%)</title><rect x="97.0046%" y="1301" width="0.0230%" height="15" fill="rgb(229,162,54)" fg:x="4210" fg:w="1"/><text x="97.2546%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Price&gt;&gt; (1 samples, 0.02%)</title><rect x="97.0046%" y="1285" width="0.0230%" height="15" fill="rgb(244,114,52)" fg:x="4210" fg:w="1"/><text x="97.2546%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.0046%" y="1269" width="0.0230%" height="15" fill="rgb(212,211,43)" fg:x="4210" fg:w="1"/><text x="97.2546%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (1 samples, 0.02%)</title><rect x="97.0046%" y="1253" width="0.0230%" height="15" fill="rgb(226,147,8)" fg:x="4210" fg:w="1"/><text x="97.2546%" y="1263.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="97.0276%" y="1061" width="0.0230%" height="15" fill="rgb(226,23,13)" fg:x="4211" fg:w="1"/><text x="97.2776%" y="1071.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="97.0276%" y="1045" width="0.0230%" height="15" fill="rgb(240,63,4)" fg:x="4211" fg:w="1"/><text x="97.2776%" y="1055.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="97.0276%" y="1029" width="0.0230%" height="15" fill="rgb(221,1,32)" fg:x="4211" fg:w="1"/><text x="97.2776%" y="1039.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="97.0276%" y="1013" width="0.0230%" height="15" fill="rgb(242,117,10)" fg:x="4211" fg:w="1"/><text x="97.2776%" y="1023.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="97.0276%" y="997" width="0.0230%" height="15" fill="rgb(249,172,44)" fg:x="4211" fg:w="1"/><text x="97.2776%" y="1007.50"></text></g><g><title>_rjem_je_emap_update_edata_state (1 samples, 0.02%)</title><rect x="97.0276%" y="981" width="0.0230%" height="15" fill="rgb(244,46,45)" fg:x="4211" fg:w="1"/><text x="97.2776%" y="991.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="97.0276%" y="965" width="0.0230%" height="15" fill="rgb(206,43,17)" fg:x="4211" fg:w="1"/><text x="97.2776%" y="975.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_locked_handle_newly_empty (1 samples, 0.02%)</title><rect x="97.0507%" y="1045" width="0.0230%" height="15" fill="rgb(239,218,39)" fg:x="4212" fg:w="1"/><text x="97.3007%" y="1055.50"></text></g><g><title>arena_dissociate_bin_slab (1 samples, 0.02%)</title><rect x="97.0507%" y="1029" width="0.0230%" height="15" fill="rgb(208,169,54)" fg:x="4212" fg:w="1"/><text x="97.3007%" y="1039.50"></text></g><g><title>arena_bin_slabs_nonfull_remove (1 samples, 0.02%)</title><rect x="97.0507%" y="1013" width="0.0230%" height="15" fill="rgb(247,25,42)" fg:x="4212" fg:w="1"/><text x="97.3007%" y="1023.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="97.0507%" y="997" width="0.0230%" height="15" fill="rgb(226,23,31)" fg:x="4212" fg:w="1"/><text x="97.3007%" y="1007.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="97.0507%" y="981" width="0.0230%" height="15" fill="rgb(247,16,28)" fg:x="4212" fg:w="1"/><text x="97.3007%" y="991.50"></text></g><g><title>ph_merge_aux (1 samples, 0.02%)</title><rect x="97.0507%" y="965" width="0.0230%" height="15" fill="rgb(231,147,38)" fg:x="4212" fg:w="1"/><text x="97.3007%" y="975.50"></text></g><g><title>phn_merge (1 samples, 0.02%)</title><rect x="97.0507%" y="949" width="0.0230%" height="15" fill="rgb(253,81,48)" fg:x="4212" fg:w="1"/><text x="97.3007%" y="959.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="97.0507%" y="933" width="0.0230%" height="15" fill="rgb(249,222,43)" fg:x="4212" fg:w="1"/><text x="97.3007%" y="943.50"></text></g><g><title>_rjem_je_sdallocx_default (3 samples, 0.07%)</title><rect x="97.0276%" y="1125" width="0.0691%" height="15" fill="rgb(221,3,27)" fg:x="4211" fg:w="3"/><text x="97.2776%" y="1135.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.07%)</title><rect x="97.0276%" y="1109" width="0.0691%" height="15" fill="rgb(228,180,5)" fg:x="4211" fg:w="3"/><text x="97.2776%" y="1119.50"></text></g><g><title>tcache_bin_flush_bottom (3 samples, 0.07%)</title><rect x="97.0276%" y="1093" width="0.0691%" height="15" fill="rgb(227,131,42)" fg:x="4211" fg:w="3"/><text x="97.2776%" y="1103.50"></text></g><g><title>tcache_bin_flush_impl (3 samples, 0.07%)</title><rect x="97.0276%" y="1077" width="0.0691%" height="15" fill="rgb(212,3,39)" fg:x="4211" fg:w="3"/><text x="97.2776%" y="1087.50"></text></g><g><title>arena_dalloc_bin_locked_step (2 samples, 0.05%)</title><rect x="97.0507%" y="1061" width="0.0461%" height="15" fill="rgb(226,45,5)" fg:x="4212" fg:w="2"/><text x="97.3007%" y="1071.50"></text></g><g><title>arena_slab_regind (1 samples, 0.02%)</title><rect x="97.0737%" y="1045" width="0.0230%" height="15" fill="rgb(215,167,45)" fg:x="4213" fg:w="1"/><text x="97.3237%" y="1055.50"></text></g><g><title>div_compute (1 samples, 0.02%)</title><rect x="97.0737%" y="1029" width="0.0230%" height="15" fill="rgb(250,218,53)" fg:x="4213" fg:w="1"/><text x="97.3237%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.09%)</title><rect x="97.0276%" y="1189" width="0.0922%" height="15" fill="rgb(207,140,0)" fg:x="4211" fg:w="4"/><text x="97.2776%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.09%)</title><rect x="97.0276%" y="1173" width="0.0922%" height="15" fill="rgb(238,133,51)" fg:x="4211" fg:w="4"/><text x="97.2776%" y="1183.50"></text></g><g><title>__rust_dealloc (4 samples, 0.09%)</title><rect x="97.0276%" y="1157" width="0.0922%" height="15" fill="rgb(218,203,53)" fg:x="4211" fg:w="4"/><text x="97.2776%" y="1167.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (4 samples, 0.09%)</title><rect x="97.0276%" y="1141" width="0.0922%" height="15" fill="rgb(226,184,25)" fg:x="4211" fg:w="4"/><text x="97.2776%" y="1151.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="97.0968%" y="1125" width="0.0230%" height="15" fill="rgb(231,121,21)" fg:x="4214" fg:w="1"/><text x="97.3468%" y="1135.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="97.0968%" y="1109" width="0.0230%" height="15" fill="rgb(251,14,34)" fg:x="4214" fg:w="1"/><text x="97.3468%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.16%)</title><rect x="97.0276%" y="1285" width="0.1613%" height="15" fill="rgb(249,193,11)" fg:x="4211" fg:w="7"/><text x="97.2776%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::SeatCategory]&gt; (7 samples, 0.16%)</title><rect x="97.0276%" y="1269" width="0.1613%" height="15" fill="rgb(220,172,37)" fg:x="4211" fg:w="7"/><text x="97.2776%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt; (7 samples, 0.16%)</title><rect x="97.0276%" y="1253" width="0.1613%" height="15" fill="rgb(231,229,43)" fg:x="4211" fg:w="7"/><text x="97.2776%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (7 samples, 0.16%)</title><rect x="97.0276%" y="1237" width="0.1613%" height="15" fill="rgb(250,161,5)" fg:x="4211" fg:w="7"/><text x="97.2776%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Area&gt;&gt; (7 samples, 0.16%)</title><rect x="97.0276%" y="1221" width="0.1613%" height="15" fill="rgb(218,225,18)" fg:x="4211" fg:w="7"/><text x="97.2776%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.16%)</title><rect x="97.0276%" y="1205" width="0.1613%" height="15" fill="rgb(245,45,42)" fg:x="4211" fg:w="7"/><text x="97.2776%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (3 samples, 0.07%)</title><rect x="97.1198%" y="1189" width="0.0691%" height="15" fill="rgb(211,115,1)" fg:x="4215" fg:w="3"/><text x="97.3698%" y="1199.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="97.1889%" y="1189" width="0.0230%" height="15" fill="rgb(248,133,52)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1199.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="97.1889%" y="1173" width="0.0230%" height="15" fill="rgb(238,100,21)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1183.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="97.1889%" y="1157" width="0.0230%" height="15" fill="rgb(247,144,11)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1167.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="97.1889%" y="1141" width="0.0230%" height="15" fill="rgb(206,164,16)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1151.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="97.1889%" y="1125" width="0.0230%" height="15" fill="rgb(222,34,3)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1135.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="97.1889%" y="1109" width="0.0230%" height="15" fill="rgb(248,82,4)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1119.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="97.1889%" y="1093" width="0.0230%" height="15" fill="rgb(228,81,46)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1103.50"></text></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect x="97.1889%" y="1077" width="0.0230%" height="15" fill="rgb(227,67,47)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1087.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect x="97.1889%" y="1061" width="0.0230%" height="15" fill="rgb(215,93,53)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1071.50"></text></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect x="97.1889%" y="1045" width="0.0230%" height="15" fill="rgb(248,194,39)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1055.50"></text></g><g><title>extent_merge_impl (1 samples, 0.02%)</title><rect x="97.1889%" y="1029" width="0.0230%" height="15" fill="rgb(215,5,19)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1039.50"></text></g><g><title>_rjem_je_emap_merge_prepare (1 samples, 0.02%)</title><rect x="97.1889%" y="1013" width="0.0230%" height="15" fill="rgb(226,215,51)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1023.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (1 samples, 0.02%)</title><rect x="97.1889%" y="997" width="0.0230%" height="15" fill="rgb(225,56,26)" fg:x="4218" fg:w="1"/><text x="97.4389%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.30%)</title><rect x="96.9585%" y="1349" width="0.2995%" height="15" fill="rgb(222,75,29)" fg:x="4208" fg:w="13"/><text x="97.2085%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[json_benchmark::copy::citm_catalog::Performance]&gt; (13 samples, 0.30%)</title><rect x="96.9585%" y="1333" width="0.2995%" height="15" fill="rgb(236,139,6)" fg:x="4208" fg:w="13"/><text x="97.2085%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::Performance&gt; (11 samples, 0.25%)</title><rect x="97.0046%" y="1317" width="0.2535%" height="15" fill="rgb(223,137,36)" fg:x="4210" fg:w="11"/><text x="97.2546%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (10 samples, 0.23%)</title><rect x="97.0276%" y="1301" width="0.2304%" height="15" fill="rgb(226,99,2)" fg:x="4211" fg:w="10"/><text x="97.2776%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::SeatCategory&gt;&gt; (3 samples, 0.07%)</title><rect x="97.1889%" y="1285" width="0.0691%" height="15" fill="rgb(206,133,23)" fg:x="4218" fg:w="3"/><text x="97.4389%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="97.1889%" y="1269" width="0.0691%" height="15" fill="rgb(243,173,15)" fg:x="4218" fg:w="3"/><text x="97.4389%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="97.1889%" y="1253" width="0.0691%" height="15" fill="rgb(228,69,28)" fg:x="4218" fg:w="3"/><text x="97.4389%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="97.1889%" y="1237" width="0.0691%" height="15" fill="rgb(212,51,22)" fg:x="4218" fg:w="3"/><text x="97.4389%" y="1247.50"></text></g><g><title>__rust_dealloc (3 samples, 0.07%)</title><rect x="97.1889%" y="1221" width="0.0691%" height="15" fill="rgb(227,113,0)" fg:x="4218" fg:w="3"/><text x="97.4389%" y="1231.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3 samples, 0.07%)</title><rect x="97.1889%" y="1205" width="0.0691%" height="15" fill="rgb(252,84,27)" fg:x="4218" fg:w="3"/><text x="97.4389%" y="1215.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.05%)</title><rect x="97.2120%" y="1189" width="0.0461%" height="15" fill="rgb(223,145,39)" fg:x="4219" fg:w="2"/><text x="97.4620%" y="1199.50"></text></g><g><title>free_fastpath (2 samples, 0.05%)</title><rect x="97.2120%" y="1173" width="0.0461%" height="15" fill="rgb(239,219,30)" fg:x="4219" fg:w="2"/><text x="97.4620%" y="1183.50"></text></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect x="97.2350%" y="1157" width="0.0230%" height="15" fill="rgb(224,196,39)" fg:x="4220" fg:w="1"/><text x="97.4850%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,simd_json::error::Error&gt;&gt;&gt; (28 samples, 0.65%)</title><rect x="96.6359%" y="1445" width="0.6452%" height="15" fill="rgb(205,35,43)" fg:x="4194" fg:w="28"/><text x="96.8859%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.62%)</title><rect x="96.6590%" y="1429" width="0.6221%" height="15" fill="rgb(228,201,21)" fg:x="4195" fg:w="27"/><text x="96.9090%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,simd_json::error::Error&gt;]&gt; (27 samples, 0.62%)</title><rect x="96.6590%" y="1413" width="0.6221%" height="15" fill="rgb(237,118,16)" fg:x="4195" fg:w="27"/><text x="96.9090%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;json_benchmark::copy::citm_catalog::CitmCatalog,simd_json::error::Error&gt;&gt; (27 samples, 0.62%)</title><rect x="96.6590%" y="1397" width="0.6221%" height="15" fill="rgb(241,17,19)" fg:x="4195" fg:w="27"/><text x="96.9090%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_benchmark::copy::citm_catalog::CitmCatalog&gt; (27 samples, 0.62%)</title><rect x="96.6590%" y="1381" width="0.6221%" height="15" fill="rgb(214,10,25)" fg:x="4195" fg:w="27"/><text x="96.9090%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_benchmark::copy::citm_catalog::Performance&gt;&gt; (14 samples, 0.32%)</title><rect x="96.9585%" y="1365" width="0.3226%" height="15" fill="rgb(238,37,29)" fg:x="4208" fg:w="14"/><text x="97.2085%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;json_benchmark::copy::citm_catalog::Performance&gt;&gt; (1 samples, 0.02%)</title><rect x="97.2581%" y="1349" width="0.0230%" height="15" fill="rgb(253,83,25)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1359.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="97.2581%" y="1333" width="0.0230%" height="15" fill="rgb(234,192,12)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="97.2581%" y="1317" width="0.0230%" height="15" fill="rgb(241,216,45)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="97.2581%" y="1301" width="0.0230%" height="15" fill="rgb(242,22,33)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1311.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="97.2581%" y="1285" width="0.0230%" height="15" fill="rgb(231,105,49)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1295.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="97.2581%" y="1269" width="0.0230%" height="15" fill="rgb(218,204,15)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1279.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="97.2581%" y="1253" width="0.0230%" height="15" fill="rgb(235,138,41)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1263.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="97.2581%" y="1237" width="0.0230%" height="15" fill="rgb(246,0,9)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1247.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="97.2581%" y="1221" width="0.0230%" height="15" fill="rgb(210,74,4)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1231.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="97.2581%" y="1205" width="0.0230%" height="15" fill="rgb(250,60,41)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1215.50"></text></g><g><title>arena_dalloc_large (1 samples, 0.02%)</title><rect x="97.2581%" y="1189" width="0.0230%" height="15" fill="rgb(220,115,12)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1199.50"></text></g><g><title>tcache_dalloc_large (1 samples, 0.02%)</title><rect x="97.2581%" y="1173" width="0.0230%" height="15" fill="rgb(237,100,13)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1183.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (1 samples, 0.02%)</title><rect x="97.2581%" y="1157" width="0.0230%" height="15" fill="rgb(213,55,26)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1167.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="97.2581%" y="1141" width="0.0230%" height="15" fill="rgb(216,17,4)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1151.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="97.2581%" y="1125" width="0.0230%" height="15" fill="rgb(220,153,47)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1135.50"></text></g><g><title>_rjem_je_large_dalloc_finish (1 samples, 0.02%)</title><rect x="97.2581%" y="1109" width="0.0230%" height="15" fill="rgb(215,131,9)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1119.50"></text></g><g><title>large_dalloc_finish_impl (1 samples, 0.02%)</title><rect x="97.2581%" y="1093" width="0.0230%" height="15" fill="rgb(233,46,42)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1103.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="97.2581%" y="1077" width="0.0230%" height="15" fill="rgb(226,86,7)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1087.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="97.2581%" y="1061" width="0.0230%" height="15" fill="rgb(239,226,21)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1071.50"></text></g><g><title>extent_try_coalesce_large (1 samples, 0.02%)</title><rect x="97.2581%" y="1045" width="0.0230%" height="15" fill="rgb(244,137,22)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1055.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.02%)</title><rect x="97.2581%" y="1029" width="0.0230%" height="15" fill="rgb(211,139,35)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1039.50"></text></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect x="97.2581%" y="1013" width="0.0230%" height="15" fill="rgb(214,62,50)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1023.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="97.2581%" y="997" width="0.0230%" height="15" fill="rgb(212,113,44)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="1007.50"></text></g><g><title>edata_list_inactive_remove (1 samples, 0.02%)</title><rect x="97.2581%" y="981" width="0.0230%" height="15" fill="rgb(226,150,43)" fg:x="4221" fg:w="1"/><text x="97.5081%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.07%)</title><rect x="97.2811%" y="1429" width="0.0691%" height="15" fill="rgb(250,71,37)" fg:x="4222" fg:w="3"/><text x="97.5311%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.07%)</title><rect x="97.2811%" y="1413" width="0.0691%" height="15" fill="rgb(219,76,19)" fg:x="4222" fg:w="3"/><text x="97.5311%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.07%)</title><rect x="97.2811%" y="1397" width="0.0691%" height="15" fill="rgb(250,39,11)" fg:x="4222" fg:w="3"/><text x="97.5311%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.07%)</title><rect x="97.2811%" y="1381" width="0.0691%" height="15" fill="rgb(230,64,31)" fg:x="4222" fg:w="3"/><text x="97.5311%" y="1391.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.07%)</title><rect x="97.2811%" y="1365" width="0.0691%" height="15" fill="rgb(208,222,23)" fg:x="4222" fg:w="3"/><text x="97.5311%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.07%)</title><rect x="97.2811%" y="1349" width="0.0691%" height="15" fill="rgb(227,125,18)" fg:x="4222" fg:w="3"/><text x="97.5311%" y="1359.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="97.2811%" y="1333" width="0.0691%" height="15" fill="rgb(234,210,9)" fg:x="4222" fg:w="3"/><text x="97.5311%" y="1343.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="97.3502%" y="1253" width="0.0230%" height="15" fill="rgb(217,127,24)" fg:x="4225" fg:w="1"/><text x="97.6002%" y="1263.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="97.3502%" y="1237" width="0.0230%" height="15" fill="rgb(239,141,48)" fg:x="4225" fg:w="1"/><text x="97.6002%" y="1247.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="97.3502%" y="1221" width="0.0230%" height="15" fill="rgb(227,109,8)" fg:x="4225" fg:w="1"/><text x="97.6002%" y="1231.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="97.3502%" y="1205" width="0.0230%" height="15" fill="rgb(235,184,23)" fg:x="4225" fg:w="1"/><text x="97.6002%" y="1215.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="97.3502%" y="1189" width="0.0230%" height="15" fill="rgb(227,226,48)" fg:x="4225" fg:w="1"/><text x="97.6002%" y="1199.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (2 samples, 0.05%)</title><rect x="97.3502%" y="1301" width="0.0461%" height="15" fill="rgb(206,150,11)" fg:x="4225" fg:w="2"/><text x="97.6002%" y="1311.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_map (2 samples, 0.05%)</title><rect x="97.3502%" y="1285" width="0.0461%" height="15" fill="rgb(254,2,33)" fg:x="4225" fg:w="2"/><text x="97.6002%" y="1295.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.05%)</title><rect x="97.3502%" y="1269" width="0.0461%" height="15" fill="rgb(243,160,20)" fg:x="4225" fg:w="2"/><text x="97.6002%" y="1279.50"></text></g><g><title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect x="97.3733%" y="1253" width="0.0230%" height="15" fill="rgb(218,208,30)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1263.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect x="97.3733%" y="1237" width="0.0230%" height="15" fill="rgb(224,120,49)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1247.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="97.3733%" y="1221" width="0.0230%" height="15" fill="rgb(246,12,2)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1231.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="97.3733%" y="1205" width="0.0230%" height="15" fill="rgb(236,117,3)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1215.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize (1 samples, 0.02%)</title><rect x="97.3733%" y="1189" width="0.0230%" height="15" fill="rgb(216,128,52)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1199.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="97.3733%" y="1173" width="0.0230%" height="15" fill="rgb(246,145,19)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1183.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Event&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="97.3733%" y="1157" width="0.0230%" height="15" fill="rgb(222,11,46)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1167.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="97.3733%" y="1141" width="0.0230%" height="15" fill="rgb(245,82,36)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1151.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="97.3733%" y="1125" width="0.0230%" height="15" fill="rgb(250,73,51)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1135.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="97.3733%" y="1109" width="0.0230%" height="15" fill="rgb(221,189,23)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1119.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="97.3733%" y="1093" width="0.0230%" height="15" fill="rgb(210,33,7)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1103.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect x="97.3733%" y="1077" width="0.0230%" height="15" fill="rgb(210,107,22)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1087.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="97.3733%" y="1061" width="0.0230%" height="15" fill="rgb(222,116,37)" fg:x="4226" fg:w="1"/><text x="97.6233%" y="1071.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="97.3963%" y="1061" width="0.0230%" height="15" fill="rgb(254,17,48)" fg:x="4227" fg:w="1"/><text x="97.6463%" y="1071.50"></text></g><g><title>serde::de::MapAccess::next_key (2 samples, 0.05%)</title><rect x="97.3963%" y="1157" width="0.0461%" height="15" fill="rgb(224,36,32)" fg:x="4227" fg:w="2"/><text x="97.6463%" y="1167.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.05%)</title><rect x="97.3963%" y="1141" width="0.0461%" height="15" fill="rgb(232,90,46)" fg:x="4227" fg:w="2"/><text x="97.6463%" y="1151.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="97.3963%" y="1125" width="0.0461%" height="15" fill="rgb(241,66,40)" fg:x="4227" fg:w="2"/><text x="97.6463%" y="1135.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.05%)</title><rect x="97.3963%" y="1109" width="0.0461%" height="15" fill="rgb(249,184,29)" fg:x="4227" fg:w="2"/><text x="97.6463%" y="1119.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.05%)</title><rect x="97.3963%" y="1093" width="0.0461%" height="15" fill="rgb(231,181,1)" fg:x="4227" fg:w="2"/><text x="97.6463%" y="1103.50"></text></g><g><title>&lt;simd_json::serde::de::MapKey as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.05%)</title><rect x="97.3963%" y="1077" width="0.0461%" height="15" fill="rgb(224,94,2)" fg:x="4227" fg:w="2"/><text x="97.6463%" y="1087.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.02%)</title><rect x="97.4194%" y="1061" width="0.0230%" height="15" fill="rgb(229,170,15)" fg:x="4228" fg:w="1"/><text x="97.6694%" y="1071.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="97.4194%" y="1045" width="0.0230%" height="15" fill="rgb(240,127,35)" fg:x="4228" fg:w="1"/><text x="97.6694%" y="1055.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="97.4194%" y="1029" width="0.0230%" height="15" fill="rgb(248,196,34)" fg:x="4228" fg:w="1"/><text x="97.6694%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="97.4194%" y="1013" width="0.0230%" height="15" fill="rgb(236,137,7)" fg:x="4228" fg:w="1"/><text x="97.6694%" y="1023.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="97.4194%" y="997" width="0.0230%" height="15" fill="rgb(235,127,16)" fg:x="4228" fg:w="1"/><text x="97.6694%" y="1007.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="97.4194%" y="981" width="0.0230%" height="15" fill="rgb(250,192,54)" fg:x="4228" fg:w="1"/><text x="97.6694%" y="991.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (3 samples, 0.07%)</title><rect x="97.4424%" y="1109" width="0.0691%" height="15" fill="rgb(218,98,20)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="1119.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (3 samples, 0.07%)</title><rect x="97.4424%" y="1093" width="0.0691%" height="15" fill="rgb(230,176,47)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="1103.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.07%)</title><rect x="97.4424%" y="1077" width="0.0691%" height="15" fill="rgb(244,2,33)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="1087.50"></text></g><g><title>serde::de::SeqAccess::next_element (3 samples, 0.07%)</title><rect x="97.4424%" y="1061" width="0.0691%" height="15" fill="rgb(231,100,17)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="1071.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::SeqAccess&gt;::next_element_seed (3 samples, 0.07%)</title><rect x="97.4424%" y="1045" width="0.0691%" height="15" fill="rgb(245,23,12)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="1055.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.07%)</title><rect x="97.4424%" y="1029" width="0.0691%" height="15" fill="rgb(249,55,22)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="1039.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (3 samples, 0.07%)</title><rect x="97.4424%" y="1013" width="0.0691%" height="15" fill="rgb(207,134,9)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="1023.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (3 samples, 0.07%)</title><rect x="97.4424%" y="997" width="0.0691%" height="15" fill="rgb(218,134,0)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="1007.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.07%)</title><rect x="97.4424%" y="981" width="0.0691%" height="15" fill="rgb(213,212,33)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="991.50"></text></g><g><title>serde::de::MapAccess::next_value (3 samples, 0.07%)</title><rect x="97.4424%" y="965" width="0.0691%" height="15" fill="rgb(252,106,18)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="975.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.07%)</title><rect x="97.4424%" y="949" width="0.0691%" height="15" fill="rgb(208,126,42)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.07%)</title><rect x="97.4424%" y="933" width="0.0691%" height="15" fill="rgb(246,175,29)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="943.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (3 samples, 0.07%)</title><rect x="97.4424%" y="917" width="0.0691%" height="15" fill="rgb(215,13,50)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="927.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (3 samples, 0.07%)</title><rect x="97.4424%" y="901" width="0.0691%" height="15" fill="rgb(216,172,15)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="911.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.07%)</title><rect x="97.4424%" y="885" width="0.0691%" height="15" fill="rgb(212,103,13)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="895.50"></text></g><g><title>serde::de::SeqAccess::next_element (3 samples, 0.07%)</title><rect x="97.4424%" y="869" width="0.0691%" height="15" fill="rgb(231,171,36)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="879.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::SeqAccess&gt;::next_element_seed (3 samples, 0.07%)</title><rect x="97.4424%" y="853" width="0.0691%" height="15" fill="rgb(250,123,20)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.07%)</title><rect x="97.4424%" y="837" width="0.0691%" height="15" fill="rgb(212,53,50)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="847.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (3 samples, 0.07%)</title><rect x="97.4424%" y="821" width="0.0691%" height="15" fill="rgb(243,54,12)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="831.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (3 samples, 0.07%)</title><rect x="97.4424%" y="805" width="0.0691%" height="15" fill="rgb(234,101,34)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="815.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.07%)</title><rect x="97.4424%" y="789" width="0.0691%" height="15" fill="rgb(254,67,22)" fg:x="4229" fg:w="3"/><text x="97.6924%" y="799.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="97.4885%" y="773" width="0.0230%" height="15" fill="rgb(250,35,47)" fg:x="4231" fg:w="1"/><text x="97.7385%" y="783.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="97.4885%" y="757" width="0.0230%" height="15" fill="rgb(226,126,38)" fg:x="4231" fg:w="1"/><text x="97.7385%" y="767.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="97.4885%" y="741" width="0.0230%" height="15" fill="rgb(216,138,53)" fg:x="4231" fg:w="1"/><text x="97.7385%" y="751.50"></text></g><g><title>&lt;json_benchmark::empty::Array as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="97.4885%" y="725" width="0.0230%" height="15" fill="rgb(246,199,43)" fg:x="4231" fg:w="1"/><text x="97.7385%" y="735.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_tuple (1 samples, 0.02%)</title><rect x="97.4885%" y="709" width="0.0230%" height="15" fill="rgb(232,125,11)" fg:x="4231" fg:w="1"/><text x="97.7385%" y="719.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect x="97.4885%" y="693" width="0.0230%" height="15" fill="rgb(218,219,45)" fg:x="4231" fg:w="1"/><text x="97.7385%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="97.4885%" y="677" width="0.0230%" height="15" fill="rgb(216,102,54)" fg:x="4231" fg:w="1"/><text x="97.7385%" y="687.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (8 samples, 0.18%)</title><rect x="97.3502%" y="1397" width="0.1843%" height="15" fill="rgb(250,228,7)" fg:x="4225" fg:w="8"/><text x="97.6002%" y="1407.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (8 samples, 0.18%)</title><rect x="97.3502%" y="1381" width="0.1843%" height="15" fill="rgb(226,125,25)" fg:x="4225" fg:w="8"/><text x="97.6002%" y="1391.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.18%)</title><rect x="97.3502%" y="1365" width="0.1843%" height="15" fill="rgb(224,165,27)" fg:x="4225" fg:w="8"/><text x="97.6002%" y="1375.50"></text></g><g><title>serde::de::MapAccess::next_value (8 samples, 0.18%)</title><rect x="97.3502%" y="1349" width="0.1843%" height="15" fill="rgb(233,86,3)" fg:x="4225" fg:w="8"/><text x="97.6002%" y="1359.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (8 samples, 0.18%)</title><rect x="97.3502%" y="1333" width="0.1843%" height="15" fill="rgb(228,116,20)" fg:x="4225" fg:w="8"/><text x="97.6002%" y="1343.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.18%)</title><rect x="97.3502%" y="1317" width="0.1843%" height="15" fill="rgb(209,192,17)" fg:x="4225" fg:w="8"/><text x="97.6002%" y="1327.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (6 samples, 0.14%)</title><rect x="97.3963%" y="1301" width="0.1382%" height="15" fill="rgb(224,88,34)" fg:x="4227" fg:w="6"/><text x="97.6463%" y="1311.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_seq (6 samples, 0.14%)</title><rect x="97.3963%" y="1285" width="0.1382%" height="15" fill="rgb(233,38,6)" fg:x="4227" fg:w="6"/><text x="97.6463%" y="1295.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (6 samples, 0.14%)</title><rect x="97.3963%" y="1269" width="0.1382%" height="15" fill="rgb(212,59,30)" fg:x="4227" fg:w="6"/><text x="97.6463%" y="1279.50"></text></g><g><title>serde::de::SeqAccess::next_element (6 samples, 0.14%)</title><rect x="97.3963%" y="1253" width="0.1382%" height="15" fill="rgb(213,80,3)" fg:x="4227" fg:w="6"/><text x="97.6463%" y="1263.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::SeqAccess&gt;::next_element_seed (6 samples, 0.14%)</title><rect x="97.3963%" y="1237" width="0.1382%" height="15" fill="rgb(251,178,7)" fg:x="4227" fg:w="6"/><text x="97.6463%" y="1247.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.14%)</title><rect x="97.3963%" y="1221" width="0.1382%" height="15" fill="rgb(213,154,26)" fg:x="4227" fg:w="6"/><text x="97.6463%" y="1231.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (6 samples, 0.14%)</title><rect x="97.3963%" y="1205" width="0.1382%" height="15" fill="rgb(238,165,49)" fg:x="4227" fg:w="6"/><text x="97.6463%" y="1215.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_struct (6 samples, 0.14%)</title><rect x="97.3963%" y="1189" width="0.1382%" height="15" fill="rgb(248,91,46)" fg:x="4227" fg:w="6"/><text x="97.6463%" y="1199.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.14%)</title><rect x="97.3963%" y="1173" width="0.1382%" height="15" fill="rgb(244,21,52)" fg:x="4227" fg:w="6"/><text x="97.6463%" y="1183.50"></text></g><g><title>serde::de::MapAccess::next_value (4 samples, 0.09%)</title><rect x="97.4424%" y="1157" width="0.0922%" height="15" fill="rgb(247,122,20)" fg:x="4229" fg:w="4"/><text x="97.6924%" y="1167.50"></text></g><g><title>&lt;simd_json::serde::de::CommaSeparated as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.09%)</title><rect x="97.4424%" y="1141" width="0.0922%" height="15" fill="rgb(218,27,9)" fg:x="4229" fg:w="4"/><text x="97.6924%" y="1151.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.09%)</title><rect x="97.4424%" y="1125" width="0.0922%" height="15" fill="rgb(246,7,6)" fg:x="4229" fg:w="4"/><text x="97.6924%" y="1135.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="97.5115%" y="1109" width="0.0230%" height="15" fill="rgb(227,135,54)" fg:x="4232" fg:w="1"/><text x="97.7615%" y="1119.50"></text></g><g><title>simd_json::serde::de::&lt;impl serde::de::Deserializer for &amp;mut simd_json::Deserializer&gt;::deserialize_u32 (1 samples, 0.02%)</title><rect x="97.5115%" y="1093" width="0.0230%" height="15" fill="rgb(247,14,11)" fg:x="4232" fg:w="1"/><text x="97.7615%" y="1103.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="97.5115%" y="1077" width="0.0230%" height="15" fill="rgb(206,149,34)" fg:x="4232" fg:w="1"/><text x="97.7615%" y="1087.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="97.5115%" y="1061" width="0.0230%" height="15" fill="rgb(227,228,4)" fg:x="4232" fg:w="1"/><text x="97.7615%" y="1071.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInputAVX as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::find_whitespace_and_structurals (2 samples, 0.05%)</title><rect x="97.5346%" y="1317" width="0.0461%" height="15" fill="rgb(238,218,28)" fg:x="4233" fg:w="2"/><text x="97.7846%" y="1327.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInputAVX as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::flatten_bits (2 samples, 0.05%)</title><rect x="97.5806%" y="1317" width="0.0461%" height="15" fill="rgb(252,86,40)" fg:x="4235" fg:w="2"/><text x="97.8306%" y="1327.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.02%)</title><rect x="97.6037%" y="1301" width="0.0230%" height="15" fill="rgb(251,225,11)" fg:x="4236" fg:w="1"/><text x="97.8537%" y="1311.50"></text></g><g><title>?? (5 samples, 0.12%)</title><rect x="97.5346%" y="1333" width="0.1152%" height="15" fill="rgb(206,46,49)" fg:x="4233" fg:w="5"/><text x="97.7846%" y="1343.50"></text></g><g><title>simd_json::Stage1Parse::find_odd_backslash_sequences (1 samples, 0.02%)</title><rect x="97.6267%" y="1317" width="0.0230%" height="15" fill="rgb(245,128,24)" fg:x="4237" fg:w="1"/><text x="97.8767%" y="1327.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInputAVX as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::cmp_mask_against_input (1 samples, 0.02%)</title><rect x="97.6267%" y="1301" width="0.0230%" height="15" fill="rgb(219,177,34)" fg:x="4237" fg:w="1"/><text x="97.8767%" y="1311.50"></text></g><g><title>?? (9 samples, 0.21%)</title><rect x="97.5346%" y="1349" width="0.2074%" height="15" fill="rgb(218,60,48)" fg:x="4233" fg:w="9"/><text x="97.7846%" y="1359.50"></text></g><g><title>simd_json::Deserializer::from_slice (4 samples, 0.09%)</title><rect x="97.6498%" y="1333" width="0.0922%" height="15" fill="rgb(221,11,5)" fg:x="4238" fg:w="4"/><text x="97.8998%" y="1343.50"></text></g><g><title>?? (11 samples, 0.25%)</title><rect x="97.5346%" y="1365" width="0.2535%" height="15" fill="rgb(220,148,13)" fg:x="4233" fg:w="11"/><text x="97.7846%" y="1375.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.05%)</title><rect x="97.7419%" y="1349" width="0.0461%" height="15" fill="rgb(210,16,3)" fg:x="4242" fg:w="2"/><text x="97.9919%" y="1359.50"></text></g><g><title>core::ptr::write (2 samples, 0.05%)</title><rect x="97.7419%" y="1333" width="0.0461%" height="15" fill="rgb(236,80,2)" fg:x="4242" fg:w="2"/><text x="97.9919%" y="1343.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.09%)</title><rect x="97.7880%" y="1365" width="0.0922%" height="15" fill="rgb(239,129,19)" fg:x="4244" fg:w="4"/><text x="98.0380%" y="1375.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.09%)</title><rect x="97.7880%" y="1349" width="0.0922%" height="15" fill="rgb(220,106,35)" fg:x="4244" fg:w="4"/><text x="98.0380%" y="1359.50"></text></g><g><title>simd_json::Deserializer::parse_str_ (1 samples, 0.02%)</title><rect x="98.0415%" y="1333" width="0.0230%" height="15" fill="rgb(252,139,45)" fg:x="4255" fg:w="1"/><text x="98.2915%" y="1343.50"></text></g><g><title>simd_json::Deserializer::parse_str_ (3 samples, 0.07%)</title><rect x="98.0184%" y="1349" width="0.0691%" height="15" fill="rgb(229,8,36)" fg:x="4254" fg:w="3"/><text x="98.2684%" y="1359.50"></text></g><g><title>simd_json::avx2::deser::parse_str_avx (1 samples, 0.02%)</title><rect x="98.0645%" y="1333" width="0.0230%" height="15" fill="rgb(230,126,33)" fg:x="4256" fg:w="1"/><text x="98.3145%" y="1343.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="98.0645%" y="1317" width="0.0230%" height="15" fill="rgb(239,140,21)" fg:x="4256" fg:w="1"/><text x="98.3145%" y="1327.50"></text></g><g><title>?? (4,179 samples, 96.29%)</title><rect x="1.8203%" y="1541" width="96.2903%" height="15" fill="rgb(254,104,9)" fg:x="79" fg:w="4179"/><text x="2.0703%" y="1551.50">??</text></g><g><title>?? (4,179 samples, 96.29%)</title><rect x="1.8203%" y="1525" width="96.2903%" height="15" fill="rgb(239,52,14)" fg:x="79" fg:w="4179"/><text x="2.0703%" y="1535.50">??</text></g><g><title>criterion::routine::Routine::profile (4,179 samples, 96.29%)</title><rect x="1.8203%" y="1509" width="96.2903%" height="15" fill="rgb(208,227,44)" fg:x="79" fg:w="4179"/><text x="2.0703%" y="1519.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (1,482 samples, 34.15%)</title><rect x="63.9631%" y="1493" width="34.1475%" height="15" fill="rgb(246,18,19)" fg:x="2776" fg:w="1482"/><text x="64.2131%" y="1503.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::rout..</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}} (1,482 samples, 34.15%)</title><rect x="63.9631%" y="1477" width="34.1475%" height="15" fill="rgb(235,228,25)" fg:x="2776" fg:w="1482"/><text x="64.2131%" y="1487.50">deserialize_struct::bench_citm_catalog_CitmCatalog::_{{..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched (1,482 samples, 34.15%)</title><rect x="63.9631%" y="1461" width="34.1475%" height="15" fill="rgb(240,156,20)" fg:x="2776" fg:w="1482"/><text x="64.2131%" y="1471.50">criterion::bencher::Bencher&lt;M&gt;::iter_batched</text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog::_{{closure}}::_{{closure}} (36 samples, 0.83%)</title><rect x="97.2811%" y="1445" width="0.8295%" height="15" fill="rgb(224,8,20)" fg:x="4222" fg:w="36"/><text x="97.5311%" y="1455.50"></text></g><g><title>deserialize_struct::simd_json_parse_struct (33 samples, 0.76%)</title><rect x="97.3502%" y="1429" width="0.7604%" height="15" fill="rgb(214,12,52)" fg:x="4225" fg:w="33"/><text x="97.6002%" y="1439.50"></text></g><g><title>simd_json::serde::from_slice (33 samples, 0.76%)</title><rect x="97.3502%" y="1413" width="0.7604%" height="15" fill="rgb(211,220,47)" fg:x="4225" fg:w="33"/><text x="97.6002%" y="1423.50"></text></g><g><title>simd_json::Deserializer::from_slice (25 samples, 0.58%)</title><rect x="97.5346%" y="1397" width="0.5760%" height="15" fill="rgb(250,173,5)" fg:x="4233" fg:w="25"/><text x="97.7846%" y="1407.50"></text></g><g><title>?? (25 samples, 0.58%)</title><rect x="97.5346%" y="1381" width="0.5760%" height="15" fill="rgb(250,125,52)" fg:x="4233" fg:w="25"/><text x="97.7846%" y="1391.50"></text></g><g><title>simd_json::Deserializer::from_slice (10 samples, 0.23%)</title><rect x="97.8802%" y="1365" width="0.2304%" height="15" fill="rgb(209,133,18)" fg:x="4248" fg:w="10"/><text x="98.1302%" y="1375.50"></text></g><g><title>simd_json::numberparse::correct::&lt;impl simd_json::Deserializer&gt;::parse_number (1 samples, 0.02%)</title><rect x="98.0876%" y="1349" width="0.0230%" height="15" fill="rgb(216,173,22)" fg:x="4257" fg:w="1"/><text x="98.3376%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.1106%" y="853" width="0.0230%" height="15" fill="rgb(205,3,22)" fg:x="4258" fg:w="1"/><text x="98.3606%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect x="98.1106%" y="837" width="0.0230%" height="15" fill="rgb(248,22,20)" fg:x="4258" fg:w="1"/><text x="98.3606%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.1106%" y="821" width="0.0230%" height="15" fill="rgb(233,6,29)" fg:x="4258" fg:w="1"/><text x="98.3606%" y="831.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.1106%" y="805" width="0.0230%" height="15" fill="rgb(240,22,54)" fg:x="4258" fg:w="1"/><text x="98.3606%" y="815.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.1106%" y="789" width="0.0230%" height="15" fill="rgb(231,133,32)" fg:x="4258" fg:w="1"/><text x="98.3606%" y="799.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="98.1106%" y="773" width="0.0230%" height="15" fill="rgb(248,193,4)" fg:x="4258" fg:w="1"/><text x="98.3606%" y="783.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect x="98.1106%" y="757" width="0.0230%" height="15" fill="rgb(211,178,46)" fg:x="4258" fg:w="1"/><text x="98.3606%" y="767.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.1106%" y="741" width="0.0230%" height="15" fill="rgb(224,5,42)" fg:x="4258" fg:w="1"/><text x="98.3606%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.1106%" y="725" width="0.0230%" height="15" fill="rgb(239,176,25)" fg:x="4258" fg:w="1"/><text x="98.3606%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.1567%" y="565" width="0.0230%" height="15" fill="rgb(245,187,50)" fg:x="4260" fg:w="1"/><text x="98.4067%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect x="98.1567%" y="549" width="0.0230%" height="15" fill="rgb(248,24,15)" fg:x="4260" fg:w="1"/><text x="98.4067%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.1567%" y="533" width="0.0230%" height="15" fill="rgb(205,166,13)" fg:x="4260" fg:w="1"/><text x="98.4067%" y="543.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.1567%" y="517" width="0.0230%" height="15" fill="rgb(208,114,23)" fg:x="4260" fg:w="1"/><text x="98.4067%" y="527.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.1567%" y="501" width="0.0230%" height="15" fill="rgb(239,127,18)" fg:x="4260" fg:w="1"/><text x="98.4067%" y="511.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="98.1567%" y="485" width="0.0230%" height="15" fill="rgb(219,154,28)" fg:x="4260" fg:w="1"/><text x="98.4067%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (1 samples, 0.02%)</title><rect x="98.1567%" y="469" width="0.0230%" height="15" fill="rgb(225,157,23)" fg:x="4260" fg:w="1"/><text x="98.4067%" y="479.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.1567%" y="453" width="0.0230%" height="15" fill="rgb(219,8,6)" fg:x="4260" fg:w="1"/><text x="98.4067%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.1567%" y="437" width="0.0230%" height="15" fill="rgb(212,47,6)" fg:x="4260" fg:w="1"/><text x="98.4067%" y="447.50"></text></g><g><title>core::cmp::PartialEq::ne (4 samples, 0.09%)</title><rect x="98.1106%" y="1525" width="0.0922%" height="15" fill="rgb(224,190,4)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1535.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1509" width="0.0922%" height="15" fill="rgb(239,183,29)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1519.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1493" width="0.0922%" height="15" fill="rgb(213,57,7)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1477" width="0.0922%" height="15" fill="rgb(216,148,1)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.09%)</title><rect x="98.1106%" y="1461" width="0.0922%" height="15" fill="rgb(236,182,29)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.09%)</title><rect x="98.1106%" y="1445" width="0.0922%" height="15" fill="rgb(244,120,48)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (4 samples, 0.09%)</title><rect x="98.1106%" y="1429" width="0.0922%" height="15" fill="rgb(206,71,34)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (4 samples, 0.09%)</title><rect x="98.1106%" y="1413" width="0.0922%" height="15" fill="rgb(242,32,6)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1423.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1397" width="0.0922%" height="15" fill="rgb(241,35,3)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1381" width="0.0922%" height="15" fill="rgb(222,62,19)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1391.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1365" width="0.0922%" height="15" fill="rgb(223,110,41)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1375.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1349" width="0.0922%" height="15" fill="rgb(208,224,4)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1359.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1333" width="0.0922%" height="15" fill="rgb(241,137,19)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1343.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.09%)</title><rect x="98.1106%" y="1317" width="0.0922%" height="15" fill="rgb(244,24,17)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.09%)</title><rect x="98.1106%" y="1301" width="0.0922%" height="15" fill="rgb(245,178,49)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.09%)</title><rect x="98.1106%" y="1285" width="0.0922%" height="15" fill="rgb(219,160,38)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (4 samples, 0.09%)</title><rect x="98.1106%" y="1269" width="0.0922%" height="15" fill="rgb(228,137,14)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1279.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (4 samples, 0.09%)</title><rect x="98.1106%" y="1253" width="0.0922%" height="15" fill="rgb(237,134,11)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1263.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1237" width="0.0922%" height="15" fill="rgb(211,126,44)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1247.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1221" width="0.0922%" height="15" fill="rgb(226,171,33)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1231.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1205" width="0.0922%" height="15" fill="rgb(253,99,13)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1189" width="0.0922%" height="15" fill="rgb(244,48,7)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.09%)</title><rect x="98.1106%" y="1173" width="0.0922%" height="15" fill="rgb(244,217,54)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.09%)</title><rect x="98.1106%" y="1157" width="0.0922%" height="15" fill="rgb(224,15,18)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (4 samples, 0.09%)</title><rect x="98.1106%" y="1141" width="0.0922%" height="15" fill="rgb(244,99,12)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (4 samples, 0.09%)</title><rect x="98.1106%" y="1125" width="0.0922%" height="15" fill="rgb(233,226,8)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1135.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1109" width="0.0922%" height="15" fill="rgb(229,211,3)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1093" width="0.0922%" height="15" fill="rgb(216,140,21)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1103.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1077" width="0.0922%" height="15" fill="rgb(234,122,30)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1087.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1061" width="0.0922%" height="15" fill="rgb(236,25,46)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1071.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="1045" width="0.0922%" height="15" fill="rgb(217,52,54)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1055.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.09%)</title><rect x="98.1106%" y="1029" width="0.0922%" height="15" fill="rgb(222,29,26)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.09%)</title><rect x="98.1106%" y="1013" width="0.0922%" height="15" fill="rgb(216,177,29)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.09%)</title><rect x="98.1106%" y="997" width="0.0922%" height="15" fill="rgb(247,136,51)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (4 samples, 0.09%)</title><rect x="98.1106%" y="981" width="0.0922%" height="15" fill="rgb(231,47,47)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="991.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (4 samples, 0.09%)</title><rect x="98.1106%" y="965" width="0.0922%" height="15" fill="rgb(211,192,36)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="949" width="0.0922%" height="15" fill="rgb(229,156,32)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="959.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="933" width="0.0922%" height="15" fill="rgb(248,213,20)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="943.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="917" width="0.0922%" height="15" fill="rgb(217,64,7)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.09%)</title><rect x="98.1106%" y="901" width="0.0922%" height="15" fill="rgb(232,142,8)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.09%)</title><rect x="98.1106%" y="885" width="0.0922%" height="15" fill="rgb(224,92,44)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.09%)</title><rect x="98.1106%" y="869" width="0.0922%" height="15" fill="rgb(214,169,17)" fg:x="4258" fg:w="4"/><text x="98.3606%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.07%)</title><rect x="98.1336%" y="853" width="0.0691%" height="15" fill="rgb(210,59,37)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (3 samples, 0.07%)</title><rect x="98.1336%" y="837" width="0.0691%" height="15" fill="rgb(214,116,48)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="847.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (3 samples, 0.07%)</title><rect x="98.1336%" y="821" width="0.0691%" height="15" fill="rgb(244,191,6)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="98.1336%" y="805" width="0.0691%" height="15" fill="rgb(241,50,52)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="815.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (3 samples, 0.07%)</title><rect x="98.1336%" y="789" width="0.0691%" height="15" fill="rgb(236,75,39)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="799.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.07%)</title><rect x="98.1336%" y="773" width="0.0691%" height="15" fill="rgb(236,99,0)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.07%)</title><rect x="98.1336%" y="757" width="0.0691%" height="15" fill="rgb(207,202,15)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.07%)</title><rect x="98.1336%" y="741" width="0.0691%" height="15" fill="rgb(233,207,14)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.07%)</title><rect x="98.1336%" y="725" width="0.0691%" height="15" fill="rgb(226,27,51)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="98.1336%" y="709" width="0.0691%" height="15" fill="rgb(206,104,42)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.07%)</title><rect x="98.1336%" y="693" width="0.0691%" height="15" fill="rgb(212,225,4)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (3 samples, 0.07%)</title><rect x="98.1336%" y="677" width="0.0691%" height="15" fill="rgb(233,96,42)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="98.1336%" y="661" width="0.0691%" height="15" fill="rgb(229,21,32)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (3 samples, 0.07%)</title><rect x="98.1336%" y="645" width="0.0691%" height="15" fill="rgb(226,216,24)" fg:x="4259" fg:w="3"/><text x="98.3836%" y="655.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="98.1567%" y="629" width="0.0461%" height="15" fill="rgb(221,163,17)" fg:x="4260" fg:w="2"/><text x="98.4067%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="98.1567%" y="613" width="0.0461%" height="15" fill="rgb(216,216,42)" fg:x="4260" fg:w="2"/><text x="98.4067%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.05%)</title><rect x="98.1567%" y="597" width="0.0461%" height="15" fill="rgb(240,118,7)" fg:x="4260" fg:w="2"/><text x="98.4067%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="98.1567%" y="581" width="0.0461%" height="15" fill="rgb(221,67,37)" fg:x="4260" fg:w="2"/><text x="98.4067%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect x="98.1797%" y="565" width="0.0230%" height="15" fill="rgb(241,32,44)" fg:x="4261" fg:w="1"/><text x="98.4297%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.02%)</title><rect x="98.1797%" y="549" width="0.0230%" height="15" fill="rgb(235,204,43)" fg:x="4261" fg:w="1"/><text x="98.4297%" y="559.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (1 samples, 0.02%)</title><rect x="98.1797%" y="533" width="0.0230%" height="15" fill="rgb(213,116,10)" fg:x="4261" fg:w="1"/><text x="98.4297%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="98.1797%" y="517" width="0.0230%" height="15" fill="rgb(239,15,48)" fg:x="4261" fg:w="1"/><text x="98.4297%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="98.1797%" y="501" width="0.0230%" height="15" fill="rgb(207,123,36)" fg:x="4261" fg:w="1"/><text x="98.4297%" y="511.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.02%)</title><rect x="98.1797%" y="485" width="0.0230%" height="15" fill="rgb(209,103,30)" fg:x="4261" fg:w="1"/><text x="98.4297%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="98.1797%" y="469" width="0.0230%" height="15" fill="rgb(238,100,19)" fg:x="4261" fg:w="1"/><text x="98.4297%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="98.1797%" y="453" width="0.0230%" height="15" fill="rgb(244,30,14)" fg:x="4261" fg:w="1"/><text x="98.4297%" y="463.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.2028%" y="1189" width="0.0230%" height="15" fill="rgb(249,174,6)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="98.2028%" y="1173" width="0.0230%" height="15" fill="rgb(235,213,41)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="98.2028%" y="1157" width="0.0230%" height="15" fill="rgb(213,118,6)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="98.2028%" y="1141" width="0.0230%" height="15" fill="rgb(235,44,51)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.2028%" y="1125" width="0.0230%" height="15" fill="rgb(217,9,53)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="98.2028%" y="1109" width="0.0230%" height="15" fill="rgb(237,172,34)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="98.2028%" y="1093" width="0.0230%" height="15" fill="rgb(206,206,11)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1103.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="98.2028%" y="1077" width="0.0230%" height="15" fill="rgb(214,149,29)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1087.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="98.2028%" y="1061" width="0.0230%" height="15" fill="rgb(208,123,3)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1071.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="98.2028%" y="1045" width="0.0230%" height="15" fill="rgb(229,126,4)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1055.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="98.2028%" y="1029" width="0.0230%" height="15" fill="rgb(222,92,36)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1039.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="98.2028%" y="1013" width="0.0230%" height="15" fill="rgb(216,39,41)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1023.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="98.2028%" y="997" width="0.0230%" height="15" fill="rgb(253,127,28)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="1007.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (1 samples, 0.02%)</title><rect x="98.2028%" y="981" width="0.0230%" height="15" fill="rgb(249,152,51)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="991.50"></text></g><g><title>pac_dalloc_impl (1 samples, 0.02%)</title><rect x="98.2028%" y="965" width="0.0230%" height="15" fill="rgb(209,123,42)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="975.50"></text></g><g><title>_rjem_je_extent_record (1 samples, 0.02%)</title><rect x="98.2028%" y="949" width="0.0230%" height="15" fill="rgb(241,118,22)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="959.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.02%)</title><rect x="98.2028%" y="933" width="0.0230%" height="15" fill="rgb(208,25,7)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="943.50"></text></g><g><title>extent_deactivate_locked_impl (1 samples, 0.02%)</title><rect x="98.2028%" y="917" width="0.0230%" height="15" fill="rgb(243,144,39)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="927.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="98.2028%" y="901" width="0.0230%" height="15" fill="rgb(250,50,5)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="911.50"></text></g><g><title>eset_stats_add (1 samples, 0.02%)</title><rect x="98.2028%" y="885" width="0.0230%" height="15" fill="rgb(207,67,11)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="895.50"></text></g><g><title>_rjem_je_eset_insert (1 samples, 0.02%)</title><rect x="98.2028%" y="869" width="0.0230%" height="15" fill="rgb(245,204,40)" fg:x="4262" fg:w="1"/><text x="98.4528%" y="879.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="98.2258%" y="629" width="0.0230%" height="15" fill="rgb(238,228,24)" fg:x="4263" fg:w="1"/><text x="98.4758%" y="639.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="98.2258%" y="613" width="0.0230%" height="15" fill="rgb(217,116,22)" fg:x="4263" fg:w="1"/><text x="98.4758%" y="623.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="98.2258%" y="597" width="0.0230%" height="15" fill="rgb(234,98,12)" fg:x="4263" fg:w="1"/><text x="98.4758%" y="607.50"></text></g><g><title>tcache_bin_flush_impl (1 samples, 0.02%)</title><rect x="98.2258%" y="581" width="0.0230%" height="15" fill="rgb(242,170,50)" fg:x="4263" fg:w="1"/><text x="98.4758%" y="591.50"></text></g><g><title>arena_dalloc_bin_locked_step (1 samples, 0.02%)</title><rect x="98.2258%" y="565" width="0.0230%" height="15" fill="rgb(235,7,5)" fg:x="4263" fg:w="1"/><text x="98.4758%" y="575.50"></text></g><g><title>edata_nfree_inc (1 samples, 0.02%)</title><rect x="98.2258%" y="549" width="0.0230%" height="15" fill="rgb(241,114,28)" fg:x="4263" fg:w="1"/><text x="98.4758%" y="559.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="98.2258%" y="773" width="0.0461%" height="15" fill="rgb(246,112,42)" fg:x="4263" fg:w="2"/><text x="98.4758%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.05%)</title><rect x="98.2258%" y="757" width="0.0461%" height="15" fill="rgb(248,228,14)" fg:x="4263" fg:w="2"/><text x="98.4758%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="98.2258%" y="741" width="0.0461%" height="15" fill="rgb(208,133,18)" fg:x="4263" fg:w="2"/><text x="98.4758%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="98.2258%" y="725" width="0.0461%" height="15" fill="rgb(207,35,49)" fg:x="4263" fg:w="2"/><text x="98.4758%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="98.2258%" y="709" width="0.0461%" height="15" fill="rgb(205,68,36)" fg:x="4263" fg:w="2"/><text x="98.4758%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="98.2258%" y="693" width="0.0461%" height="15" fill="rgb(245,62,40)" fg:x="4263" fg:w="2"/><text x="98.4758%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="98.2258%" y="677" width="0.0461%" height="15" fill="rgb(228,27,24)" fg:x="4263" fg:w="2"/><text x="98.4758%" y="687.50"></text></g><g><title>__rust_dealloc (2 samples, 0.05%)</title><rect x="98.2258%" y="661" width="0.0461%" height="15" fill="rgb(253,19,12)" fg:x="4263" fg:w="2"/><text x="98.4758%" y="671.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.05%)</title><rect x="98.2258%" y="645" width="0.0461%" height="15" fill="rgb(232,28,20)" fg:x="4263" fg:w="2"/><text x="98.4758%" y="655.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="98.2488%" y="629" width="0.0230%" height="15" fill="rgb(218,35,51)" fg:x="4264" fg:w="1"/><text x="98.4988%" y="639.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="98.2488%" y="613" width="0.0230%" height="15" fill="rgb(212,90,40)" fg:x="4264" fg:w="1"/><text x="98.4988%" y="623.50"></text></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect x="98.2488%" y="597" width="0.0230%" height="15" fill="rgb(220,172,12)" fg:x="4264" fg:w="1"/><text x="98.4988%" y="607.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="98.2258%" y="789" width="0.0691%" height="15" fill="rgb(226,159,20)" fg:x="4263" fg:w="3"/><text x="98.4758%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="98.2719%" y="773" width="0.0230%" height="15" fill="rgb(234,205,16)" fg:x="4265" fg:w="1"/><text x="98.5219%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.02%)</title><rect x="98.2719%" y="757" width="0.0230%" height="15" fill="rgb(207,9,39)" fg:x="4265" fg:w="1"/><text x="98.5219%" y="767.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.2949%" y="741" width="0.0230%" height="15" fill="rgb(249,143,15)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="98.2949%" y="725" width="0.0230%" height="15" fill="rgb(253,133,29)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="98.2949%" y="709" width="0.0230%" height="15" fill="rgb(221,187,0)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="719.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="98.2949%" y="693" width="0.0230%" height="15" fill="rgb(205,204,26)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="703.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="98.2949%" y="677" width="0.0230%" height="15" fill="rgb(224,68,54)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="687.50"></text></g><g><title>_rjem_je_sdallocx_default (1 samples, 0.02%)</title><rect x="98.2949%" y="661" width="0.0230%" height="15" fill="rgb(209,67,4)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="671.50"></text></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.02%)</title><rect x="98.2949%" y="645" width="0.0230%" height="15" fill="rgb(228,229,18)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="655.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="98.2949%" y="629" width="0.0230%" height="15" fill="rgb(231,89,13)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="639.50"></text></g><g><title>tcache_gc_small (1 samples, 0.02%)</title><rect x="98.2949%" y="613" width="0.0230%" height="15" fill="rgb(210,182,18)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="623.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="98.2949%" y="597" width="0.0230%" height="15" fill="rgb(240,105,2)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="607.50"></text></g><g><title>tcache_bin_flush_bottom (1 samples, 0.02%)</title><rect x="98.2949%" y="581" width="0.0230%" height="15" fill="rgb(207,170,50)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="591.50"></text></g><g><title>cache_bin_finish_flush (1 samples, 0.02%)</title><rect x="98.2949%" y="565" width="0.0230%" height="15" fill="rgb(232,133,24)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="98.2949%" y="549" width="0.0230%" height="15" fill="rgb(235,166,27)" fg:x="4266" fg:w="1"/><text x="98.5449%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.18%)</title><rect x="98.2028%" y="1525" width="0.1843%" height="15" fill="rgb(209,19,13)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.18%)</title><rect x="98.2028%" y="1509" width="0.1843%" height="15" fill="rgb(226,79,39)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.18%)</title><rect x="98.2028%" y="1493" width="0.1843%" height="15" fill="rgb(222,163,10)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.18%)</title><rect x="98.2028%" y="1477" width="0.1843%" height="15" fill="rgb(214,44,19)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1487.50"></text></g><g><title>core::mem::drop (8 samples, 0.18%)</title><rect x="98.2028%" y="1461" width="0.1843%" height="15" fill="rgb(210,217,13)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.18%)</title><rect x="98.2028%" y="1445" width="0.1843%" height="15" fill="rgb(237,61,54)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.18%)</title><rect x="98.2028%" y="1429" width="0.1843%" height="15" fill="rgb(226,184,24)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1439.50"></text></g><g><title>?? (8 samples, 0.18%)</title><rect x="98.2028%" y="1413" width="0.1843%" height="15" fill="rgb(223,226,4)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.18%)</title><rect x="98.2028%" y="1397" width="0.1843%" height="15" fill="rgb(210,26,41)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.18%)</title><rect x="98.2028%" y="1381" width="0.1843%" height="15" fill="rgb(220,221,6)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (8 samples, 0.18%)</title><rect x="98.2028%" y="1365" width="0.1843%" height="15" fill="rgb(225,89,49)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.18%)</title><rect x="98.2028%" y="1349" width="0.1843%" height="15" fill="rgb(218,70,45)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (8 samples, 0.18%)</title><rect x="98.2028%" y="1333" width="0.1843%" height="15" fill="rgb(238,166,21)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.18%)</title><rect x="98.2028%" y="1317" width="0.1843%" height="15" fill="rgb(224,141,44)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.18%)</title><rect x="98.2028%" y="1301" width="0.1843%" height="15" fill="rgb(230,12,49)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.18%)</title><rect x="98.2028%" y="1285" width="0.1843%" height="15" fill="rgb(212,174,12)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.18%)</title><rect x="98.2028%" y="1269" width="0.1843%" height="15" fill="rgb(246,67,9)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1279.50"></text></g><g><title>core::mem::drop (8 samples, 0.18%)</title><rect x="98.2028%" y="1253" width="0.1843%" height="15" fill="rgb(239,35,23)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.18%)</title><rect x="98.2028%" y="1237" width="0.1843%" height="15" fill="rgb(211,167,0)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.18%)</title><rect x="98.2028%" y="1221" width="0.1843%" height="15" fill="rgb(225,119,45)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1231.50"></text></g><g><title>?? (8 samples, 0.18%)</title><rect x="98.2028%" y="1205" width="0.1843%" height="15" fill="rgb(210,162,6)" fg:x="4262" fg:w="8"/><text x="98.4528%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="1189" width="0.1613%" height="15" fill="rgb(208,118,35)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="1173" width="0.1613%" height="15" fill="rgb(239,4,53)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="1157" width="0.1613%" height="15" fill="rgb(213,130,21)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.16%)</title><rect x="98.2258%" y="1141" width="0.1613%" height="15" fill="rgb(235,148,0)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="1125" width="0.1613%" height="15" fill="rgb(244,224,18)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="1109" width="0.1613%" height="15" fill="rgb(211,214,4)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="1093" width="0.1613%" height="15" fill="rgb(206,119,25)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="1077" width="0.1613%" height="15" fill="rgb(243,93,47)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.16%)</title><rect x="98.2258%" y="1061" width="0.1613%" height="15" fill="rgb(224,194,6)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1071.50"></text></g><g><title>core::mem::drop (7 samples, 0.16%)</title><rect x="98.2258%" y="1045" width="0.1613%" height="15" fill="rgb(243,229,6)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="1029" width="0.1613%" height="15" fill="rgb(207,23,50)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.16%)</title><rect x="98.2258%" y="1013" width="0.1613%" height="15" fill="rgb(253,192,32)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1023.50"></text></g><g><title>?? (7 samples, 0.16%)</title><rect x="98.2258%" y="997" width="0.1613%" height="15" fill="rgb(213,21,6)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="981" width="0.1613%" height="15" fill="rgb(243,151,13)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="965" width="0.1613%" height="15" fill="rgb(233,165,41)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="949" width="0.1613%" height="15" fill="rgb(246,176,45)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.16%)</title><rect x="98.2258%" y="933" width="0.1613%" height="15" fill="rgb(217,170,52)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="917" width="0.1613%" height="15" fill="rgb(214,203,54)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="901" width="0.1613%" height="15" fill="rgb(248,215,49)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="885" width="0.1613%" height="15" fill="rgb(208,46,10)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="869" width="0.1613%" height="15" fill="rgb(254,5,31)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.16%)</title><rect x="98.2258%" y="853" width="0.1613%" height="15" fill="rgb(222,104,33)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="863.50"></text></g><g><title>core::mem::drop (7 samples, 0.16%)</title><rect x="98.2258%" y="837" width="0.1613%" height="15" fill="rgb(248,49,16)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.16%)</title><rect x="98.2258%" y="821" width="0.1613%" height="15" fill="rgb(232,198,41)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.16%)</title><rect x="98.2258%" y="805" width="0.1613%" height="15" fill="rgb(214,125,3)" fg:x="4263" fg:w="7"/><text x="98.4758%" y="815.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.09%)</title><rect x="98.2949%" y="789" width="0.0922%" height="15" fill="rgb(229,220,28)" fg:x="4266" fg:w="4"/><text x="98.5449%" y="799.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="98.2949%" y="773" width="0.0922%" height="15" fill="rgb(222,64,37)" fg:x="4266" fg:w="4"/><text x="98.5449%" y="783.50"></text></g><g><title>?? (4 samples, 0.09%)</title><rect x="98.2949%" y="757" width="0.0922%" height="15" fill="rgb(249,184,13)" fg:x="4266" fg:w="4"/><text x="98.5449%" y="767.50"></text></g><g><title>alloc::collections::btree::mem::replace (3 samples, 0.07%)</title><rect x="98.3180%" y="741" width="0.0691%" height="15" fill="rgb(252,176,6)" fg:x="4267" fg:w="3"/><text x="98.5680%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (3 samples, 0.07%)</title><rect x="98.3180%" y="725" width="0.0691%" height="15" fill="rgb(228,153,7)" fg:x="4267" fg:w="3"/><text x="98.5680%" y="735.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="98.3180%" y="709" width="0.0691%" height="15" fill="rgb(242,193,5)" fg:x="4267" fg:w="3"/><text x="98.5680%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.07%)</title><rect x="98.3180%" y="693" width="0.0691%" height="15" fill="rgb(232,140,9)" fg:x="4267" fg:w="3"/><text x="98.5680%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="98.3871%" y="1349" width="0.0230%" height="15" fill="rgb(213,222,16)" fg:x="4270" fg:w="1"/><text x="98.6371%" y="1359.50"></text></g><g><title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect x="98.3871%" y="1333" width="0.0230%" height="15" fill="rgb(222,75,50)" fg:x="4270" fg:w="1"/><text x="98.6371%" y="1343.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect x="98.3871%" y="1317" width="0.0230%" height="15" fill="rgb(205,180,2)" fg:x="4270" fg:w="1"/><text x="98.6371%" y="1327.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="98.3871%" y="1301" width="0.0230%" height="15" fill="rgb(216,34,7)" fg:x="4270" fg:w="1"/><text x="98.6371%" y="1311.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.3871%" y="1285" width="0.0230%" height="15" fill="rgb(253,16,32)" fg:x="4270" fg:w="1"/><text x="98.6371%" y="1295.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.3871%" y="1269" width="0.0230%" height="15" fill="rgb(208,97,28)" fg:x="4270" fg:w="1"/><text x="98.6371%" y="1279.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.3871%" y="1253" width="0.0230%" height="15" fill="rgb(225,92,11)" fg:x="4270" fg:w="1"/><text x="98.6371%" y="1263.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="98.3871%" y="1237" width="0.0230%" height="15" fill="rgb(243,38,12)" fg:x="4270" fg:w="1"/><text x="98.6371%" y="1247.50"></text></g><g><title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect x="98.3871%" y="1221" width="0.0230%" height="15" fill="rgb(208,139,16)" fg:x="4270" fg:w="1"/><text x="98.6371%" y="1231.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect x="98.3871%" y="1205" width="0.0230%" height="15" fill="rgb(227,24,9)" fg:x="4270" fg:w="1"/><text x="98.6371%" y="1215.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="98.4101%" y="1205" width="0.0230%" height="15" fill="rgb(206,62,11)" fg:x="4271" fg:w="1"/><text x="98.6601%" y="1215.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.4101%" y="1189" width="0.0230%" height="15" fill="rgb(228,134,27)" fg:x="4271" fg:w="1"/><text x="98.6601%" y="1199.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.4101%" y="1173" width="0.0230%" height="15" fill="rgb(205,55,33)" fg:x="4271" fg:w="1"/><text x="98.6601%" y="1183.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect x="98.4101%" y="1157" width="0.0230%" height="15" fill="rgb(243,75,43)" fg:x="4271" fg:w="1"/><text x="98.6601%" y="1167.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.4101%" y="1141" width="0.0230%" height="15" fill="rgb(223,27,42)" fg:x="4271" fg:w="1"/><text x="98.6601%" y="1151.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="98.4101%" y="1125" width="0.0230%" height="15" fill="rgb(232,189,33)" fg:x="4271" fg:w="1"/><text x="98.6601%" y="1135.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="98.4101%" y="1109" width="0.0230%" height="15" fill="rgb(210,9,39)" fg:x="4271" fg:w="1"/><text x="98.6601%" y="1119.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="98.4101%" y="1093" width="0.0230%" height="15" fill="rgb(242,85,26)" fg:x="4271" fg:w="1"/><text x="98.6601%" y="1103.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="98.4101%" y="1077" width="0.0230%" height="15" fill="rgb(248,44,4)" fg:x="4271" fg:w="1"/><text x="98.6601%" y="1087.50"></text></g><g><title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect x="98.4562%" y="1029" width="0.0230%" height="15" fill="rgb(250,96,46)" fg:x="4273" fg:w="1"/><text x="98.7062%" y="1039.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect x="98.4562%" y="1013" width="0.0230%" height="15" fill="rgb(229,116,26)" fg:x="4273" fg:w="1"/><text x="98.7062%" y="1023.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.4793%" y="965" width="0.0230%" height="15" fill="rgb(246,94,34)" fg:x="4274" fg:w="1"/><text x="98.7293%" y="975.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="98.4793%" y="949" width="0.0230%" height="15" fill="rgb(251,73,21)" fg:x="4274" fg:w="1"/><text x="98.7293%" y="959.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.5253%" y="853" width="0.0230%" height="15" fill="rgb(254,121,25)" fg:x="4276" fg:w="1"/><text x="98.7753%" y="863.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.02%)</title><rect x="98.5253%" y="837" width="0.0230%" height="15" fill="rgb(215,161,49)" fg:x="4276" fg:w="1"/><text x="98.7753%" y="847.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.5253%" y="821" width="0.0230%" height="15" fill="rgb(221,43,13)" fg:x="4276" fg:w="1"/><text x="98.7753%" y="831.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="98.5253%" y="805" width="0.0230%" height="15" fill="rgb(249,5,37)" fg:x="4276" fg:w="1"/><text x="98.7753%" y="815.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="98.5253%" y="789" width="0.0230%" height="15" fill="rgb(226,25,44)" fg:x="4276" fg:w="1"/><text x="98.7753%" y="799.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.05%)</title><rect x="98.5253%" y="869" width="0.0461%" height="15" fill="rgb(238,189,16)" fg:x="4276" fg:w="2"/><text x="98.7753%" y="879.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.5484%" y="853" width="0.0230%" height="15" fill="rgb(251,186,8)" fg:x="4277" fg:w="1"/><text x="98.7984%" y="863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.5714%" y="821" width="0.0230%" height="15" fill="rgb(254,34,31)" fg:x="4278" fg:w="1"/><text x="98.8214%" y="831.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.5714%" y="805" width="0.0230%" height="15" fill="rgb(225,215,27)" fg:x="4278" fg:w="1"/><text x="98.8214%" y="815.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect x="98.5714%" y="789" width="0.0230%" height="15" fill="rgb(221,192,48)" fg:x="4278" fg:w="1"/><text x="98.8214%" y="799.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.5714%" y="773" width="0.0230%" height="15" fill="rgb(219,137,20)" fg:x="4278" fg:w="1"/><text x="98.8214%" y="783.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="98.5714%" y="757" width="0.0230%" height="15" fill="rgb(219,84,11)" fg:x="4278" fg:w="1"/><text x="98.8214%" y="767.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="98.5714%" y="741" width="0.0230%" height="15" fill="rgb(224,10,23)" fg:x="4278" fg:w="1"/><text x="98.8214%" y="751.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="98.5945%" y="821" width="0.0230%" height="15" fill="rgb(248,22,39)" fg:x="4279" fg:w="1"/><text x="98.8445%" y="831.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1 samples, 0.02%)</title><rect x="98.6175%" y="789" width="0.0230%" height="15" fill="rgb(212,154,20)" fg:x="4280" fg:w="1"/><text x="98.8675%" y="799.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.02%)</title><rect x="98.6175%" y="773" width="0.0230%" height="15" fill="rgb(236,199,50)" fg:x="4280" fg:w="1"/><text x="98.8675%" y="783.50"></text></g><g><title>serde::de::MapAccess::next_entry (4 samples, 0.09%)</title><rect x="98.5714%" y="869" width="0.0922%" height="15" fill="rgb(211,9,17)" fg:x="4278" fg:w="4"/><text x="98.8214%" y="879.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (4 samples, 0.09%)</title><rect x="98.5714%" y="853" width="0.0922%" height="15" fill="rgb(243,216,36)" fg:x="4278" fg:w="4"/><text x="98.8214%" y="863.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.09%)</title><rect x="98.5714%" y="837" width="0.0922%" height="15" fill="rgb(250,2,10)" fg:x="4278" fg:w="4"/><text x="98.8214%" y="847.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="98.6175%" y="821" width="0.0461%" height="15" fill="rgb(226,50,48)" fg:x="4280" fg:w="2"/><text x="98.8675%" y="831.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="98.6175%" y="805" width="0.0461%" height="15" fill="rgb(243,81,16)" fg:x="4280" fg:w="2"/><text x="98.8675%" y="815.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="98.6406%" y="789" width="0.0230%" height="15" fill="rgb(250,14,2)" fg:x="4281" fg:w="1"/><text x="98.8906%" y="799.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="98.6406%" y="773" width="0.0230%" height="15" fill="rgb(233,135,29)" fg:x="4281" fg:w="1"/><text x="98.8906%" y="783.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="98.6636%" y="869" width="0.0230%" height="15" fill="rgb(224,64,43)" fg:x="4282" fg:w="1"/><text x="98.9136%" y="879.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="98.6636%" y="853" width="0.0230%" height="15" fill="rgb(238,84,13)" fg:x="4282" fg:w="1"/><text x="98.9136%" y="863.50"></text></g><g><title>serde::de::MapAccess::next_entry (13 samples, 0.30%)</title><rect x="98.4101%" y="1237" width="0.2995%" height="15" fill="rgb(253,48,26)" fg:x="4271" fg:w="13"/><text x="98.6601%" y="1247.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (13 samples, 0.30%)</title><rect x="98.4101%" y="1221" width="0.2995%" height="15" fill="rgb(205,223,31)" fg:x="4271" fg:w="13"/><text x="98.6601%" y="1231.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12 samples, 0.28%)</title><rect x="98.4332%" y="1205" width="0.2765%" height="15" fill="rgb(221,41,32)" fg:x="4272" fg:w="12"/><text x="98.6832%" y="1215.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.28%)</title><rect x="98.4332%" y="1189" width="0.2765%" height="15" fill="rgb(213,158,31)" fg:x="4272" fg:w="12"/><text x="98.6832%" y="1199.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.28%)</title><rect x="98.4332%" y="1173" width="0.2765%" height="15" fill="rgb(245,126,43)" fg:x="4272" fg:w="12"/><text x="98.6832%" y="1183.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.28%)</title><rect x="98.4332%" y="1157" width="0.2765%" height="15" fill="rgb(227,7,22)" fg:x="4272" fg:w="12"/><text x="98.6832%" y="1167.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12 samples, 0.28%)</title><rect x="98.4332%" y="1141" width="0.2765%" height="15" fill="rgb(252,90,44)" fg:x="4272" fg:w="12"/><text x="98.6832%" y="1151.50"></text></g><g><title>serde::de::SeqAccess::next_element (12 samples, 0.28%)</title><rect x="98.4332%" y="1125" width="0.2765%" height="15" fill="rgb(253,91,0)" fg:x="4272" fg:w="12"/><text x="98.6832%" y="1135.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.28%)</title><rect x="98.4332%" y="1109" width="0.2765%" height="15" fill="rgb(252,175,49)" fg:x="4272" fg:w="12"/><text x="98.6832%" y="1119.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 0.25%)</title><rect x="98.4562%" y="1093" width="0.2535%" height="15" fill="rgb(246,150,1)" fg:x="4273" fg:w="11"/><text x="98.7062%" y="1103.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.25%)</title><rect x="98.4562%" y="1077" width="0.2535%" height="15" fill="rgb(241,192,25)" fg:x="4273" fg:w="11"/><text x="98.7062%" y="1087.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.25%)</title><rect x="98.4562%" y="1061" width="0.2535%" height="15" fill="rgb(239,187,11)" fg:x="4273" fg:w="11"/><text x="98.7062%" y="1071.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.25%)</title><rect x="98.4562%" y="1045" width="0.2535%" height="15" fill="rgb(218,202,51)" fg:x="4273" fg:w="11"/><text x="98.7062%" y="1055.50"></text></g><g><title>serde::de::MapAccess::next_value (10 samples, 0.23%)</title><rect x="98.4793%" y="1029" width="0.2304%" height="15" fill="rgb(225,176,8)" fg:x="4274" fg:w="10"/><text x="98.7293%" y="1039.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.23%)</title><rect x="98.4793%" y="1013" width="0.2304%" height="15" fill="rgb(219,122,41)" fg:x="4274" fg:w="10"/><text x="98.7293%" y="1023.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.23%)</title><rect x="98.4793%" y="997" width="0.2304%" height="15" fill="rgb(248,140,20)" fg:x="4274" fg:w="10"/><text x="98.7293%" y="1007.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10 samples, 0.23%)</title><rect x="98.4793%" y="981" width="0.2304%" height="15" fill="rgb(245,41,37)" fg:x="4274" fg:w="10"/><text x="98.7293%" y="991.50"></text></g><g><title>serde::de::SeqAccess::next_element (9 samples, 0.21%)</title><rect x="98.5023%" y="965" width="0.2074%" height="15" fill="rgb(235,82,39)" fg:x="4275" fg:w="9"/><text x="98.7523%" y="975.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9 samples, 0.21%)</title><rect x="98.5023%" y="949" width="0.2074%" height="15" fill="rgb(230,108,42)" fg:x="4275" fg:w="9"/><text x="98.7523%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.21%)</title><rect x="98.5023%" y="933" width="0.2074%" height="15" fill="rgb(215,150,50)" fg:x="4275" fg:w="9"/><text x="98.7523%" y="943.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.21%)</title><rect x="98.5023%" y="917" width="0.2074%" height="15" fill="rgb(233,212,5)" fg:x="4275" fg:w="9"/><text x="98.7523%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.18%)</title><rect x="98.5253%" y="901" width="0.1843%" height="15" fill="rgb(245,80,22)" fg:x="4276" fg:w="8"/><text x="98.7753%" y="911.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.18%)</title><rect x="98.5253%" y="885" width="0.1843%" height="15" fill="rgb(238,129,16)" fg:x="4276" fg:w="8"/><text x="98.7753%" y="895.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.6866%" y="869" width="0.0230%" height="15" fill="rgb(240,19,0)" fg:x="4283" fg:w="1"/><text x="98.9366%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="98.6866%" y="853" width="0.0230%" height="15" fill="rgb(232,42,35)" fg:x="4283" fg:w="1"/><text x="98.9366%" y="863.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.6866%" y="837" width="0.0230%" height="15" fill="rgb(223,130,24)" fg:x="4283" fg:w="1"/><text x="98.9366%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="98.6866%" y="821" width="0.0230%" height="15" fill="rgb(237,16,22)" fg:x="4283" fg:w="1"/><text x="98.9366%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (2 samples, 0.05%)</title><rect x="98.7097%" y="1141" width="0.0461%" height="15" fill="rgb(248,192,20)" fg:x="4284" fg:w="2"/><text x="98.9597%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (2 samples, 0.05%)</title><rect x="98.7097%" y="1125" width="0.0461%" height="15" fill="rgb(233,167,2)" fg:x="4284" fg:w="2"/><text x="98.9597%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (2 samples, 0.05%)</title><rect x="98.7097%" y="1109" width="0.0461%" height="15" fill="rgb(252,71,44)" fg:x="4284" fg:w="2"/><text x="98.9597%" y="1119.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (2 samples, 0.05%)</title><rect x="98.7097%" y="1093" width="0.0461%" height="15" fill="rgb(238,37,47)" fg:x="4284" fg:w="2"/><text x="98.9597%" y="1103.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="98.7097%" y="1077" width="0.0461%" height="15" fill="rgb(214,202,54)" fg:x="4284" fg:w="2"/><text x="98.9597%" y="1087.50"></text></g><g><title>deserialize_struct::diff_json (29 samples, 0.67%)</title><rect x="98.1106%" y="1541" width="0.6682%" height="15" fill="rgb(254,165,40)" fg:x="4258" fg:w="29"/><text x="98.3606%" y="1551.50"></text></g><g><title>serde_json::de::from_str (17 samples, 0.39%)</title><rect x="98.3871%" y="1525" width="0.3917%" height="15" fill="rgb(246,173,38)" fg:x="4270" fg:w="17"/><text x="98.6371%" y="1535.50"></text></g><g><title>serde_json::de::from_trait (17 samples, 0.39%)</title><rect x="98.3871%" y="1509" width="0.3917%" height="15" fill="rgb(215,3,27)" fg:x="4270" fg:w="17"/><text x="98.6371%" y="1519.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17 samples, 0.39%)</title><rect x="98.3871%" y="1493" width="0.3917%" height="15" fill="rgb(239,169,51)" fg:x="4270" fg:w="17"/><text x="98.6371%" y="1503.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 0.39%)</title><rect x="98.3871%" y="1477" width="0.3917%" height="15" fill="rgb(212,5,25)" fg:x="4270" fg:w="17"/><text x="98.6371%" y="1487.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 0.39%)</title><rect x="98.3871%" y="1461" width="0.3917%" height="15" fill="rgb(243,45,17)" fg:x="4270" fg:w="17"/><text x="98.6371%" y="1471.50"></text></g><g><title>serde::de::MapAccess::next_entry (17 samples, 0.39%)</title><rect x="98.3871%" y="1445" width="0.3917%" height="15" fill="rgb(242,97,9)" fg:x="4270" fg:w="17"/><text x="98.6371%" y="1455.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (17 samples, 0.39%)</title><rect x="98.3871%" y="1429" width="0.3917%" height="15" fill="rgb(228,71,31)" fg:x="4270" fg:w="17"/><text x="98.6371%" y="1439.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (17 samples, 0.39%)</title><rect x="98.3871%" y="1413" width="0.3917%" height="15" fill="rgb(252,184,16)" fg:x="4270" fg:w="17"/><text x="98.6371%" y="1423.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17 samples, 0.39%)</title><rect x="98.3871%" y="1397" width="0.3917%" height="15" fill="rgb(236,169,46)" fg:x="4270" fg:w="17"/><text x="98.6371%" y="1407.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17 samples, 0.39%)</title><rect x="98.3871%" y="1381" width="0.3917%" height="15" fill="rgb(207,17,47)" fg:x="4270" fg:w="17"/><text x="98.6371%" y="1391.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 0.39%)</title><rect x="98.3871%" y="1365" width="0.3917%" height="15" fill="rgb(206,201,28)" fg:x="4270" fg:w="17"/><text x="98.6371%" y="1375.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (16 samples, 0.37%)</title><rect x="98.4101%" y="1349" width="0.3687%" height="15" fill="rgb(224,184,23)" fg:x="4271" fg:w="16"/><text x="98.6601%" y="1359.50"></text></g><g><title>serde::de::SeqAccess::next_element (16 samples, 0.37%)</title><rect x="98.4101%" y="1333" width="0.3687%" height="15" fill="rgb(208,139,48)" fg:x="4271" fg:w="16"/><text x="98.6601%" y="1343.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (16 samples, 0.37%)</title><rect x="98.4101%" y="1317" width="0.3687%" height="15" fill="rgb(208,130,10)" fg:x="4271" fg:w="16"/><text x="98.6601%" y="1327.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 0.37%)</title><rect x="98.4101%" y="1301" width="0.3687%" height="15" fill="rgb(211,213,45)" fg:x="4271" fg:w="16"/><text x="98.6601%" y="1311.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16 samples, 0.37%)</title><rect x="98.4101%" y="1285" width="0.3687%" height="15" fill="rgb(235,100,30)" fg:x="4271" fg:w="16"/><text x="98.6601%" y="1295.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 0.37%)</title><rect x="98.4101%" y="1269" width="0.3687%" height="15" fill="rgb(206,144,31)" fg:x="4271" fg:w="16"/><text x="98.6601%" y="1279.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 0.37%)</title><rect x="98.4101%" y="1253" width="0.3687%" height="15" fill="rgb(224,200,26)" fg:x="4271" fg:w="16"/><text x="98.6601%" y="1263.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.07%)</title><rect x="98.7097%" y="1237" width="0.0691%" height="15" fill="rgb(247,104,53)" fg:x="4284" fg:w="3"/><text x="98.9597%" y="1247.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.07%)</title><rect x="98.7097%" y="1221" width="0.0691%" height="15" fill="rgb(220,14,17)" fg:x="4284" fg:w="3"/><text x="98.9597%" y="1231.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="98.7097%" y="1205" width="0.0691%" height="15" fill="rgb(230,140,40)" fg:x="4284" fg:w="3"/><text x="98.9597%" y="1215.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="98.7097%" y="1189" width="0.0691%" height="15" fill="rgb(229,2,41)" fg:x="4284" fg:w="3"/><text x="98.9597%" y="1199.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="98.7097%" y="1173" width="0.0691%" height="15" fill="rgb(232,89,16)" fg:x="4284" fg:w="3"/><text x="98.9597%" y="1183.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="98.7097%" y="1157" width="0.0691%" height="15" fill="rgb(247,59,52)" fg:x="4284" fg:w="3"/><text x="98.9597%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (1 samples, 0.02%)</title><rect x="98.7558%" y="1141" width="0.0230%" height="15" fill="rgb(226,110,21)" fg:x="4286" fg:w="1"/><text x="99.0058%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="98.7558%" y="1125" width="0.0230%" height="15" fill="rgb(224,176,43)" fg:x="4286" fg:w="1"/><text x="99.0058%" y="1135.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.7788%" y="1413" width="0.0230%" height="15" fill="rgb(221,73,6)" fg:x="4287" fg:w="1"/><text x="99.0288%" y="1423.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.02%)</title><rect x="98.7788%" y="1397" width="0.0230%" height="15" fill="rgb(232,78,19)" fg:x="4287" fg:w="1"/><text x="99.0288%" y="1407.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::deserialize::MapVisitor&lt;K,V&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="98.7788%" y="1381" width="0.0230%" height="15" fill="rgb(233,112,48)" fg:x="4287" fg:w="1"/><text x="99.0288%" y="1391.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="98.7788%" y="1365" width="0.0230%" height="15" fill="rgb(243,131,47)" fg:x="4287" fg:w="1"/><text x="99.0288%" y="1375.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.7788%" y="1349" width="0.0230%" height="15" fill="rgb(226,51,1)" fg:x="4287" fg:w="1"/><text x="99.0288%" y="1359.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.7788%" y="1333" width="0.0230%" height="15" fill="rgb(247,58,7)" fg:x="4287" fg:w="1"/><text x="99.0288%" y="1343.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.7788%" y="1317" width="0.0230%" height="15" fill="rgb(209,7,32)" fg:x="4287" fg:w="1"/><text x="99.0288%" y="1327.50"></text></g><g><title>alloc::collections::btree::node::splitpoint (1 samples, 0.02%)</title><rect x="98.7788%" y="1301" width="0.0230%" height="15" fill="rgb(209,39,41)" fg:x="4287" fg:w="1"/><text x="99.0288%" y="1311.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.8018%" y="1125" width="0.0230%" height="15" fill="rgb(226,182,46)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="1135.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="98.8018%" y="1109" width="0.0230%" height="15" fill="rgb(230,219,10)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="1119.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="98.8018%" y="1093" width="0.0230%" height="15" fill="rgb(227,175,30)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="1103.50"></text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect x="98.8018%" y="1077" width="0.0230%" height="15" fill="rgb(217,2,50)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="1087.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="98.8018%" y="1061" width="0.0230%" height="15" fill="rgb(229,160,0)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="1071.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.8018%" y="1045" width="0.0230%" height="15" fill="rgb(207,78,37)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="1055.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Price&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.8018%" y="1029" width="0.0230%" height="15" fill="rgb(225,57,0)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="1039.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect x="98.8018%" y="1013" width="0.0230%" height="15" fill="rgb(232,154,2)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="1023.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.8018%" y="997" width="0.0230%" height="15" fill="rgb(241,212,25)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="1007.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="98.8018%" y="981" width="0.0230%" height="15" fill="rgb(226,69,20)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="991.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.8018%" y="965" width="0.0230%" height="15" fill="rgb(247,184,54)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="98.8018%" y="949" width="0.0230%" height="15" fill="rgb(210,145,0)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="959.50"></text></g><g><title>serde_json::read::as_str (1 samples, 0.02%)</title><rect x="98.8018%" y="933" width="0.0230%" height="15" fill="rgb(253,82,12)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="943.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="98.8018%" y="917" width="0.0230%" height="15" fill="rgb(245,42,11)" fg:x="4288" fg:w="1"/><text x="99.0518%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.8249%" y="981" width="0.0230%" height="15" fill="rgb(219,147,32)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="98.8249%" y="965" width="0.0230%" height="15" fill="rgb(246,12,7)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="98.8249%" y="949" width="0.0230%" height="15" fill="rgb(243,50,9)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="98.8249%" y="933" width="0.0230%" height="15" fill="rgb(219,149,6)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="98.8249%" y="917" width="0.0230%" height="15" fill="rgb(241,51,42)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="927.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.8249%" y="901" width="0.0230%" height="15" fill="rgb(226,128,27)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="911.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="98.8249%" y="885" width="0.0230%" height="15" fill="rgb(244,144,4)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="895.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="98.8249%" y="869" width="0.0230%" height="15" fill="rgb(221,4,13)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="879.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect x="98.8249%" y="853" width="0.0230%" height="15" fill="rgb(208,170,28)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="863.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="98.8249%" y="837" width="0.0230%" height="15" fill="rgb(226,131,13)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="847.50"></text></g><g><title>iralloct (1 samples, 0.02%)</title><rect x="98.8249%" y="821" width="0.0230%" height="15" fill="rgb(215,72,41)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="831.50"></text></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.02%)</title><rect x="98.8249%" y="805" width="0.0230%" height="15" fill="rgb(243,108,20)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="815.50"></text></g><g><title>arena_ralloc_move_helper (1 samples, 0.02%)</title><rect x="98.8249%" y="789" width="0.0230%" height="15" fill="rgb(230,189,17)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="799.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="98.8249%" y="773" width="0.0230%" height="15" fill="rgb(220,50,17)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="783.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="98.8249%" y="757" width="0.0230%" height="15" fill="rgb(248,152,48)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="767.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="98.8249%" y="741" width="0.0230%" height="15" fill="rgb(244,91,11)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="751.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (1 samples, 0.02%)</title><rect x="98.8249%" y="725" width="0.0230%" height="15" fill="rgb(220,157,5)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="735.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="98.8249%" y="709" width="0.0230%" height="15" fill="rgb(253,137,8)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="719.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.02%)</title><rect x="98.8249%" y="693" width="0.0230%" height="15" fill="rgb(217,137,51)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="703.50"></text></g><g><title>pai_alloc (1 samples, 0.02%)</title><rect x="98.8249%" y="677" width="0.0230%" height="15" fill="rgb(218,209,53)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="687.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.02%)</title><rect x="98.8249%" y="661" width="0.0230%" height="15" fill="rgb(249,137,25)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="671.50"></text></g><g><title>pac_alloc_real (1 samples, 0.02%)</title><rect x="98.8249%" y="645" width="0.0230%" height="15" fill="rgb(239,155,26)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="655.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.02%)</title><rect x="98.8249%" y="629" width="0.0230%" height="15" fill="rgb(227,85,46)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="639.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="98.8249%" y="613" width="0.0230%" height="15" fill="rgb(251,107,43)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="623.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="98.8249%" y="597" width="0.0230%" height="15" fill="rgb(234,170,33)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="607.50"></text></g><g><title>extent_activate_locked (1 samples, 0.02%)</title><rect x="98.8249%" y="581" width="0.0230%" height="15" fill="rgb(206,29,35)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="591.50"></text></g><g><title>_rjem_je_eset_remove (1 samples, 0.02%)</title><rect x="98.8249%" y="565" width="0.0230%" height="15" fill="rgb(227,138,25)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="575.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.02%)</title><rect x="98.8249%" y="549" width="0.0230%" height="15" fill="rgb(249,131,35)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="559.50"></text></g><g><title>ph_remove (1 samples, 0.02%)</title><rect x="98.8249%" y="533" width="0.0230%" height="15" fill="rgb(239,6,40)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="543.50"></text></g><g><title>ph_merge_children (1 samples, 0.02%)</title><rect x="98.8249%" y="517" width="0.0230%" height="15" fill="rgb(246,136,47)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="527.50"></text></g><g><title>phn_merge_siblings (1 samples, 0.02%)</title><rect x="98.8249%" y="501" width="0.0230%" height="15" fill="rgb(253,58,26)" fg:x="4289" fg:w="1"/><text x="99.0749%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.8710%" y="853" width="0.0230%" height="15" fill="rgb(237,141,10)" fg:x="4291" fg:w="1"/><text x="99.1210%" y="863.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.8710%" y="837" width="0.0230%" height="15" fill="rgb(234,156,12)" fg:x="4291" fg:w="1"/><text x="99.1210%" y="847.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect x="98.8710%" y="821" width="0.0230%" height="15" fill="rgb(243,224,36)" fg:x="4291" fg:w="1"/><text x="99.1210%" y="831.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="98.8710%" y="805" width="0.0230%" height="15" fill="rgb(205,229,51)" fg:x="4291" fg:w="1"/><text x="99.1210%" y="815.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="98.8710%" y="789" width="0.0230%" height="15" fill="rgb(223,189,4)" fg:x="4291" fg:w="1"/><text x="99.1210%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.8710%" y="773" width="0.0230%" height="15" fill="rgb(249,167,54)" fg:x="4291" fg:w="1"/><text x="99.1210%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="98.8710%" y="757" width="0.0230%" height="15" fill="rgb(218,34,28)" fg:x="4291" fg:w="1"/><text x="99.1210%" y="767.50"></text></g><g><title>serde_json::read::as_str (1 samples, 0.02%)</title><rect x="98.8710%" y="741" width="0.0230%" height="15" fill="rgb(232,109,42)" fg:x="4291" fg:w="1"/><text x="99.1210%" y="751.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.02%)</title><rect x="98.8710%" y="725" width="0.0230%" height="15" fill="rgb(248,214,46)" fg:x="4291" fg:w="1"/><text x="99.1210%" y="735.50"></text></g><g><title>serde_json::de::from_slice (6 samples, 0.14%)</title><rect x="98.7788%" y="1541" width="0.1382%" height="15" fill="rgb(244,216,40)" fg:x="4287" fg:w="6"/><text x="99.0288%" y="1551.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.14%)</title><rect x="98.7788%" y="1525" width="0.1382%" height="15" fill="rgb(231,226,31)" fg:x="4287" fg:w="6"/><text x="99.0288%" y="1535.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (6 samples, 0.14%)</title><rect x="98.7788%" y="1509" width="0.1382%" height="15" fill="rgb(238,38,43)" fg:x="4287" fg:w="6"/><text x="99.0288%" y="1519.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (6 samples, 0.14%)</title><rect x="98.7788%" y="1493" width="0.1382%" height="15" fill="rgb(208,88,43)" fg:x="4287" fg:w="6"/><text x="99.0288%" y="1503.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.14%)</title><rect x="98.7788%" y="1477" width="0.1382%" height="15" fill="rgb(205,136,37)" fg:x="4287" fg:w="6"/><text x="99.0288%" y="1487.50"></text></g><g><title>serde::de::MapAccess::next_value (6 samples, 0.14%)</title><rect x="98.7788%" y="1461" width="0.1382%" height="15" fill="rgb(237,34,14)" fg:x="4287" fg:w="6"/><text x="99.0288%" y="1471.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6 samples, 0.14%)</title><rect x="98.7788%" y="1445" width="0.1382%" height="15" fill="rgb(236,193,44)" fg:x="4287" fg:w="6"/><text x="99.0288%" y="1455.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.14%)</title><rect x="98.7788%" y="1429" width="0.1382%" height="15" fill="rgb(231,48,10)" fg:x="4287" fg:w="6"/><text x="99.0288%" y="1439.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (5 samples, 0.12%)</title><rect x="98.8018%" y="1413" width="0.1152%" height="15" fill="rgb(213,141,34)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1423.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (5 samples, 0.12%)</title><rect x="98.8018%" y="1397" width="0.1152%" height="15" fill="rgb(249,130,34)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1407.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (5 samples, 0.12%)</title><rect x="98.8018%" y="1381" width="0.1152%" height="15" fill="rgb(219,42,41)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1391.50"></text></g><g><title>serde::de::SeqAccess::next_element (5 samples, 0.12%)</title><rect x="98.8018%" y="1365" width="0.1152%" height="15" fill="rgb(224,100,54)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1375.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5 samples, 0.12%)</title><rect x="98.8018%" y="1349" width="0.1152%" height="15" fill="rgb(229,200,27)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.12%)</title><rect x="98.8018%" y="1333" width="0.1152%" height="15" fill="rgb(217,118,10)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1343.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (5 samples, 0.12%)</title><rect x="98.8018%" y="1317" width="0.1152%" height="15" fill="rgb(206,22,3)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1327.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (5 samples, 0.12%)</title><rect x="98.8018%" y="1301" width="0.1152%" height="15" fill="rgb(232,163,46)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1311.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.12%)</title><rect x="98.8018%" y="1285" width="0.1152%" height="15" fill="rgb(206,95,13)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1295.50"></text></g><g><title>serde::de::MapAccess::next_value (5 samples, 0.12%)</title><rect x="98.8018%" y="1269" width="0.1152%" height="15" fill="rgb(253,154,18)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1279.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.12%)</title><rect x="98.8018%" y="1253" width="0.1152%" height="15" fill="rgb(219,32,23)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.12%)</title><rect x="98.8018%" y="1237" width="0.1152%" height="15" fill="rgb(230,191,45)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1247.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (5 samples, 0.12%)</title><rect x="98.8018%" y="1221" width="0.1152%" height="15" fill="rgb(229,64,36)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1231.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (5 samples, 0.12%)</title><rect x="98.8018%" y="1205" width="0.1152%" height="15" fill="rgb(205,129,25)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1215.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (5 samples, 0.12%)</title><rect x="98.8018%" y="1189" width="0.1152%" height="15" fill="rgb(254,112,7)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1199.50"></text></g><g><title>serde::de::SeqAccess::next_element (5 samples, 0.12%)</title><rect x="98.8018%" y="1173" width="0.1152%" height="15" fill="rgb(226,53,48)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1183.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5 samples, 0.12%)</title><rect x="98.8018%" y="1157" width="0.1152%" height="15" fill="rgb(214,153,38)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1167.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.12%)</title><rect x="98.8018%" y="1141" width="0.1152%" height="15" fill="rgb(243,101,7)" fg:x="4288" fg:w="5"/><text x="99.0518%" y="1151.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (4 samples, 0.09%)</title><rect x="98.8249%" y="1125" width="0.0922%" height="15" fill="rgb(240,140,22)" fg:x="4289" fg:w="4"/><text x="99.0749%" y="1135.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.09%)</title><rect x="98.8249%" y="1109" width="0.0922%" height="15" fill="rgb(235,114,2)" fg:x="4289" fg:w="4"/><text x="99.0749%" y="1119.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.09%)</title><rect x="98.8249%" y="1093" width="0.0922%" height="15" fill="rgb(242,59,12)" fg:x="4289" fg:w="4"/><text x="99.0749%" y="1103.50"></text></g><g><title>serde::de::MapAccess::next_value (4 samples, 0.09%)</title><rect x="98.8249%" y="1077" width="0.0922%" height="15" fill="rgb(252,134,9)" fg:x="4289" fg:w="4"/><text x="99.0749%" y="1087.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.09%)</title><rect x="98.8249%" y="1061" width="0.0922%" height="15" fill="rgb(236,4,44)" fg:x="4289" fg:w="4"/><text x="99.0749%" y="1071.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.09%)</title><rect x="98.8249%" y="1045" width="0.0922%" height="15" fill="rgb(254,172,41)" fg:x="4289" fg:w="4"/><text x="99.0749%" y="1055.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (4 samples, 0.09%)</title><rect x="98.8249%" y="1029" width="0.0922%" height="15" fill="rgb(244,63,20)" fg:x="4289" fg:w="4"/><text x="99.0749%" y="1039.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (4 samples, 0.09%)</title><rect x="98.8249%" y="1013" width="0.0922%" height="15" fill="rgb(250,73,31)" fg:x="4289" fg:w="4"/><text x="99.0749%" y="1023.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.09%)</title><rect x="98.8249%" y="997" width="0.0922%" height="15" fill="rgb(241,38,36)" fg:x="4289" fg:w="4"/><text x="99.0749%" y="1007.50"></text></g><g><title>serde::de::SeqAccess::next_element (3 samples, 0.07%)</title><rect x="98.8479%" y="981" width="0.0691%" height="15" fill="rgb(245,211,2)" fg:x="4290" fg:w="3"/><text x="99.0979%" y="991.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3 samples, 0.07%)</title><rect x="98.8479%" y="965" width="0.0691%" height="15" fill="rgb(206,120,28)" fg:x="4290" fg:w="3"/><text x="99.0979%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.07%)</title><rect x="98.8479%" y="949" width="0.0691%" height="15" fill="rgb(211,59,34)" fg:x="4290" fg:w="3"/><text x="99.0979%" y="959.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize (2 samples, 0.05%)</title><rect x="98.8710%" y="933" width="0.0461%" height="15" fill="rgb(233,168,5)" fg:x="4291" fg:w="2"/><text x="99.1210%" y="943.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.05%)</title><rect x="98.8710%" y="917" width="0.0461%" height="15" fill="rgb(234,33,13)" fg:x="4291" fg:w="2"/><text x="99.1210%" y="927.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Area&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.05%)</title><rect x="98.8710%" y="901" width="0.0461%" height="15" fill="rgb(231,150,26)" fg:x="4291" fg:w="2"/><text x="99.1210%" y="911.50"></text></g><g><title>serde::de::MapAccess::next_key (2 samples, 0.05%)</title><rect x="98.8710%" y="885" width="0.0461%" height="15" fill="rgb(217,191,4)" fg:x="4291" fg:w="2"/><text x="99.1210%" y="895.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.05%)</title><rect x="98.8710%" y="869" width="0.0461%" height="15" fill="rgb(246,198,38)" fg:x="4291" fg:w="2"/><text x="99.1210%" y="879.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.8940%" y="853" width="0.0230%" height="15" fill="rgb(245,64,37)" fg:x="4292" fg:w="1"/><text x="99.1440%" y="863.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.8940%" y="837" width="0.0230%" height="15" fill="rgb(250,30,36)" fg:x="4292" fg:w="1"/><text x="99.1440%" y="847.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="98.8940%" y="821" width="0.0230%" height="15" fill="rgb(217,86,53)" fg:x="4292" fg:w="1"/><text x="99.1440%" y="831.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="98.9171%" y="1253" width="0.0230%" height="15" fill="rgb(228,157,16)" fg:x="4293" fg:w="1"/><text x="99.1671%" y="1263.50"></text></g><g><title>&lt;serde_json::ser::PrettyFormatter as serde_json::ser::Formatter&gt;::begin_object_key (1 samples, 0.02%)</title><rect x="98.9171%" y="1237" width="0.0230%" height="15" fill="rgb(217,59,31)" fg:x="4293" fg:w="1"/><text x="99.1671%" y="1247.50"></text></g><g><title>serde_json::ser::indent (1 samples, 0.02%)</title><rect x="98.9171%" y="1221" width="0.0230%" height="15" fill="rgb(237,138,41)" fg:x="4293" fg:w="1"/><text x="99.1671%" y="1231.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="98.9171%" y="1205" width="0.0230%" height="15" fill="rgb(227,91,49)" fg:x="4293" fg:w="1"/><text x="99.1671%" y="1215.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="98.9171%" y="1189" width="0.0230%" height="15" fill="rgb(247,21,44)" fg:x="4293" fg:w="1"/><text x="99.1671%" y="1199.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9171%" y="1173" width="0.0230%" height="15" fill="rgb(219,210,51)" fg:x="4293" fg:w="1"/><text x="99.1671%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="98.9171%" y="1157" width="0.0230%" height="15" fill="rgb(209,140,6)" fg:x="4293" fg:w="1"/><text x="99.1671%" y="1167.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9171%" y="1141" width="0.0230%" height="15" fill="rgb(221,188,24)" fg:x="4293" fg:w="1"/><text x="99.1671%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="98.9171%" y="1125" width="0.0230%" height="15" fill="rgb(232,154,20)" fg:x="4293" fg:w="1"/><text x="99.1671%" y="1135.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="98.9171%" y="1109" width="0.0230%" height="15" fill="rgb(244,137,50)" fg:x="4293" fg:w="1"/><text x="99.1671%" y="1119.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::end (1 samples, 0.02%)</title><rect x="98.9401%" y="901" width="0.0230%" height="15" fill="rgb(225,185,43)" fg:x="4294" fg:w="1"/><text x="99.1901%" y="911.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (1 samples, 0.02%)</title><rect x="98.9401%" y="885" width="0.0230%" height="15" fill="rgb(213,205,38)" fg:x="4294" fg:w="1"/><text x="99.1901%" y="895.50"></text></g><g><title>&lt;serde_json::ser::PrettyFormatter as serde_json::ser::Formatter&gt;::end_object (1 samples, 0.02%)</title><rect x="98.9401%" y="869" width="0.0230%" height="15" fill="rgb(236,73,12)" fg:x="4294" fg:w="1"/><text x="99.1901%" y="879.50"></text></g><g><title>serde_json::ser::indent (1 samples, 0.02%)</title><rect x="98.9401%" y="853" width="0.0230%" height="15" fill="rgb(235,219,13)" fg:x="4294" fg:w="1"/><text x="99.1901%" y="863.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="98.9401%" y="837" width="0.0230%" height="15" fill="rgb(218,59,36)" fg:x="4294" fg:w="1"/><text x="99.1901%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="98.9401%" y="821" width="0.0230%" height="15" fill="rgb(205,110,39)" fg:x="4294" fg:w="1"/><text x="99.1901%" y="831.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9401%" y="805" width="0.0230%" height="15" fill="rgb(218,206,42)" fg:x="4294" fg:w="1"/><text x="99.1901%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="98.9401%" y="789" width="0.0230%" height="15" fill="rgb(248,125,24)" fg:x="4294" fg:w="1"/><text x="99.1901%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9401%" y="773" width="0.0230%" height="15" fill="rgb(242,28,27)" fg:x="4294" fg:w="1"/><text x="99.1901%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="98.9401%" y="757" width="0.0230%" height="15" fill="rgb(216,228,15)" fg:x="4294" fg:w="1"/><text x="99.1901%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="98.9401%" y="741" width="0.0230%" height="15" fill="rgb(235,116,46)" fg:x="4294" fg:w="1"/><text x="99.1901%" y="751.50"></text></g><g><title>serde_json::ser::to_string_pretty (3 samples, 0.07%)</title><rect x="98.9171%" y="1541" width="0.0691%" height="15" fill="rgb(224,18,32)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1551.50"></text></g><g><title>serde_json::ser::to_vec_pretty (3 samples, 0.07%)</title><rect x="98.9171%" y="1525" width="0.0691%" height="15" fill="rgb(252,5,12)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1535.50"></text></g><g><title>serde_json::ser::to_writer_pretty (3 samples, 0.07%)</title><rect x="98.9171%" y="1509" width="0.0691%" height="15" fill="rgb(251,36,5)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1519.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::serialize (3 samples, 0.07%)</title><rect x="98.9171%" y="1493" width="0.0691%" height="15" fill="rgb(217,53,14)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1503.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.07%)</title><rect x="98.9171%" y="1477" width="0.0691%" height="15" fill="rgb(215,86,45)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1487.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.07%)</title><rect x="98.9171%" y="1461" width="0.0691%" height="15" fill="rgb(242,169,11)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1471.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.07%)</title><rect x="98.9171%" y="1445" width="0.0691%" height="15" fill="rgb(211,213,45)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1455.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (3 samples, 0.07%)</title><rect x="98.9171%" y="1429" width="0.0691%" height="15" fill="rgb(205,88,11)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1439.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.07%)</title><rect x="98.9171%" y="1413" width="0.0691%" height="15" fill="rgb(252,69,26)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.07%)</title><rect x="98.9171%" y="1397" width="0.0691%" height="15" fill="rgb(246,123,37)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="98.9171%" y="1381" width="0.0691%" height="15" fill="rgb(212,205,5)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (3 samples, 0.07%)</title><rect x="98.9171%" y="1365" width="0.0691%" height="15" fill="rgb(253,148,0)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1375.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (3 samples, 0.07%)</title><rect x="98.9171%" y="1349" width="0.0691%" height="15" fill="rgb(239,22,4)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1359.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (3 samples, 0.07%)</title><rect x="98.9171%" y="1333" width="0.0691%" height="15" fill="rgb(226,26,53)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1343.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.07%)</title><rect x="98.9171%" y="1317" width="0.0691%" height="15" fill="rgb(225,229,45)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1327.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Performance&gt;::serialize (3 samples, 0.07%)</title><rect x="98.9171%" y="1301" width="0.0691%" height="15" fill="rgb(220,60,37)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1311.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.07%)</title><rect x="98.9171%" y="1285" width="0.0691%" height="15" fill="rgb(217,180,35)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1295.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.07%)</title><rect x="98.9171%" y="1269" width="0.0691%" height="15" fill="rgb(229,7,53)" fg:x="4293" fg:w="3"/><text x="99.1671%" y="1279.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.05%)</title><rect x="98.9401%" y="1253" width="0.0461%" height="15" fill="rgb(254,137,3)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1263.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2 samples, 0.05%)</title><rect x="98.9401%" y="1237" width="0.0461%" height="15" fill="rgb(215,140,41)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1247.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.05%)</title><rect x="98.9401%" y="1221" width="0.0461%" height="15" fill="rgb(250,80,15)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.05%)</title><rect x="98.9401%" y="1205" width="0.0461%" height="15" fill="rgb(252,191,6)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="98.9401%" y="1189" width="0.0461%" height="15" fill="rgb(246,217,18)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.05%)</title><rect x="98.9401%" y="1173" width="0.0461%" height="15" fill="rgb(223,93,7)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1183.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.05%)</title><rect x="98.9401%" y="1157" width="0.0461%" height="15" fill="rgb(225,55,52)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1167.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.05%)</title><rect x="98.9401%" y="1141" width="0.0461%" height="15" fill="rgb(240,31,24)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1151.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.05%)</title><rect x="98.9401%" y="1125" width="0.0461%" height="15" fill="rgb(205,56,52)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1135.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::serialize (2 samples, 0.05%)</title><rect x="98.9401%" y="1109" width="0.0461%" height="15" fill="rgb(246,146,12)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1119.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.05%)</title><rect x="98.9401%" y="1093" width="0.0461%" height="15" fill="rgb(239,84,36)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1103.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.05%)</title><rect x="98.9401%" y="1077" width="0.0461%" height="15" fill="rgb(207,41,40)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1087.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.05%)</title><rect x="98.9401%" y="1061" width="0.0461%" height="15" fill="rgb(241,179,25)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1071.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2 samples, 0.05%)</title><rect x="98.9401%" y="1045" width="0.0461%" height="15" fill="rgb(210,0,34)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1055.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.05%)</title><rect x="98.9401%" y="1029" width="0.0461%" height="15" fill="rgb(225,217,29)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.05%)</title><rect x="98.9401%" y="1013" width="0.0461%" height="15" fill="rgb(216,191,38)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="98.9401%" y="997" width="0.0461%" height="15" fill="rgb(232,140,52)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.05%)</title><rect x="98.9401%" y="981" width="0.0461%" height="15" fill="rgb(223,158,51)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="991.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.05%)</title><rect x="98.9401%" y="965" width="0.0461%" height="15" fill="rgb(235,29,51)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="975.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.05%)</title><rect x="98.9401%" y="949" width="0.0461%" height="15" fill="rgb(215,181,18)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="959.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.05%)</title><rect x="98.9401%" y="933" width="0.0461%" height="15" fill="rgb(227,125,34)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="943.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Area&gt;::serialize (2 samples, 0.05%)</title><rect x="98.9401%" y="917" width="0.0461%" height="15" fill="rgb(230,197,49)" fg:x="4294" fg:w="2"/><text x="99.1901%" y="927.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="98.9631%" y="901" width="0.0230%" height="15" fill="rgb(239,141,16)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="911.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="98.9631%" y="885" width="0.0230%" height="15" fill="rgb(225,105,43)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="895.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="98.9631%" y="869" width="0.0230%" height="15" fill="rgb(214,131,14)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="879.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.02%)</title><rect x="98.9631%" y="853" width="0.0230%" height="15" fill="rgb(229,177,11)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="863.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="98.9631%" y="837" width="0.0230%" height="15" fill="rgb(231,180,14)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="847.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="98.9631%" y="821" width="0.0230%" height="15" fill="rgb(232,88,2)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="831.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.02%)</title><rect x="98.9631%" y="805" width="0.0230%" height="15" fill="rgb(205,220,8)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="815.50"></text></g><g><title>serde_json::ser::Formatter::end_string (1 samples, 0.02%)</title><rect x="98.9631%" y="789" width="0.0230%" height="15" fill="rgb(225,23,53)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="799.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="98.9631%" y="773" width="0.0230%" height="15" fill="rgb(213,62,29)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="783.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="98.9631%" y="757" width="0.0230%" height="15" fill="rgb(227,75,7)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="767.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="98.9631%" y="741" width="0.0230%" height="15" fill="rgb(207,105,14)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="98.9631%" y="725" width="0.0230%" height="15" fill="rgb(245,62,29)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="735.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="98.9631%" y="709" width="0.0230%" height="15" fill="rgb(236,202,4)" fg:x="4295" fg:w="1"/><text x="99.2131%" y="719.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect x="98.9862%" y="1269" width="0.0230%" height="15" fill="rgb(250,67,1)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1279.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="98.9862%" y="1253" width="0.0230%" height="15" fill="rgb(253,115,44)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.9862%" y="1237" width="0.0230%" height="15" fill="rgb(251,139,18)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1247.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.9862%" y="1221" width="0.0230%" height="15" fill="rgb(218,22,32)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1231.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.02%)</title><rect x="98.9862%" y="1205" width="0.0230%" height="15" fill="rgb(243,53,5)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1215.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="98.9862%" y="1189" width="0.0230%" height="15" fill="rgb(227,56,16)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1199.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="98.9862%" y="1173" width="0.0230%" height="15" fill="rgb(245,53,0)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1183.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="98.9862%" y="1157" width="0.0230%" height="15" fill="rgb(216,170,35)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1167.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.9862%" y="1141" width="0.0230%" height="15" fill="rgb(211,200,8)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1151.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.9862%" y="1125" width="0.0230%" height="15" fill="rgb(228,204,44)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1135.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="98.9862%" y="1109" width="0.0230%" height="15" fill="rgb(214,121,17)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1119.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::SeatCategory&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="98.9862%" y="1093" width="0.0230%" height="15" fill="rgb(233,64,38)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1103.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (1 samples, 0.02%)</title><rect x="98.9862%" y="1077" width="0.0230%" height="15" fill="rgb(253,54,19)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1087.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="98.9862%" y="1061" width="0.0230%" height="15" fill="rgb(253,94,18)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1071.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="98.9862%" y="1045" width="0.0230%" height="15" fill="rgb(227,57,52)" fg:x="4296" fg:w="1"/><text x="99.2362%" y="1055.50"></text></g><g><title>sonic_rs::serde::de::from_slice (2 samples, 0.05%)</title><rect x="98.9862%" y="1541" width="0.0461%" height="15" fill="rgb(230,228,50)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1551.50"></text></g><g><title>sonic_rs::serde::de::from_trait (2 samples, 0.05%)</title><rect x="98.9862%" y="1525" width="0.0461%" height="15" fill="rgb(217,205,27)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1535.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize (2 samples, 0.05%)</title><rect x="98.9862%" y="1509" width="0.0461%" height="15" fill="rgb(252,71,50)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1519.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.05%)</title><rect x="98.9862%" y="1493" width="0.0461%" height="15" fill="rgb(209,86,4)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1503.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.05%)</title><rect x="98.9862%" y="1477" width="0.0461%" height="15" fill="rgb(229,94,0)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1487.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (2 samples, 0.05%)</title><rect x="98.9862%" y="1461" width="0.0461%" height="15" fill="rgb(252,223,21)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1471.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.05%)</title><rect x="98.9862%" y="1445" width="0.0461%" height="15" fill="rgb(230,210,4)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1455.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="98.9862%" y="1429" width="0.0461%" height="15" fill="rgb(240,149,38)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1439.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2 samples, 0.05%)</title><rect x="98.9862%" y="1413" width="0.0461%" height="15" fill="rgb(254,105,20)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1423.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2 samples, 0.05%)</title><rect x="98.9862%" y="1397" width="0.0461%" height="15" fill="rgb(253,87,46)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1407.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.05%)</title><rect x="98.9862%" y="1381" width="0.0461%" height="15" fill="rgb(253,116,33)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1391.50"></text></g><g><title>serde::de::SeqAccess::next_element (2 samples, 0.05%)</title><rect x="98.9862%" y="1365" width="0.0461%" height="15" fill="rgb(229,198,5)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1375.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.05%)</title><rect x="98.9862%" y="1349" width="0.0461%" height="15" fill="rgb(242,38,37)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="98.9862%" y="1333" width="0.0461%" height="15" fill="rgb(242,69,53)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1343.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize (2 samples, 0.05%)</title><rect x="98.9862%" y="1317" width="0.0461%" height="15" fill="rgb(249,80,16)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1327.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.05%)</title><rect x="98.9862%" y="1301" width="0.0461%" height="15" fill="rgb(206,128,11)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1311.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.05%)</title><rect x="98.9862%" y="1285" width="0.0461%" height="15" fill="rgb(212,35,20)" fg:x="4296" fg:w="2"/><text x="99.2362%" y="1295.50"></text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect x="99.0092%" y="1269" width="0.0230%" height="15" fill="rgb(236,79,13)" fg:x="4297" fg:w="1"/><text x="99.2592%" y="1279.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="99.0092%" y="1253" width="0.0230%" height="15" fill="rgb(233,123,3)" fg:x="4297" fg:w="1"/><text x="99.2592%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.0092%" y="1237" width="0.0230%" height="15" fill="rgb(214,93,52)" fg:x="4297" fg:w="1"/><text x="99.2592%" y="1247.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.0092%" y="1221" width="0.0230%" height="15" fill="rgb(251,37,40)" fg:x="4297" fg:w="1"/><text x="99.2592%" y="1231.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect x="99.0092%" y="1205" width="0.0230%" height="15" fill="rgb(227,80,54)" fg:x="4297" fg:w="1"/><text x="99.2592%" y="1215.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="99.0092%" y="1189" width="0.0230%" height="15" fill="rgb(254,48,11)" fg:x="4297" fg:w="1"/><text x="99.2592%" y="1199.50"></text></g><g><title>&lt;json_benchmark::copy::citm_catalog::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::citm_catalog::Performance&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="99.0092%" y="1173" width="0.0230%" height="15" fill="rgb(235,193,26)" fg:x="4297" fg:w="1"/><text x="99.2592%" y="1183.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="99.0323%" y="1429" width="0.0230%" height="15" fill="rgb(229,99,21)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1439.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.02%)</title><rect x="99.0323%" y="1413" width="0.0230%" height="15" fill="rgb(211,140,41)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.02%)</title><rect x="99.0323%" y="1397" width="0.0230%" height="15" fill="rgb(240,227,30)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="99.0323%" y="1381" width="0.0230%" height="15" fill="rgb(215,224,45)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (1 samples, 0.02%)</title><rect x="99.0323%" y="1365" width="0.0230%" height="15" fill="rgb(206,123,31)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1375.50"></text></g><g><title>serde::ser::Serializer::collect_map::_{{closure}} (1 samples, 0.02%)</title><rect x="99.0323%" y="1349" width="0.0230%" height="15" fill="rgb(210,138,16)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1359.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.0323%" y="1333" width="0.0230%" height="15" fill="rgb(228,57,28)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1343.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="99.0323%" y="1317" width="0.0230%" height="15" fill="rgb(242,170,10)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1327.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.02%)</title><rect x="99.0323%" y="1301" width="0.0230%" height="15" fill="rgb(228,214,39)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1311.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Event&gt;::serialize (1 samples, 0.02%)</title><rect x="99.0323%" y="1285" width="0.0230%" height="15" fill="rgb(218,179,33)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1295.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.0323%" y="1269" width="0.0230%" height="15" fill="rgb(235,193,39)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1279.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.0323%" y="1253" width="0.0230%" height="15" fill="rgb(219,221,36)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1263.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="99.0323%" y="1237" width="0.0230%" height="15" fill="rgb(248,218,19)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1247.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.02%)</title><rect x="99.0323%" y="1221" width="0.0230%" height="15" fill="rgb(205,50,9)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1231.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.02%)</title><rect x="99.0323%" y="1205" width="0.0230%" height="15" fill="rgb(238,81,28)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1215.50"></text></g><g><title>sonic_rs::format::Formatter::write_string_fast (1 samples, 0.02%)</title><rect x="99.0323%" y="1189" width="0.0230%" height="15" fill="rgb(235,110,19)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1199.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;u8&gt; as sonic_rs::writer::WriterExt&gt;::reserve_with (1 samples, 0.02%)</title><rect x="99.0323%" y="1173" width="0.0230%" height="15" fill="rgb(214,7,14)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1183.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.0323%" y="1157" width="0.0230%" height="15" fill="rgb(211,77,3)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1167.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.0323%" y="1141" width="0.0230%" height="15" fill="rgb(229,5,9)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="99.0323%" y="1125" width="0.0230%" height="15" fill="rgb(225,90,11)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="99.0323%" y="1109" width="0.0230%" height="15" fill="rgb(242,56,8)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="99.0323%" y="1093" width="0.0230%" height="15" fill="rgb(249,212,39)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="99.0323%" y="1077" width="0.0230%" height="15" fill="rgb(236,90,9)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1087.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.0323%" y="1061" width="0.0230%" height="15" fill="rgb(206,88,35)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1071.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="99.0323%" y="1045" width="0.0230%" height="15" fill="rgb(205,126,30)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1055.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="99.0323%" y="1029" width="0.0230%" height="15" fill="rgb(230,176,12)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1039.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.02%)</title><rect x="99.0323%" y="1013" width="0.0230%" height="15" fill="rgb(243,19,9)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1023.50"></text></g><g><title>do_rallocx (1 samples, 0.02%)</title><rect x="99.0323%" y="997" width="0.0230%" height="15" fill="rgb(245,171,17)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="1007.50"></text></g><g><title>iralloct (1 samples, 0.02%)</title><rect x="99.0323%" y="981" width="0.0230%" height="15" fill="rgb(227,52,21)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="991.50"></text></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.02%)</title><rect x="99.0323%" y="965" width="0.0230%" height="15" fill="rgb(238,69,14)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="975.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="99.0323%" y="949" width="0.0230%" height="15" fill="rgb(241,156,39)" fg:x="4298" fg:w="1"/><text x="99.2823%" y="959.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="99.0783%" y="1061" width="0.0230%" height="15" fill="rgb(212,227,28)" fg:x="4300" fg:w="1"/><text x="99.3283%" y="1071.50"></text></g><g><title>&lt;sonic_rs::format::PrettyFormatter as sonic_rs::format::Formatter&gt;::begin_object_key (1 samples, 0.02%)</title><rect x="99.0783%" y="1045" width="0.0230%" height="15" fill="rgb(209,118,27)" fg:x="4300" fg:w="1"/><text x="99.3283%" y="1055.50"></text></g><g><title>sonic_rs::format::indent (1 samples, 0.02%)</title><rect x="99.0783%" y="1029" width="0.0230%" height="15" fill="rgb(226,102,5)" fg:x="4300" fg:w="1"/><text x="99.3283%" y="1039.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.02%)</title><rect x="99.0783%" y="1013" width="0.0230%" height="15" fill="rgb(223,34,3)" fg:x="4300" fg:w="1"/><text x="99.3283%" y="1023.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.02%)</title><rect x="99.0783%" y="997" width="0.0230%" height="15" fill="rgb(221,81,38)" fg:x="4300" fg:w="1"/><text x="99.3283%" y="1007.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.0783%" y="981" width="0.0230%" height="15" fill="rgb(236,219,28)" fg:x="4300" fg:w="1"/><text x="99.3283%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="99.0783%" y="965" width="0.0230%" height="15" fill="rgb(213,200,14)" fg:x="4300" fg:w="1"/><text x="99.3283%" y="975.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.0783%" y="949" width="0.0230%" height="15" fill="rgb(240,33,19)" fg:x="4300" fg:w="1"/><text x="99.3283%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="99.0783%" y="933" width="0.0230%" height="15" fill="rgb(233,113,27)" fg:x="4300" fg:w="1"/><text x="99.3283%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="99.0783%" y="917" width="0.0230%" height="15" fill="rgb(220,221,18)" fg:x="4300" fg:w="1"/><text x="99.3283%" y="927.50"></text></g><g><title>deserialize_struct::bench_citm_catalog_CitmCatalog (4,223 samples, 97.30%)</title><rect x="1.8203%" y="1557" width="97.3041%" height="15" fill="rgb(238,92,8)" fg:x="79" fg:w="4223"/><text x="2.0703%" y="1567.50">deserialize_struct::bench_citm_catalog_CitmCatalog</text></g><g><title>sonic_rs::serde::ser::to_string_pretty (4 samples, 0.09%)</title><rect x="99.0323%" y="1541" width="0.0922%" height="15" fill="rgb(222,164,16)" fg:x="4298" fg:w="4"/><text x="99.2823%" y="1551.50"></text></g><g><title>sonic_rs::serde::ser::to_vec_pretty (4 samples, 0.09%)</title><rect x="99.0323%" y="1525" width="0.0922%" height="15" fill="rgb(241,119,3)" fg:x="4298" fg:w="4"/><text x="99.2823%" y="1535.50"></text></g><g><title>sonic_rs::serde::ser::to_writer_pretty (4 samples, 0.09%)</title><rect x="99.0323%" y="1509" width="0.0922%" height="15" fill="rgb(241,44,8)" fg:x="4298" fg:w="4"/><text x="99.2823%" y="1519.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::CitmCatalog&gt;::serialize (4 samples, 0.09%)</title><rect x="99.0323%" y="1493" width="0.0922%" height="15" fill="rgb(230,36,40)" fg:x="4298" fg:w="4"/><text x="99.2823%" y="1503.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.09%)</title><rect x="99.0323%" y="1477" width="0.0922%" height="15" fill="rgb(243,16,36)" fg:x="4298" fg:w="4"/><text x="99.2823%" y="1487.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.09%)</title><rect x="99.0323%" y="1461" width="0.0922%" height="15" fill="rgb(231,4,26)" fg:x="4298" fg:w="4"/><text x="99.2823%" y="1471.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.09%)</title><rect x="99.0323%" y="1445" width="0.0922%" height="15" fill="rgb(240,9,31)" fg:x="4298" fg:w="4"/><text x="99.2823%" y="1455.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (3 samples, 0.07%)</title><rect x="99.0553%" y="1429" width="0.0691%" height="15" fill="rgb(207,173,15)" fg:x="4299" fg:w="3"/><text x="99.3053%" y="1439.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.07%)</title><rect x="99.0553%" y="1413" width="0.0691%" height="15" fill="rgb(224,192,53)" fg:x="4299" fg:w="3"/><text x="99.3053%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.07%)</title><rect x="99.0553%" y="1397" width="0.0691%" height="15" fill="rgb(223,67,28)" fg:x="4299" fg:w="3"/><text x="99.3053%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="99.0553%" y="1381" width="0.0691%" height="15" fill="rgb(211,20,47)" fg:x="4299" fg:w="3"/><text x="99.3053%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (3 samples, 0.07%)</title><rect x="99.0553%" y="1365" width="0.0691%" height="15" fill="rgb(240,228,2)" fg:x="4299" fg:w="3"/><text x="99.3053%" y="1375.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (3 samples, 0.07%)</title><rect x="99.0553%" y="1349" width="0.0691%" height="15" fill="rgb(248,151,12)" fg:x="4299" fg:w="3"/><text x="99.3053%" y="1359.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (3 samples, 0.07%)</title><rect x="99.0553%" y="1333" width="0.0691%" height="15" fill="rgb(244,8,39)" fg:x="4299" fg:w="3"/><text x="99.3053%" y="1343.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.07%)</title><rect x="99.0553%" y="1317" width="0.0691%" height="15" fill="rgb(222,26,8)" fg:x="4299" fg:w="3"/><text x="99.3053%" y="1327.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Performance&gt;::serialize (3 samples, 0.07%)</title><rect x="99.0553%" y="1301" width="0.0691%" height="15" fill="rgb(213,106,44)" fg:x="4299" fg:w="3"/><text x="99.3053%" y="1311.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.05%)</title><rect x="99.0783%" y="1285" width="0.0461%" height="15" fill="rgb(214,129,20)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1295.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.05%)</title><rect x="99.0783%" y="1269" width="0.0461%" height="15" fill="rgb(212,32,13)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1279.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.05%)</title><rect x="99.0783%" y="1253" width="0.0461%" height="15" fill="rgb(208,168,33)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1263.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2 samples, 0.05%)</title><rect x="99.0783%" y="1237" width="0.0461%" height="15" fill="rgb(231,207,8)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1247.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.05%)</title><rect x="99.0783%" y="1221" width="0.0461%" height="15" fill="rgb(235,219,23)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.05%)</title><rect x="99.0783%" y="1205" width="0.0461%" height="15" fill="rgb(226,216,26)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="99.0783%" y="1189" width="0.0461%" height="15" fill="rgb(239,137,16)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.05%)</title><rect x="99.0783%" y="1173" width="0.0461%" height="15" fill="rgb(207,12,36)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1183.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.05%)</title><rect x="99.0783%" y="1157" width="0.0461%" height="15" fill="rgb(210,214,24)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1167.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.05%)</title><rect x="99.0783%" y="1141" width="0.0461%" height="15" fill="rgb(206,56,30)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1151.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.05%)</title><rect x="99.0783%" y="1125" width="0.0461%" height="15" fill="rgb(228,143,26)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1135.50"></text></g><g><title>json_benchmark::copy::citm_catalog::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::citm_catalog::Price&gt;::serialize (2 samples, 0.05%)</title><rect x="99.0783%" y="1109" width="0.0461%" height="15" fill="rgb(216,218,46)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1119.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.05%)</title><rect x="99.0783%" y="1093" width="0.0461%" height="15" fill="rgb(206,6,19)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1103.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.05%)</title><rect x="99.0783%" y="1077" width="0.0461%" height="15" fill="rgb(239,177,51)" fg:x="4300" fg:w="2"/><text x="99.3283%" y="1087.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="99.1014%" y="1061" width="0.0230%" height="15" fill="rgb(216,55,25)" fg:x="4301" fg:w="1"/><text x="99.3514%" y="1071.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u32&gt;::serialize (1 samples, 0.02%)</title><rect x="99.1014%" y="1045" width="0.0230%" height="15" fill="rgb(231,163,29)" fg:x="4301" fg:w="1"/><text x="99.3514%" y="1055.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.02%)</title><rect x="99.1014%" y="1029" width="0.0230%" height="15" fill="rgb(232,149,50)" fg:x="4301" fg:w="1"/><text x="99.3514%" y="1039.50"></text></g><g><title>sonic_rs::format::Formatter::write_u32 (1 samples, 0.02%)</title><rect x="99.1014%" y="1013" width="0.0230%" height="15" fill="rgb(223,142,48)" fg:x="4301" fg:w="1"/><text x="99.3514%" y="1023.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.1014%" y="997" width="0.0230%" height="15" fill="rgb(245,83,23)" fg:x="4301" fg:w="1"/><text x="99.3514%" y="1007.50"></text></g><g><title>itoa::&lt;impl itoa::private::Sealed for u32&gt;::write (1 samples, 0.02%)</title><rect x="99.1014%" y="981" width="0.0230%" height="15" fill="rgb(224,63,2)" fg:x="4301" fg:w="1"/><text x="99.3514%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1244%" y="933" width="0.0230%" height="15" fill="rgb(218,65,53)" fg:x="4302" fg:w="1"/><text x="99.3744%" y="943.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.02%)</title><rect x="99.1244%" y="917" width="0.0230%" height="15" fill="rgb(221,84,29)" fg:x="4302" fg:w="1"/><text x="99.3744%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="99.1244%" y="901" width="0.0230%" height="15" fill="rgb(234,0,32)" fg:x="4302" fg:w="1"/><text x="99.3744%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="99.1244%" y="885" width="0.0230%" height="15" fill="rgb(206,20,16)" fg:x="4302" fg:w="1"/><text x="99.3744%" y="895.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="99.1244%" y="869" width="0.0230%" height="15" fill="rgb(244,172,18)" fg:x="4302" fg:w="1"/><text x="99.3744%" y="879.50"></text></g><g><title>core::cmp::PartialEq::ne (2 samples, 0.05%)</title><rect x="99.1244%" y="1525" width="0.0461%" height="15" fill="rgb(254,133,1)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1535.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1509" width="0.0461%" height="15" fill="rgb(222,206,41)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1519.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1493" width="0.0461%" height="15" fill="rgb(212,3,42)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1477" width="0.0461%" height="15" fill="rgb(241,11,4)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.05%)</title><rect x="99.1244%" y="1461" width="0.0461%" height="15" fill="rgb(205,19,26)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="99.1244%" y="1445" width="0.0461%" height="15" fill="rgb(210,179,32)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.05%)</title><rect x="99.1244%" y="1429" width="0.0461%" height="15" fill="rgb(227,116,49)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (2 samples, 0.05%)</title><rect x="99.1244%" y="1413" width="0.0461%" height="15" fill="rgb(211,146,6)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1423.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1397" width="0.0461%" height="15" fill="rgb(219,44,39)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1407.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1381" width="0.0461%" height="15" fill="rgb(234,128,11)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1391.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1365" width="0.0461%" height="15" fill="rgb(220,183,53)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1375.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1349" width="0.0461%" height="15" fill="rgb(213,219,32)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1359.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1333" width="0.0461%" height="15" fill="rgb(232,156,16)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1343.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="99.1244%" y="1317" width="0.0461%" height="15" fill="rgb(246,135,34)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.05%)</title><rect x="99.1244%" y="1301" width="0.0461%" height="15" fill="rgb(241,99,0)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="99.1244%" y="1285" width="0.0461%" height="15" fill="rgb(222,103,45)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.05%)</title><rect x="99.1244%" y="1269" width="0.0461%" height="15" fill="rgb(212,57,4)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1279.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (2 samples, 0.05%)</title><rect x="99.1244%" y="1253" width="0.0461%" height="15" fill="rgb(215,68,47)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1263.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1237" width="0.0461%" height="15" fill="rgb(230,84,2)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1247.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1221" width="0.0461%" height="15" fill="rgb(220,102,14)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1231.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1205" width="0.0461%" height="15" fill="rgb(240,10,32)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1189" width="0.0461%" height="15" fill="rgb(215,47,27)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.05%)</title><rect x="99.1244%" y="1173" width="0.0461%" height="15" fill="rgb(233,188,43)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="99.1244%" y="1157" width="0.0461%" height="15" fill="rgb(253,190,1)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.05%)</title><rect x="99.1244%" y="1141" width="0.0461%" height="15" fill="rgb(206,114,52)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (2 samples, 0.05%)</title><rect x="99.1244%" y="1125" width="0.0461%" height="15" fill="rgb(233,120,37)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1135.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1109" width="0.0461%" height="15" fill="rgb(214,52,39)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1093" width="0.0461%" height="15" fill="rgb(223,80,29)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1103.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1077" width="0.0461%" height="15" fill="rgb(230,101,40)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1087.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1061" width="0.0461%" height="15" fill="rgb(219,211,8)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="1045" width="0.0461%" height="15" fill="rgb(252,126,28)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.05%)</title><rect x="99.1244%" y="1029" width="0.0461%" height="15" fill="rgb(215,56,38)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="99.1244%" y="1013" width="0.0461%" height="15" fill="rgb(249,55,44)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.05%)</title><rect x="99.1244%" y="997" width="0.0461%" height="15" fill="rgb(220,221,32)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (2 samples, 0.05%)</title><rect x="99.1244%" y="981" width="0.0461%" height="15" fill="rgb(212,216,41)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="991.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="965" width="0.0461%" height="15" fill="rgb(228,213,43)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="99.1244%" y="949" width="0.0461%" height="15" fill="rgb(211,31,26)" fg:x="4302" fg:w="2"/><text x="99.3744%" y="959.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="933" width="0.0230%" height="15" fill="rgb(229,202,19)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="943.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="917" width="0.0230%" height="15" fill="rgb(229,105,46)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="901" width="0.0230%" height="15" fill="rgb(235,108,1)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="99.1475%" y="885" width="0.0230%" height="15" fill="rgb(245,111,35)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="99.1475%" y="869" width="0.0230%" height="15" fill="rgb(219,185,31)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect x="99.1475%" y="853" width="0.0230%" height="15" fill="rgb(214,4,43)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.02%)</title><rect x="99.1475%" y="837" width="0.0230%" height="15" fill="rgb(235,227,40)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="847.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="821" width="0.0230%" height="15" fill="rgb(230,88,30)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="805" width="0.0230%" height="15" fill="rgb(216,217,1)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="815.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="789" width="0.0230%" height="15" fill="rgb(248,139,50)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="799.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="773" width="0.0230%" height="15" fill="rgb(233,1,21)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="757" width="0.0230%" height="15" fill="rgb(215,183,12)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="99.1475%" y="741" width="0.0230%" height="15" fill="rgb(229,104,42)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="99.1475%" y="725" width="0.0230%" height="15" fill="rgb(243,34,48)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect x="99.1475%" y="709" width="0.0230%" height="15" fill="rgb(239,11,44)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.02%)</title><rect x="99.1475%" y="693" width="0.0230%" height="15" fill="rgb(231,98,35)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="703.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="677" width="0.0230%" height="15" fill="rgb(233,28,25)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="661" width="0.0230%" height="15" fill="rgb(234,123,11)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="645" width="0.0230%" height="15" fill="rgb(220,69,3)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="655.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="629" width="0.0230%" height="15" fill="rgb(214,64,36)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="613" width="0.0230%" height="15" fill="rgb(211,138,32)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="99.1475%" y="597" width="0.0230%" height="15" fill="rgb(213,118,47)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="99.1475%" y="581" width="0.0230%" height="15" fill="rgb(243,124,49)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect x="99.1475%" y="565" width="0.0230%" height="15" fill="rgb(221,30,28)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.02%)</title><rect x="99.1475%" y="549" width="0.0230%" height="15" fill="rgb(246,37,13)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="559.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="533" width="0.0230%" height="15" fill="rgb(249,66,14)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="517" width="0.0230%" height="15" fill="rgb(213,166,5)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="501" width="0.0230%" height="15" fill="rgb(221,66,24)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="511.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="485" width="0.0230%" height="15" fill="rgb(210,132,17)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="469" width="0.0230%" height="15" fill="rgb(243,202,5)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="99.1475%" y="453" width="0.0230%" height="15" fill="rgb(233,70,48)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="99.1475%" y="437" width="0.0230%" height="15" fill="rgb(238,41,26)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="99.1475%" y="421" width="0.0230%" height="15" fill="rgb(241,19,31)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.02%)</title><rect x="99.1475%" y="405" width="0.0230%" height="15" fill="rgb(214,76,10)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.02%)</title><rect x="99.1475%" y="389" width="0.0230%" height="15" fill="rgb(254,202,22)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="373" width="0.0230%" height="15" fill="rgb(214,72,24)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="357" width="0.0230%" height="15" fill="rgb(221,92,46)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="367.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="341" width="0.0230%" height="15" fill="rgb(246,13,50)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1475%" y="325" width="0.0230%" height="15" fill="rgb(240,165,38)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="99.1475%" y="309" width="0.0230%" height="15" fill="rgb(241,24,51)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="99.1475%" y="293" width="0.0230%" height="15" fill="rgb(227,51,44)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.1475%" y="277" width="0.0230%" height="15" fill="rgb(231,121,3)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect x="99.1475%" y="261" width="0.0230%" height="15" fill="rgb(245,3,41)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.1475%" y="245" width="0.0230%" height="15" fill="rgb(214,13,26)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="255.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.1475%" y="229" width="0.0230%" height="15" fill="rgb(252,75,11)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.1475%" y="213" width="0.0230%" height="15" fill="rgb(218,226,17)" fg:x="4303" fg:w="1"/><text x="99.3975%" y="223.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="99.1705%" y="1173" width="0.0230%" height="15" fill="rgb(248,89,38)" fg:x="4304" fg:w="1"/><text x="99.4205%" y="1183.50"></text></g><g><title>free_fastpath (1 samples, 0.02%)</title><rect x="99.1705%" y="1157" width="0.0230%" height="15" fill="rgb(237,73,46)" fg:x="4304" fg:w="1"/><text x="99.4205%" y="1167.50"></text></g><g><title>cache_bin_dalloc_easy (1 samples, 0.02%)</title><rect x="99.1705%" y="1141" width="0.0230%" height="15" fill="rgb(242,78,33)" fg:x="4304" fg:w="1"/><text x="99.4205%" y="1151.50"></text></g><g><title>cache_bin_full (1 samples, 0.02%)</title><rect x="99.1705%" y="1125" width="0.0230%" height="15" fill="rgb(235,60,3)" fg:x="4304" fg:w="1"/><text x="99.4205%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1525" width="0.0691%" height="15" fill="rgb(216,172,19)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1509" width="0.0691%" height="15" fill="rgb(227,6,42)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1493" width="0.0691%" height="15" fill="rgb(223,207,42)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="99.1705%" y="1477" width="0.0691%" height="15" fill="rgb(246,138,30)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1487.50"></text></g><g><title>core::mem::drop (3 samples, 0.07%)</title><rect x="99.1705%" y="1461" width="0.0691%" height="15" fill="rgb(251,199,47)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1445" width="0.0691%" height="15" fill="rgb(228,218,44)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="99.1705%" y="1429" width="0.0691%" height="15" fill="rgb(220,68,6)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1439.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="99.1705%" y="1413" width="0.0691%" height="15" fill="rgb(240,60,26)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1397" width="0.0691%" height="15" fill="rgb(211,200,19)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1381" width="0.0691%" height="15" fill="rgb(242,145,30)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1365" width="0.0691%" height="15" fill="rgb(225,64,13)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="99.1705%" y="1349" width="0.0691%" height="15" fill="rgb(218,103,35)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1333" width="0.0691%" height="15" fill="rgb(216,93,46)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1317" width="0.0691%" height="15" fill="rgb(225,159,27)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1301" width="0.0691%" height="15" fill="rgb(225,204,11)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1285" width="0.0691%" height="15" fill="rgb(205,56,4)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="99.1705%" y="1269" width="0.0691%" height="15" fill="rgb(206,6,35)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1279.50"></text></g><g><title>core::mem::drop (3 samples, 0.07%)</title><rect x="99.1705%" y="1253" width="0.0691%" height="15" fill="rgb(247,73,52)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1237" width="0.0691%" height="15" fill="rgb(246,97,4)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="99.1705%" y="1221" width="0.0691%" height="15" fill="rgb(212,37,15)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1231.50"></text></g><g><title>?? (3 samples, 0.07%)</title><rect x="99.1705%" y="1205" width="0.0691%" height="15" fill="rgb(208,130,40)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.07%)</title><rect x="99.1705%" y="1189" width="0.0691%" height="15" fill="rgb(236,55,29)" fg:x="4304" fg:w="3"/><text x="99.4205%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.05%)</title><rect x="99.1935%" y="1173" width="0.0461%" height="15" fill="rgb(209,156,45)" fg:x="4305" fg:w="2"/><text x="99.4435%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.05%)</title><rect x="99.1935%" y="1157" width="0.0461%" height="15" fill="rgb(249,107,4)" fg:x="4305" fg:w="2"/><text x="99.4435%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.05%)</title><rect x="99.1935%" y="1141" width="0.0461%" height="15" fill="rgb(227,7,13)" fg:x="4305" fg:w="2"/><text x="99.4435%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="99.1935%" y="1125" width="0.0461%" height="15" fill="rgb(250,129,14)" fg:x="4305" fg:w="2"/><text x="99.4435%" y="1135.50"></text></g><g><title>core::mem::drop (2 samples, 0.05%)</title><rect x="99.1935%" y="1109" width="0.0461%" height="15" fill="rgb(229,92,13)" fg:x="4305" fg:w="2"/><text x="99.4435%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.05%)</title><rect x="99.1935%" y="1093" width="0.0461%" height="15" fill="rgb(245,98,39)" fg:x="4305" fg:w="2"/><text x="99.4435%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="99.1935%" y="1077" width="0.0461%" height="15" fill="rgb(234,135,48)" fg:x="4305" fg:w="2"/><text x="99.4435%" y="1087.50"></text></g><g><title>?? (2 samples, 0.05%)</title><rect x="99.1935%" y="1061" width="0.0461%" height="15" fill="rgb(230,98,28)" fg:x="4305" fg:w="2"/><text x="99.4435%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.05%)</title><rect x="99.1935%" y="1045" width="0.0461%" height="15" fill="rgb(223,121,0)" fg:x="4305" fg:w="2"/><text x="99.4435%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.05%)</title><rect x="99.1935%" y="1029" width="0.0461%" height="15" fill="rgb(234,173,33)" fg:x="4305" fg:w="2"/><text x="99.4435%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="99.2166%" y="1013" width="0.0230%" height="15" fill="rgb(245,47,8)" fg:x="4306" fg:w="1"/><text x="99.4666%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="99.2166%" y="997" width="0.0230%" height="15" fill="rgb(205,17,20)" fg:x="4306" fg:w="1"/><text x="99.4666%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.2166%" y="981" width="0.0230%" height="15" fill="rgb(232,151,16)" fg:x="4306" fg:w="1"/><text x="99.4666%" y="991.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="99.2166%" y="965" width="0.0230%" height="15" fill="rgb(208,30,32)" fg:x="4306" fg:w="1"/><text x="99.4666%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.02%)</title><rect x="99.2166%" y="949" width="0.0230%" height="15" fill="rgb(254,26,3)" fg:x="4306" fg:w="1"/><text x="99.4666%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.2166%" y="933" width="0.0230%" height="15" fill="rgb(240,177,30)" fg:x="4306" fg:w="1"/><text x="99.4666%" y="943.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.2166%" y="917" width="0.0230%" height="15" fill="rgb(248,76,44)" fg:x="4306" fg:w="1"/><text x="99.4666%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="99.2166%" y="901" width="0.0230%" height="15" fill="rgb(241,186,54)" fg:x="4306" fg:w="1"/><text x="99.4666%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="99.2166%" y="885" width="0.0230%" height="15" fill="rgb(249,171,29)" fg:x="4306" fg:w="1"/><text x="99.4666%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="99.2166%" y="869" width="0.0230%" height="15" fill="rgb(237,151,44)" fg:x="4306" fg:w="1"/><text x="99.4666%" y="879.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="99.2627%" y="1253" width="0.0230%" height="15" fill="rgb(228,174,30)" fg:x="4308" fg:w="1"/><text x="99.5127%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.2627%" y="1237" width="0.0230%" height="15" fill="rgb(252,14,37)" fg:x="4308" fg:w="1"/><text x="99.5127%" y="1247.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.2627%" y="1221" width="0.0230%" height="15" fill="rgb(207,111,40)" fg:x="4308" fg:w="1"/><text x="99.5127%" y="1231.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect x="99.2627%" y="1205" width="0.0230%" height="15" fill="rgb(248,171,54)" fg:x="4308" fg:w="1"/><text x="99.5127%" y="1215.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="99.2627%" y="1189" width="0.0230%" height="15" fill="rgb(211,127,2)" fg:x="4308" fg:w="1"/><text x="99.5127%" y="1199.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="99.2627%" y="1173" width="0.0230%" height="15" fill="rgb(236,87,47)" fg:x="4308" fg:w="1"/><text x="99.5127%" y="1183.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="99.2627%" y="1157" width="0.0230%" height="15" fill="rgb(223,190,45)" fg:x="4308" fg:w="1"/><text x="99.5127%" y="1167.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="99.2627%" y="1141" width="0.0230%" height="15" fill="rgb(215,5,16)" fg:x="4308" fg:w="1"/><text x="99.5127%" y="1151.50"></text></g><g><title>cache_bin_alloc_impl (1 samples, 0.02%)</title><rect x="99.2627%" y="1125" width="0.0230%" height="15" fill="rgb(252,82,33)" fg:x="4308" fg:w="1"/><text x="99.5127%" y="1135.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="99.2857%" y="1189" width="0.0230%" height="15" fill="rgb(247,213,44)" fg:x="4309" fg:w="1"/><text x="99.5357%" y="1199.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="99.2857%" y="1173" width="0.0230%" height="15" fill="rgb(205,196,44)" fg:x="4309" fg:w="1"/><text x="99.5357%" y="1183.50"></text></g><g><title>serde_json::read::parse_escape (1 samples, 0.02%)</title><rect x="99.2857%" y="1157" width="0.0230%" height="15" fill="rgb(237,96,54)" fg:x="4309" fg:w="1"/><text x="99.5357%" y="1167.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="99.3088%" y="1141" width="0.0230%" height="15" fill="rgb(230,113,34)" fg:x="4310" fg:w="1"/><text x="99.5588%" y="1151.50"></text></g><g><title>serde::de::MapAccess::next_entry (2 samples, 0.05%)</title><rect x="99.3318%" y="1061" width="0.0461%" height="15" fill="rgb(221,224,12)" fg:x="4311" fg:w="2"/><text x="99.5818%" y="1071.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2 samples, 0.05%)</title><rect x="99.3318%" y="1045" width="0.0461%" height="15" fill="rgb(219,112,44)" fg:x="4311" fg:w="2"/><text x="99.5818%" y="1055.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="99.3548%" y="1029" width="0.0230%" height="15" fill="rgb(210,31,13)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.3548%" y="1013" width="0.0230%" height="15" fill="rgb(230,25,16)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="1023.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.3548%" y="997" width="0.0230%" height="15" fill="rgb(246,108,53)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="1007.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="99.3548%" y="981" width="0.0230%" height="15" fill="rgb(241,172,50)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="991.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="99.3548%" y="965" width="0.0230%" height="15" fill="rgb(235,141,10)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.02%)</title><rect x="99.3548%" y="949" width="0.0230%" height="15" fill="rgb(220,174,43)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect x="99.3548%" y="933" width="0.0230%" height="15" fill="rgb(215,181,40)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect x="99.3548%" y="917" width="0.0230%" height="15" fill="rgb(230,97,2)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect x="99.3548%" y="901" width="0.0230%" height="15" fill="rgb(211,25,27)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="99.3548%" y="885" width="0.0230%" height="15" fill="rgb(230,87,26)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="99.3548%" y="869" width="0.0230%" height="15" fill="rgb(227,160,17)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="99.3548%" y="853" width="0.0230%" height="15" fill="rgb(244,85,34)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="863.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3548%" y="837" width="0.0230%" height="15" fill="rgb(207,70,0)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="847.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3548%" y="821" width="0.0230%" height="15" fill="rgb(223,129,7)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="831.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3548%" y="805" width="0.0230%" height="15" fill="rgb(246,105,7)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="99.3548%" y="789" width="0.0230%" height="15" fill="rgb(215,154,42)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3548%" y="773" width="0.0230%" height="15" fill="rgb(220,215,30)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="783.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="99.3548%" y="757" width="0.0230%" height="15" fill="rgb(228,81,51)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="767.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="99.3548%" y="741" width="0.0230%" height="15" fill="rgb(247,71,54)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="751.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="99.3548%" y="725" width="0.0230%" height="15" fill="rgb(234,176,34)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="735.50"></text></g><g><title>_rjem_malloc (1 samples, 0.02%)</title><rect x="99.3548%" y="709" width="0.0230%" height="15" fill="rgb(241,103,54)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="719.50"></text></g><g><title>imalloc_fastpath (1 samples, 0.02%)</title><rect x="99.3548%" y="693" width="0.0230%" height="15" fill="rgb(228,22,34)" fg:x="4312" fg:w="1"/><text x="99.6048%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.07%)</title><rect x="99.3318%" y="1077" width="0.0691%" height="15" fill="rgb(241,179,48)" fg:x="4311" fg:w="3"/><text x="99.5818%" y="1087.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="99.3779%" y="1061" width="0.0230%" height="15" fill="rgb(235,167,37)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="1071.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.3779%" y="1045" width="0.0230%" height="15" fill="rgb(213,109,30)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="1055.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="99.3779%" y="1029" width="0.0230%" height="15" fill="rgb(222,172,16)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="1039.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.3779%" y="1013" width="0.0230%" height="15" fill="rgb(233,192,5)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="1023.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="99.3779%" y="997" width="0.0230%" height="15" fill="rgb(247,189,41)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="1007.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.3779%" y="981" width="0.0230%" height="15" fill="rgb(218,134,47)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="991.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="99.3779%" y="965" width="0.0230%" height="15" fill="rgb(216,29,3)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="975.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="99.3779%" y="949" width="0.0230%" height="15" fill="rgb(246,140,12)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="959.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="99.3779%" y="933" width="0.0230%" height="15" fill="rgb(230,136,11)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="943.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="99.3779%" y="917" width="0.0230%" height="15" fill="rgb(247,22,47)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.3779%" y="901" width="0.0230%" height="15" fill="rgb(218,84,22)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="911.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.3779%" y="885" width="0.0230%" height="15" fill="rgb(216,87,39)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="895.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="99.3779%" y="869" width="0.0230%" height="15" fill="rgb(221,178,8)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="879.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.3779%" y="853" width="0.0230%" height="15" fill="rgb(230,42,11)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="863.50"></text></g><g><title>serde::de::MapAccess::next_entry (1 samples, 0.02%)</title><rect x="99.3779%" y="837" width="0.0230%" height="15" fill="rgb(237,229,4)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="847.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.02%)</title><rect x="99.3779%" y="821" width="0.0230%" height="15" fill="rgb(222,31,33)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="831.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="99.3779%" y="805" width="0.0230%" height="15" fill="rgb(210,17,39)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="815.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3779%" y="789" width="0.0230%" height="15" fill="rgb(244,93,20)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="799.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.3779%" y="773" width="0.0230%" height="15" fill="rgb(210,40,47)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="783.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1 samples, 0.02%)</title><rect x="99.3779%" y="757" width="0.0230%" height="15" fill="rgb(239,211,47)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="767.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.02%)</title><rect x="99.3779%" y="741" width="0.0230%" height="15" fill="rgb(251,223,49)" fg:x="4313" fg:w="1"/><text x="99.6279%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.09%)</title><rect x="99.3318%" y="1125" width="0.0922%" height="15" fill="rgb(221,149,5)" fg:x="4311" fg:w="4"/><text x="99.5818%" y="1135.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.09%)</title><rect x="99.3318%" y="1109" width="0.0922%" height="15" fill="rgb(219,224,51)" fg:x="4311" fg:w="4"/><text x="99.5818%" y="1119.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.09%)</title><rect x="99.3318%" y="1093" width="0.0922%" height="15" fill="rgb(223,7,8)" fg:x="4311" fg:w="4"/><text x="99.5818%" y="1103.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="99.4009%" y="1077" width="0.0230%" height="15" fill="rgb(241,217,22)" fg:x="4314" fg:w="1"/><text x="99.6509%" y="1087.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.02%)</title><rect x="99.4009%" y="1061" width="0.0230%" height="15" fill="rgb(248,209,0)" fg:x="4314" fg:w="1"/><text x="99.6509%" y="1071.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.02%)</title><rect x="99.4009%" y="1045" width="0.0230%" height="15" fill="rgb(217,205,4)" fg:x="4314" fg:w="1"/><text x="99.6509%" y="1055.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4009%" y="1029" width="0.0230%" height="15" fill="rgb(228,124,39)" fg:x="4314" fg:w="1"/><text x="99.6509%" y="1039.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4009%" y="1013" width="0.0230%" height="15" fill="rgb(250,116,42)" fg:x="4314" fg:w="1"/><text x="99.6509%" y="1023.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="99.4009%" y="997" width="0.0230%" height="15" fill="rgb(223,202,9)" fg:x="4314" fg:w="1"/><text x="99.6509%" y="1007.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.4009%" y="981" width="0.0230%" height="15" fill="rgb(242,222,40)" fg:x="4314" fg:w="1"/><text x="99.6509%" y="991.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4009%" y="965" width="0.0230%" height="15" fill="rgb(229,99,46)" fg:x="4314" fg:w="1"/><text x="99.6509%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="99.4009%" y="949" width="0.0230%" height="15" fill="rgb(225,56,46)" fg:x="4314" fg:w="1"/><text x="99.6509%" y="959.50"></text></g><g><title>serde::de::MapAccess::next_entry (6 samples, 0.14%)</title><rect x="99.3088%" y="1173" width="0.1382%" height="15" fill="rgb(227,94,5)" fg:x="4310" fg:w="6"/><text x="99.5588%" y="1183.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (6 samples, 0.14%)</title><rect x="99.3088%" y="1157" width="0.1382%" height="15" fill="rgb(205,112,38)" fg:x="4310" fg:w="6"/><text x="99.5588%" y="1167.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.12%)</title><rect x="99.3318%" y="1141" width="0.1152%" height="15" fill="rgb(231,133,46)" fg:x="4311" fg:w="5"/><text x="99.5818%" y="1151.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4240%" y="1125" width="0.0230%" height="15" fill="rgb(217,16,9)" fg:x="4315" fg:w="1"/><text x="99.6740%" y="1135.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4240%" y="1109" width="0.0230%" height="15" fill="rgb(249,173,9)" fg:x="4315" fg:w="1"/><text x="99.6740%" y="1119.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4240%" y="1093" width="0.0230%" height="15" fill="rgb(205,163,53)" fg:x="4315" fg:w="1"/><text x="99.6740%" y="1103.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="99.4240%" y="1077" width="0.0230%" height="15" fill="rgb(217,54,41)" fg:x="4315" fg:w="1"/><text x="99.6740%" y="1087.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="99.4240%" y="1061" width="0.0230%" height="15" fill="rgb(228,216,12)" fg:x="4315" fg:w="1"/><text x="99.6740%" y="1071.50"></text></g><g><title>deserialize_struct::diff_json (15 samples, 0.35%)</title><rect x="99.1244%" y="1541" width="0.3456%" height="15" fill="rgb(244,228,15)" fg:x="4302" fg:w="15"/><text x="99.3744%" y="1551.50"></text></g><g><title>serde_json::de::from_str (10 samples, 0.23%)</title><rect x="99.2396%" y="1525" width="0.2304%" height="15" fill="rgb(221,176,53)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1535.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.23%)</title><rect x="99.2396%" y="1509" width="0.2304%" height="15" fill="rgb(205,94,34)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1519.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.23%)</title><rect x="99.2396%" y="1493" width="0.2304%" height="15" fill="rgb(213,110,48)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1503.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.23%)</title><rect x="99.2396%" y="1477" width="0.2304%" height="15" fill="rgb(236,142,28)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1487.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.23%)</title><rect x="99.2396%" y="1461" width="0.2304%" height="15" fill="rgb(225,135,29)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1471.50"></text></g><g><title>serde::de::MapAccess::next_value (10 samples, 0.23%)</title><rect x="99.2396%" y="1445" width="0.2304%" height="15" fill="rgb(252,45,31)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1455.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.23%)</title><rect x="99.2396%" y="1429" width="0.2304%" height="15" fill="rgb(211,187,50)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1439.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.23%)</title><rect x="99.2396%" y="1413" width="0.2304%" height="15" fill="rgb(229,109,7)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1423.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10 samples, 0.23%)</title><rect x="99.2396%" y="1397" width="0.2304%" height="15" fill="rgb(251,131,51)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1407.50"></text></g><g><title>serde::de::SeqAccess::next_element (10 samples, 0.23%)</title><rect x="99.2396%" y="1381" width="0.2304%" height="15" fill="rgb(251,180,35)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1391.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10 samples, 0.23%)</title><rect x="99.2396%" y="1365" width="0.2304%" height="15" fill="rgb(211,46,32)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1375.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10 samples, 0.23%)</title><rect x="99.2396%" y="1349" width="0.2304%" height="15" fill="rgb(248,123,17)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1359.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.23%)</title><rect x="99.2396%" y="1333" width="0.2304%" height="15" fill="rgb(227,141,18)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1343.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.23%)</title><rect x="99.2396%" y="1317" width="0.2304%" height="15" fill="rgb(216,102,9)" fg:x="4307" fg:w="10"/><text x="99.4896%" y="1327.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.21%)</title><rect x="99.2627%" y="1301" width="0.2074%" height="15" fill="rgb(253,47,13)" fg:x="4308" fg:w="9"/><text x="99.5127%" y="1311.50"></text></g><g><title>serde::de::MapAccess::next_entry (9 samples, 0.21%)</title><rect x="99.2627%" y="1285" width="0.2074%" height="15" fill="rgb(226,93,23)" fg:x="4308" fg:w="9"/><text x="99.5127%" y="1295.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (9 samples, 0.21%)</title><rect x="99.2627%" y="1269" width="0.2074%" height="15" fill="rgb(247,104,17)" fg:x="4308" fg:w="9"/><text x="99.5127%" y="1279.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (8 samples, 0.18%)</title><rect x="99.2857%" y="1253" width="0.1843%" height="15" fill="rgb(233,203,26)" fg:x="4309" fg:w="8"/><text x="99.5357%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.18%)</title><rect x="99.2857%" y="1237" width="0.1843%" height="15" fill="rgb(244,98,49)" fg:x="4309" fg:w="8"/><text x="99.5357%" y="1247.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.18%)</title><rect x="99.2857%" y="1221" width="0.1843%" height="15" fill="rgb(235,134,22)" fg:x="4309" fg:w="8"/><text x="99.5357%" y="1231.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.18%)</title><rect x="99.2857%" y="1205" width="0.1843%" height="15" fill="rgb(221,70,32)" fg:x="4309" fg:w="8"/><text x="99.5357%" y="1215.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.16%)</title><rect x="99.3088%" y="1189" width="0.1613%" height="15" fill="rgb(238,15,50)" fg:x="4310" fg:w="7"/><text x="99.5588%" y="1199.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.4470%" y="1173" width="0.0230%" height="15" fill="rgb(215,221,48)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="99.4470%" y="1157" width="0.0230%" height="15" fill="rgb(236,73,3)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="1167.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4470%" y="1141" width="0.0230%" height="15" fill="rgb(250,107,11)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="1151.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4470%" y="1125" width="0.0230%" height="15" fill="rgb(242,39,14)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert::_{{closure}} (1 samples, 0.02%)</title><rect x="99.4470%" y="1109" width="0.0230%" height="15" fill="rgb(248,164,37)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="1119.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4470%" y="1093" width="0.0230%" height="15" fill="rgb(217,60,12)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="1103.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (1 samples, 0.02%)</title><rect x="99.4470%" y="1077" width="0.0230%" height="15" fill="rgb(240,125,29)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="1087.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.02%)</title><rect x="99.4470%" y="1061" width="0.0230%" height="15" fill="rgb(208,207,28)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="1071.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::_{{closure}} (1 samples, 0.02%)</title><rect x="99.4470%" y="1045" width="0.0230%" height="15" fill="rgb(209,159,27)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::_{{closure}} (1 samples, 0.02%)</title><rect x="99.4470%" y="1029" width="0.0230%" height="15" fill="rgb(251,176,53)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="1039.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4470%" y="1013" width="0.0230%" height="15" fill="rgb(211,85,7)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="1023.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4470%" y="997" width="0.0230%" height="15" fill="rgb(216,64,54)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="1007.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4470%" y="981" width="0.0230%" height="15" fill="rgb(217,54,24)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="99.4470%" y="965" width="0.0230%" height="15" fill="rgb(208,206,53)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="975.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="99.4470%" y="949" width="0.0230%" height="15" fill="rgb(251,74,39)" fg:x="4316" fg:w="1"/><text x="99.6970%" y="959.50"></text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.02%)</title><rect x="99.4700%" y="1461" width="0.0230%" height="15" fill="rgb(226,47,5)" fg:x="4317" fg:w="1"/><text x="99.7200%" y="1471.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="99.4700%" y="1445" width="0.0230%" height="15" fill="rgb(234,111,33)" fg:x="4317" fg:w="1"/><text x="99.7200%" y="1455.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4700%" y="1429" width="0.0230%" height="15" fill="rgb(251,14,10)" fg:x="4317" fg:w="1"/><text x="99.7200%" y="1439.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4700%" y="1413" width="0.0230%" height="15" fill="rgb(232,43,0)" fg:x="4317" fg:w="1"/><text x="99.7200%" y="1423.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="99.4700%" y="1397" width="0.0230%" height="15" fill="rgb(222,68,43)" fg:x="4317" fg:w="1"/><text x="99.7200%" y="1407.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.4931%" y="1365" width="0.0230%" height="15" fill="rgb(217,24,23)" fg:x="4318" fg:w="1"/><text x="99.7431%" y="1375.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="99.4931%" y="1349" width="0.0230%" height="15" fill="rgb(229,209,14)" fg:x="4318" fg:w="1"/><text x="99.7431%" y="1359.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="99.4931%" y="1333" width="0.0230%" height="15" fill="rgb(250,149,48)" fg:x="4318" fg:w="1"/><text x="99.7431%" y="1343.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5161%" y="1221" width="0.0230%" height="15" fill="rgb(210,120,37)" fg:x="4319" fg:w="1"/><text x="99.7661%" y="1231.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.5161%" y="1205" width="0.0230%" height="15" fill="rgb(210,21,8)" fg:x="4319" fg:w="1"/><text x="99.7661%" y="1215.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.5161%" y="1189" width="0.0230%" height="15" fill="rgb(243,145,7)" fg:x="4319" fg:w="1"/><text x="99.7661%" y="1199.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="99.5161%" y="1173" width="0.0230%" height="15" fill="rgb(238,178,32)" fg:x="4319" fg:w="1"/><text x="99.7661%" y="1183.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="99.5161%" y="1157" width="0.0230%" height="15" fill="rgb(222,4,10)" fg:x="4319" fg:w="1"/><text x="99.7661%" y="1167.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5161%" y="1141" width="0.0230%" height="15" fill="rgb(239,7,37)" fg:x="4319" fg:w="1"/><text x="99.7661%" y="1151.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::UserEntities&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5161%" y="1125" width="0.0230%" height="15" fill="rgb(215,31,37)" fg:x="4319" fg:w="1"/><text x="99.7661%" y="1135.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.5161%" y="1109" width="0.0230%" height="15" fill="rgb(224,83,33)" fg:x="4319" fg:w="1"/><text x="99.7661%" y="1119.50"></text></g><g><title>serde_json::de::from_slice (4 samples, 0.09%)</title><rect x="99.4700%" y="1541" width="0.0922%" height="15" fill="rgb(239,55,3)" fg:x="4317" fg:w="4"/><text x="99.7200%" y="1551.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.09%)</title><rect x="99.4700%" y="1525" width="0.0922%" height="15" fill="rgb(247,92,11)" fg:x="4317" fg:w="4"/><text x="99.7200%" y="1535.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize (4 samples, 0.09%)</title><rect x="99.4700%" y="1509" width="0.0922%" height="15" fill="rgb(239,200,7)" fg:x="4317" fg:w="4"/><text x="99.7200%" y="1519.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.09%)</title><rect x="99.4700%" y="1493" width="0.0922%" height="15" fill="rgb(227,115,8)" fg:x="4317" fg:w="4"/><text x="99.7200%" y="1503.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.09%)</title><rect x="99.4700%" y="1477" width="0.0922%" height="15" fill="rgb(215,189,27)" fg:x="4317" fg:w="4"/><text x="99.7200%" y="1487.50"></text></g><g><title>serde::de::MapAccess::next_value (3 samples, 0.07%)</title><rect x="99.4931%" y="1461" width="0.0691%" height="15" fill="rgb(251,216,39)" fg:x="4318" fg:w="3"/><text x="99.7431%" y="1471.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.07%)</title><rect x="99.4931%" y="1445" width="0.0691%" height="15" fill="rgb(207,29,47)" fg:x="4318" fg:w="3"/><text x="99.7431%" y="1455.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.07%)</title><rect x="99.4931%" y="1429" width="0.0691%" height="15" fill="rgb(210,71,34)" fg:x="4318" fg:w="3"/><text x="99.7431%" y="1439.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (3 samples, 0.07%)</title><rect x="99.4931%" y="1413" width="0.0691%" height="15" fill="rgb(253,217,51)" fg:x="4318" fg:w="3"/><text x="99.7431%" y="1423.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (3 samples, 0.07%)</title><rect x="99.4931%" y="1397" width="0.0691%" height="15" fill="rgb(222,117,46)" fg:x="4318" fg:w="3"/><text x="99.7431%" y="1407.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.07%)</title><rect x="99.4931%" y="1381" width="0.0691%" height="15" fill="rgb(226,132,6)" fg:x="4318" fg:w="3"/><text x="99.7431%" y="1391.50"></text></g><g><title>serde::de::SeqAccess::next_element (2 samples, 0.05%)</title><rect x="99.5161%" y="1365" width="0.0461%" height="15" fill="rgb(254,145,51)" fg:x="4319" fg:w="2"/><text x="99.7661%" y="1375.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.05%)</title><rect x="99.5161%" y="1349" width="0.0461%" height="15" fill="rgb(231,199,27)" fg:x="4319" fg:w="2"/><text x="99.7661%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="99.5161%" y="1333" width="0.0461%" height="15" fill="rgb(245,158,14)" fg:x="4319" fg:w="2"/><text x="99.7661%" y="1343.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize (2 samples, 0.05%)</title><rect x="99.5161%" y="1317" width="0.0461%" height="15" fill="rgb(240,113,14)" fg:x="4319" fg:w="2"/><text x="99.7661%" y="1327.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.05%)</title><rect x="99.5161%" y="1301" width="0.0461%" height="15" fill="rgb(210,20,13)" fg:x="4319" fg:w="2"/><text x="99.7661%" y="1311.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.05%)</title><rect x="99.5161%" y="1285" width="0.0461%" height="15" fill="rgb(241,144,13)" fg:x="4319" fg:w="2"/><text x="99.7661%" y="1295.50"></text></g><g><title>serde::de::MapAccess::next_value (2 samples, 0.05%)</title><rect x="99.5161%" y="1269" width="0.0461%" height="15" fill="rgb(235,43,34)" fg:x="4319" fg:w="2"/><text x="99.7661%" y="1279.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.05%)</title><rect x="99.5161%" y="1253" width="0.0461%" height="15" fill="rgb(208,36,20)" fg:x="4319" fg:w="2"/><text x="99.7661%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="99.5161%" y="1237" width="0.0461%" height="15" fill="rgb(239,204,10)" fg:x="4319" fg:w="2"/><text x="99.7661%" y="1247.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5392%" y="1221" width="0.0230%" height="15" fill="rgb(217,84,43)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1231.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.02%)</title><rect x="99.5392%" y="1205" width="0.0230%" height="15" fill="rgb(241,170,50)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1215.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.02%)</title><rect x="99.5392%" y="1189" width="0.0230%" height="15" fill="rgb(226,205,29)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1199.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;T&gt;&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5392%" y="1173" width="0.0230%" height="15" fill="rgb(233,113,1)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1183.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5392%" y="1157" width="0.0230%" height="15" fill="rgb(253,98,13)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1167.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.5392%" y="1141" width="0.0230%" height="15" fill="rgb(211,115,12)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1151.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.5392%" y="1125" width="0.0230%" height="15" fill="rgb(208,12,16)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1135.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="99.5392%" y="1109" width="0.0230%" height="15" fill="rgb(237,193,54)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1119.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="99.5392%" y="1093" width="0.0230%" height="15" fill="rgb(243,22,42)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1103.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5392%" y="1077" width="0.0230%" height="15" fill="rgb(233,151,36)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1087.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5392%" y="1061" width="0.0230%" height="15" fill="rgb(237,57,45)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1071.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="99.5392%" y="1045" width="0.0230%" height="15" fill="rgb(221,88,17)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1055.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.5392%" y="1029" width="0.0230%" height="15" fill="rgb(230,79,15)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1039.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.02%)</title><rect x="99.5392%" y="1013" width="0.0230%" height="15" fill="rgb(213,57,13)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1023.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="99.5392%" y="997" width="0.0230%" height="15" fill="rgb(222,116,39)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="1007.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5392%" y="981" width="0.0230%" height="15" fill="rgb(245,107,2)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="991.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for bool&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.5392%" y="965" width="0.0230%" height="15" fill="rgb(238,1,10)" fg:x="4320" fg:w="1"/><text x="99.7892%" y="975.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="99.5622%" y="1077" width="0.0230%" height="15" fill="rgb(249,4,48)" fg:x="4321" fg:w="1"/><text x="99.8122%" y="1087.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="99.5622%" y="1061" width="0.0230%" height="15" fill="rgb(223,151,18)" fg:x="4321" fg:w="1"/><text x="99.8122%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="99.5622%" y="1045" width="0.0230%" height="15" fill="rgb(227,65,43)" fg:x="4321" fg:w="1"/><text x="99.8122%" y="1055.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="99.5622%" y="1029" width="0.0230%" height="15" fill="rgb(218,40,45)" fg:x="4321" fg:w="1"/><text x="99.8122%" y="1039.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="99.5622%" y="1013" width="0.0230%" height="15" fill="rgb(252,121,31)" fg:x="4321" fg:w="1"/><text x="99.8122%" y="1023.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="99.5622%" y="997" width="0.0230%" height="15" fill="rgb(219,158,43)" fg:x="4321" fg:w="1"/><text x="99.8122%" y="1007.50"></text></g><g><title>sonic_rs::serde::de::from_slice (2 samples, 0.05%)</title><rect x="99.5622%" y="1541" width="0.0461%" height="15" fill="rgb(231,162,42)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1551.50"></text></g><g><title>sonic_rs::serde::de::from_trait (2 samples, 0.05%)</title><rect x="99.5622%" y="1525" width="0.0461%" height="15" fill="rgb(217,179,25)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1535.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize (2 samples, 0.05%)</title><rect x="99.5622%" y="1509" width="0.0461%" height="15" fill="rgb(206,212,31)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1519.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.05%)</title><rect x="99.5622%" y="1493" width="0.0461%" height="15" fill="rgb(235,144,12)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1503.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Twitter&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.05%)</title><rect x="99.5622%" y="1477" width="0.0461%" height="15" fill="rgb(213,51,10)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1487.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (2 samples, 0.05%)</title><rect x="99.5622%" y="1461" width="0.0461%" height="15" fill="rgb(231,145,14)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1471.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.05%)</title><rect x="99.5622%" y="1445" width="0.0461%" height="15" fill="rgb(235,15,28)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1455.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="99.5622%" y="1429" width="0.0461%" height="15" fill="rgb(237,206,10)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1439.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2 samples, 0.05%)</title><rect x="99.5622%" y="1413" width="0.0461%" height="15" fill="rgb(236,227,27)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1423.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2 samples, 0.05%)</title><rect x="99.5622%" y="1397" width="0.0461%" height="15" fill="rgb(246,83,35)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1407.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.05%)</title><rect x="99.5622%" y="1381" width="0.0461%" height="15" fill="rgb(220,136,24)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1391.50"></text></g><g><title>serde::de::SeqAccess::next_element (2 samples, 0.05%)</title><rect x="99.5622%" y="1365" width="0.0461%" height="15" fill="rgb(217,3,25)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1375.50"></text></g><g><title>&lt;sonic_rs::serde::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.05%)</title><rect x="99.5622%" y="1349" width="0.0461%" height="15" fill="rgb(239,24,14)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="99.5622%" y="1333" width="0.0461%" height="15" fill="rgb(244,16,53)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1343.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize (2 samples, 0.05%)</title><rect x="99.5622%" y="1317" width="0.0461%" height="15" fill="rgb(208,175,44)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1327.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.05%)</title><rect x="99.5622%" y="1301" width="0.0461%" height="15" fill="rgb(252,18,48)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1311.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::Status&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.05%)</title><rect x="99.5622%" y="1285" width="0.0461%" height="15" fill="rgb(234,199,32)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1295.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value (2 samples, 0.05%)</title><rect x="99.5622%" y="1269" width="0.0461%" height="15" fill="rgb(225,77,54)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1279.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.05%)</title><rect x="99.5622%" y="1253" width="0.0461%" height="15" fill="rgb(225,42,25)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="99.5622%" y="1237" width="0.0461%" height="15" fill="rgb(242,227,46)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1247.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize (2 samples, 0.05%)</title><rect x="99.5622%" y="1221" width="0.0461%" height="15" fill="rgb(246,197,35)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1231.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.05%)</title><rect x="99.5622%" y="1205" width="0.0461%" height="15" fill="rgb(215,159,26)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1215.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.05%)</title><rect x="99.5622%" y="1189" width="0.0461%" height="15" fill="rgb(212,194,50)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1199.50"></text></g><g><title>serde::de::MapAccess::next_key (2 samples, 0.05%)</title><rect x="99.5622%" y="1173" width="0.0461%" height="15" fill="rgb(246,132,1)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1183.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.05%)</title><rect x="99.5622%" y="1157" width="0.0461%" height="15" fill="rgb(217,71,7)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1167.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.05%)</title><rect x="99.5622%" y="1141" width="0.0461%" height="15" fill="rgb(252,59,32)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1151.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.05%)</title><rect x="99.5622%" y="1125" width="0.0461%" height="15" fill="rgb(253,204,25)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1135.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.05%)</title><rect x="99.5622%" y="1109" width="0.0461%" height="15" fill="rgb(232,21,16)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1119.50"></text></g><g><title>&lt;sonic_rs::serde::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.05%)</title><rect x="99.5622%" y="1093" width="0.0461%" height="15" fill="rgb(248,90,29)" fg:x="4321" fg:w="2"/><text x="99.8122%" y="1103.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.5853%" y="1077" width="0.0230%" height="15" fill="rgb(249,223,7)" fg:x="4322" fg:w="1"/><text x="99.8353%" y="1087.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.5853%" y="1061" width="0.0230%" height="15" fill="rgb(231,119,42)" fg:x="4322" fg:w="1"/><text x="99.8353%" y="1071.50"></text></g><g><title>?? (1 samples, 0.02%)</title><rect x="99.5853%" y="1045" width="0.0230%" height="15" fill="rgb(215,41,35)" fg:x="4322" fg:w="1"/><text x="99.8353%" y="1055.50"></text></g><g><title>&lt;json_benchmark::copy::twitter::_::&lt;impl serde::de::Deserialize for json_benchmark::copy::twitter::User&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="99.5853%" y="1029" width="0.0230%" height="15" fill="rgb(220,44,45)" fg:x="4322" fg:w="1"/><text x="99.8353%" y="1039.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::User&gt;::serialize (1 samples, 0.02%)</title><rect x="99.6083%" y="1237" width="0.0230%" height="15" fill="rgb(253,197,36)" fg:x="4323" fg:w="1"/><text x="99.8583%" y="1247.50"></text></g><g><title>__libc_start_main (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1813" width="97.8571%" height="15" fill="rgb(245,225,54)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1823.50">__libc_start_main</text></g><g><title>main (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1797" width="97.8571%" height="15" fill="rgb(239,94,37)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1807.50">main</text></g><g><title>std::rt::lang_start_internal (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1781" width="97.8571%" height="15" fill="rgb(242,217,10)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1791.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1765" width="97.8571%" height="15" fill="rgb(250,193,7)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1775.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1749" width="97.8571%" height="15" fill="rgb(230,104,19)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1759.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1733" width="97.8571%" height="15" fill="rgb(230,181,4)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1743.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1717" width="97.8571%" height="15" fill="rgb(216,219,49)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1727.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1701" width="97.8571%" height="15" fill="rgb(254,144,0)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1711.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1685" width="97.8571%" height="15" fill="rgb(205,209,38)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1695.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1669" width="97.8571%" height="15" fill="rgb(240,21,42)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1679.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1653" width="97.8571%" height="15" fill="rgb(241,132,3)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1663.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1637" width="97.8571%" height="15" fill="rgb(225,14,2)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1647.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1621" width="97.8571%" height="15" fill="rgb(210,141,35)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1631.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1605" width="97.8571%" height="15" fill="rgb(251,14,44)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1615.50">core::ops::function::FnOnce::call_once</text></g><g><title>deserialize_struct::main (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1589" width="97.8571%" height="15" fill="rgb(247,48,18)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1599.50">deserialize_struct::main</text></g><g><title>deserialize_struct::benches (4,247 samples, 97.86%)</title><rect x="1.7972%" y="1573" width="97.8571%" height="15" fill="rgb(225,0,40)" fg:x="78" fg:w="4247"/><text x="2.0472%" y="1583.50">deserialize_struct::benches</text></g><g><title>deserialize_struct::bench_twitter_Twitter (23 samples, 0.53%)</title><rect x="99.1244%" y="1557" width="0.5300%" height="15" fill="rgb(221,31,33)" fg:x="4302" fg:w="23"/><text x="99.3744%" y="1567.50"></text></g><g><title>sonic_rs::serde::ser::to_string_pretty (2 samples, 0.05%)</title><rect x="99.6083%" y="1541" width="0.0461%" height="15" fill="rgb(237,42,40)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1551.50"></text></g><g><title>sonic_rs::serde::ser::to_vec_pretty (2 samples, 0.05%)</title><rect x="99.6083%" y="1525" width="0.0461%" height="15" fill="rgb(233,51,29)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1535.50"></text></g><g><title>sonic_rs::serde::ser::to_writer_pretty (2 samples, 0.05%)</title><rect x="99.6083%" y="1509" width="0.0461%" height="15" fill="rgb(226,58,20)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1519.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Twitter&gt;::serialize (2 samples, 0.05%)</title><rect x="99.6083%" y="1493" width="0.0461%" height="15" fill="rgb(208,98,7)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1503.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.05%)</title><rect x="99.6083%" y="1477" width="0.0461%" height="15" fill="rgb(228,143,44)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1487.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.05%)</title><rect x="99.6083%" y="1461" width="0.0461%" height="15" fill="rgb(246,55,38)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1471.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.05%)</title><rect x="99.6083%" y="1445" width="0.0461%" height="15" fill="rgb(247,87,16)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1455.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2 samples, 0.05%)</title><rect x="99.6083%" y="1429" width="0.0461%" height="15" fill="rgb(234,129,42)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1439.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.05%)</title><rect x="99.6083%" y="1413" width="0.0461%" height="15" fill="rgb(220,82,16)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.05%)</title><rect x="99.6083%" y="1397" width="0.0461%" height="15" fill="rgb(211,88,4)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="99.6083%" y="1381" width="0.0461%" height="15" fill="rgb(248,151,21)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.05%)</title><rect x="99.6083%" y="1365" width="0.0461%" height="15" fill="rgb(238,163,6)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1375.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.05%)</title><rect x="99.6083%" y="1349" width="0.0461%" height="15" fill="rgb(209,183,11)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1359.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.05%)</title><rect x="99.6083%" y="1333" width="0.0461%" height="15" fill="rgb(219,37,20)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1343.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.05%)</title><rect x="99.6083%" y="1317" width="0.0461%" height="15" fill="rgb(210,158,4)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1327.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Status&gt;::serialize (2 samples, 0.05%)</title><rect x="99.6083%" y="1301" width="0.0461%" height="15" fill="rgb(221,167,53)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1311.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.05%)</title><rect x="99.6083%" y="1285" width="0.0461%" height="15" fill="rgb(237,151,45)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1295.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.05%)</title><rect x="99.6083%" y="1269" width="0.0461%" height="15" fill="rgb(231,39,3)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1279.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.05%)</title><rect x="99.6083%" y="1253" width="0.0461%" height="15" fill="rgb(212,167,28)" fg:x="4323" fg:w="2"/><text x="99.8583%" y="1263.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="99.6313%" y="1237" width="0.0230%" height="15" fill="rgb(232,178,8)" fg:x="4324" fg:w="1"/><text x="99.8813%" y="1247.50"></text></g><g><title>&lt;&amp;mut sonic_rs::serde::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.02%)</title><rect x="99.6313%" y="1221" width="0.0230%" height="15" fill="rgb(225,151,20)" fg:x="4324" fg:w="1"/><text x="99.8813%" y="1231.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (1 samples, 0.02%)</title><rect x="99.6313%" y="1205" width="0.0230%" height="15" fill="rgb(238,3,37)" fg:x="4324" fg:w="1"/><text x="99.8813%" y="1215.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::Status&gt;::serialize (1 samples, 0.02%)</title><rect x="99.6313%" y="1189" width="0.0230%" height="15" fill="rgb(251,147,42)" fg:x="4324" fg:w="1"/><text x="99.8813%" y="1199.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.6313%" y="1173" width="0.0230%" height="15" fill="rgb(208,173,10)" fg:x="4324" fg:w="1"/><text x="99.8813%" y="1183.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.6313%" y="1157" width="0.0230%" height="15" fill="rgb(246,225,4)" fg:x="4324" fg:w="1"/><text x="99.8813%" y="1167.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.02%)</title><rect x="99.6313%" y="1141" width="0.0230%" height="15" fill="rgb(248,102,6)" fg:x="4324" fg:w="1"/><text x="99.8813%" y="1151.50"></text></g><g><title>json_benchmark::copy::twitter::_::&lt;impl serde::ser::Serialize for json_benchmark::copy::twitter::User&gt;::serialize (1 samples, 0.02%)</title><rect x="99.6313%" y="1125" width="0.0230%" height="15" fill="rgb(232,6,21)" fg:x="4324" fg:w="1"/><text x="99.8813%" y="1135.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="99.6313%" y="1109" width="0.0230%" height="15" fill="rgb(221,179,22)" fg:x="4324" fg:w="1"/><text x="99.8813%" y="1119.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="99.6313%" y="1093" width="0.0230%" height="15" fill="rgb(252,50,20)" fg:x="4324" fg:w="1"/><text x="99.8813%" y="1103.50"></text></g><g><title>&lt;sonic_rs::serde::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.02%)</title><rect x="99.6313%" y="1077" width="0.0230%" height="15" fill="rgb(222,56,38)" fg:x="4324" fg:w="1"/><text x="99.8813%" y="1087.50"></text></g><g><title>deserialize_str (4,250 samples, 97.93%)</title><rect x="1.7512%" y="1845" width="97.9263%" height="15" fill="rgb(206,193,29)" fg:x="76" fg:w="4250"/><text x="2.0012%" y="1855.50">deserialize_str</text></g><g><title>_start (4,248 samples, 97.88%)</title><rect x="1.7972%" y="1829" width="97.8802%" height="15" fill="rgb(239,192,45)" fg:x="78" fg:w="4248"/><text x="2.0472%" y="1839.50">_start</text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect x="99.6544%" y="1813" width="0.0230%" height="15" fill="rgb(254,18,36)" fg:x="4325" fg:w="1"/><text x="99.9044%" y="1823.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="99.6544%" y="1797" width="0.0230%" height="15" fill="rgb(221,127,11)" fg:x="4325" fg:w="1"/><text x="99.9044%" y="1807.50"></text></g><g><title>dl_main (1 samples, 0.02%)</title><rect x="99.6544%" y="1781" width="0.0230%" height="15" fill="rgb(234,146,35)" fg:x="4325" fg:w="1"/><text x="99.9044%" y="1791.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="99.6544%" y="1765" width="0.0230%" height="15" fill="rgb(254,201,37)" fg:x="4325" fg:w="1"/><text x="99.9044%" y="1775.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect x="99.6544%" y="1749" width="0.0230%" height="15" fill="rgb(211,202,23)" fg:x="4325" fg:w="1"/><text x="99.9044%" y="1759.50"></text></g><g><title>do_lookup_x (1 samples, 0.02%)</title><rect x="99.6544%" y="1733" width="0.0230%" height="15" fill="rgb(237,91,2)" fg:x="4325" fg:w="1"/><text x="99.9044%" y="1743.50"></text></g><g><title>[gnuplot-qt] (1 samples, 0.02%)</title><rect x="99.6774%" y="1829" width="0.0230%" height="15" fill="rgb(226,228,36)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1839.50"></text></g><g><title>__libc_start_main (1 samples, 0.02%)</title><rect x="99.6774%" y="1813" width="0.0230%" height="15" fill="rgb(213,63,50)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1823.50"></text></g><g><title>__GI_exit (1 samples, 0.02%)</title><rect x="99.6774%" y="1797" width="0.0230%" height="15" fill="rgb(235,194,19)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1807.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.02%)</title><rect x="99.6774%" y="1781" width="0.0230%" height="15" fill="rgb(207,204,18)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1791.50"></text></g><g><title>_dl_fini (1 samples, 0.02%)</title><rect x="99.6774%" y="1765" width="0.0230%" height="15" fill="rgb(248,8,7)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1775.50"></text></g><g><title>[libwx_gtk2u_core-3.0.so.0.4.0] (1 samples, 0.02%)</title><rect x="99.6774%" y="1749" width="0.0230%" height="15" fill="rgb(223,145,47)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1759.50"></text></g><g><title>__cxa_finalize (1 samples, 0.02%)</title><rect x="99.6774%" y="1733" width="0.0230%" height="15" fill="rgb(228,84,11)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1743.50"></text></g><g><title>wxEvtHandler::~wxEvtHandler (1 samples, 0.02%)</title><rect x="99.6774%" y="1717" width="0.0230%" height="15" fill="rgb(218,76,45)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1727.50"></text></g><g><title>wxMutex::~wxMutex (1 samples, 0.02%)</title><rect x="99.6774%" y="1701" width="0.0230%" height="15" fill="rgb(223,80,15)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1711.50"></text></g><g><title>[libwx_baseu-3.0.so.0.4.0] (1 samples, 0.02%)</title><rect x="99.6774%" y="1685" width="0.0230%" height="15" fill="rgb(219,218,33)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1695.50"></text></g><g><title>_dl_runtime_resolve_xsavec (1 samples, 0.02%)</title><rect x="99.6774%" y="1669" width="0.0230%" height="15" fill="rgb(208,51,11)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1679.50"></text></g><g><title>_dl_fixup (1 samples, 0.02%)</title><rect x="99.6774%" y="1653" width="0.0230%" height="15" fill="rgb(229,165,39)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1663.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect x="99.6774%" y="1637" width="0.0230%" height="15" fill="rgb(241,100,24)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1647.50"></text></g><g><title>do_lookup_x (1 samples, 0.02%)</title><rect x="99.6774%" y="1621" width="0.0230%" height="15" fill="rgb(228,14,23)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1631.50"></text></g><g><title>_dl_name_match_p (1 samples, 0.02%)</title><rect x="99.6774%" y="1605" width="0.0230%" height="15" fill="rgb(247,116,52)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1615.50"></text></g><g><title>strcmp (1 samples, 0.02%)</title><rect x="99.6774%" y="1589" width="0.0230%" height="15" fill="rgb(216,149,33)" fg:x="4326" fg:w="1"/><text x="99.9274%" y="1599.50"></text></g><g><title>_dl_start_user (1 samples, 0.02%)</title><rect x="99.7005%" y="1829" width="0.0230%" height="15" fill="rgb(238,142,29)" fg:x="4327" fg:w="1"/><text x="99.9505%" y="1839.50"></text></g><g><title>_dl_init (1 samples, 0.02%)</title><rect x="99.7005%" y="1813" width="0.0230%" height="15" fill="rgb(224,83,40)" fg:x="4327" fg:w="1"/><text x="99.9505%" y="1823.50"></text></g><g><title>call_init.part.0 (1 samples, 0.02%)</title><rect x="99.7005%" y="1797" width="0.0230%" height="15" fill="rgb(234,165,11)" fg:x="4327" fg:w="1"/><text x="99.9505%" y="1807.50"></text></g><g><title>[libpixman-1.so.0.36.0] (1 samples, 0.02%)</title><rect x="99.7005%" y="1781" width="0.0230%" height="15" fill="rgb(215,96,23)" fg:x="4327" fg:w="1"/><text x="99.9505%" y="1791.50"></text></g><g><title>[libpixman-1.so.0.36.0] (1 samples, 0.02%)</title><rect x="99.7005%" y="1765" width="0.0230%" height="15" fill="rgb(233,179,26)" fg:x="4327" fg:w="1"/><text x="99.9505%" y="1775.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="99.7235%" y="1765" width="0.0230%" height="15" fill="rgb(225,129,33)" fg:x="4328" fg:w="1"/><text x="99.9735%" y="1775.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="99.7235%" y="1749" width="0.0230%" height="15" fill="rgb(237,49,13)" fg:x="4328" fg:w="1"/><text x="99.9735%" y="1759.50"></text></g><g><title>openaux (1 samples, 0.02%)</title><rect x="99.7235%" y="1733" width="0.0230%" height="15" fill="rgb(211,3,31)" fg:x="4328" fg:w="1"/><text x="99.9735%" y="1743.50"></text></g><g><title>_dl_map_object (1 samples, 0.02%)</title><rect x="99.7235%" y="1717" width="0.0230%" height="15" fill="rgb(216,152,19)" fg:x="4328" fg:w="1"/><text x="99.9735%" y="1727.50"></text></g><g><title>open_path (1 samples, 0.02%)</title><rect x="99.7235%" y="1701" width="0.0230%" height="15" fill="rgb(251,121,35)" fg:x="4328" fg:w="1"/><text x="99.9735%" y="1711.50"></text></g><g><title>memmove (1 samples, 0.02%)</title><rect x="99.7235%" y="1685" width="0.0230%" height="15" fill="rgb(210,217,47)" fg:x="4328" fg:w="1"/><text x="99.9735%" y="1695.50"></text></g><g><title>_dl_name_match_p (2 samples, 0.05%)</title><rect x="99.8848%" y="1717" width="0.0461%" height="15" fill="rgb(244,116,22)" fg:x="4335" fg:w="2"/><text x="100.1348%" y="1727.50"></text></g><g><title>strcmp (2 samples, 0.05%)</title><rect x="99.8848%" y="1701" width="0.0461%" height="15" fill="rgb(228,17,21)" fg:x="4335" fg:w="2"/><text x="100.1348%" y="1711.50"></text></g><g><title>_dl_lookup_symbol_x (8 samples, 0.18%)</title><rect x="99.7926%" y="1749" width="0.1843%" height="15" fill="rgb(240,149,34)" fg:x="4331" fg:w="8"/><text x="100.0426%" y="1759.50"></text></g><g><title>do_lookup_x (6 samples, 0.14%)</title><rect x="99.8387%" y="1733" width="0.1382%" height="15" fill="rgb(208,125,47)" fg:x="4333" fg:w="6"/><text x="100.0887%" y="1743.50"></text></g><g><title>check_match (2 samples, 0.05%)</title><rect x="99.9309%" y="1717" width="0.0461%" height="15" fill="rgb(249,186,39)" fg:x="4337" fg:w="2"/><text x="100.1809%" y="1727.50"></text></g><g><title>strcmp (2 samples, 0.05%)</title><rect x="99.9309%" y="1701" width="0.0461%" height="15" fill="rgb(240,220,33)" fg:x="4337" fg:w="2"/><text x="100.1809%" y="1711.50"></text></g><g><title>all (4,340 samples, 100%)</title><rect x="0.0000%" y="1861" width="100.0000%" height="15" fill="rgb(243,110,23)" fg:x="0" fg:w="4340"/><text x="0.2500%" y="1871.50"></text></g><g><title>gnuplot (14 samples, 0.32%)</title><rect x="99.6774%" y="1845" width="0.3226%" height="15" fill="rgb(219,163,46)" fg:x="4326" fg:w="14"/><text x="99.9274%" y="1855.50"></text></g><g><title>_start (12 samples, 0.28%)</title><rect x="99.7235%" y="1829" width="0.2765%" height="15" fill="rgb(216,126,30)" fg:x="4328" fg:w="12"/><text x="99.9735%" y="1839.50"></text></g><g><title>_dl_start (12 samples, 0.28%)</title><rect x="99.7235%" y="1813" width="0.2765%" height="15" fill="rgb(208,139,11)" fg:x="4328" fg:w="12"/><text x="99.9735%" y="1823.50"></text></g><g><title>_dl_sysdep_start (12 samples, 0.28%)</title><rect x="99.7235%" y="1797" width="0.2765%" height="15" fill="rgb(213,118,36)" fg:x="4328" fg:w="12"/><text x="99.9735%" y="1807.50"></text></g><g><title>dl_main (12 samples, 0.28%)</title><rect x="99.7235%" y="1781" width="0.2765%" height="15" fill="rgb(226,43,17)" fg:x="4328" fg:w="12"/><text x="99.9735%" y="1791.50"></text></g><g><title>_dl_relocate_object (11 samples, 0.25%)</title><rect x="99.7465%" y="1765" width="0.2535%" height="15" fill="rgb(254,217,4)" fg:x="4329" fg:w="11"/><text x="99.9965%" y="1775.50"></text></g><g><title>_dl_protect_relro (1 samples, 0.02%)</title><rect x="99.9770%" y="1749" width="0.0230%" height="15" fill="rgb(210,134,47)" fg:x="4339" fg:w="1"/><text x="100.2270%" y="1759.50"></text></g></svg></svg>