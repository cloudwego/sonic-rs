# This is a template cbindgen.toml file with all of the default values.
# Some values are commented out because their absence is the real default.
#
# See https://github.com/mozilla/cbindgen/blob/master/docs.md#cbindgentoml
# for detailed documentation of every option here.


language = "C"


############## Options for Wrapping the Contents of the Header #################

# header = "/* Text to put at the beginning of the generated file. Probably a license. */"
# trailer = "/* Text to put at the end of the generated file */"
# include_guard = "my_bindings_h"
# pragma_once = true
# autogen_warning = "/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */"
include_version = false
# namespace = "my_namespace"
includes         = []
namespaces       = ["sonic_rs_ffi"]
no_includes      = false
sys_includes     = []
using_namespaces = []
# cpp_compat = true
after_includes = ""


############################ Code Style Options ################################

braces               = "SameLine"
documentation        = true
documentation_length = "full"
documentation_style  = "auto"
line_endings         = "LF"       # also "CR", "CRLF", "Native"
line_length          = 100
tab_width            = 2


############################# Codegen Options ##################################

sort_by         = "Name" # default for `fn.sort_by` and `const.sort_by`
style           = "both"
usize_is_size_t = true


[defines]
# "target_os = freebsd" = "DEFINE_FREEBSD"
# "feature = serde" = "DEFINE_SERDE"


[export]
exclude = []
include = []
# prefix = "CAPI_"
item_types                   = []
renaming_overrides_prefixing = false


[export.rename]


[export.body]


[export.mangle]


[fn]
rename_args = "None"
# must_use = "MUST_USE_FUNC"
# deprecated = "DEPRECATED_FUNC"
# deprecated_with_note = "DEPRECATED_FUNC_WITH_NOTE"
# no_return = "NO_RETURN"
# prefix = "START_FUNC"
# postfix = "END_FUNC"
args    = "auto"
sort_by = "Name"


[struct]
rename_fields = "None"
# must_use = "MUST_USE_STRUCT"
# deprecated = "DEPRECATED_STRUCT"
# deprecated_with_note = "DEPRECATED_STRUCT_WITH_NOTE"
derive_constructor = false
derive_eq          = false
derive_gt          = false
derive_gte         = false
derive_lt          = false
derive_lte         = false
derive_neq         = false


[enum]
rename_variants = "None"
# must_use = "MUST_USE_ENUM"
# deprecated = "DEPRECATED_ENUM"
# deprecated_with_note = "DEPRECATED_ENUM_WITH_NOTE"
add_sentinel          = false
derive_const_casts    = false
derive_helper_methods = false
derive_mut_casts      = false
prefix_with_name      = false
# cast_assert_name = "ASSERT"
derive_tagged_enum_copy_constructor     = false
derive_tagged_enum_destructor           = false
enum_class                              = true
private_default_tagged_enum_constructor = false


[const]
allow_constexpr    = false
allow_static_const = true
sort_by            = "Name"


[macro_expansion]
bitflags = false


############## Options for How Your Rust library Should Be Parsed ##############

[parse]
parse_deps = false
# include = []
clean          = false
exclude        = []
extra_bindings = []


[parse.expand]
all_features     = false
crates           = []
default_features = true
features         = []
