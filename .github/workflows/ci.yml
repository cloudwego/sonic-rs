name: 'CI'
on:
  pull_request:
  push:

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  test-stable-hosted:
    strategy:
        fail-fast: false
        matrix:
            os:
              - [self-hosted, Linux, amd64]
              - [self-hosted, Linux, aarch64]
    name: Rust stable
    runs-on: ${{matrix.os}}
    timeout-minutes: 45
    steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
        - run: ./scripts/test.sh

  test-nightly-hosted:
    strategy:
      fail-fast: false
      matrix:
        os:
          - [self-hosted, Linux, amd64]
          - [self-hosted, Linux, aarch64]
    name: Rust nightly ${{matrix.os}}
    runs-on: ${{matrix.os}}
    timeout-minutes: 45
    steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@nightly
        - run: ./scripts/test.sh

  clippy_lint:
    name: Format check
    runs-on: [self-hosted, Linux, amd64]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy
      - name: Format check
        run: |
          cargo clippy --all-targets --all-features -- -D warnings
          cargo fmt -- --check

  sanitize:
    runs-on: [self-hosted, Linux, amd64]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt, clippy
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Sanitize
      run: ./scripts/sanitize.sh

  fuzz:
    runs-on: [self-hosted, Linux, amd64]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt, clippy
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Fuzz
      run: ./scripts/fuzz.sh
