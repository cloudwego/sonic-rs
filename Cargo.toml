[package]
authors       = ["Volo Team <volo@cloudwego.io>"]
categories    = ["encoding", "parser-implementations"]
description   = "Sonic-rs is a fast Rust JSON library based on SIMD"
documentation = "https://docs.rs/sonic-rs"
edition       = "2021"
keywords      = ["json", "simd", "serde", "serialization"]
license       = "Apache-2.0"
name          = "sonic-rs"
readme        = "README.md"
repository    = "https://github.com/cloudwego/sonic-rs"
version       = "0.3.14"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bumpalo     = "3.13"
bytes       = "1.4"
cfg-if      = "1.0"
faststr     = { version = "0.2", features = ["serde"] }
itoa        = "1.0"
parking_lot = "0.12"
ryu         = "1.0"
serde       = { version = "1.0", features = ["rc", "derive"] }
simdutf8    = "0.1"
smallvec    = "1.11"
thiserror   = "1.0"

[dev-dependencies]
encoding_rs  = "0.8"
serde_derive = "1.0"
serde_json   = { version = "1.0", features = ["float_roundtrip", "raw_value"] }
# This schema are used in benches and copied from https://github.com/serde-rs/json-benchmark
bytes       = { version = "1.4", features = ["serde"] }
chrono      = { version = "0.4", features = ["serde"] }
paste       = "1.0"
schema      = { path = "./benchmarks/benches/schema" }
serde_bytes = "0.11"

[profile.release]
codegen-units    = 1
debug            = true
debug-assertions = false
incremental      = false
lto              = true
opt-level        = 3
overflow-checks  = false
panic            = 'unwind'
rpath            = false

[features]
default = []

# Use an arbitrary precision number type representation when parsing JSON into `sonic_rs::Value`. 
# This allows the JSON numbers will be serialized without loss of precision.
arbitrary_precision = []

# Sort the keys when serializing `sonic_rs::Value`.
sort_keys = []
